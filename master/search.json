{"version": "0.9.5", "fields": ["qualname", "fullname", "doc"], "ref": "fullname", "documentStore": {"docs": {"tanjun": {"fullname": "tanjun", "modulename": "tanjun", "qualname": "", "type": "module", "doc": "<p>A flexible command framework designed to extend Hikari.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>A Tanjun client can be quickly initialised from a Hikari gateway bot through\n<code>tanjun.Client.from_gateway_bot</code>, this enables both slash (interaction) and message\ncommand execution:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">bot</span> <span class=\"o\">=</span> <span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">GatewayBot</span><span class=\"p\">(</span><span class=\"s2\">&quot;BOT_TOKEN&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># As a note, unless event_managed=False is passed here then this client</span>\n<span class=\"c1\"># will be managed based on gateway startup and stopping events.</span>\n<span class=\"c1\"># mention_prefix=True instructs the client to also set mention prefixes on the</span>\n<span class=\"c1\"># first startup.</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"o\">.</span><span class=\"n\">from_gateway_bot</span><span class=\"p\">(</span><span class=\"n\">bot</span><span class=\"p\">,</span> <span class=\"n\">declare_global_commands</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">mention_prefix</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">component</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Component</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">add_component</span><span class=\"p\">(</span><span class=\"n\">component</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Declare a message command with some basic parser logic.</span>\n<span class=\"nd\">@component</span><span class=\"o\">.</span><span class=\"n\">with_command</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">with_greedy_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s2\">&quot;World&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_message_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;test&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">test_command</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Hello, </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">!&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Declare a ping slash command</span>\n<span class=\"nd\">@component</span><span class=\"o\">.</span><span class=\"n\">with_command</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">with_user_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;user&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;The user facing command option&#39;s description&quot;</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;hello&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;The command&#39;s user facing description&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">hello</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">:</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">User</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">user</span> <span class=\"ow\">or</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">author</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Hello, </span><span class=\"si\">{</span><span class=\"n\">user</span><span class=\"si\">}</span><span class=\"s2\">!&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>Alternatively, the client can also be built from a RESTBot but this will only\nenable slash (interaction) command execution:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">bot</span> <span class=\"o\">=</span> <span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">RESTBot</span><span class=\"p\">(</span><span class=\"s2\">&quot;BOT_TOKEN&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Bot&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># declare_global_commands=True instructs the client to set the global commands</span>\n<span class=\"c1\"># for the relevant bot on first startup (this will replace any previously</span>\n<span class=\"c1\"># declared commands).</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"o\">.</span><span class=\"n\">from_rest_bot</span><span class=\"p\">(</span><span class=\"n\">bot</span><span class=\"p\">,</span> <span class=\"n\">declare_global_commands</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># This will load components from modules based on loader functions.</span>\n<span class=\"c1\"># For more information on this see `tanjun.as_loader`.</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">load_modules</span><span class=\"p\">(</span><span class=\"s2\">&quot;module.paths&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Note, unlike a gateway bound bot, the rest bot will not automatically start</span>\n<span class=\"c1\"># itself due to the lack of Hikari lifetime events in this environment and</span>\n<span class=\"c1\"># will have to be started after the Hikari client.</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">bot</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">():</span>\n        <span class=\"k\">await</span> <span class=\"n\">bot</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<p>For more extensive examples see the\n<a href=\"https://github.com/FasterSpeeding/Tanjun/tree/master/examples\">repository's examples</a>.</p>\n"}, "tanjun.ClientCallbackNames": {"fullname": "tanjun.ClientCallbackNames", "modulename": "tanjun", "qualname": "ClientCallbackNames", "type": "class", "doc": "<p>Enum of the standard client callback names.</p>\n\n<p>These should be dispatched by all <code>Client</code> implementations.</p>\n"}, "tanjun.ClientCallbackNames.CLOSED": {"fullname": "tanjun.ClientCallbackNames.CLOSED", "modulename": "tanjun", "qualname": "ClientCallbackNames.CLOSED", "type": "variable", "doc": "<p>Called when the client has finished closing.</p>\n\n<p>No positional arguments are provided for this event.</p>\n"}, "tanjun.ClientCallbackNames.CLOSING": {"fullname": "tanjun.ClientCallbackNames.CLOSING", "modulename": "tanjun", "qualname": "ClientCallbackNames.CLOSING", "type": "variable", "doc": "<p>Called when the client is initially instructed to close.</p>\n\n<p>No positional arguments are provided for this event.</p>\n"}, "tanjun.ClientCallbackNames.COMPONENT_ADDED": {"fullname": "tanjun.ClientCallbackNames.COMPONENT_ADDED", "modulename": "tanjun", "qualname": "ClientCallbackNames.COMPONENT_ADDED", "type": "variable", "doc": "<p>Called when a component is added to an active client.</p>\n\n<p><em>Warning:</em>\nThis event isn't dispatched for components which were registered while\nthe client is inactive.</p>\n\n<p>The first positional argument is the <code>tanjun.abc.Component</code> being added.</p>\n"}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"fullname": "tanjun.ClientCallbackNames.COMPONENT_REMOVED", "modulename": "tanjun", "qualname": "ClientCallbackNames.COMPONENT_REMOVED", "type": "variable", "doc": "<p>Called when a component is added to an active client.</p>\n\n<p><em>Warning:</em>\nThis event isn't dispatched for components which were removed while\nthe client is inactive.</p>\n\n<p>The first positional argument is the <code>tanjun.abc.Component</code> being removed.</p>\n"}, "tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"fullname": "tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND", "modulename": "tanjun", "qualname": "ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND", "type": "variable", "doc": "<p>Called when a message command is not found.</p>\n\n<p><code>tanjun.abc.MessageContext</code> is provided as the first positional argument.</p>\n"}, "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"fullname": "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND", "modulename": "tanjun", "qualname": "ClientCallbackNames.SLASH_COMMAND_NOT_FOUND", "type": "variable", "doc": "<p>Called when a slash command is not found.</p>\n\n<p><code>tanjun.abc.MessageContext</code> is provided as the first positional argument.</p>\n"}, "tanjun.ClientCallbackNames.STARTED": {"fullname": "tanjun.ClientCallbackNames.STARTED", "modulename": "tanjun", "qualname": "ClientCallbackNames.STARTED", "type": "variable", "doc": "<p>Called when the client has finished starting.</p>\n\n<p>No positional arguments are provided for this event.</p>\n"}, "tanjun.ClientCallbackNames.STARTING": {"fullname": "tanjun.ClientCallbackNames.STARTING", "modulename": "tanjun", "qualname": "ClientCallbackNames.STARTING", "type": "variable", "doc": "<p>Called when the client is initially instructed to start.</p>\n\n<p>No positional arguments are provided for this event.</p>\n"}, "tanjun.with_all_checks": {"fullname": "tanjun.with_all_checks", "modulename": "tanjun", "qualname": "with_all_checks", "type": "function", "doc": "<p>Add a check which will pass if all the provided checks pass through a decorator call.</p>\n\n<p>This ensures that the callbacks are run in the order they were supplied in\nrather than concurrently.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>check</strong> (typing_abc.CheckSig):\nThe first check callback to combine.</li>\n<li><strong>*checks</strong> (typing_abc.CheckSig):\nAdditional check callbacks to combine.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[tanjun_abc.Context], collections.abc.Coroutine[typing.Any, typing.Any, bool]]</strong>: A check which will pass if all of the provided check callbacks pass.</li>\n</ul>\n", "parameters": ["check", "checks"], "funcdef": "def"}, "tanjun.with_any_checks": {"fullname": "tanjun.with_any_checks", "modulename": "tanjun", "qualname": "with_any_checks", "type": "function", "doc": "<p>Add a check which'll pass if any of the provided checks pass through a decorator call.</p>\n\n<p>This ensures that the callbacks are run in the order they were supplied in\nrather than concurrently.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>check</strong> (typing_abc.CheckSig):\nThe first check callback to combine.</li>\n<li><strong>*checks</strong> (typing_abc.CheckSig):\nAdditional check callbacks to combine.</li>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>This takes priority over <code>halt_execution</code>.</p></li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>suppress</strong> (tuple[type[Exception], ...]):\nTuple of the exceptions to suppress when a check fails.</p>\n\n<p>Defaults to (<code>tanjun.errors.CommandError</code>, <code>tanjun.errors.HaltExecution</code>).</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.Callable[[CommandT], CommandT]</strong>: A decorator which adds the generated check to a command.</li>\n</ul>\n", "parameters": ["check", "checks", "suppress", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.with_check": {"fullname": "tanjun.with_check", "modulename": "tanjun", "qualname": "with_check", "type": "function", "doc": "<p>Add a generic check to a command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>check</strong> (tanjun.abc.CheckSig):\nThe check to add to this command.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[CommandT], CommandT]</strong>: A command decorator callback which adds the check.</li>\n</ul>\n", "parameters": ["check"], "funcdef": "def"}, "tanjun.with_dm_check": {"fullname": "tanjun.with_dm_check", "modulename": "tanjun", "qualname": "with_dm_check", "type": "function", "doc": "<p>Only let a command run in a DM channel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (typing.Optional[CommandT]):\nThe command to add this check to.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"Command can only be used in DMs\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>error_message takes priority over halt_execution.</li>\n<li>For more information on how this is used with other parameters see\n<code>CallbackReturnT</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CallbackReturnT[CommandT]</strong>: The command this check was added to.</li>\n</ul>\n", "parameters": ["command", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.with_guild_check": {"fullname": "tanjun.with_guild_check", "modulename": "tanjun", "qualname": "with_guild_check", "type": "function", "doc": "<p>Only let a command run in a guild channel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (typing.Optional[CommandT]):\nThe command to add this check to.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"Command can only be used in guild channels\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>error_message takes priority over halt_execution.</li>\n<li>For more information on how this is used with other parameters see\n<code>CallbackReturnT</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CallbackReturnT[CommandT]</strong>: The command this check was added to.</li>\n</ul>\n", "parameters": ["command", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.with_nsfw_check": {"fullname": "tanjun.with_nsfw_check", "modulename": "tanjun", "qualname": "with_nsfw_check", "type": "function", "doc": "<p>Only let a command run in a channel that's marked as nsfw.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (typing.Optional[CommandT]):\nThe command to add this check to.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"Command can only be used in NSFW channels\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>error_message takes priority over halt_execution.</li>\n<li>For more information on how this is used with other parameters see\n<code>CallbackReturnT</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CallbackReturnT[CommandT]</strong>: The command this check was added to.</li>\n</ul>\n", "parameters": ["command", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.with_sfw_check": {"fullname": "tanjun.with_sfw_check", "modulename": "tanjun", "qualname": "with_sfw_check", "type": "function", "doc": "<p>Only let a command run in a channel that's marked as sfw.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (typing.Optional[CommandT]):\nThe command to add this check to.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"Command can only be used in SFW channels\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>error_message takes priority over halt_execution.</li>\n<li>For more information on how this is used with other parameters see\n<code>CallbackReturnT</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CallbackReturnT[CommandT]</strong>: The command this check was added to.</li>\n</ul>\n", "parameters": ["command", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.with_owner_check": {"fullname": "tanjun.with_owner_check", "modulename": "tanjun", "qualname": "with_owner_check", "type": "function", "doc": "<p>Only let a command run if it's being triggered by one of the bot's owners.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (typing.Optional[CommandT]):\nThe command to add this check to.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"Only bot owners can use this command\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>error_message takes priority over halt_execution.</li>\n<li>For more information on how this is used with other parameters see\n<code>CallbackReturnT</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CallbackReturnT[CommandT]</strong>: The command this check was added to.</li>\n</ul>\n", "parameters": ["command", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.with_author_permission_check": {"fullname": "tanjun.with_author_permission_check", "modulename": "tanjun", "qualname": "with_author_permission_check", "type": "function", "doc": "<p>Only let a command run if the author has certain permissions in the current channel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>permissions</strong> (typing.Union[hikari.permissions.Permissions, int]):\nThe permission(s) required for this command to run.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"You don't have the permissions required to use this command\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>error_message takes priority over halt_execution.</li>\n<li>This will only pass for commands in DMs if <code>permissions</code> is valid for\na DM context (e.g. can't have any moderation permissions)</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[CommandT], CommandT]</strong>: A command decorator callback which adds the check.</li>\n</ul>\n", "parameters": ["permissions", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.with_own_permission_check": {"fullname": "tanjun.with_own_permission_check", "modulename": "tanjun", "qualname": "with_own_permission_check", "type": "function", "doc": "<p>Only let a command run if we have certain permissions in the current channel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>permissions</strong> (typing.Union[hikari.permissions.Permissions, int]):\nThe permission(s) required for this command to run.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"Bot doesn't have the permissions required to run this command\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>error_message takes priority over halt_execution.</li>\n<li>This will only pass for commands in DMs if <code>permissions</code> is valid for\na DM context (e.g. can't have any moderation permissions)</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[CommandT], CommandT]</strong>: A command decorator callback which adds the check.</li>\n</ul>\n", "parameters": ["permissions", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.as_loader": {"fullname": "tanjun.as_loader", "modulename": "tanjun", "qualname": "as_loader", "type": "function", "doc": "<p>Mark a callback as being used to load Tanjun components from a module.</p>\n\n<p><em>Note:</em>\nThis is only necessary if you wish to use <code>tanjun.Client.load_modules</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (collections.abc.Callable[[tanjun.abc.Client], None]]):\nThe callback used to load Tanjun components from a module.</p>\n\n<p>This should take one argument of type <code>Client</code> (or <code>tanjun.abc.Client</code>\nif <code>standard_impl</code> is <code>False</code>), return nothing and will be expected\nto initiate and add utilities such as components to the provided client.</p></li>\n<li><p><strong>standard_impl</strong> (bool):\nWhether this loader should only allow instances of <code>Client</code> as opposed\nto <code>tanjun.abc.Client</code>.</p>\n\n<p>Defaults to <code>True</code>.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[tanjun.abc.Client], None]]</strong>: The decorated load callback.</li>\n</ul>\n", "parameters": ["callback", "standard_impl"], "funcdef": "def"}, "tanjun.as_unloader": {"fullname": "tanjun.as_unloader", "modulename": "tanjun", "qualname": "as_unloader", "type": "function", "doc": "<p>Mark a callback as being used to unload a module's utilities from a client.</p>\n\n<p><em>Note:</em>\nThis is the inverse of <code>as_loader</code> and is only necessary if you wish\nto use the <code>tanjun.Client.unload_module</code> or\n<code>tanjun.Client.reload_module</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (collections.abc.Callable[[tanjun.Client], None]]):\nThe callback used to unload Tanjun components from a module.</p>\n\n<p>This should take one argument of type <code>Client</code> (or <code>tanjun.abc.Client</code>\nif <code>standard_impl</code> is <code>False</code>), return nothing and will be expected\nto remove utilities such as components from the provided client.</p></li>\n<li><p><strong>standard_impl</strong> (bool):\nWhether this unloader should only allow instances of <code>Client</code> as\nopposed to <code>tanjun.abc.Client</code>.</p>\n\n<p>Defaults to <code>True</code>.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[tanjun.Client], None]]</strong>: The decorated unload callback.</li>\n</ul>\n", "parameters": ["callback", "standard_impl"], "funcdef": "def"}, "tanjun.Client": {"fullname": "tanjun.Client", "modulename": "tanjun", "qualname": "Client", "type": "class", "doc": "<p>Tanjun's standard <code>tanjun.abc.Client</code> implementation.</p>\n\n<p>This implementation supports dependency injection for checks, command\ncallbacks, prefix getters and event listeners. For more information on how\nthis works see <code>tanjun.injecting</code>.</p>\n\n<p><em>Note:</em>\nBy default this client includes a parser error handling hook which will\nby overwritten if you call <code>Client.set_hooks</code>.</p>\n"}, "tanjun.Client.__init__": {"fullname": "tanjun.Client.__init__", "modulename": "tanjun", "qualname": "Client.__init__", "type": "function", "doc": "<p>Initialise a Tanjun client.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>For a quicker way to initiate this client around a standard bot aware\nclient, see <code>Client.from_gateway_bot</code> and <code>Client.from_rest_bot</code>.</li>\n<li>The endpoint used by <code>declare_global_commands</code> has a strict ratelimit which,\nas of writing, only allows for 2 requests per minute (with that ratelimit\neither being per-guild if targeting a specific guild otherwise globally).</li>\n<li><code>event_manager</code> is necessary for message command dispatch and will also\nbe necessary for interaction command dispatch if <code>server</code> isn't\nprovided.</li>\n<li><code>server</code> is used for interaction command dispatch if interaction\nevents aren't being received from the event manager.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>rest</strong> (hikari.api.rest.RestClient):\nThe Hikari REST client this will use.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>cache</strong> (hikari.api.cache.CacheClient):\nThe Hikari cache client this will use if applicable.</li>\n<li><strong>event_manager</strong> (hikari.api.event_manager.EventManagerClient):\nThe Hikari event manager client this will use if applicable.</li>\n<li><strong>server</strong> (hikari.api.interaction_server.InteractionServer):\nThe Hikari interaction server client this will use if applicable.</li>\n<li><strong>shards</strong> (hikari.traits.ShardAware):\nThe Hikari shard aware client this will use if applicable.</li>\n<li><strong>voice</strong> (hikari.api.voice.VoiceComponent):\nThe Hikari voice component this will use if applicable.</li>\n<li><p><strong>event_managed</strong> (bool):\nWhether or not this client is managed by the event manager.</p>\n\n<p>An event managed client will be automatically started and closed based\non Hikari's lifetime events.</p>\n\n<p>Defaults to <code>False</code> and can only be passed as <code>True</code> if <code>event_manager</code>\nis also provided.</p></li>\n<li><p><strong>mention_prefix</strong> (bool):\nWhether or not mention prefixes should be automatically set when this\nclient is first started.</p>\n\n<p>Defaults to <code>False</code> and it should be noted that this only applies to\nmessage commands.</p></li>\n<li><p><strong>declare_global_commands</strong> (typing.Union[hikari.SnowflakeishSequenceOr[hikari.PartialGuild], hikari.SnowflakeishOr[hikari.PartialGuild], bool]):\nWhether or not to automatically set global slash commands when this\nclient is first started. Defaults to <code>False</code>.</p>\n\n<p>If one or more guild objects/IDs are passed here then the registered\nglobal commands will be set on the specified guild(s) at startup rather\nthan globally. This can be useful for testing/debug purposes as slash\ncommands may take up to an hour to propagate globally but will\nimmediately propagate when set on a specific guild.</p></li>\n<li><strong>set_global_commands</strong> (typing.Union[hikari.SnowflakeishOr[hikari.PartialGuild], bool]):\nDeprecated as of v2.1.1a1 alias of <code>declare_global_commands</code>.</li>\n<li><p><strong>command_ids</strong> (typing.Optional[collections.abc.Mapping[str, hikari.SnowflakeishOr[hikari.Command]]]):\nIf provided, a mapping of top level command names to IDs of the commands to update.</p>\n\n<p>This field is complementary to <code>declare_global_commands</code> and, while it\nisn't necessarily required, this will in some situations help avoid\npermissions which were previously set for a command from being lost\nafter a rename.</p>\n\n<p>This currently isn't supported when multiple guild IDs are passed for\n<code>declare_global_commands</code>.</p></li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises for the following reasons:\n<ul>\n<li>If <code>event_managed</code> is <code>True</code> when <code>event_manager</code> is <code>None</code>.</li>\n<li>If <code>command_ids</code> is passed when multiple guild ids are provided for <code>declare_global_commands</code>.</li>\n<li>If <code>command_ids</code> is passed when <code>declare_global_commands</code> is <code>False</code>.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "rest", "cache", "events", "server", "shards", "voice", "event_managed", "mention_prefix", "set_global_commands", "declare_global_commands", "command_ids", "_stack_level"], "funcdef": "def"}, "tanjun.Client.from_gateway_bot": {"fullname": "tanjun.Client.from_gateway_bot", "modulename": "tanjun", "qualname": "Client.from_gateway_bot", "type": "function", "doc": "<p>Build a <code>Client</code> from a <code>hikari.traits.GatewayBotAware</code> instance.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>This implicitly defaults the client to human only mode.</li>\n<li>This sets type dependency injectors for the hikari traits present in\n<code>bot</code> (including <code>hikari.traits.GatewayBotAware</code>).</li>\n<li>The endpoint used by <code>declare_global_commands</code> has a strict ratelimit\nwhich, as of writing, only allows for 2 requests per minute (with that\nratelimit either being per-guild if targeting a specific guild\notherwise globally).</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>bot</strong> (hikari.traits.GatewayBotAware):\nThe bot client to build from.</p>\n\n<p>This will be used to infer the relevant Hikari clients to use.</p></li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>event_managed</strong> (bool):\nWhether or not this client is managed by the event manager.</p>\n\n<p>An event managed client will be automatically started and closed\nbased on Hikari's lifetime events.</p>\n\n<p>Defaults to <code>True</code>.</p></li>\n<li><p><strong>mention_prefix</strong> (bool):\nWhether or not mention prefixes should be automatically set when this\nclient is first started.</p>\n\n<p>Defaults to <code>False</code> and it should be noted that this only applies to\nmessage commands.</p></li>\n<li><p><strong>declare_global_commands</strong> (typing.Union[hikari.SnowflakeishSequenceOr[hikari.PartialGuild], hikari.SnowflakeishOr[hikari.PartialGuild], bool]):\nWhether or not to automatically set global slash commands when this\nclient is first started. Defaults to <code>False</code>.</p>\n\n<p>If one or more guild objects/IDs are passed here then the registered\nglobal commands will be set on the specified guild(s) at startup rather\nthan globally. This can be useful for testing/debug purposes as slash\ncommands may take up to an hour to propagate globally but will\nimmediately propagate when set on a specific guild.</p></li>\n<li><strong>set_global_commands</strong> (typing.Union[hikari.SnowflakeishOr[hikari.PartialGuild], bool]):\nDeprecated as of v2.1.1a1 alias of <code>declare_global_commands</code>.</li>\n<li><p><strong>command_ids</strong> (typing.Optional[collections.abc.Mapping[str, hikari.SnowflakeishOr[hikari.Command]]]):\nIf provided, a mapping of top level command names to IDs of the commands to update.</p>\n\n<p>This field is complementary to <code>declare_global_commands</code> and, while it\nisn't necessarily required, this will in some situations help avoid\npermissions which were previously set for a command from being lost\nafter a rename.</p>\n\n<p>This currently isn't supported when multiple guild IDs are passed for\n<code>declare_global_commands</code>.</p></li>\n</ul>\n", "parameters": ["cls", "bot", "event_managed", "mention_prefix", "declare_global_commands", "set_global_commands", "command_ids"], "funcdef": "def"}, "tanjun.Client.from_rest_bot": {"fullname": "tanjun.Client.from_rest_bot", "modulename": "tanjun", "qualname": "Client.from_rest_bot", "type": "function", "doc": "<p>Build a <code>Client</code> from a <code>hikari.traits.RESTBotAware</code> instance.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>This sets type dependency injectors for the hikari traits present in\n<code>bot</code> (including <code>hikari.traits.RESTBotAware</code>).</li>\n<li>The endpoint used by <code>declare_global_commands</code> has a strict ratelimit\nwhich, as of writing, only allows for 2 requests per minute (with that\nratelimit either being per-guild if targeting a specific guild\notherwise globally).</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bot</strong> (hikari.traits.RESTBotAware):\nThe bot client to build from.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>declare_global_commands</strong> (typing.Union[hikari.SnowflakeishSequenceOr[hikari.PartialGuild], hikari.SnowflakeishOr[hikari.PartialGuild], bool]):\nWhether or not to automatically set global slash commands when this\nclient is first started. Defaults to <code>False</code>.</p>\n\n<p>If one or more guild objects/IDs are passed here then the registered\nglobal commands will be set on the specified guild(s) at startup rather\nthan globally. This can be useful for testing/debug purposes as slash\ncommands may take up to an hour to propagate globally but will\nimmediately propagate when set on a specific guild.</p></li>\n<li><strong>set_global_commands</strong> (typing.Union[hikari.SnowflakeishOr[hikari.PartialGuild], bool]):\nDeprecated as of v2.1.1a1 alias of <code>declare_global_commands</code>.</li>\n<li><p><strong>command_ids</strong> (typing.Optional[collections.abc.Mapping[str, hikari.SnowflakeishOr[hikari.Command]]]):\nIf provided, a mapping of top level command names to IDs of the commands to update.</p>\n\n<p>This field is complementary to <code>declare_global_commands</code> and, while it\nisn't necessarily required, this will in some situations help avoid\npermissions which were previously set for a command from being lost\nafter a rename.</p>\n\n<p>This currently isn't supported when multiple guild IDs are passed for\n<code>declare_global_commands</code>.</p></li>\n</ul>\n", "parameters": ["cls", "bot", "declare_global_commands", "set_global_commands", "command_ids"], "funcdef": "def"}, "tanjun.Client.defaults_to_ephemeral": {"fullname": "tanjun.Client.defaults_to_ephemeral", "modulename": "tanjun", "qualname": "Client.defaults_to_ephemeral", "type": "variable", "doc": "<p>Whether slash contexts spawned by this client should default to ephemeral responses.</p>\n\n<p>This effects calls to <code>SlashContext.create_followup</code>,\n<code>SlashContext.create_initial_response</code>, <code>SlashContext.defer</code> and\n<code>SlashContext.respond</code> unless the <code>flags</code> field is provided for the\nmethods which support it.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>This may be overridden by <code>BaseSlashCommand.defaults_to_ephemeral</code>\nand <code>Component.defaults_to_ephemeral</code>.</li>\n<li>This defaults to <code>False</code>.</li>\n<li>This only effects slash command execution.</li>\n</ul>\n"}, "tanjun.Client.message_accepts": {"fullname": "tanjun.Client.message_accepts", "modulename": "tanjun", "qualname": "Client.message_accepts", "type": "variable", "doc": "<p>Type of message create events this command client accepts for execution.</p>\n"}, "tanjun.Client.is_human_only": {"fullname": "tanjun.Client.is_human_only", "modulename": "tanjun", "qualname": "Client.is_human_only", "type": "variable", "doc": "<p>Whether this client is only executing for non-bot/webhook users messages.</p>\n"}, "tanjun.Client.cache": {"fullname": "tanjun.Client.cache", "modulename": "tanjun", "qualname": "Client.cache", "type": "variable", "doc": "<p>Hikari cache instance this command client was initialised with.</p>\n"}, "tanjun.Client.checks": {"fullname": "tanjun.Client.checks", "modulename": "tanjun", "qualname": "Client.checks", "type": "variable", "doc": "<p>Collection of the level <code>tanjun.abc.Context</code> checks registered to this client.</p>\n\n<p><em>Note:</em>\nThese may be taking advantage of the standard dependency injection.</p>\n"}, "tanjun.Client.components": {"fullname": "tanjun.Client.components", "modulename": "tanjun", "qualname": "Client.components", "type": "variable", "doc": "<p>Collection of the components this command client is using.</p>\n"}, "tanjun.Client.events": {"fullname": "tanjun.Client.events", "modulename": "tanjun", "qualname": "Client.events", "type": "variable", "doc": "<p>Object of the event manager this client was initialised with.</p>\n\n<p>This is used for executing message commands if set.</p>\n"}, "tanjun.Client.listeners": {"fullname": "tanjun.Client.listeners", "modulename": "tanjun", "qualname": "Client.listeners", "type": "variable", "doc": "<p>Mapping of event types to the listeners registered in this client.</p>\n"}, "tanjun.Client.hooks": {"fullname": "tanjun.Client.hooks", "modulename": "tanjun", "qualname": "Client.hooks", "type": "variable", "doc": "<p>Top level <code>tanjun.abc.AnyHooks</code> set for this client.</p>\n\n<p>These are called during both message and interaction command execution.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[tanjun.abc.AnyHooks]</strong>: The top level <code>tanjun.abc.Context</code> based hooks set for this\nclient if applicable, else <code>None</code>.</li>\n</ul>\n"}, "tanjun.Client.slash_hooks": {"fullname": "tanjun.Client.slash_hooks", "modulename": "tanjun", "qualname": "Client.slash_hooks", "type": "variable", "doc": "<p>Top level <code>tanjun.abc.SlashHooks</code> set for this client.</p>\n\n<p>These are only called during interaction command execution.</p>\n"}, "tanjun.Client.is_alive": {"fullname": "tanjun.Client.is_alive", "modulename": "tanjun", "qualname": "Client.is_alive", "type": "variable", "doc": "<p>Whether this client is alive.</p>\n"}, "tanjun.Client.loop": {"fullname": "tanjun.Client.loop", "modulename": "tanjun", "qualname": "Client.loop", "type": "variable", "doc": "<p>The loop this client is bound to if it's alive.</p>\n"}, "tanjun.Client.message_hooks": {"fullname": "tanjun.Client.message_hooks", "modulename": "tanjun", "qualname": "Client.message_hooks", "type": "variable", "doc": "<p>Top level <code>tanjun.abc.MessageHooks</code> set for this client.</p>\n\n<p>These are only called during both message command execution.</p>\n"}, "tanjun.Client.metadata": {"fullname": "tanjun.Client.metadata", "modulename": "tanjun", "qualname": "Client.metadata", "type": "variable", "doc": "<p>Mutable mapping of the metadata set for this client.</p>\n\n<p><em>Note:</em>\nAny modifications made to this mutable mapping will be preserved by\nthe client.</p>\n"}, "tanjun.Client.prefix_getter": {"fullname": "tanjun.Client.prefix_getter", "modulename": "tanjun", "qualname": "Client.prefix_getter", "type": "variable", "doc": "<p>Prefix getter method set for this client.</p>\n\n<p>For more information on this callback's signature see <code>PrefixGetter</code>.</p>\n"}, "tanjun.Client.prefixes": {"fullname": "tanjun.Client.prefixes", "modulename": "tanjun", "qualname": "Client.prefixes", "type": "variable", "doc": "<p>Collection of the standard prefixes set for this client.</p>\n"}, "tanjun.Client.rest": {"fullname": "tanjun.Client.rest", "modulename": "tanjun", "qualname": "Client.rest", "type": "variable", "doc": "<p>Object of the Hikari REST client this client was initialised with.</p>\n"}, "tanjun.Client.server": {"fullname": "tanjun.Client.server", "modulename": "tanjun", "qualname": "Client.server", "type": "variable", "doc": "<p>Object of the Hikari interaction server provided for this client.</p>\n\n<p>This is used for executing slash commands if set.</p>\n"}, "tanjun.Client.shards": {"fullname": "tanjun.Client.shards", "modulename": "tanjun", "qualname": "Client.shards", "type": "variable", "doc": "<p>Object of the Hikari shard manager this client was initialised with.</p>\n"}, "tanjun.Client.voice": {"fullname": "tanjun.Client.voice", "modulename": "tanjun", "qualname": "Client.voice", "type": "variable", "doc": "<p>Object of the Hikari voice component this client was initialised with.</p>\n"}, "tanjun.Client.clear_application_commands": {"fullname": "tanjun.Client.clear_application_commands", "modulename": "tanjun", "qualname": "Client.clear_application_commands", "type": "function", "doc": "<p>Clear the commands declared either globally or for a specific guild.</p>\n\n<p><em>Note:</em>\nThe endpoint this uses has a strict ratelimit which, as of writing,\nonly allows for 2 requests per minute (with that ratelimit either\nbeing per-guild if targeting a specific guild otherwise globally).</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>application</strong> (typing.Optional[hikari.snowflakes.SnowflakeishOr[hikari.PartialApplication]]):\nThe application to clear commands for.</p>\n\n<p>If left as <code>None</code> then this will be inferred from the authorization\nbeing used by <code>Client.rest</code>.</p></li>\n<li><p><strong>guild</strong> (hikari.UndefinedOr[hikari.snowflakes.SnowflakeishOr[hikari.PartialGuild]]):\nObject or ID of the guild to clear commands for.</p>\n\n<p>If left as <code>None</code> global commands will be cleared.</p></li>\n</ul>\n", "parameters": ["self", "application", "guild"], "funcdef": "async def"}, "tanjun.Client.set_global_commands": {"fullname": "tanjun.Client.set_global_commands", "modulename": "tanjun", "qualname": "Client.set_global_commands", "type": "function", "doc": "<p>Alias of <code>Client.declare_global_commands</code>.</p>\n\n<p><em>Deprecated since version v2.1.1a1:</em>\nUse <code>Client.declare_global_commands</code> instead.</p>\n", "parameters": ["self", "application", "guild", "force"], "funcdef": "async def"}, "tanjun.Client.declare_global_commands": {"fullname": "tanjun.Client.declare_global_commands", "modulename": "tanjun", "qualname": "Client.declare_global_commands", "type": "function", "doc": "<p>Set the global application commands for a bot based on the loaded components.</p>\n\n<p><em>Warning:</em>\nThis will overwrite any previously set application commands and\nonly targets commands marked as global.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>The endpoint this uses has a strict ratelimit which, as of writing,\nonly allows for 2 requests per minute (with that ratelimit either\nbeing per-guild if targeting a specific guild otherwise globally).</li>\n<li>Setting a specific <code>guild</code> can be useful for testing/debug purposes\nas slash commands may take up to an hour to propagate globally but\nwill immediately propagate when set on a specific guild.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>command_ids</strong> (typing.Optional[collections.abc.Mapping[str, hikari.SnowflakeishOr[hikari.Command]]]):\nIf provided, a mapping of top level command names to IDs of the existing commands to update.</li>\n<li><p><strong>application</strong> (typing.Optional[hikari.snowflakes.SnowflakeishOr[hikari.PartialApplication]]):\nObject or ID of the application to set the global commands for.</p>\n\n<p>If left as <code>None</code> then this will be inferred from the authorization\nbeing used by <code>Client.rest</code>.</p></li>\n<li><p><strong>guild</strong> (hikari.UndefinedOr[hikari.snowflakes.SnowflakeishOr[hikari.PartialGuild]]):\nObject or ID of the guild to set the global commands to.</p>\n\n<p>If left as <code>None</code> global commands will be set.</p></li>\n<li><p><strong>force</strong> (bool):\nForce this to declare the commands regardless of whether or not\nthey match the current state of the declared commands.</p>\n\n<p>Defaults to <code>False</code>. This default behaviour helps avoid issues with the\n2 request per minute (per-guild or globally) ratelimit and the other limit\nof only 200 application command creates per day (per guild or globally).</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Sequence[hikari..Command]</strong>: API representations of the set commands.</li>\n</ul>\n", "parameters": ["self", "command_ids", "application", "guild", "force"], "funcdef": "async def"}, "tanjun.Client.declare_application_command": {"fullname": "tanjun.Client.declare_application_command", "modulename": "tanjun", "qualname": "Client.declare_application_command", "type": "function", "doc": "<p>Declare a single slash command for a bot.</p>\n\n<p><em>Warning:</em>\nProviding <code>command_id</code> when updating a command helps avoid any\npermissions set for the command being lose (e.g. when changing the\ncommand's name).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (BaseSlashCommand):\nThe command to register.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>application</strong> (typing.Optional[hikari.snowflakes.SnowflakeishOr[hikari.PartialApplication]]):\nThe application to register the command with.</p>\n\n<p>If left as <code>None</code> then this will be inferred from the authorization\nbeing used by <code>Client.rest</code>.</p></li>\n<li><strong>command_id</strong> (typing.Optional[hikari.snowflakes.Snowflakeish]):\nID of the command to update.</li>\n<li><p><strong>guild</strong> (typing.Optional[hikari.snowflakes.SnowflakeishOr[hikari.PartialGuild]]):\nObject or ID of the guild to register the command with.</p>\n\n<p>If left as <code>None</code> then the command will be registered globally.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Command</strong>: API representation of the command that was registered.</li>\n</ul>\n", "parameters": ["self", "command", "command_id", "application", "guild"], "funcdef": "async def"}, "tanjun.Client.declare_application_commands": {"fullname": "tanjun.Client.declare_application_commands", "modulename": "tanjun", "qualname": "Client.declare_application_commands", "type": "function", "doc": "<p>Declare a collection of slash commands for a bot.</p>\n\n<p><em>Note:</em>\nThe endpoint this uses has a strict ratelimit which, as of writing,\nonly allows for 2 requests per minute (with that ratelimit either\nbeing per-guild if targeting a specific guild otherwise globally).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>commands</strong> (collections.abc.Iterable[BaseSlashCommand]):\nIterable of the commands to register.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>command_ids</strong> (typing.Optional[collections.abc.Mapping[str, hikari.SnowflakeishOr[hikari.Command]]]):\nIf provided, a mapping of top level command names to IDs of the existing commands to update.</p>\n\n<p>While optional, this can be helpful when updating commands as\nproviding the current IDs will prevent changes such as renames from\nleading to other state set for commands (e.g. permissions) from\nbeing lost.</p></li>\n<li><p><strong>application</strong> (typing.Optional[hikari.snowflakes.SnowflakeishOr[hikari.PartialApplication]]):\nThe application to register the commands with.</p>\n\n<p>If left as <code>None</code> then this will be inferred from the authorization\nbeing used by <code>Client.rest</code>.</p></li>\n<li><p><strong>guild</strong> (typing.Optional[hikari.snowflakes.SnowflakeishOr[hikari.PartialGuild]]):\nObject or ID of the guild to register the commands with.</p>\n\n<p>If left as <code>None</code> then the commands will be registered globally.</p></li>\n<li><p><strong>force</strong> (bool):\nForce this to declare the commands regardless of whether or not\nthey match the current state of the declared commands.</p>\n\n<p>Defaults to <code>False</code>. This default behaviour helps avoid issues with the\n2 request per minute (per-guild or globally) ratelimit and the other limit\nof only 200 application command creates per day (per guild or globally).</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Sequence[hikari.Command]</strong>: API representations of the commands which were registered.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If conflicting command names are found (multiple commanbds have the same top-level name).</li>\n<li>If more than 100 top-level commands are passed.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "commands", "command_ids", "application", "guild", "force"], "funcdef": "async def"}, "tanjun.Client.set_auto_defer_after": {"fullname": "tanjun.Client.set_auto_defer_after", "modulename": "tanjun", "qualname": "Client.set_auto_defer_after", "type": "function", "doc": "<p>Set when this client should automatically defer execution of commands.</p>\n\n<p><em>Warning:</em>\nIf <code>time</code> is set to <code>None</code> then automatic deferrals will be disabled.\nThis may lead to unexpected behaviour.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>time</strong> (typing.Optional[float]):\nThe time in seconds to defer interaction command responses after.</li>\n</ul>\n", "parameters": ["self", "time"], "funcdef": "def"}, "tanjun.Client.set_ephemeral_default": {"fullname": "tanjun.Client.set_ephemeral_default", "modulename": "tanjun", "qualname": "Client.set_ephemeral_default", "type": "function", "doc": "<p>Set whether slash contexts spawned by this client should default to ephemeral responses.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bool</strong>: Whether slash command contexts executed in this component should\nshould default to ephemeral.</li>\n</ul>\n\n<p>This will be overridden by any response calls which specify flags\nand defaults to <code>False</code>.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>SelfT</strong>: This component to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "state"], "funcdef": "def"}, "tanjun.Client.set_hikari_trait_injectors": {"fullname": "tanjun.Client.set_hikari_trait_injectors", "modulename": "tanjun", "qualname": "Client.set_hikari_trait_injectors", "type": "function", "doc": "<p>Set type based dependency injection based on the hikari traits found in <code>bot</code>.</p>\n\n<p>This is a short hand for calling <code>Client.add_type_dependency</code> for all\nthe hikari trait types <code>bot</code> is valid for with bot.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bot</strong> (hikari_traits.RESTAware):\nThe hikari client to set dependency injectors for.</li>\n</ul>\n", "parameters": ["self", "bot"], "funcdef": "def"}, "tanjun.Client.set_interaction_not_found": {"fullname": "tanjun.Client.set_interaction_not_found", "modulename": "tanjun", "qualname": "Client.set_interaction_not_found", "type": "function", "doc": "<p>Set the response message for when an interaction command is not found.</p>\n\n<p><em>Warning:</em>\nSetting this to <code>None</code> may lead to unexpected behaviour (especially\nwhen the client is still set to auto-defer interactions) and should\nonly be done if you know what you're doing.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>message</strong> (typing.Optional[str]):\nThe message to respond with when an interaction command isn't found.</li>\n</ul>\n", "parameters": ["self", "message"], "funcdef": "def"}, "tanjun.Client.set_message_accepts": {"fullname": "tanjun.Client.set_message_accepts", "modulename": "tanjun", "qualname": "Client.set_message_accepts", "type": "function", "doc": "<p>Set the kind of messages commands should be executed based on.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>accepts</strong> (MessageAcceptsEnum):\nThe type of messages commands should be executed based on.</li>\n</ul>\n", "parameters": ["self", "accepts"], "funcdef": "def"}, "tanjun.Client.set_message_ctx_maker": {"fullname": "tanjun.Client.set_message_ctx_maker", "modulename": "tanjun", "qualname": "Client.set_message_ctx_maker", "type": "function", "doc": "<p>Set the message context maker to use when creating context for a message.</p>\n\n<p><em>Warning:</em>\nThe caller must return an instance of <code>tanjun.context.MessageContext</code>\nrather than just any implementation of the MessageContext abc due to\nthis client relying on implementation detail of\n<code>tanjun.context.MessageContext</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>maker</strong> (_MessageContextMakerProto):\nThe message context maker to use.</p>\n\n<p>This is a callback which should match the signature of\n<code>tanjun.context.MessageContext.__init__</code> and return an instance\nof <code>tanjun.context.MessageContext</code>.</p>\n\n<p>This defaults to <code>tanjun.context.MessageContext</code>.</p></li>\n</ul>\n", "parameters": ["self", "maker"], "funcdef": "def"}, "tanjun.Client.set_slash_ctx_maker": {"fullname": "tanjun.Client.set_slash_ctx_maker", "modulename": "tanjun", "qualname": "Client.set_slash_ctx_maker", "type": "function", "doc": "<p>Set the slash context maker to use when creating context for a slash command.</p>\n\n<p><em>Warning:</em>\nThe caller must return an instance of <code>tanjun.context.SlashContext</code>\nrather than just any implementation of the SlashContext abc due to\nthis client relying on implementation detail of\n<code>tanjun.context.SlashContext</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>maker</strong> (_SlashContextMakerProto):\nThe slash context maker to use.</p>\n\n<p>This is a callback which should match the signature of\n<code>tanjun.context.SlashContext.__init__</code> and return an instance\nof <code>tanjun.context.SlashContext</code>.</p>\n\n<p>This defaults to <code>tanjun.context.SlashContext</code>.</p></li>\n</ul>\n", "parameters": ["self", "maker"], "funcdef": "def"}, "tanjun.Client.set_human_only": {"fullname": "tanjun.Client.set_human_only", "modulename": "tanjun", "qualname": "Client.set_human_only", "type": "function", "doc": "<p>Set whether or not message commands execution should be limited to \"human\" users.</p>\n\n<p><em>Note:</em>\nThis doesn't apply to interaction commands as these can only be\ntriggered by a \"human\" (normal user account).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>value</strong> (bool):\nWhether or not message commands execution should be limited to \"human\" users.</p>\n\n<p>Passing <code>True</code> here will prevent message commands from being executed\nbased on webhook and bot messages.</p></li>\n</ul>\n", "parameters": ["self", "value"], "funcdef": "def"}, "tanjun.Client.add_check": {"fullname": "tanjun.Client.add_check", "modulename": "tanjun", "qualname": "Client.add_check", "type": "function", "doc": "<p>Add a generic check to this client.</p>\n\n<p>This will be applied to both message and slash command execution.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>check</strong> (tanjun_abc.CheckSig):\nThe check to add. This may be either synchronous or asynchronous\nand must take one positional argument of type <code>tanjun.abc.Context</code>\nwith dependency injection being supported for its keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "check"], "funcdef": "def"}, "tanjun.Client.remove_check": {"fullname": "tanjun.Client.remove_check", "modulename": "tanjun", "qualname": "Client.remove_check", "type": "function", "doc": "<p>Remove a check from the client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>check</strong> (tanjun_abc.CheckSig):\nThe check to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the check was not previously added.</li>\n</ul>\n", "parameters": ["self", "check"], "funcdef": "def"}, "tanjun.Client.with_check": {"fullname": "tanjun.Client.with_check", "modulename": "tanjun", "qualname": "Client.with_check", "type": "function", "doc": "<p>Add a check to this client through a decorator call.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>check</strong> (tanjun_abc.CheckSig):\nThe check to add. This may be either synchronous or asynchronous\nand must take one positional argument of type <code>tanjun.abc.Context</code>\nwith dependency injection being supported for its keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tanjun_abc.CheckSig</strong>: The added check.</li>\n</ul>\n", "parameters": ["self", "check"], "funcdef": "def"}, "tanjun.Client.check": {"fullname": "tanjun.Client.check", "modulename": "tanjun", "qualname": "Client.check", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx"], "funcdef": "async def"}, "tanjun.Client.add_component": {"fullname": "tanjun.Client.add_component", "modulename": "tanjun", "qualname": "Client.add_component", "type": "function", "doc": "<p>Add a component to this client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>component</strong> (Component):\nThe component to move to this client.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to allow chained calls.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the component's name is already registered.</li>\n</ul>\n", "parameters": ["self", "component", "add_injector"], "funcdef": "def"}, "tanjun.Client.get_component_by_name": {"fullname": "tanjun.Client.get_component_by_name", "modulename": "tanjun", "qualname": "Client.get_component_by_name", "type": "function", "doc": "<p>Get a component from this client by name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName to get a component by.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[Component]</strong>: The component instance if found, else <code>None</code>.</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.Client.remove_component": {"fullname": "tanjun.Client.remove_component", "modulename": "tanjun", "qualname": "Client.remove_component", "type": "function", "doc": "<p>Remove a component from this client.</p>\n\n<p>This will unsubscribe any client callbacks, commands and listeners\nregistered in the provided component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>component</strong> (Component):\nThe component to remove from this client.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the provided component isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to allow chained calls.</li>\n</ul>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.Client.remove_component_by_name": {"fullname": "tanjun.Client.remove_component_by_name", "modulename": "tanjun", "qualname": "Client.remove_component_by_name", "type": "function", "doc": "<p>Remove a component from this client by name.</p>\n\n<p>This will unsubscribe any client callbacks, commands and listeners\nregistered in the provided component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName of the component to remove from this client.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>KeyError</strong>: If the provided component name isn't found.</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.Client.add_client_callback": {"fullname": "tanjun.Client.add_client_callback", "modulename": "tanjun", "qualname": "Client.add_client_callback", "type": "function", "doc": "<p>Add a client callback.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (typing.Union[str, ClientCallbackNames]):\nThe name this callback is being registered to.</p>\n\n<p>This is case-insensitive.</p></li>\n<li><p><strong>callback</strong> (MetaEventSigT):\nThe callback to register.</p>\n\n<p>This may be sync or async and must return None. The positional and\nkeyword arguments a callback should expect depend on implementation\ndetail around the <code>name</code> being subscribed to.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "name", "callback"], "funcdef": "def"}, "tanjun.Client.dispatch_client_callback": {"fullname": "tanjun.Client.dispatch_client_callback", "modulename": "tanjun", "qualname": "Client.dispatch_client_callback", "type": "function", "doc": "<p>Dispatch a client callback.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (typing.Union[str, ClientCallbackNames]):\nThe name of the callback to dispatch.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>*args</strong> (typing.Any):\nPositional arguments to pass to the callback(s).</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>KeyError</strong>: If no callbacks are registered for the given name.</li>\n</ul>\n", "parameters": ["self", "name", "args"], "funcdef": "async def"}, "tanjun.Client.get_client_callbacks": {"fullname": "tanjun.Client.get_client_callbacks", "modulename": "tanjun", "qualname": "Client.get_client_callbacks", "type": "function", "doc": "<p>Get a collection of the callbacks registered for a specific name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (typing.Union[str, ClientCallbackNames]):\nThe name to get the callbacks registered for.</p>\n\n<p>This is case-insensitive.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Collection[MetaEventSig]</strong>: Collection of the callbacks for the provided name.</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.Client.remove_client_callback": {"fullname": "tanjun.Client.remove_client_callback", "modulename": "tanjun", "qualname": "Client.remove_client_callback", "type": "function", "doc": "<p>Remove a client callback.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (typing.Union[str, ClientCallbackNames]):\nThe name this callback is being registered to.</p>\n\n<p>This is case-insensitive.</p></li>\n<li><strong>callback</strong> (MetaEventSigT):\nThe callback to remove from the client's callbacks.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>KeyError</strong>: If the provided name isn't found.</li>\n<li><strong>ValueError</strong>: If the provided callback isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "name", "callback"], "funcdef": "def"}, "tanjun.Client.with_client_callback": {"fullname": "tanjun.Client.with_client_callback", "modulename": "tanjun", "qualname": "Client.with_client_callback", "type": "function", "doc": "<p>Add a client callback through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"o\">.</span><span class=\"n\">from_rest_bot</span><span class=\"p\">(</span><span class=\"n\">bot</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@client</span><span class=\"o\">.</span><span class=\"n\">with_client_callback</span><span class=\"p\">(</span><span class=\"s2\">&quot;closed&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_close</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (typing.Union[str, ClientCallbackNames]):\nThe name this callback is being registered to.</p>\n\n<p>This is case-insensitive.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[MetaEventSigT], MetaEventSigT]</strong>: Decorator callback used to register the client callback.</li>\n</ul>\n\n<p>This may be sync or async and must return None. The positional and\nkeyword arguments a callback should expect depend on implementation\ndetail around the <code>name</code> being subscribed to.</p>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.Client.add_listener": {"fullname": "tanjun.Client.add_listener", "modulename": "tanjun", "qualname": "Client.add_listener", "type": "function", "doc": "<p>Add a listener to the client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event_type</strong> (type[hikari.Event]):\nThe event type to add a listener for.</li>\n<li><p><strong>callback</strong> (ListenerCallbackSig):\nThe callback to register as a listener.</p>\n\n<p>This callback must be a coroutine function which returns <code>None</code> and\nalways takes at least one positional arg of type <code>hikari.Event</code>\nregardless of client implementation detail.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "event_type", "callback"], "funcdef": "def"}, "tanjun.Client.remove_listener": {"fullname": "tanjun.Client.remove_listener", "modulename": "tanjun", "qualname": "Client.remove_listener", "type": "function", "doc": "<p>Remove a listener from the client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event_type</strong> (type[hikari.Event]):\nThe event type to remove a listener for.</li>\n<li><strong>callback</strong> (ListenerCallbackSig):\nThe callback to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>KeyError</strong>: If the provided event type isn't found.</li>\n<li><strong>ValueError</strong>: If the provided callback isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "event_type", "callback"], "funcdef": "def"}, "tanjun.Client.with_listener": {"fullname": "tanjun.Client.with_listener", "modulename": "tanjun", "qualname": "Client.with_listener", "type": "function", "doc": "<p>Add an event listener to this client through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"o\">.</span><span class=\"n\">from_gateway_bot</span><span class=\"p\">(</span><span class=\"n\">bot</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@client</span><span class=\"o\">.</span><span class=\"n\">with_listener</span><span class=\"p\">(</span><span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">MessageCreateEvent</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_message_create</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">MessageCreateEvent</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event_type</strong> (type[hikari.Event]):\nThe event type to listener for.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[ListenerCallbackSigT], ListenerCallbackSigT]</strong>: Decorator callback used to register the event callback.</li>\n</ul>\n\n<p>The callback must be a coroutine function which returns <code>None</code> and\nalways takes at least one positional arg of type <code>hikari.Event</code>\nregardless of client implementation detail.</p>\n", "parameters": ["self", "event_type"], "funcdef": "def"}, "tanjun.Client.add_prefix": {"fullname": "tanjun.Client.add_prefix", "modulename": "tanjun", "qualname": "Client.add_prefix", "type": "function", "doc": "<p>Add a prefix used to filter message command calls.</p>\n\n<p>This will be matched against the first character(s) in a message's\ncontent to determine whether the message command search stage of\nexecution should be initiated.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>prefixes</strong> (typing.Union[collections.abc.Iterable[str], str]):\nEither a single string or an iterable of strings to be used as\nprefixes.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "prefixes"], "funcdef": "def"}, "tanjun.Client.remove_prefix": {"fullname": "tanjun.Client.remove_prefix", "modulename": "tanjun", "qualname": "Client.remove_prefix", "type": "function", "doc": "<p>Remove a message content prefix from the client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>prefix</strong> (str):\nThe prefix to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the prefix is not registered with the client.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "prefix"], "funcdef": "def"}, "tanjun.Client.set_prefix_getter": {"fullname": "tanjun.Client.set_prefix_getter", "modulename": "tanjun", "qualname": "Client.set_prefix_getter", "type": "function", "doc": "<p>Set the callback used to retrieve message prefixes set for the relevant guild.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>getter</strong> (typing.Optional[PrefixGetterSig]):\nThe callback which'll be used to retrieve prefixes for the guild a\nmessage context is from. If <code>None</code> is passed here then the callback\nwill be unset.</p>\n\n<p>This should be an async callback which one argument of type\n<code>tanjun.abc.MessageContext</code> and returns an iterable of string prefixes.\nDependency injection is supported for this callback's keyword arguments.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "getter"], "funcdef": "def"}, "tanjun.Client.with_prefix_getter": {"fullname": "tanjun.Client.with_prefix_getter", "modulename": "tanjun", "qualname": "Client.with_prefix_getter", "type": "function", "doc": "<p>Set the prefix getter callback for this client through decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"o\">.</span><span class=\"n\">from_rest_bot</span><span class=\"p\">(</span><span class=\"n\">bot</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@client</span><span class=\"o\">.</span><span class=\"n\">with_prefix_getter</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">prefix_getter</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">MessageContext</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>getter</strong> (PrefixGetterSig):\nThe callback which'll be  to retrieve prefixes for the guild a\nmessage event is from.</p>\n\n<p>This should be an async callback which one argument of type\n<code>tanjun.abc.MessageContext</code> and returns an iterable of string prefixes.\nDependency injection is supported for this callback's keyword arguments.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>PrefixGetterSigT</strong>: The registered callback.</li>\n</ul>\n", "parameters": ["self", "getter"], "funcdef": "def"}, "tanjun.Client.iter_commands": {"fullname": "tanjun.Client.iter_commands", "modulename": "tanjun", "qualname": "Client.iter_commands", "type": "function", "doc": "<p>Iterate over all the commands (both message and slash) registered to this client.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[ExecutableCommand[Context]]</strong>: Iterator of all the commands registered to this client.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.Client.iter_message_commands": {"fullname": "tanjun.Client.iter_message_commands", "modulename": "tanjun", "qualname": "Client.iter_message_commands", "type": "function", "doc": "<p>Iterate over all the message commands registered to this client.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[MessageCommand]</strong>: Iterator of all the message commands registered to this client.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.Client.iter_slash_commands": {"fullname": "tanjun.Client.iter_slash_commands", "modulename": "tanjun", "qualname": "Client.iter_slash_commands", "type": "function", "doc": "<p>Iterate over all the slash commands registered to this client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>global_only</strong> (bool):\nWhether to only iterate over global slash commands.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[BaseSlashCommand]</strong>: Iterator of all the slash commands registered to this client.</li>\n</ul>\n", "parameters": ["self", "global_only"], "funcdef": "def"}, "tanjun.Client.check_message_name": {"fullname": "tanjun.Client.check_message_name", "modulename": "tanjun", "qualname": "Client.check_message_name", "type": "function", "doc": "<p>Check whether a message command name is present in the current client.</p>\n\n<p><em>Note:</em>\nDependent on implementation this may partial check name against the\nmessage command's name based on command_name.startswith(name).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name to match commands against.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[tuple[str, MessageCommand]]</strong>: Iterator of the matched command names to the matched message command objects.</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.Client.check_slash_name": {"fullname": "tanjun.Client.check_slash_name", "modulename": "tanjun", "qualname": "Client.check_slash_name", "type": "function", "doc": "<p>Check whether a slash command name is present in the current client.</p>\n\n<p><em>Note:</em>\nThis won't check the commands within command groups.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName to check against.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[BaseSlashCommand]</strong>: Iterator of the matched slash command objects.</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.Client.close": {"fullname": "tanjun.Client.close", "modulename": "tanjun", "qualname": "Client.close", "type": "function", "doc": "<p>Close the client.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the client isn't running.</li>\n</ul>\n", "parameters": ["self", "deregister_listeners"], "funcdef": "async def"}, "tanjun.Client.open": {"fullname": "tanjun.Client.open", "modulename": "tanjun", "qualname": "Client.open", "type": "function", "doc": "<p>Start the client.</p>\n\n<p>If <code>mention_prefix</code> was passed to <code>Client.__init__</code> or\n<code>Client.from_gateway_bot</code> then this function may make a fetch request\nto Discord if it cannot get the current user from the cache.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the client is already active.</li>\n</ul>\n", "parameters": ["self", "register_listeners"], "funcdef": "async def"}, "tanjun.Client.fetch_rest_application_id": {"fullname": "tanjun.Client.fetch_rest_application_id", "modulename": "tanjun", "qualname": "Client.fetch_rest_application_id", "type": "function", "doc": "<p>Fetch the application ID of the application this client is linked to.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Snowflake</strong>: The application ID of the application this client is linked to.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.Client.set_hooks": {"fullname": "tanjun.Client.set_hooks", "modulename": "tanjun", "qualname": "Client.set_hooks", "type": "function", "doc": "<p>Set the general command execution hooks for this client.</p>\n\n<p>The callbacks within this hook will be added to every slash and message\ncommand execution started by this client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>hooks</strong> (typing.Optional[tanjun_abc.AnyHooks]):\nThe general command execution hooks to set for this client.</p>\n\n<p>Passing <code>None</code> will remove all hooks.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "hooks"], "funcdef": "def"}, "tanjun.Client.set_slash_hooks": {"fullname": "tanjun.Client.set_slash_hooks", "modulename": "tanjun", "qualname": "Client.set_slash_hooks", "type": "function", "doc": "<p>Set the slash command execution hooks for this client.</p>\n\n<p>The callbacks within this hook will be added to every slash command\nexecution started by this client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>hooks</strong> (typing.Optional[tanjun_abc.SlashHooks]):\nThe slash context specific command execution hooks to set for this\nclient.</p>\n\n<p>Passing <code>None</code> will remove the hooks.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "hooks"], "funcdef": "def"}, "tanjun.Client.set_message_hooks": {"fullname": "tanjun.Client.set_message_hooks", "modulename": "tanjun", "qualname": "Client.set_message_hooks", "type": "function", "doc": "<p>Set the message command execution hooks for this client.</p>\n\n<p>The callbacks within this hook will be added to every message command\nexecution started by this client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>hooks</strong> (typing.Optional[tanjun_abc.MessageHooks]):\nThe message context specific command execution hooks to set for this\nclient.</p>\n\n<p>Passing <code>None</code> will remove all hooks.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "hooks"], "funcdef": "def"}, "tanjun.Client.load_modules": {"fullname": "tanjun.Client.load_modules", "modulename": "tanjun", "qualname": "Client.load_modules", "type": "function", "doc": "<p>Load entities into this client from modules based on present loaders.</p>\n\n<p><em>Note:</em>\nIf an <code>__all__</code> is present in the target module then it will be\nused to find loaders.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>For this to work the target module has to have at least one loader present.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_loader</span>\n<span class=\"k\">def</span> <span class=\"nf\">load_module</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">add_component</span><span class=\"p\">(</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">())</span>\n</code></pre></div>\n\n<p>or</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">loader</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Component</span><span class=\"p\">(</span><span class=\"s2\">&quot;trans component&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">load_from_scope</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">make_loader</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>*modules</strong> (typing.Union[str, pathlib.Path]):\nPath(s) of the modules to load from.</p>\n\n<p>When <code>str</code> this will be treated as a normal import path which is\nabsolute (<code>\"foo.bar.baz\"</code>). It's worth noting that absolute module\npaths may be imported from the current location if the top level\nmodule is a valid module file or module directory in the current\nworking directory.</p>\n\n<p>When <code>pathlib.Path</code> the module will be imported directly from\nthe given path. In this mode any relative imports in the target\nmodule will fail to resolve.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This client instance to enable chained calls.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the module is already loaded.</li>\n<li><strong>RuntimeError</strong>: If no loaders are found in the module.</li>\n<li><strong>ModuleNotFoundError</strong>: If the module is not found.</li>\n</ul>\n", "parameters": ["self", "modules", "_log"], "funcdef": "def"}, "tanjun.Client.unload_modules": {"fullname": "tanjun.Client.unload_modules", "modulename": "tanjun", "qualname": "Client.unload_modules", "type": "function", "doc": "<p>Unload entities from this client based on unloaders in one or more modules.</p>\n\n<p><em>Note:</em>\nIf an <code>__all__</code> is present in the target module then it will be\nused to find unloaders.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>For this to work the module has to have at least one unloading enabled\n<code>tanjun.abc.ClientLoader</code> present.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_unloader</span>\n<span class=\"k\">def</span> <span class=\"nf\">unload_component</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">remove_component_by_name</span><span class=\"p\">(</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>or</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># as_loader&#39;s returned ClientLoader handles both loading and unloading.</span>\n<span class=\"n\">loader</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Component</span><span class=\"p\">(</span><span class=\"s2\">&quot;trans component&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">load_from_scope</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_loader</span><span class=\"p\">(</span><span class=\"n\">unload_component</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>*modules</strong> (typing.Union[str, pathlib.Path]):\nPath of one or more modules to unload.</p>\n\n<p>These should be the same path(s) which were passed to <code>load_module</code>.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This client instance to enable chained calls.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the module hasn't been loaded.</li>\n<li><strong>RuntimeError</strong>: If no unloaders are found in the module.</li>\n</ul>\n", "parameters": ["self", "modules", "_log"], "funcdef": "def"}, "tanjun.Client.reload_modules": {"fullname": "tanjun.Client.reload_modules", "modulename": "tanjun", "qualname": "Client.reload_modules", "type": "function", "doc": "<p>Reload entities in this client based on the loaders in loaded module(s).</p>\n\n<p><em>Note:</em>\nIf an <code>__all__</code> is present in the target module then it will be\nused to find loaders and unloaders.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>For this to work the module has to have at least one ClientLoader\nwhich handles both loading and unloading present.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>*modules</strong> (typing.Union[str, pathlib.Path]):\nPaths of one or more module to unload.</p>\n\n<p>These should be the same paths which were passed to <code>load_module</code>.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This client instance to enable chained calls.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the module hasn't been loaded.</li>\n<li><strong>RuntimeError</strong>: If no unloaders are found in the current state of the module.\nIf no loaders are found in the new state of the module.</li>\n</ul>\n", "parameters": ["self", "modules"], "funcdef": "def"}, "tanjun.Client.on_message_create_event": {"fullname": "tanjun.Client.on_message_create_event", "modulename": "tanjun", "qualname": "Client.on_message_create_event", "type": "function", "doc": "<p>Execute a message command based on a gateway event.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>hikari.events.message_events.MessageCreateEvent</strong>: The event to handle.</li>\n</ul>\n", "parameters": ["self", "event"], "funcdef": "async def"}, "tanjun.Client.on_interaction_create_event": {"fullname": "tanjun.Client.on_interaction_create_event", "modulename": "tanjun", "qualname": "Client.on_interaction_create_event", "type": "function", "doc": "<p>Execute a slash command based on Gateway events.</p>\n\n<p><em>Note:</em>\nAny event where <code>event.interaction</code> is not\n<code>hikari.CommandInteraction</code> will be ignored.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event</strong> (hikari.events.interaction_events.InteractionCreateEvent):\nThe event to execute commands based on.</li>\n</ul>\n", "parameters": ["self", "event"], "funcdef": "async def"}, "tanjun.Client.on_interaction_create_request": {"fullname": "tanjun.Client.on_interaction_create_request", "modulename": "tanjun", "qualname": "Client.on_interaction_create_request", "type": "function", "doc": "<p>Execute a slash command based on received REST requests.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>interaction</strong> (hikari.CommandInteraction):\nThe interaction to execute a command based on.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tanjun.context.ResponseType</strong>: The initial response to send back to Discord.</li>\n</ul>\n", "parameters": ["self", "interaction"], "funcdef": "async def"}, "tanjun.MessageAcceptsEnum": {"fullname": "tanjun.MessageAcceptsEnum", "modulename": "tanjun", "qualname": "MessageAcceptsEnum", "type": "class", "doc": "<p>The possible configurations for which events <code>Client</code> should execute commands based on.</p>\n"}, "tanjun.MessageAcceptsEnum.ALL": {"fullname": "tanjun.MessageAcceptsEnum.ALL", "modulename": "tanjun", "qualname": "MessageAcceptsEnum.ALL", "type": "variable", "doc": "<p>Set the client to execute commands based on both DM and guild message create events.</p>\n"}, "tanjun.MessageAcceptsEnum.DM_ONLY": {"fullname": "tanjun.MessageAcceptsEnum.DM_ONLY", "modulename": "tanjun", "qualname": "MessageAcceptsEnum.DM_ONLY", "type": "variable", "doc": "<p>Set the client to execute commands based only DM message create events.</p>\n"}, "tanjun.MessageAcceptsEnum.GUILD_ONLY": {"fullname": "tanjun.MessageAcceptsEnum.GUILD_ONLY", "modulename": "tanjun", "qualname": "MessageAcceptsEnum.GUILD_ONLY", "type": "variable", "doc": "<p>Set the client to execute commands based only guild message create events.</p>\n"}, "tanjun.MessageAcceptsEnum.NONE": {"fullname": "tanjun.MessageAcceptsEnum.NONE", "modulename": "tanjun", "qualname": "MessageAcceptsEnum.NONE", "type": "variable", "doc": "<p>Set the client to not execute commands based on message create events.</p>\n"}, "tanjun.MessageAcceptsEnum.get_event_type": {"fullname": "tanjun.MessageAcceptsEnum.get_event_type", "modulename": "tanjun", "qualname": "MessageAcceptsEnum.get_event_type", "type": "function", "doc": "<p>Get the base event type this mode listens to.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[type[hikari.message_events.MessageCreateEvent]]</strong>: The type object of the MessageCreateEvent class this mode will\nregister a listener for.</li>\n</ul>\n\n<p>This will be <code>None</code> if this mode disables listening to\nmessage create events.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.as_message_command": {"fullname": "tanjun.as_message_command", "modulename": "tanjun", "qualname": "as_message_command", "type": "function", "doc": "<p>Build a message command from a decorated callback.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe command name.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>*names</strong> (str):\nVariable positional arguments of other names for the command.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_CallbackishT[CommandCallbackSigT]], MessageCommand[CommandCallbackSigT]]</strong>: The decorator callback used to make a <code>MessageCommand</code>.</li>\n</ul>\n\n<p>This can either wrap a raw command callback or another callable command instance\n(e.g. <code>SlashCommand</code>, <code>MessageCommand</code>, <code>MessageCommandGroup</code>) and will manage\nloading the other command into a component when using <code>tanjun.Component.load_from_scope</code>.</p>\n", "parameters": ["name", "names"], "funcdef": "def"}, "tanjun.as_message_command_group": {"fullname": "tanjun.as_message_command_group", "modulename": "tanjun", "qualname": "as_message_command_group", "type": "function", "doc": "<p>Build a message command group from a decorated callback.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe command name.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>*names</strong> (str):\nVariable positional arguments of other names for the command.</li>\n<li><p><strong>strict</strong> (bool):\nWhether this command group should only allow commands without spaces in their names.</p>\n\n<p>This allows for a more optimised command search pattern to be used and\nenforces that command names are unique to a single command within the group.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_CallbackishT[CommandCallbackSigT]], MessageCommand[CommandCallbackSigT]]</strong>: The decorator callback used to make a <code>MessageCommandGroup</code>.</li>\n</ul>\n\n<p>This can either wrap a raw command callback or another callable command instance\n(e.g. <code>SlashCommand</code>, <code>MessageCommand</code>, <code>MessageCommandGroup</code>) and will manage\nloading the other command into a component when using <code>tanjun.Component.load_from_scope</code>.</p>\n", "parameters": ["name", "names", "strict"], "funcdef": "def"}, "tanjun.as_slash_command": {"fullname": "tanjun.as_slash_command", "modulename": "tanjun", "qualname": "as_slash_command", "type": "function", "doc": "<p>Build a <code>SlashCommand</code> by decorating a function.</p>\n\n<p><em>Note:</em>\nUnder the standard implementation, <code>is_global</code> is used to determine whether\nthe command should be bulk set by <code>tanjun.Client.set_global_commands</code>\nor when <code>set_global_commands</code> is True</p>\n\n<p><em>Warning:</em>\n<code>default_permission</code> and <code>is_global</code> are ignored for commands within\nslash command groups.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;ping&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Get the bot&#39;s latency&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">ping_command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"n\">start_time</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">perf_counter</span><span class=\"p\">()</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">fetch_my_user</span><span class=\"p\">()</span>\n    <span class=\"n\">time_taken</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">perf_counter</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">start_time</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">1_000</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;PONG</span><span class=\"se\">\\n</span><span class=\"s2\"> - REST: </span><span class=\"si\">{</span><span class=\"n\">time_taken</span><span class=\"si\">:</span><span class=\"s2\">.0f</span><span class=\"si\">}</span><span class=\"s2\">mss&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe command's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe command's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>always_defer</strong> (bool):\nWhether the contexts this command is executed with should always be deferred\nbefore being passed to the command's callback.</p>\n\n<p>Defaults to <code>False</code>.</p>\n\n<p><em>Note:</em>\nThe ephemeral state of the first response is decided by whether the\ndeferral is ephemeral.</p></li>\n<li><p><strong>default_permission</strong> (bool):\nWhether this command can be accessed without set permissions.</p>\n\n<p>Defaults to <code>True</code>, meaning that users can access the command by default.</p></li>\n<li><p><strong>default_to_ephemeral</strong> (typing.Optional[bool]):\nWhether this command's responses should default to ephemeral unless flags\nare set to override this.</p>\n\n<p>If this is left as <code>None</code> then the default set on the parent command(s),\ncomponent or client will be in effect.</p></li>\n<li><strong>is_global</strong> (bool):\nWhether this command is a global command. Defaults to <code>True</code>.</li>\n<li><p><strong>sort_options</strong> (bool):\nWhether this command should sort its set options based on whether\nthey're required.</p>\n\n<p>If this is <code>True</code> then the options are re-sorted to meet the requirement\nfrom Discord that required command options be listed before optional\nones.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_CallbackishT[CommandCallbackSigT]], SlashCommand[CommandCallbackSigT]]</strong>: The decorator callback used to make a <code>SlashCommand</code>.</li>\n</ul>\n\n<p>This can either wrap a raw command callback or another callable command instance\n(e.g. <code>SlashCommand</code>, <code>MessageCommand</code>, <code>MessageCommandGroup</code>) and will manage\nloading the other command into a component when using <code>tanjun.Component.load_from_scope</code>.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the command name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the command name has uppercase characters.</li>\n<li>If the description is over 100 characters long.</li>\n</ul></li>\n</ul>\n", "parameters": ["name", "description", "always_defer", "default_permission", "default_to_ephemeral", "is_global", "sort_options"], "funcdef": "def"}, "tanjun.slash_command_group": {"fullname": "tanjun.slash_command_group", "modulename": "tanjun", "qualname": "slash_command_group", "type": "function", "doc": "<p>Create a slash command group.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>Sub-commands can be added to the created slash command object through\nthe following decorator based approach:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">help_group</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">slash_command_group</span><span class=\"p\">(</span><span class=\"s2\">&quot;help&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;get help&quot;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@help_group</span><span class=\"o\">.</span><span class=\"n\">with_command</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">with_str_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;command_name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;command name&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Get help with a command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">help_command_command</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">,</span> <span class=\"n\">command_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n\n<span class=\"nd\">@help_group</span><span class=\"o\">.</span><span class=\"n\">with_command</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;me&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;help me&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">help_me_command</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n\n<span class=\"n\">component</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Component</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">add_slash_command</span><span class=\"p\">(</span><span class=\"n\">help_group</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>Unlike message command grups, slash command groups cannot\nbe callable functions themselves.</li>\n<li>Under the standard implementation, <code>is_global</code> is used to determine whether\nthe command should be bulk set by <code>tanjun.Client.set_global_commands</code>\nor when <code>set_global_commands</code> is True</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe name of the command group.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}$</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe description of the command group.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>default_permission</strong> (bool):\nWhether this command can be accessed without set permissions.</p>\n\n<p>Defaults to <code>True</code>, meaning that users can access the command by default.</p></li>\n<li><p><strong>default_to_ephemeral</strong> (typing.Optional[bool]):\nWhether this command's responses should default to ephemeral unless flags\nare set to override this.</p>\n\n<p>If this is left as <code>None</code> then the default set on the parent command(s),\ncomponent or client will be in effect.</p></li>\n<li><strong>is_global</strong> (bool):\nWhether this command is a global command. Defaults to <code>True</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>SlashCommandGroup</strong>: The command group.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the command name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the command name has uppercase characters.</li>\n<li>If the description is over 100 characters long.</li>\n</ul></li>\n</ul>\n", "parameters": ["name", "description", "default_permission", "default_to_ephemeral", "is_global"], "funcdef": "def"}, "tanjun.MessageCommand": {"fullname": "tanjun.MessageCommand", "modulename": "tanjun", "qualname": "MessageCommand", "type": "class", "doc": "<p>Standard implementation of a message command.</p>\n"}, "tanjun.MessageCommand.__init__": {"fullname": "tanjun.MessageCommand.__init__", "modulename": "tanjun", "qualname": "MessageCommand.__init__", "type": "function", "doc": "<p>Initialise a message command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (collections.abc.Callable[[tanjun.abc.MessageContext, ...], collections.abc.Awaitable[None]]):\nCallback to execute when the command is invoked.</p>\n\n<p>This should be an asynchronous callback which takes one positional\nargument of type <code>tanjun.abc.MessageContext</code>, returns <code>None</code> and may use\ndependency injection to access other services.</p></li>\n<li><strong>name</strong> (str):\nThe command name.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>*names</strong> (str):\nVariable positional arguments of other names for the command.</li>\n</ul>\n", "parameters": ["self", "callback", "name", "names", "_wrapped_command"], "funcdef": "def"}, "tanjun.MessageCommand.callback": {"fullname": "tanjun.MessageCommand.callback", "modulename": "tanjun", "qualname": "MessageCommand.callback", "type": "variable", "doc": "<p>Callback which is called during execution.</p>\n\n<p><em>Note:</em>\nFor command groups, this is called when none of the inner-commands\nmatches the message.</p>\n"}, "tanjun.MessageCommand.names": {"fullname": "tanjun.MessageCommand.names", "modulename": "tanjun", "qualname": "MessageCommand.names", "type": "variable", "doc": "<p>Collection of this command's names.</p>\n"}, "tanjun.MessageCommand.needs_injector": {"fullname": "tanjun.MessageCommand.needs_injector", "modulename": "tanjun", "qualname": "MessageCommand.needs_injector", "type": "variable", "doc": "<p></p>\n"}, "tanjun.MessageCommand.parent": {"fullname": "tanjun.MessageCommand.parent", "modulename": "tanjun", "qualname": "MessageCommand.parent", "type": "variable", "doc": "<p>Parent group of this command if applicable.</p>\n"}, "tanjun.MessageCommand.parser": {"fullname": "tanjun.MessageCommand.parser", "modulename": "tanjun", "qualname": "MessageCommand.parser", "type": "variable", "doc": "<p></p>\n"}, "tanjun.MessageCommand.bind_client": {"fullname": "tanjun.MessageCommand.bind_client", "modulename": "tanjun", "qualname": "MessageCommand.bind_client", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.MessageCommand.bind_component": {"fullname": "tanjun.MessageCommand.bind_component", "modulename": "tanjun", "qualname": "MessageCommand.bind_component", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.MessageCommand.copy": {"fullname": "tanjun.MessageCommand.copy", "modulename": "tanjun", "qualname": "MessageCommand.copy", "type": "function", "doc": "<p>Create a copy of this command.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>parent</strong> (typing.Optional[MessageCommandGroup[tping.Any]]):\nThe parent of the copy.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The copy.</li>\n</ul>\n", "parameters": ["self", "parent", "_new"], "funcdef": "def"}, "tanjun.MessageCommand.set_parent": {"fullname": "tanjun.MessageCommand.set_parent", "modulename": "tanjun", "qualname": "MessageCommand.set_parent", "type": "function", "doc": "<p>Set the parent of this command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>parent</strong> (typing.Optional[MessageCommandGroup[typing.Any]]):\nThe parent of this command.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "parent"], "funcdef": "def"}, "tanjun.MessageCommand.set_parser": {"fullname": "tanjun.MessageCommand.set_parser", "modulename": "tanjun", "qualname": "MessageCommand.set_parser", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "parser"], "funcdef": "def"}, "tanjun.MessageCommand.check_context": {"fullname": "tanjun.MessageCommand.check_context", "modulename": "tanjun", "qualname": "MessageCommand.check_context", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx"], "funcdef": "async def"}, "tanjun.MessageCommand.execute": {"fullname": "tanjun.MessageCommand.execute", "modulename": "tanjun", "qualname": "MessageCommand.execute", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "hooks"], "funcdef": "async def"}, "tanjun.MessageCommand.load_into_component": {"fullname": "tanjun.MessageCommand.load_into_component", "modulename": "tanjun", "qualname": "MessageCommand.load_into_component", "type": "function", "doc": "<p>Load the object into the component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>component</strong> (tanjun.abc.Component):\nThe component this object should be loaded into.</li>\n</ul>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.MessageCommandGroup": {"fullname": "tanjun.MessageCommandGroup", "modulename": "tanjun", "qualname": "MessageCommandGroup", "type": "class", "doc": "<p>Standard implementation of a message command group.</p>\n"}, "tanjun.MessageCommandGroup.__init__": {"fullname": "tanjun.MessageCommandGroup.__init__", "modulename": "tanjun", "qualname": "MessageCommandGroup.__init__", "type": "function", "doc": "<p>Initialise a message command group.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe command name.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>*names</strong> (str):\nVariable positional arguments of other names for the command.</li>\n<li><p><strong>strict</strong> (bool):\nWhether this command group should only allow commands without spaces in their names.</p>\n\n<p>This allows for a more optimised command search pattern to be used and\nenforces that command names are unique to a single command within the group.</p></li>\n</ul>\n", "parameters": ["self", "callback", "name", "names", "strict", "_wrapped_command"], "funcdef": "def"}, "tanjun.MessageCommandGroup.commands": {"fullname": "tanjun.MessageCommandGroup.commands", "modulename": "tanjun", "qualname": "MessageCommandGroup.commands", "type": "variable", "doc": "<p>Collection of the commands in this group.</p>\n\n<p><em>Note:</em>\nThis may include command groups.</p>\n"}, "tanjun.MessageCommandGroup.is_strict": {"fullname": "tanjun.MessageCommandGroup.is_strict", "modulename": "tanjun", "qualname": "MessageCommandGroup.is_strict", "type": "variable", "doc": "<p></p>\n"}, "tanjun.MessageCommandGroup.copy": {"fullname": "tanjun.MessageCommandGroup.copy", "modulename": "tanjun", "qualname": "MessageCommandGroup.copy", "type": "function", "doc": "<p>Create a copy of this command.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>parent</strong> (typing.Optional[MessageCommandGroup[tping.Any]]):\nThe parent of the copy.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The copy.</li>\n</ul>\n", "parameters": ["self", "parent", "_new"], "funcdef": "def"}, "tanjun.MessageCommandGroup.add_command": {"fullname": "tanjun.MessageCommandGroup.add_command", "modulename": "tanjun", "qualname": "MessageCommandGroup.add_command", "type": "function", "doc": "<p>Add a command to this group.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (MessageCommand):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The group instance to enable chained calls.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If one of the command's names is already registered in a strict\ncommand group.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.MessageCommandGroup.remove_command": {"fullname": "tanjun.MessageCommandGroup.remove_command", "modulename": "tanjun", "qualname": "MessageCommandGroup.remove_command", "type": "function", "doc": "<p>Remove a command from this group.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (MessageCommand):\nThe command to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the provided command isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The group instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.MessageCommandGroup.with_command": {"fullname": "tanjun.MessageCommandGroup.with_command", "modulename": "tanjun", "qualname": "MessageCommandGroup.with_command", "type": "function", "doc": "<p>Add a command to this group through a decorator call.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (MessageCommand):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>MessageCommand</strong>: The added command.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.MessageCommandGroup.bind_client": {"fullname": "tanjun.MessageCommandGroup.bind_client", "modulename": "tanjun", "qualname": "MessageCommandGroup.bind_client", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.MessageCommandGroup.bind_component": {"fullname": "tanjun.MessageCommandGroup.bind_component", "modulename": "tanjun", "qualname": "MessageCommandGroup.bind_component", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.MessageCommandGroup.find_command": {"fullname": "tanjun.MessageCommandGroup.find_command", "modulename": "tanjun", "qualname": "MessageCommandGroup.find_command", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "content"], "funcdef": "def"}, "tanjun.MessageCommandGroup.execute": {"fullname": "tanjun.MessageCommandGroup.execute", "modulename": "tanjun", "qualname": "MessageCommandGroup.execute", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "hooks"], "funcdef": "async def"}, "tanjun.SlashCommand": {"fullname": "tanjun.SlashCommand", "modulename": "tanjun", "qualname": "SlashCommand", "type": "class", "doc": "<p>Standard implementation of a slash command.</p>\n"}, "tanjun.SlashCommand.__init__": {"fullname": "tanjun.SlashCommand.__init__", "modulename": "tanjun", "qualname": "SlashCommand.__init__", "type": "function", "doc": "<p>Initialise a slash command.</p>\n\n<p><em>Note:</em>\nUnder the standard implementation, <code>is_global</code> is used to determine whether\nthe command should be bulk set by <code>tanjun.Client.set_global_commands</code>\nor when <code>set_global_commands</code> is True</p>\n\n<p><em>Warning:</em>\n<code>default_permission</code> and <code>is_global</code> are ignored for commands within\nslash command groups.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (collections.abc.Callable[[tanjun.abc.SlashContext, ...], collections.abc.Awaitable[None]]):\nCallback to execute when the command is invoked.</p>\n\n<p>This should be an asynchronous callback which takes one positional\nargument of type <code>tanjun.abc.SlashContext</code>, returns <code>None</code> and may use\ndependency injection to access other services.</p></li>\n<li><p><strong>name</strong> (str):\nThe command's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe command's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>always_defer</strong> (bool):\nWhether the contexts this command is executed with should always be deferred\nbefore being passed to the command's callback.</p>\n\n<p>Defaults to <code>False</code>.</p>\n\n<p><em>Note:</em>\nThe ephemeral state of the first response is decided by whether the\ndeferral is ephemeral.</p></li>\n<li><p><strong>default_permission</strong> (bool):\nWhether this command can be accessed without set permissions.</p>\n\n<p>Defaults to <code>True</code>, meaning that users can access the command by default.</p></li>\n<li><p><strong>default_to_ephemeral</strong> (typing.Optional[bool]):\nWhether this command's responses should default to ephemeral unless flags\nare set to override this.</p>\n\n<p>If this is left as <code>None</code> then the default set on the parent command(s),\ncomponent or client will be in effect.</p></li>\n<li><strong>is_global</strong> (bool):\nWhether this command is a global command. Defaults to <code>True</code>.</li>\n<li><p><strong>sort_options</strong> (bool):\nWhether this command should sort its set options based on whether\nthey're required.</p>\n\n<p>If this is <code>True</code> then the options are re-sorted to meet the requirement\nfrom Discord that required command options be listed before optional\nones.</p></li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the command name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the command name has uppercase characters.</li>\n<li>If the description is over 100 characters long.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "callback", "name", "description", "always_defer", "default_permission", "default_to_ephemeral", "is_global", "sort_options", "_wrapped_command"], "funcdef": "def"}, "tanjun.SlashCommand.callback": {"fullname": "tanjun.SlashCommand.callback", "modulename": "tanjun", "qualname": "SlashCommand.callback", "type": "variable", "doc": "<p>Callback which is called during execution.</p>\n"}, "tanjun.SlashCommand.needs_injector": {"fullname": "tanjun.SlashCommand.needs_injector", "modulename": "tanjun", "qualname": "SlashCommand.needs_injector", "type": "variable", "doc": "<p></p>\n"}, "tanjun.SlashCommand.bind_client": {"fullname": "tanjun.SlashCommand.bind_client", "modulename": "tanjun", "qualname": "SlashCommand.bind_client", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.SlashCommand.build": {"fullname": "tanjun.SlashCommand.build", "modulename": "tanjun", "qualname": "SlashCommand.build", "type": "function", "doc": "<p>Get a builder object for this command.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.api.CommandBuilder</strong>: A builder object for this command. Use to declare this command on\nglobally or for a specific guild.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.SlashCommand.load_into_component": {"fullname": "tanjun.SlashCommand.load_into_component", "modulename": "tanjun", "qualname": "SlashCommand.load_into_component", "type": "function", "doc": "<p>Load the object into the component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>component</strong> (tanjun.abc.Component):\nThe component this object should be loaded into.</li>\n</ul>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.SlashCommand.add_str_option": {"fullname": "tanjun.SlashCommand.add_str_option", "modulename": "tanjun", "qualname": "SlashCommand.add_str_option", "type": "function", "doc": "<p>Add a string option to the slash command.</p>\n\n<p><em>Note:</em>\nAs a shorthand, <code>choices</code> also supports passing a list of strings\nrather than a dict of names to values (each string will used as\nboth the choice's name and value with the names being capitalised).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe option's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe option's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>choices</strong> (typing.Union[collections.abc.Mapping[str, str], collections.abc.Sequence[str], None]):\nThe option's choices.</p>\n\n<p>This either a mapping of [option_name, option_value] where both option_name\nand option_value should be strings of up to 100 characters or a sequence\nof strings where the string will be used for both the choice's name and\nvalue.</p></li>\n<li><p><strong>converters</strong> (typing.Union[collections.abc.Sequence[ConverterSig], ConverterSig]):\nThe option's converters.</p>\n\n<p>This may be either one or multiple <code>ConverterSig</code> callbacks used to\nconvert the option's value to the final form.\nIf no converters are provided then the raw value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>default</strong> (typing.Any):\nThe option's default value.\nIf this is left as undefined then this option will be required.</li>\n<li><p><strong>pass_as_kwarg</strong> (bool):\nWhether or not to pass this option as a keyword argument to the\ncommand callback.</p>\n\n<p>Defaults to <code>True</code>. If <code>False</code> is passed here then <code>default</code> will\nonly decide whether the option is required without the actual value\nbeing used and the <code>coverters</code> field will be ignored.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command object for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the option name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the option name has uppercase characters.</li>\n<li>If the option description is over 100 characters in length.</li>\n<li>If the option has more than 25 choices.</li>\n<li>If the command already has 25 options.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "name", "description", "choices", "converters", "default", "pass_as_kwarg", "_stack_level"], "funcdef": "def"}, "tanjun.SlashCommand.add_int_option": {"fullname": "tanjun.SlashCommand.add_int_option", "modulename": "tanjun", "qualname": "SlashCommand.add_int_option", "type": "function", "doc": "<p>Add an integer option to the slash command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe option's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe option's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>choices</strong> (typing.Optional[collections.abc.Mapping[str, int]]):\nThe option's choices.</p>\n\n<p>This is a mapping of [option_name, option_value] where option_name\nshould be a string of up to 100 characters and option_value should\nbe an integer.</p></li>\n<li><p><strong>converters</strong> (typing.Union[collections.abc.Sequence[ConverterSig], ConverterSig, None]):\nThe option's converters.</p>\n\n<p>This may be either one or multiple <code>ConverterSig</code> callbacks used to\nconvert the option's value to the final form.\nIf no converters are provided then the raw value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>default</strong> (typing.Any):\nThe option's default value.\nIf this is left as undefined then this option will be required.</li>\n<li><p><strong>min_value</strong> (typing.Optional[int]):\nThe option's (inclusive) minimum value.</p>\n\n<p>Defaults to no minimum value.</p></li>\n<li><p><strong>max_value</strong> (typing.Optional[int]):\nThe option's (inclusive) maximum value.</p>\n\n<p>Defaults to no minimum value.</p></li>\n<li><p><strong>pass_as_kwarg</strong> (bool):\nWhether or not to pass this option as a keyword argument to the\ncommand callback.</p>\n\n<p>Defaults to <code>True</code>. If <code>False</code> is passed here then <code>default</code> will\nonly decide whether the option is required without the actual value\nbeing used and the <code>coverters</code> field will be ignored.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command object for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the option name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the option name has uppercase characters.</li>\n<li>If the option description is over 100 characters in length.</li>\n<li>If the option has more than 25 choices.</li>\n<li>If the command already has 25 options.</li>\n<li>If <code>min_value</code> is greater than <code>max_value</code>.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "name", "description", "choices", "converters", "default", "min_value", "max_value", "pass_as_kwarg", "_stack_level"], "funcdef": "def"}, "tanjun.SlashCommand.add_float_option": {"fullname": "tanjun.SlashCommand.add_float_option", "modulename": "tanjun", "qualname": "SlashCommand.add_float_option", "type": "function", "doc": "<p>Add a float option to a slash command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe option's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe option's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>always_float</strong> (bool):\nIf this is set to <code>True</code> then the value will always be converted to a\nfloat (this will happen before it's passed to converters).</p>\n\n<p>This masks behaviour from Discord where we will either be provided a <code>float</code>\nor <code>int</code> dependent on what the user provided and defaults to <code>True</code>.</p></li>\n<li><p><strong>choices</strong> (typing.Optional[collections.abc.Mapping[str, float]]):\nThe option's choices.</p>\n\n<p>This is a mapping of [option_name, option_value] where option_name\nshould be a string of up to 100 characters and option_value should\nbe a float.</p></li>\n<li><p><strong>converters</strong> (typing.Union[collections.abc.Sequence[ConverterSig], ConverterSig, None]):\nThe option's converters.</p>\n\n<p>This may be either one or multiple <code>ConverterSig</code> callbacks used to\nconvert the option's value to the final form.\nIf no converters are provided then the raw value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>default</strong> (typing.Any):\nThe option's default value.\nIf this is left as undefined then this option will be required.</li>\n<li><p><strong>min_value</strong> (typing.Optional[float]):\nThe option's (inclusive) minimum value.</p>\n\n<p>Defaults to no minimum value.</p></li>\n<li><p><strong>max_value</strong> (typing.Optional[float]):\nThe option's (inclusive) maximum value.</p>\n\n<p>Defaults to no minimum value.</p></li>\n<li><p><strong>pass_as_kwarg</strong> (bool):\nWhether or not to pass this option as a keyword argument to the\ncommand callback.</p>\n\n<p>Defaults to <code>True</code>. If <code>False</code> is passed here then <code>default</code> will\nonly decide whether the option is required without the actual value\nbeing used and the fields <code>coverters</code>, and <code>always_float</code> will be\nignored.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command object for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the option name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the option name has uppercase characters.</li>\n<li>If the option description is over 100 characters in length.</li>\n<li>If the option has more than 25 choices.</li>\n<li>If the command already has 25 options.</li>\n<li>If <code>min_value</code> is greater than <code>max_value</code>.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "name", "description", "always_float", "choices", "converters", "default", "min_value", "max_value", "pass_as_kwarg", "_stack_level"], "funcdef": "def"}, "tanjun.SlashCommand.add_bool_option": {"fullname": "tanjun.SlashCommand.add_bool_option", "modulename": "tanjun", "qualname": "SlashCommand.add_bool_option", "type": "function", "doc": "<p>Add a boolean option to a slash command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe option's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe option's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>default</strong> (typing.Any):\nThe option's default value.\nIf this is left as undefined then this option will be required.</li>\n<li><p><strong>pass_as_kwarg</strong> (bool):\nWhether or not to pass this option as a keyword argument to the\ncommand callback.</p>\n\n<p>Defaults to <code>True</code>. If <code>False</code> is passed here then <code>default</code> will\nonly decide whether the option is required without the actual value\nbeing used.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command object for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the option name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the option name has uppercase characters.</li>\n<li>If the option description is over 100 characters in length.</li>\n<li>If the command already has 25 options.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "name", "description", "default", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.SlashCommand.add_user_option": {"fullname": "tanjun.SlashCommand.add_user_option", "modulename": "tanjun", "qualname": "SlashCommand.add_user_option", "type": "function", "doc": "<p>Add a user option to a slash command.</p>\n\n<p><em>Note:</em>\nThis may result in <code>hikari.InteractionMember</code> or\n<code>hikari.users.User</code> if the user isn't in the current guild or if this\ncommand was executed in a DM channel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe option's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe option's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>default</strong> (typing.Any):\nThe option's default value.\nIf this is left as undefined then this option will be required.</li>\n<li><p><strong>pass_as_kwarg</strong> (bool):\nWhether or not to pass this option as a keyword argument to the\ncommand callback.</p>\n\n<p>Defaults to <code>True</code>. If <code>False</code> is passed here then <code>default</code> will\nonly decide whether the option is required without the actual value\nbeing used.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command object for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the option name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the option name has uppercase characters.</li>\n<li>If the option description is over 100 characters in length.</li>\n<li>If the option has more than 25 choices.</li>\n<li>If the command already has 25 options.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "name", "description", "default", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.SlashCommand.add_member_option": {"fullname": "tanjun.SlashCommand.add_member_option", "modulename": "tanjun", "qualname": "SlashCommand.add_member_option", "type": "function", "doc": "<p>Add a member option to a slash command.</p>\n\n<p><em>Note:</em>\nThis will always result in <code>hikari.InteractionMember</code>.</p>\n\n<p><em>Warning:</em>\nUnlike the other options, this is an artificial option which adds\na restraint to the USER option type and therefore cannot have\n<code>pass_as_kwarg</code> set to <code>False</code> as this artificial constaint isn't\npresent when its not being passed as a keyword argument.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe option's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe option's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>default</strong> (typing.Any):\nThe option's default value.\nIf this is left as undefined then this option will be required.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command object for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the option name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the option name has uppercase characters.</li>\n<li>If the option description is over 100 characters in length.</li>\n<li>If the command already has 25 options.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "name", "description", "default"], "funcdef": "def"}, "tanjun.SlashCommand.add_channel_option": {"fullname": "tanjun.SlashCommand.add_channel_option", "modulename": "tanjun", "qualname": "SlashCommand.add_channel_option", "type": "function", "doc": "<p>Add a channel option to a slash command.</p>\n\n<p><em>Note:</em>\nThis will always result in <code>hikari.InteractionChannel</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe option's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe option's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"parameters-2\">Parameters</h6>\n\n<ul>\n<li><strong>default</strong> (typing.Any):\nThe option's default value.\nIf this is left as undefined then this option will be required.</li>\n<li><p><strong>types</strong> (typing.Optional[collections.abc.Collection[type[hikari.PartialChannel]]]):\nA collection of the channel classes this option should accept.</p>\n\n<p>If left as <code>None</code> or empty then the option will allow all channel types.</p></li>\n<li><p><strong>pass_as_kwarg</strong> (bool):\nWhether or not to pass this option as a keyword argument to the\ncommand callback.</p>\n\n<p>Defaults to <code>True</code>. If <code>False</code> is passed here then <code>default</code> will\nonly decide whether the option is required without the actual value\nbeing used.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command object for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the option name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the option name has uppercase characters.</li>\n<li>If the option description is over 100 characters in length.</li>\n<li>If the command already has 25 options.</li>\n<li>If an invalid type is passed in <code>types</code>.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "name", "description", "default", "types", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.SlashCommand.add_role_option": {"fullname": "tanjun.SlashCommand.add_role_option", "modulename": "tanjun", "qualname": "SlashCommand.add_role_option", "type": "function", "doc": "<p>Add a role option to a slash command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe option's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe option's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>default</strong> (typing.Any):\nThe option's default value.\nIf this is left as undefined then this option will be required.</li>\n<li><p><strong>pass_as_kwarg</strong> (bool):\nWhether or not to pass this option as a keyword argument to the\ncommand callback.</p>\n\n<p>Defaults to <code>True</code>. If <code>False</code> is passed here then <code>default</code> will\nonly decide whether the option is required without the actual value\nbeing used.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command object for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the option name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the option name has uppercase characters.</li>\n<li>If the option description is over 100 characters in length.</li>\n<li>If the command already has 25 options.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "name", "description", "default", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.SlashCommand.add_mentionable_option": {"fullname": "tanjun.SlashCommand.add_mentionable_option", "modulename": "tanjun", "qualname": "SlashCommand.add_mentionable_option", "type": "function", "doc": "<p>Add a mentionable option to a slash command.</p>\n\n<p><em>Note:</em>\nThis may target roles, guild members or users and results in\n<code>Union[hikari.User, hikari.InteractionMember, hikari.Role]</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe option's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe option's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>default</strong> (typing.Any):\nThe option's default value.\nIf this is left as undefined then this option will be required.</li>\n<li><p><strong>pass_as_kwarg</strong> (bool):\nWhether or not to pass this option as a keyword argument to the\ncommand callback.</p>\n\n<p>Defaults to <code>True</code>. If <code>False</code> is passed here then <code>default</code> will\nonly decide whether the option is required without the actual value\nbeing used.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command object for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the option name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the option name has uppercase characters.</li>\n<li>If the option description is over 100 characters in length.</li>\n<li>If the command already has 25 options.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "name", "description", "default", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.SlashCommand.execute": {"fullname": "tanjun.SlashCommand.execute", "modulename": "tanjun", "qualname": "SlashCommand.execute", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "option", "hooks"], "funcdef": "async def"}, "tanjun.SlashCommand.copy": {"fullname": "tanjun.SlashCommand.copy", "modulename": "tanjun", "qualname": "SlashCommand.copy", "type": "function", "doc": "<p>Create a copy of this command.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: A copy of this command.</li>\n</ul>\n", "parameters": ["self", "_new", "parent"], "funcdef": "def"}, "tanjun.SlashCommandGroup": {"fullname": "tanjun.SlashCommandGroup", "modulename": "tanjun", "qualname": "SlashCommandGroup", "type": "class", "doc": "<p>Standard implementation of a slash command group.</p>\n\n<p><em>Note:</em>\nUnlike message command grups, slash command groups cannot\nbe callable functions themselves.</p>\n"}, "tanjun.SlashCommandGroup.__init__": {"fullname": "tanjun.SlashCommandGroup.__init__", "modulename": "tanjun", "qualname": "SlashCommandGroup.__init__", "type": "function", "doc": "<p>Initialise a slash command group.</p>\n\n<p><em>Note:</em>\nUnder the standard implementation, <code>is_global</code> is used to determine\nwhether the command should be bulk set by <code>tanjun.Client.set_global_commands</code>\nor when <code>set_global_commands</code> is True</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe name of the command group.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}$</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe description of the command group.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>default_permission</strong> (bool):\nWhether this command can be accessed without set permissions.</p>\n\n<p>Defaults to <code>True</code>, meaning that users can access the command by default.</p></li>\n<li><p><strong>default_to_ephemeral</strong> (typing.Optional[bool]):\nWhether this command's responses should default to ephemeral unless flags\nare set to override this.</p>\n\n<p>If this is left as <code>None</code> then the default set on the parent command(s),\ncomponent or client will be in effect.</p></li>\n<li><strong>is_global</strong> (bool):\nWhether this command is a global command. Defaults to <code>True</code>.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the command name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the command name has uppercase characters.</li>\n<li>If the description is over 100 characters long.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "name", "description", "default_to_ephemeral", "default_permission", "is_global"], "funcdef": "def"}, "tanjun.SlashCommandGroup.commands": {"fullname": "tanjun.SlashCommandGroup.commands", "modulename": "tanjun", "qualname": "SlashCommandGroup.commands", "type": "variable", "doc": "<p>Collection of the commands in this group.</p>\n"}, "tanjun.SlashCommandGroup.build": {"fullname": "tanjun.SlashCommandGroup.build", "modulename": "tanjun", "qualname": "SlashCommandGroup.build", "type": "function", "doc": "<p>Get a builder object for this command.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.api.CommandBuilder</strong>: A builder object for this command. Use to declare this command on\nglobally or for a specific guild.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.SlashCommandGroup.copy": {"fullname": "tanjun.SlashCommandGroup.copy", "modulename": "tanjun", "qualname": "SlashCommandGroup.copy", "type": "function", "doc": "<p>Create a copy of this command.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: A copy of this command.</li>\n</ul>\n", "parameters": ["self", "_new", "parent"], "funcdef": "def"}, "tanjun.SlashCommandGroup.add_command": {"fullname": "tanjun.SlashCommandGroup.add_command", "modulename": "tanjun", "qualname": "SlashCommandGroup.add_command", "type": "function", "doc": "<p>Add a slash command to this group.</p>\n\n<p><em>Warning:</em>\nCommand groups are only supported within top-level groups.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (tanjun.abc.BaseSlashCommand):\nCommand to add to this group.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: Object of this group to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.SlashCommandGroup.remove_command": {"fullname": "tanjun.SlashCommandGroup.remove_command", "modulename": "tanjun", "qualname": "SlashCommandGroup.remove_command", "type": "function", "doc": "<p>Remove a command from this group.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (tanjun.abc.BaseSlashCommand):\nCommand to remove from this group.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: Object of this group to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.SlashCommandGroup.with_command": {"fullname": "tanjun.SlashCommandGroup.with_command", "modulename": "tanjun", "qualname": "SlashCommandGroup.with_command", "type": "function", "doc": "<p>Add a slash command to this group through a decorator call.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (tanjun.abc.BaseSlashCommand):\nCommand to add to this group.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tanjun.abc.BaseSlashCommand</strong>: Command which was added to this group.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.SlashCommandGroup.execute": {"fullname": "tanjun.SlashCommandGroup.execute", "modulename": "tanjun", "qualname": "SlashCommandGroup.execute", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "option", "hooks"], "funcdef": "async def"}, "tanjun.with_str_slash_option": {"fullname": "tanjun.with_str_slash_option", "modulename": "tanjun", "qualname": "with_str_slash_option", "type": "function", "doc": "<p>Add a string option to a slash command.</p>\n\n<p>For more information on this function's parameters see <code>SlashCommand.add_str_option</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@with_str_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A name.&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_SlashCommandT], _SlashCommandT]</strong>: Decorator callback which adds the option to the command.</li>\n</ul>\n", "parameters": ["name", "description", "choices", "converters", "default", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.with_int_slash_option": {"fullname": "tanjun.with_int_slash_option", "modulename": "tanjun", "qualname": "with_int_slash_option", "type": "function", "doc": "<p>Add an integer option to a slash command.</p>\n\n<p>For information on this function's parameters see <code>SlashCommand.add_int_option</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@with_int_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;int_value&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Int value.&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">,</span> <span class=\"n\">int_value</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_SlashCommandT], _SlashCommandT]</strong>: Decorator callback which adds the option to the command.</li>\n</ul>\n", "parameters": ["name", "description", "choices", "converters", "default", "min_value", "max_value", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.with_float_slash_option": {"fullname": "tanjun.with_float_slash_option", "modulename": "tanjun", "qualname": "with_float_slash_option", "type": "function", "doc": "<p>Add a float option to a slash command.</p>\n\n<p>For information on this function's parameters see <code>SlashCommand.add_float_option</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@with_float_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;float_value&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Float value.&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">,</span> <span class=\"n\">float_value</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_SlashCommandT], _SlashCommandT]</strong>: Decorator callback which adds the option to the command.</li>\n</ul>\n", "parameters": ["name", "description", "always_float", "choices", "converters", "default", "min_value", "max_value", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.with_bool_slash_option": {"fullname": "tanjun.with_bool_slash_option", "modulename": "tanjun", "qualname": "with_bool_slash_option", "type": "function", "doc": "<p>Add a boolean option to a slash command.</p>\n\n<p>For information on this function's parameters see <code>SlashContext.add_bool_option</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@with_bool_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;flag&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Whether this flag should be enabled.&quot;</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"nd\">@as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">,</span> <span class=\"n\">flag</span><span class=\"p\">:</span> <span class=\"nb\">bool</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_SlashCommandT], _SlashCommandT]</strong>: Decorator callback which adds the option to the command.</li>\n</ul>\n", "parameters": ["name", "description", "default", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.with_role_slash_option": {"fullname": "tanjun.with_role_slash_option", "modulename": "tanjun", "qualname": "with_role_slash_option", "type": "function", "doc": "<p>Add a role option to a slash command.</p>\n\n<p>For information on this function's parameters see <code>SlashCommand.add_role_option</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@with_role_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;role&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Role to target.&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">,</span> <span class=\"n\">role</span><span class=\"p\">:</span> <span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">Role</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_SlashCommandT], _SlashCommandT]</strong>: Decorator callback which adds the option to the command.</li>\n</ul>\n", "parameters": ["name", "description", "default", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.with_user_slash_option": {"fullname": "tanjun.with_user_slash_option", "modulename": "tanjun", "qualname": "with_user_slash_option", "type": "function", "doc": "<p>Add a user option to a slash command.</p>\n\n<p>For information on this function's parameters see <code>SlashContext.add_user_option</code>.</p>\n\n<p><em>Note:</em>\nThis may result in <code>hikari.InteractionMember</code> or\n<code>hikari.users.User</code> if the user isn't in the current guild or if this\ncommand was executed in a DM channel.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@with_user_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;user&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;user to target.&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">InteractionMember</span><span class=\"p\">,</span> <span class=\"n\">User</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_SlashCommandT], _SlashCommandT]</strong>: Decorator callback which adds the option to the command.</li>\n</ul>\n", "parameters": ["name", "description", "default", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.with_member_slash_option": {"fullname": "tanjun.with_member_slash_option", "modulename": "tanjun", "qualname": "with_member_slash_option", "type": "function", "doc": "<p>Add a member option to a slash command.</p>\n\n<p>For information on this function's arguments see <code>SlashCommand.add_member_option</code>.</p>\n\n<p><em>Note:</em>\nThis will always result in <code>hikari.InteractionMember</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@with_member_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;member&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;member to target.&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">,</span> <span class=\"n\">member</span><span class=\"p\">:</span> <span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">InteractionMember</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_SlashCommandT], _SlashCommandT]</strong>: Decorator callback which adds the option to the command.</li>\n</ul>\n", "parameters": ["name", "description", "default"], "funcdef": "def"}, "tanjun.with_channel_slash_option": {"fullname": "tanjun.with_channel_slash_option", "modulename": "tanjun", "qualname": "with_channel_slash_option", "type": "function", "doc": "<p>Add a channel option to a slash command.</p>\n\n<p>For information on this function's parameters see <code>SlashCommand.add_channel_option</code>.</p>\n\n<p><em>Note:</em>\nThis will always result in <code>hikari..InteractionChannel</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@with_channel_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;channel&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;channel to target.&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">,</span> <span class=\"n\">channel</span><span class=\"p\">:</span> <span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">InteractionChannel</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_SlashCommandT], _SlashCommandT]</strong>: Decorator callback which adds the option to the command.</li>\n</ul>\n", "parameters": ["name", "description", "types", "default", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.with_mentionable_slash_option": {"fullname": "tanjun.with_mentionable_slash_option", "modulename": "tanjun", "qualname": "with_mentionable_slash_option", "type": "function", "doc": "<p>Add a mentionable option to a slash command.</p>\n\n<p>For information on this function's arguments see <code>SlashCommand.add_mentionable_option</code>.</p>\n\n<p><em>Note:</em>\nThis may target roles, guild members or users and results in\n<code>Union[hikari.User, hikari.InteractionMember, hikari.Role]</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@with_mentionable_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;mentionable&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Mentionable entity to target.&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">,</span> <span class=\"n\">mentionable</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Role</span><span class=\"p\">,</span> <span class=\"n\">InteractionMember</span><span class=\"p\">,</span> <span class=\"n\">User</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_SlashCommandT], _SlashCommandT]</strong>: Decorator callback which adds the option to the command.</li>\n</ul>\n", "parameters": ["name", "description", "default", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.Component": {"fullname": "tanjun.Component", "modulename": "tanjun", "qualname": "Component", "type": "class", "doc": "<p>Standard implementation of <code>tanjun.abc.Component</code>.</p>\n\n<p>This is a collcetion of commands (both message and slash), hooks and listener\ncallbacks which can be added to a generic client.</p>\n\n<p><em>Note:</em>\nThis implementation supports dependency injection for its checks,\ncommand callbacks and listeners when linked to a client which\nsupports dependency injection.</p>\n"}, "tanjun.Component.__init__": {"fullname": "tanjun.Component.__init__", "modulename": "tanjun", "qualname": "Component.__init__", "type": "function", "doc": "<p>Initialise a new component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>checks</strong> (typing.Optional[collections.abc.Iterable[abc.CheckSig]]):\nIterable of check callbacks to set for this component, if provided.</li>\n<li><strong>hooks</strong> (typing.Optional[tanjun.abc.AnyHooks]):\nThe hooks this component should add to the execution of all its\ncommands (message and slash).</li>\n<li><strong>slash_hooks</strong> (typing.Optional[tanjun.abc.SlashHooks]):\nThe slash hooks this component should add to the execution of its\nslash commands.</li>\n<li><strong>message_hooks</strong> (typing.Optional[tanjun.abc.MessageHooks]):\nThe message hooks this component should add to the execution of its\nmessage commands.</li>\n<li><p><strong>name</strong> (str):\nThe component's identifier.</p>\n\n<p>If not provided then this will be a random string.</p></li>\n<li><p><strong>strict</strong> (bool):\nWhether this component should use a stricter (more optimal) approach\nfor message command search.</p>\n\n<p>When this is <code>True</code>, message command names will not be allowed to contain\nspaces and will have to be unique to one command within the component.</p></li>\n</ul>\n", "parameters": ["self", "name", "strict"], "funcdef": "def"}, "tanjun.Component.checks": {"fullname": "tanjun.Component.checks", "modulename": "tanjun", "qualname": "Component.checks", "type": "variable", "doc": "<p>Collection of the checks being run against every command execution in this component.</p>\n"}, "tanjun.Component.client": {"fullname": "tanjun.Component.client", "modulename": "tanjun", "qualname": "Component.client", "type": "variable", "doc": "<p>Tanjun client this component is bound to.</p>\n"}, "tanjun.Component.defaults_to_ephemeral": {"fullname": "tanjun.Component.defaults_to_ephemeral", "modulename": "tanjun", "qualname": "Component.defaults_to_ephemeral", "type": "variable", "doc": "<p>Whether slash contexts executed in this component should default to ephemeral responses.</p>\n\n<p>This effects calls to <code>SlashContext.create_followup</code>,\n<code>SlashContext.create_initial_response</code>, <code>SlashContext.defer</code> and\n<code>SlashContext.respond</code> unless the <code>flags</code> field is provided for the\nmethods which support it.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>This may be overridden by <code>BaseSlashCommand.defaults_to_ephemeral</code>.</li>\n<li>This only effects slash command execution.</li>\n<li>If this is <code>None</code> then the default from the parent client is used.</li>\n</ul>\n"}, "tanjun.Component.hooks": {"fullname": "tanjun.Component.hooks", "modulename": "tanjun", "qualname": "Component.hooks", "type": "variable", "doc": "<p></p>\n"}, "tanjun.Component.loop": {"fullname": "tanjun.Component.loop", "modulename": "tanjun", "qualname": "Component.loop", "type": "variable", "doc": "<p>The asyncio loop this client is bound to if it has been opened.</p>\n"}, "tanjun.Component.name": {"fullname": "tanjun.Component.name", "modulename": "tanjun", "qualname": "Component.name", "type": "variable", "doc": "<p>Component's unique identifier.</p>\n\n<p><em>Note:</em>\nThis will be preserved between copies of a component.</p>\n"}, "tanjun.Component.schedules": {"fullname": "tanjun.Component.schedules", "modulename": "tanjun", "qualname": "Component.schedules", "type": "variable", "doc": "<p>Collection of the schedules registered to this component.</p>\n"}, "tanjun.Component.slash_commands": {"fullname": "tanjun.Component.slash_commands", "modulename": "tanjun", "qualname": "Component.slash_commands", "type": "variable", "doc": "<p>Collection of the slash commands in this component.</p>\n"}, "tanjun.Component.slash_hooks": {"fullname": "tanjun.Component.slash_hooks", "modulename": "tanjun", "qualname": "Component.slash_hooks", "type": "variable", "doc": "<p></p>\n"}, "tanjun.Component.message_commands": {"fullname": "tanjun.Component.message_commands", "modulename": "tanjun", "qualname": "Component.message_commands", "type": "variable", "doc": "<p>Collection of the message commands in this component.</p>\n"}, "tanjun.Component.message_hooks": {"fullname": "tanjun.Component.message_hooks", "modulename": "tanjun", "qualname": "Component.message_hooks", "type": "variable", "doc": "<p></p>\n"}, "tanjun.Component.needs_injector": {"fullname": "tanjun.Component.needs_injector", "modulename": "tanjun", "qualname": "Component.needs_injector", "type": "variable", "doc": "<p>Whether any of the checks in this component require dependency injection.</p>\n"}, "tanjun.Component.listeners": {"fullname": "tanjun.Component.listeners", "modulename": "tanjun", "qualname": "Component.listeners", "type": "variable", "doc": "<p>Mapping of event types to the listeners registered for them in this component.</p>\n"}, "tanjun.Component.metadata": {"fullname": "tanjun.Component.metadata", "modulename": "tanjun", "qualname": "Component.metadata", "type": "variable", "doc": "<p>Mutable mapping of the metadata set for this component.</p>\n\n<p><em>Note:</em>\nAny modifications made to this mutable mapping will be preserved by\nthe component.</p>\n"}, "tanjun.Component.copy": {"fullname": "tanjun.Component.copy", "modulename": "tanjun", "qualname": "Component.copy", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "_new"], "funcdef": "def"}, "tanjun.Component.load_from_scope": {"fullname": "tanjun.Component.load_from_scope", "modulename": "tanjun", "qualname": "Component.load_from_scope", "type": "function", "doc": "<p>Load entries such as top-level commands into the component from the calling scope.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>This will load schedules which support <code>AbstractComponentLoader</code>\n(e.g. <code>tanjun.schedules.IntervalSchedule</code>).</li>\n<li>This will ignore commands which are owned by command groups.</li>\n<li>This will detect entries from the calling scope which implement\n<code>AbstractComponentLoader</code> unless <code>scope</code> is passed but this isn't possible\nin a stack-less python implementation; in stack-less environments the\nscope will have to be explicitly passed as <code>scope</code>.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>include_globals</strong> (bool):\nWhether to include global variables (along with local) while\ndetecting from the calling scope.</p>\n\n<p>This defaults to <code>False</code>, cannot be <code>True</code> when <code>scope</code> is provided\nand will only ever be needed when the local scope is different\nfrom the global scope.</p></li>\n<li><p><strong>scope</strong> (typing.Optional[collections.Mapping[str, typing.Any]]):\nThe scope to detect entries which implement <code>AbstractComponentLoader</code>\nfrom.</p>\n\n<p>This overrides the default usage of stackframe introspection.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The current component to allow for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If this is called in a python implementation which doesn't support\nstack frame inspection when <code>scope</code> is not provided.</li>\n<li><strong>ValueError</strong>: If <code>scope</code> is provided when <code>include_globals</code> is True.</li>\n</ul>\n", "parameters": ["self", "include_globals", "scope"], "funcdef": "def"}, "tanjun.Component.set_ephemeral_default": {"fullname": "tanjun.Component.set_ephemeral_default", "modulename": "tanjun", "qualname": "Component.set_ephemeral_default", "type": "function", "doc": "<p>Set whether slash contexts executed in this component should default to ephemeral responses.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>typing.Optional[bool]</strong>: Whether slash command contexts executed in this component should\nshould default to ephemeral.\nThis will be overridden by any response calls which specify flags.</li>\n</ul>\n\n<p>Setting this to <code>None</code> will let the default set on the parent\nclient propagate and decide the ephemeral default behaviour.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>SelfT</strong>: This component to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "state"], "funcdef": "def"}, "tanjun.Component.set_slash_hooks": {"fullname": "tanjun.Component.set_slash_hooks", "modulename": "tanjun", "qualname": "Component.set_slash_hooks", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "hooks_"], "funcdef": "def"}, "tanjun.Component.set_message_hooks": {"fullname": "tanjun.Component.set_message_hooks", "modulename": "tanjun", "qualname": "Component.set_message_hooks", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "hooks_"], "funcdef": "def"}, "tanjun.Component.set_hooks": {"fullname": "tanjun.Component.set_hooks", "modulename": "tanjun", "qualname": "Component.set_hooks", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "hooks"], "funcdef": "def"}, "tanjun.Component.add_check": {"fullname": "tanjun.Component.add_check", "modulename": "tanjun", "qualname": "Component.add_check", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "check"], "funcdef": "def"}, "tanjun.Component.remove_check": {"fullname": "tanjun.Component.remove_check", "modulename": "tanjun", "qualname": "Component.remove_check", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "check"], "funcdef": "def"}, "tanjun.Component.with_check": {"fullname": "tanjun.Component.with_check", "modulename": "tanjun", "qualname": "Component.with_check", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "check"], "funcdef": "def"}, "tanjun.Component.add_client_callback": {"fullname": "tanjun.Component.add_client_callback", "modulename": "tanjun", "qualname": "Component.add_client_callback", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "event_name", "callback"], "funcdef": "def"}, "tanjun.Component.get_client_callbacks": {"fullname": "tanjun.Component.get_client_callbacks", "modulename": "tanjun", "qualname": "Component.get_client_callbacks", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "event_name"], "funcdef": "def"}, "tanjun.Component.remove_client_callback": {"fullname": "tanjun.Component.remove_client_callback", "modulename": "tanjun", "qualname": "Component.remove_client_callback", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "event_name", "callback"], "funcdef": "def"}, "tanjun.Component.with_client_callback": {"fullname": "tanjun.Component.with_client_callback", "modulename": "tanjun", "qualname": "Component.with_client_callback", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "event_name"], "funcdef": "def"}, "tanjun.Component.add_command": {"fullname": "tanjun.Component.add_command", "modulename": "tanjun", "qualname": "Component.add_command", "type": "function", "doc": "<p>Add a command to this component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (tanjun.abc.ExecutableCommand[typing.Any]):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The current component to allow for chaining.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.Component.remove_command": {"fullname": "tanjun.Component.remove_command", "modulename": "tanjun", "qualname": "Component.remove_command", "type": "function", "doc": "<p>Remove a command from this component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (tanjun.abc.ExecutableCommand[typing.Any]):\nThe command to remove.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This component to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.Component.with_command": {"fullname": "tanjun.Component.with_command", "modulename": "tanjun", "qualname": "Component.with_command", "type": "function", "doc": "<p>Add a command to this component through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>This may be used inconjunction with <code>tanjun.as_slash_command</code>\nand <code>tanjun.as_message_command</code>.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@component</span><span class=\"o\">.</span><span class=\"n\">with_command</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">with_slash_str_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;option_name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;option description&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command_name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;command description&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">slash_command</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Hi </span><span class=\"si\">{</span><span class=\"n\">arg</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@component</span><span class=\"o\">.</span><span class=\"n\">with_command</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">with_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;argument_name&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_message_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command_name&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">message_command</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Hi </span><span class=\"si\">{</span><span class=\"n\">arg</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command CommandT</strong>: The command to add to this component.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>copy</strong> (bool):\nWhether to copy the command before adding it to this component.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CommandT</strong>: The added command.</li>\n</ul>\n", "parameters": ["self", "command", "copy"], "funcdef": "def"}, "tanjun.Component.add_slash_command": {"fullname": "tanjun.Component.add_slash_command", "modulename": "tanjun", "qualname": "Component.add_slash_command", "type": "function", "doc": "<p>Add a slash command to this component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (BaseSlashCommand):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.Component.remove_slash_command": {"fullname": "tanjun.Component.remove_slash_command", "modulename": "tanjun", "qualname": "Component.remove_slash_command", "type": "function", "doc": "<p>Remove a slash command from this component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (BaseSlashCommand):\nThe command to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the provided command isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.Component.with_slash_command": {"fullname": "tanjun.Component.with_slash_command", "modulename": "tanjun", "qualname": "Component.with_slash_command", "type": "function", "doc": "<p>Add a slash command to this component through a decorator call.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (BaseSlashCommandT):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>copy</strong> (bool):\nWhether to copy the command before adding it.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>BaseSlashCommandT</strong>: The added command.</li>\n</ul>\n", "parameters": ["self", "command", "copy"], "funcdef": "def"}, "tanjun.Component.add_message_command": {"fullname": "tanjun.Component.add_message_command", "modulename": "tanjun", "qualname": "Component.add_message_command", "type": "function", "doc": "<p>Add a message command to the component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (tanjun.abc.MessageCommand):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component to allow method chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If one of the command's name is already registered in a strict\ncomponent.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.Component.remove_message_command": {"fullname": "tanjun.Component.remove_message_command", "modulename": "tanjun", "qualname": "Component.remove_message_command", "type": "function", "doc": "<p>Remove a message command from this component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (MessageCommand[typing.Any]):\nThe command to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the provided command isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.Component.with_message_command": {"fullname": "tanjun.Component.with_message_command", "modulename": "tanjun", "qualname": "Component.with_message_command", "type": "function", "doc": "<p>Add a message command to this component through a decorator call.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (MessageCommandT):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>copy</strong> (bool):\nWhether to copy the command before adding it.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>MessageCommandT</strong>: The added command.</li>\n</ul>\n", "parameters": ["self", "command", "copy"], "funcdef": "def"}, "tanjun.Component.add_listener": {"fullname": "tanjun.Component.add_listener", "modulename": "tanjun", "qualname": "Component.add_listener", "type": "function", "doc": "<p>Add a listener to this component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event</strong> (type[hikari.Event]):\nThe event to listen for.</li>\n<li><strong>listener</strong> (ListenerCallbackSig):\nThe listener to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "event", "listener"], "funcdef": "def"}, "tanjun.Component.remove_listener": {"fullname": "tanjun.Component.remove_listener", "modulename": "tanjun", "qualname": "Component.remove_listener", "type": "function", "doc": "<p>Remove a listener from this component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event</strong> (type[hikari.Event]):\nThe event to listen for.</li>\n<li><strong>listener</strong> (ListenerCallbackSig):\nThe listener to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the listener is not registered for the provided event.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "event", "listener"], "funcdef": "def"}, "tanjun.Component.with_listener": {"fullname": "tanjun.Component.with_listener", "modulename": "tanjun", "qualname": "Component.with_listener", "type": "function", "doc": "<p>Add a listener to this component through a decorator call.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event_type</strong> (type[hikari.Event]):\nThe event to listen for.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[ListenerCallbackSigT], ListenerCallbackSigT]</strong>: Decorator callback which takes listener to add.</li>\n</ul>\n", "parameters": ["self", "event_type"], "funcdef": "def"}, "tanjun.Component.add_on_close": {"fullname": "tanjun.Component.add_on_close", "modulename": "tanjun", "qualname": "Component.add_on_close", "type": "function", "doc": "<p>Add a close callback to this component.</p>\n\n<p><em>Note:</em>\nUnlike the closing and closed client callbacks, this is only\ncalled for the current component's lifetime and is guaranteed to be\ncalled regardless of when the component was added to a client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (OnCallbackSig):\nThe close callback to add to this component.</p>\n\n<p>This should take no positional arguments, return <code>None</code> and may\ntake use injected dependencies.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component object to enable call chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.Component.with_on_close": {"fullname": "tanjun.Component.with_on_close", "modulename": "tanjun", "qualname": "Component.with_on_close", "type": "function", "doc": "<p>Add a close callback to this component through a decorator call.</p>\n\n<p><em>Note:</em>\nUnlike the closing and closed client callbacks, this is only\ncalled for the current component's lifetime and is guaranteed to be\ncalled regardless of when the component was added to a client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (OnCallbackSig):\nThe close callback to add to this component.</p>\n\n<p>This should take no positional arguments, return <code>None</code> and may\ntake use injected dependencies.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>OnCallbackSig</strong>: The added close callback.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.Component.add_on_open": {"fullname": "tanjun.Component.add_on_open", "modulename": "tanjun", "qualname": "Component.add_on_open", "type": "function", "doc": "<p>Add a open callback to this component.</p>\n\n<p><em>Note:</em>\nUnlike the starting and started client callbacks, this is only\ncalled for the current component's lifetime and is guaranteed to be\ncalled regardless of when the component was added to a client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (OnCallbackSig):\nThe open callback to add to this component.</p>\n\n<p>This should take no positional arguments, return <code>None</code> and may\ntake use injected dependencies.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component object to enable call chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.Component.with_on_open": {"fullname": "tanjun.Component.with_on_open", "modulename": "tanjun", "qualname": "Component.with_on_open", "type": "function", "doc": "<p>Add a open callback to this component through a decorator call.</p>\n\n<p><em>Note:</em>\nUnlike the starting and started client callbacks, this is only\ncalled for the current component's lifetime and is guaranteed to be\ncalled regardless of when the component was added to a client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (OnCallbackSig):\nThe open callback to add to this component.</p>\n\n<p>This should take no positional arguments, return <code>None</code> and may\ntake use injected dependencies.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>OnCallbackSig</strong>: The added open callback.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.Component.bind_client": {"fullname": "tanjun.Component.bind_client", "modulename": "tanjun", "qualname": "Component.bind_client", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.Component.unbind_client": {"fullname": "tanjun.Component.unbind_client", "modulename": "tanjun", "qualname": "Component.unbind_client", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.Component.check_message_name": {"fullname": "tanjun.Component.check_message_name", "modulename": "tanjun", "qualname": "Component.check_message_name", "type": "function", "doc": "<p>Check whether a name matches any of this component's registered message commands.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>This only checks for name matches against the top level command and\nwill not account for sub-commands.</li>\n<li>Dependent on implementation detail this may partial check name against\ncommand names using name.startswith(command_name), hence why it\nalso returns the name a command was matched by.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name to check for command matches.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[tuple[str, MessageCommand[typing.Any]]]</strong>: Iterator of tuples of command name matches to the relevant message\ncommand objects.</li>\n</ul>\n", "parameters": ["self", "content"], "funcdef": "def"}, "tanjun.Component.check_slash_name": {"fullname": "tanjun.Component.check_slash_name", "modulename": "tanjun", "qualname": "Component.check_slash_name", "type": "function", "doc": "<p>Check whether a name matches any of this component's registered slash commands.</p>\n\n<p><em>Note:</em>\nThis won't check for sub-commands and will expect <code>name</code> to simply be\nthe top level command name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name to check for command matches.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[BaseSlashCommand]</strong>: An iterator of the matching slash commands.</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.Component.execute_interaction": {"fullname": "tanjun.Component.execute_interaction", "modulename": "tanjun", "qualname": "Component.execute_interaction", "type": "function", "doc": "<p>Execute a slash context.</p>\n\n<p><em>Note:</em>\nUnlike <code>Component.execute_message</code>, this shouldn't be expected to\nraise <code>tanjun.errors.HaltExecution</code> nor <code>tanjun.errors.CommandError</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ctx</strong> (SlashContext):\nThe context to execute.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>hooks</strong> (typing.Optional[collections.abc.MutableSet[SlashHooks]] = None):\nSet of hooks to include in this command execution.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[collections.abc.Awaitable[None]]</strong>: Awaitable used to wait for the command execution to finish.</li>\n</ul>\n\n<p>This may be awaited or left to run as a background task.</p>\n\n<p>If this is <code>None</code> then the client should carry on its search for a\ncomponent with a matching command.</p>\n", "parameters": ["self", "ctx", "hooks"], "funcdef": "def"}, "tanjun.Component.execute_message": {"fullname": "tanjun.Component.execute_message", "modulename": "tanjun", "qualname": "Component.execute_message", "type": "function", "doc": "<p>Execute a message context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ctx</strong> (MessageContext):\nThe context to execute.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>hooks</strong> (typing.Optional[collections.abc.MutableSet[MessageHooks]] = None):\nSet of hooks to include in this command execution.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bool</strong>: Whether a message command was executed in this component with the\nprovided context.</li>\n</ul>\n\n<p>If <code>False</code> then the client should carry on its search for a\ncomponent with a matching command.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>tanjun.errors.CommandError</strong>: To end the command's execution with an error response message.</li>\n<li><strong>tanjun.errors.HaltExecution</strong>: To indicate that the client should stop searching for commands to\nexecute with the current context.</li>\n</ul>\n", "parameters": ["self", "ctx", "hooks"], "funcdef": "async def"}, "tanjun.Component.add_schedule": {"fullname": "tanjun.Component.add_schedule", "modulename": "tanjun", "qualname": "Component.add_schedule", "type": "function", "doc": "<p>Add a schedule to the component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>schedule</strong> (tanjun.schedules.AbstractSchedule):\nThe schedule to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component itself for chaining.</li>\n</ul>\n", "parameters": ["self", "schedule"], "funcdef": "def"}, "tanjun.Component.remove_schedule": {"fullname": "tanjun.Component.remove_schedule", "modulename": "tanjun", "qualname": "Component.remove_schedule", "type": "function", "doc": "<p>Remove a schedule from the component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>schedule</strong> (tanjun.schedules.AbstractSchedule):\nThe schedule to remove</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component itself for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the schedule isn't registered.</li>\n</ul>\n", "parameters": ["self", "schedule"], "funcdef": "def"}, "tanjun.Component.with_schedule": {"fullname": "tanjun.Component.with_schedule", "modulename": "tanjun", "qualname": "Component.with_schedule", "type": "function", "doc": "<p>Add a schedule to the component through a decorator call.</p>\n\n<h6 id=\"example\">Example</h6>\n\n<p>This may be used in conjunction with <code>tanjun.as_interval</code>.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@component</span><span class=\"o\">.</span><span class=\"n\">with_schedule</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_interval</span><span class=\"p\">(</span><span class=\"mi\">60</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">my_schedule</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;I&#39;m running every minute!&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>schedule</strong> (schedules.AbstractSchedule):\nThe schedule to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>schedules.AbstractSchedule</strong>: The added schedule.</li>\n</ul>\n", "parameters": ["self", "schedule"], "funcdef": "def"}, "tanjun.Component.close": {"fullname": "tanjun.Component.close", "modulename": "tanjun", "qualname": "Component.close", "type": "function", "doc": "<p>Close the component.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the component isn't running.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.Component.open": {"fullname": "tanjun.Component.open", "modulename": "tanjun", "qualname": "Component.open", "type": "function", "doc": "<p>Start the component.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the component is already open.\nIf the component isn't bound to a client.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.Component.make_loader": {"fullname": "tanjun.Component.make_loader", "modulename": "tanjun", "qualname": "Component.make_loader", "type": "function", "doc": "<p>Make a loader/unloader for this component.</p>\n\n<p>This enables loading, unloading and reloading of this component into a\nclient by targeting the module using <code>tanjun.Client.load_modules</code>,\n<code>tanjun.Client.unload_modules</code> and <code>tanjun.Client.reload_modules</code>.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>copy</strong> (bool):\nWhether to copy the component before loading it into a client.</p>\n\n<p>Defaults to <code>True</code>.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tanjun.abc.ClientLoader</strong>: The loader for this component.</li>\n</ul>\n", "parameters": ["self", "copy"], "funcdef": "def"}, "tanjun.to_bool": {"fullname": "tanjun.to_bool", "modulename": "tanjun", "qualname": "to_bool", "type": "function", "doc": "<p>Convert user string input into a boolean value.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (str):\nThe value to convert.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bool</strong>: The converted value.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the value cannot be converted.</li>\n</ul>\n", "parameters": ["value"], "funcdef": "def"}, "tanjun.to_channel": {"fullname": "tanjun.to_channel", "modulename": "tanjun", "qualname": "to_channel", "type": "variable", "doc": "<p></p>\n"}, "tanjun.to_color": {"fullname": "tanjun.to_color", "modulename": "tanjun", "qualname": "to_color", "type": "function", "doc": "<p>Convert user input to a <code>hikari.colors.Color</code> object.</p>\n", "parameters": ["argument"], "funcdef": "def"}, "tanjun.to_colour": {"fullname": "tanjun.to_colour", "modulename": "tanjun", "qualname": "to_colour", "type": "function", "doc": "<p>Convert user input to a <code>hikari.colors.Color</code> object.</p>\n", "parameters": ["argument"], "funcdef": "def"}, "tanjun.to_datetime": {"fullname": "tanjun.to_datetime", "modulename": "tanjun", "qualname": "to_datetime", "type": "function", "doc": "<p>Parse a datetime from Discord's datetime format.</p>\n\n<p>More information on this format can be found at\nhttps://discord.com/developers/docs/reference#message-formatting-timestamp-styles</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (str):\nThe value to parse.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>datetime.datetime</strong>: The parsed datetime.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the value cannot be parsed.</li>\n</ul>\n", "parameters": ["value"], "funcdef": "def"}, "tanjun.to_emoji": {"fullname": "tanjun.to_emoji", "modulename": "tanjun", "qualname": "to_emoji", "type": "variable", "doc": "<p></p>\n"}, "tanjun.to_guild": {"fullname": "tanjun.to_guild", "modulename": "tanjun", "qualname": "to_guild", "type": "variable", "doc": "<p></p>\n"}, "tanjun.to_invite": {"fullname": "tanjun.to_invite", "modulename": "tanjun", "qualname": "to_invite", "type": "variable", "doc": "<p></p>\n"}, "tanjun.to_invite_with_metadata": {"fullname": "tanjun.to_invite_with_metadata", "modulename": "tanjun", "qualname": "to_invite_with_metadata", "type": "variable", "doc": "<p></p>\n"}, "tanjun.to_member": {"fullname": "tanjun.to_member", "modulename": "tanjun", "qualname": "to_member", "type": "variable", "doc": "<p></p>\n"}, "tanjun.to_presence": {"fullname": "tanjun.to_presence", "modulename": "tanjun", "qualname": "to_presence", "type": "variable", "doc": "<p></p>\n"}, "tanjun.to_role": {"fullname": "tanjun.to_role", "modulename": "tanjun", "qualname": "to_role", "type": "variable", "doc": "<p></p>\n"}, "tanjun.to_snowflake": {"fullname": "tanjun.to_snowflake", "modulename": "tanjun", "qualname": "to_snowflake", "type": "function", "doc": "<p>Parse a snowflake from a string or int value.</p>\n\n<p><em>Note:</em>\nThis only allows the relevant entity's mention format if applicable.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (typing.Union[str, int]):\nThe value to parse (this argument can only be passed positionally).</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>message</strong> (str):\nThe error message to raise if the value cannot be parsed.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Snowflake</strong>: The parsed snowflake.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the value cannot be parsed.</li>\n</ul>\n", "parameters": ["value", "message"], "funcdef": "def"}, "tanjun.to_user": {"fullname": "tanjun.to_user", "modulename": "tanjun", "qualname": "to_user", "type": "variable", "doc": "<p></p>\n"}, "tanjun.to_voice_state": {"fullname": "tanjun.to_voice_state", "modulename": "tanjun", "qualname": "to_voice_state", "type": "variable", "doc": "<p></p>\n"}, "tanjun.BucketResource": {"fullname": "tanjun.BucketResource", "modulename": "tanjun", "qualname": "BucketResource", "type": "class", "doc": "<p>Resource target types used within command calldowns and concurrency limiters.</p>\n"}, "tanjun.BucketResource.USER": {"fullname": "tanjun.BucketResource.USER", "modulename": "tanjun", "qualname": "BucketResource.USER", "type": "variable", "doc": "<p>A per-user resource bucket.</p>\n"}, "tanjun.BucketResource.MEMBER": {"fullname": "tanjun.BucketResource.MEMBER", "modulename": "tanjun", "qualname": "BucketResource.MEMBER", "type": "variable", "doc": "<p>A per-guild member resource bucket.</p>\n\n<p><em>Note:</em>\nWhen executed in a DM this will be per-DM.</p>\n"}, "tanjun.BucketResource.CHANNEL": {"fullname": "tanjun.BucketResource.CHANNEL", "modulename": "tanjun", "qualname": "BucketResource.CHANNEL", "type": "variable", "doc": "<p>A per-channel resource bucket.</p>\n"}, "tanjun.BucketResource.PARENT_CHANNEL": {"fullname": "tanjun.BucketResource.PARENT_CHANNEL", "modulename": "tanjun", "qualname": "BucketResource.PARENT_CHANNEL", "type": "variable", "doc": "<p>A per-parent channel resource bucket.</p>\n\n<p><em>Note:</em>\nFor DM channels this will be per-DM, for guild channels with no parents\nthis'll be per-guild.</p>\n"}, "tanjun.BucketResource.TOP_ROLE": {"fullname": "tanjun.BucketResource.TOP_ROLE", "modulename": "tanjun", "qualname": "BucketResource.TOP_ROLE", "type": "variable", "doc": "<p>A per-highest role resource bucket.</p>\n\n<p><em>Note:</em>\nWhen executed in a DM this will be per-DM, with this defaulting to\ntargeting the @everyone role if they have no real roles.</p>\n"}, "tanjun.BucketResource.GUILD": {"fullname": "tanjun.BucketResource.GUILD", "modulename": "tanjun", "qualname": "BucketResource.GUILD", "type": "variable", "doc": "<p>A per-guild resource bucket.</p>\n\n<p><em>Note:</em>\nWhen executed in a DM this will be per-DM.</p>\n"}, "tanjun.BucketResource.GLOBAL": {"fullname": "tanjun.BucketResource.GLOBAL", "modulename": "tanjun", "qualname": "BucketResource.GLOBAL", "type": "variable", "doc": "<p>A global resource bucket.</p>\n"}, "tanjun.cached_inject": {"fullname": "tanjun.cached_inject", "modulename": "tanjun", "qualname": "cached_inject", "type": "function", "doc": "<p>Inject a callback with caching.</p>\n\n<p>This acts like <code>tanjun.injecting.inject</code> and the result of it\nshould also be assigned to a parameter's default to be used.</p>\n\n<h6 id=\"example\">Example</h6>\n\n<p>```py\nasync def resolve_database(\n    client: tanjun.abc.Client = tanjun.inject(type=tanjun.abc.Client)\n) -> Database:\n    raise NotImplementedError</p>\n\n<p>@tanjun.as_message_command(\"command name\")\nasync def command(\n    ctx: tanjun.abc.Context, db: Database = tanjun.cached_inject(resolve_database)\n) -> None:\n    raise NotImplementedError</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>callback</strong> (CallbackSig[_T]):\nThe callback to inject.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>expire_after</strong> (typing.Union[int, float, datetime.timedelta, None]):\nThe amount of time to cache the result for in seconds.</p>\n\n<p>Leave this as <code>None</code> to cache for the runtime of the application.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tanjun.injecting.Injected[_T]</strong>: Injector used to resolve the cached callback.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If expire_after is not a valid value.\nIf expire_after is not less than or equal to 0 seconds.</li>\n</ul>\n", "parameters": ["callback", "expire_after"], "funcdef": "def"}, "tanjun.inject_lc": {"fullname": "tanjun.inject_lc", "modulename": "tanjun", "qualname": "inject_lc", "type": "function", "doc": "<p>Make a LazyConstant injector.</p>\n\n<p>This acts like <code>tanjun.injecting.inject</code> and the result of it\nshould also be assigned to a parameter's default to be used.</p>\n\n<p><em>Note:</em>\nFor this to work, a <code>LazyConstant</code> must've been set as a type\ndependency for the passed <code>type_</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>type_</strong> (type[_T]):\nThe type of the constant to resolve.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tanjun.injecting.Injected[_T]</strong>: Injector used to resolve the LazyConstant.</li>\n</ul>\n\n<h6 id=\"example\">Example</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@component</span><span class=\"o\">.</span><span class=\"n\">with_command</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_message_command</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span>\n    <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">MessageCommand</span><span class=\"p\">,</span>\n    <span class=\"n\">application</span><span class=\"p\">:</span> <span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">Application</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">inject_lc</span><span class=\"p\">(</span><span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">)</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span>\n\n<span class=\"o\">...</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">resolve_app</span><span class=\"p\">(</span>\n    <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Client</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">inject</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">)</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span>\n\n<span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"o\">.</span><span class=\"n\">from_gateway_bot</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set_type_dependency</span><span class=\"p\">(</span>\n    <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">LazyConstant</span><span class=\"p\">[</span><span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">LazyConstant</span><span class=\"p\">(</span><span class=\"n\">resolve_app</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["type_"], "funcdef": "def"}, "tanjun.InMemoryConcurrencyLimiter": {"fullname": "tanjun.InMemoryConcurrencyLimiter", "modulename": "tanjun", "qualname": "InMemoryConcurrencyLimiter", "type": "class", "doc": "<p>In-memory standard implementation of <code>AbstractConcurrencyLimiter</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p><code>InMemoryConcurrencyLimiter.set_bucket</code> may be used to set the concurrency\nlimits for a specific bucket:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">(</span>\n    <span class=\"n\">InMemoryConcurrencyLimiter</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Set the default bucket template to 10 concurrent uses of the command per-user.</span>\n    <span class=\"o\">.</span><span class=\"n\">set_bucket</span><span class=\"p\">(</span><span class=\"s2\">&quot;default&quot;</span><span class=\"p\">,</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">BucketResource</span><span class=\"o\">.</span><span class=\"n\">USER</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Set the &quot;moderation&quot; bucket with a limit of 5 concurrent uses per-guild.</span>\n    <span class=\"o\">.</span><span class=\"n\">set_bucket</span><span class=\"p\">(</span><span class=\"s2\">&quot;moderation&quot;</span><span class=\"p\">,</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">BucketResource</span><span class=\"o\">.</span><span class=\"n\">GUILD</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"o\">.</span><span class=\"n\">set_bucket</span><span class=\"p\">()</span>\n    <span class=\"c1\"># add_to_client will setup the concurrency manager (setting it as an</span>\n    <span class=\"c1\"># injected dependency and registering callbacks to manage it).</span>\n    <span class=\"o\">.</span><span class=\"n\">add_to_client</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n"}, "tanjun.InMemoryConcurrencyLimiter.__init__": {"fullname": "tanjun.InMemoryConcurrencyLimiter.__init__", "modulename": "tanjun", "qualname": "InMemoryConcurrencyLimiter.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"fullname": "tanjun.InMemoryConcurrencyLimiter.add_to_client", "modulename": "tanjun", "qualname": "InMemoryConcurrencyLimiter.add_to_client", "type": "function", "doc": "<p>Add this concurrency manager to a tanjun client.</p>\n\n<p><em>Note:</em>\nThis registers the manager as a type dependency and manages opening\nand closing the manager based on the client's life cycle.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>client</strong> (tanjun.abc.Client):\nThe client to add this concurrency manager to.</li>\n</ul>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.InMemoryConcurrencyLimiter.close": {"fullname": "tanjun.InMemoryConcurrencyLimiter.close", "modulename": "tanjun", "qualname": "InMemoryConcurrencyLimiter.close", "type": "function", "doc": "<p>Stop the concurrency manager.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the concurrency manager is not running.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.InMemoryConcurrencyLimiter.open": {"fullname": "tanjun.InMemoryConcurrencyLimiter.open", "modulename": "tanjun", "qualname": "InMemoryConcurrencyLimiter.open", "type": "function", "doc": "<p>Start the concurrency manager.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the concurrency manager is already running.\nIf called in a thread with no running event loop.</li>\n</ul>\n", "parameters": ["self", "_loop"], "funcdef": "def"}, "tanjun.InMemoryConcurrencyLimiter.try_acquire": {"fullname": "tanjun.InMemoryConcurrencyLimiter.try_acquire", "modulename": "tanjun", "qualname": "InMemoryConcurrencyLimiter.try_acquire", "type": "function", "doc": "<p>Try to acquire a concurrency lock on a bucket.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe concurrency bucket to acquire.</li>\n<li><strong>ctx</strong> (tanjun.abc.Context):\nThe context to acquire this resource lock with.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bool</strong>: Whether the lock was acquired.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "ctx"], "funcdef": "async def"}, "tanjun.InMemoryConcurrencyLimiter.release": {"fullname": "tanjun.InMemoryConcurrencyLimiter.release", "modulename": "tanjun", "qualname": "InMemoryConcurrencyLimiter.release", "type": "function", "doc": "<p>Release a concurrency lock on a bucket.</p>\n", "parameters": ["self", "bucket_id", "ctx"], "funcdef": "async def"}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"fullname": "tanjun.InMemoryConcurrencyLimiter.disable_bucket", "modulename": "tanjun", "qualname": "InMemoryConcurrencyLimiter.disable_bucket", "type": "function", "doc": "<p>Disable a concurrency limit bucket.</p>\n\n<p>This will stop the bucket from ever hitting a concurrency limit\nand also prevents the bucket from defaulting.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>bucket_id</strong> (str):\nThe bucket to disable.</p>\n\n<p><em>Note:</em>\n\"default\" is a special bucket which is used as a template\nfor unknown bucket IDs.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This concurrency manager to allow for chaining.</li>\n</ul>\n", "parameters": ["self", "bucket_id"], "funcdef": "def"}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"fullname": "tanjun.InMemoryConcurrencyLimiter.set_bucket", "modulename": "tanjun", "qualname": "InMemoryConcurrencyLimiter.set_bucket", "type": "function", "doc": "<p>Set the concurrency limit for a specific bucket.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>bucket_id</strong> (str):\nThe ID of the bucket to set the concurrency limit for.</p>\n\n<p><em>Note:</em>\n\"default\" is a special bucket which is used as a template\nfor unknown bucket IDs.</p></li>\n<li><strong>resource</strong> (tanjun.BucketResource):\nThe type of resource to target for the concurrency limit.</li>\n<li><strong>limit</strong> (int):\nThe maximum number of concurrent uses to allow.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The concurrency manager to allow call chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If an invalid resource type is given.\nif limit is less 0 or negative.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "resource", "limit"], "funcdef": "def"}, "tanjun.InMemoryCooldownManager": {"fullname": "tanjun.InMemoryCooldownManager", "modulename": "tanjun", "qualname": "InMemoryCooldownManager", "type": "class", "doc": "<p>In-memory standard implementation of <code>AbstractCooldownManager</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p><code>InMemoryCooldownManager.set_bucket</code> may be used to set the cooldown for a\nspecific bucket:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">(</span>\n    <span class=\"n\">InMemoryCooldownManager</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Set the default bucket template to a per-user 10 uses per-60 seconds cooldown.</span>\n    <span class=\"o\">.</span><span class=\"n\">set_bucket</span><span class=\"p\">(</span><span class=\"s2\">&quot;default&quot;</span><span class=\"p\">,</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">BucketResource</span><span class=\"o\">.</span><span class=\"n\">USER</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Set the &quot;moderation&quot; bucket to a per-guild 100 uses per-5 minutes cooldown.</span>\n    <span class=\"o\">.</span><span class=\"n\">set_bucket</span><span class=\"p\">(</span><span class=\"s2\">&quot;moderation&quot;</span><span class=\"p\">,</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">BucketResource</span><span class=\"o\">.</span><span class=\"n\">GUILD</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">minutes</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">))</span>\n    <span class=\"o\">.</span><span class=\"n\">set_bucket</span><span class=\"p\">()</span>\n    <span class=\"c1\"># add_to_client will setup the cooldown manager (setting it as an</span>\n    <span class=\"c1\"># injected dependency and registering callbacks to manage it).</span>\n    <span class=\"o\">.</span><span class=\"n\">add_to_client</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n"}, "tanjun.InMemoryCooldownManager.__init__": {"fullname": "tanjun.InMemoryCooldownManager.__init__", "modulename": "tanjun", "qualname": "InMemoryCooldownManager.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.InMemoryCooldownManager.add_to_client": {"fullname": "tanjun.InMemoryCooldownManager.add_to_client", "modulename": "tanjun", "qualname": "InMemoryCooldownManager.add_to_client", "type": "function", "doc": "<p>Add this cooldown manager to a tanjun client.</p>\n\n<p><em>Note:</em>\nThis registers the manager as a type dependency and manages opening\nand closing the manager based on the client's life cycle.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>client</strong> (tanjun.abc.Client):\nThe client to add this cooldown manager to.</li>\n</ul>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.InMemoryCooldownManager.check_cooldown": {"fullname": "tanjun.InMemoryCooldownManager.check_cooldown", "modulename": "tanjun", "qualname": "InMemoryCooldownManager.check_cooldown", "type": "function", "doc": "<p>Check if a bucket is on cooldown for the provided context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe cooldown bucket to check.</li>\n<li><strong>ctx</strong> (tanjun.abc.Context):\nThe context of the command.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>increment</strong> (bool):\nWhether this call should increment the bucket's use counter if\nit isn't depleted.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[float]</strong>: When this command will next be usable for the provided context\nif it's in cooldown else <code>None</code>.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "ctx", "increment"], "funcdef": "async def"}, "tanjun.InMemoryCooldownManager.increment_cooldown": {"fullname": "tanjun.InMemoryCooldownManager.increment_cooldown", "modulename": "tanjun", "qualname": "InMemoryCooldownManager.increment_cooldown", "type": "function", "doc": "<p>Increment the cooldown of a cooldown bucket.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe cooldown bucket's ID.</li>\n<li><strong>ctx</strong> (tanjun.abc.Context):\nThe context of the command.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "ctx"], "funcdef": "async def"}, "tanjun.InMemoryCooldownManager.close": {"fullname": "tanjun.InMemoryCooldownManager.close", "modulename": "tanjun", "qualname": "InMemoryCooldownManager.close", "type": "function", "doc": "<p>Stop the cooldown manager.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the cooldown manager is not running.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.InMemoryCooldownManager.open": {"fullname": "tanjun.InMemoryCooldownManager.open", "modulename": "tanjun", "qualname": "InMemoryCooldownManager.open", "type": "function", "doc": "<p>Start the cooldown manager.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the cooldown manager is already running.\nIf called in a thread with no running event loop.</li>\n</ul>\n", "parameters": ["self", "_loop"], "funcdef": "def"}, "tanjun.InMemoryCooldownManager.disable_bucket": {"fullname": "tanjun.InMemoryCooldownManager.disable_bucket", "modulename": "tanjun", "qualname": "InMemoryCooldownManager.disable_bucket", "type": "function", "doc": "<p>Disable a cooldown bucket.</p>\n\n<p>This will stop the bucket from ever hitting a cooldown and also\nprevents the bucket from defaulting.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>bucket_id</strong> (str):\nThe bucket to disable.</p>\n\n<p><em>Note:</em>\n\"default\" is a special bucket which is used as a template\nfor unknown bucket IDs.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This cooldown manager to allow for chaining.</li>\n</ul>\n", "parameters": ["self", "bucket_id"], "funcdef": "def"}, "tanjun.InMemoryCooldownManager.set_bucket": {"fullname": "tanjun.InMemoryCooldownManager.set_bucket", "modulename": "tanjun", "qualname": "InMemoryCooldownManager.set_bucket", "type": "function", "doc": "<p>Set the cooldown for a specific bucket.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>bucket_id</strong> (str):\nThe ID of the bucket to set the cooldown for.</p>\n\n<p><em>Note:</em>\n\"default\" is a special bucket which is used as a template\nfor unknown bucket IDs.</p></li>\n<li><strong>resource</strong> (tanjun.BucketResource):\nThe type of resource to target for the cooldown.</li>\n<li><strong>limit</strong> (int):\nThe number of uses per cooldown period.</li>\n<li><strong>reset_after</strong> (int, float, datetime.timedelta):\nThe cooldown period.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The cooldown manager to allow call chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If an invalid resource type is given.\nIf reset_after or limit are negative, 0 or invalid.\nif limit is less 0 or negative.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "resource", "limit", "reset_after"], "funcdef": "def"}, "tanjun.LazyConstant": {"fullname": "tanjun.LazyConstant", "modulename": "tanjun", "qualname": "LazyConstant", "type": "class", "doc": "<p>Injected type used to hold and generate lazy constants.</p>\n\n<p><em>Note:</em>\nTo easily resolve this type use <code>inject_lc</code>.</p>\n"}, "tanjun.LazyConstant.__init__": {"fullname": "tanjun.LazyConstant.__init__", "modulename": "tanjun", "qualname": "LazyConstant.__init__", "type": "function", "doc": "<p>Initiate a new lazy constant.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (collections.abc.Callable[..., tanjun.abc.MaybeAwaitable[_T]]):\nCallback used to resolve this to a constant value.</p>\n\n<p>This supports dependency injection and may either be sync or asynchronous.</p></li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.LazyConstant.callback": {"fullname": "tanjun.LazyConstant.callback", "modulename": "tanjun", "qualname": "LazyConstant.callback", "type": "variable", "doc": "<p>Descriptor of the callback used to get this constant's initial value.</p>\n"}, "tanjun.LazyConstant.get_value": {"fullname": "tanjun.LazyConstant.get_value", "modulename": "tanjun", "qualname": "LazyConstant.get_value", "type": "function", "doc": "<p>Get the value of this constant if set, else <code>None</code>.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.LazyConstant.reset": {"fullname": "tanjun.LazyConstant.reset", "modulename": "tanjun", "qualname": "LazyConstant.reset", "type": "function", "doc": "<p>Clear the internally stored value.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.LazyConstant.set_value": {"fullname": "tanjun.LazyConstant.set_value", "modulename": "tanjun", "qualname": "LazyConstant.set_value", "type": "function", "doc": "<p>Set the constant value.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (_T):\nThe value to set.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the constant has already been set.</li>\n</ul>\n", "parameters": ["self", "value"], "funcdef": "def"}, "tanjun.LazyConstant.acquire": {"fullname": "tanjun.LazyConstant.acquire", "modulename": "tanjun", "qualname": "LazyConstant.acquire", "type": "function", "doc": "<p>Acquire this lazy constant as an asynchronous lock.</p>\n\n<p>This is used to ensure that the value is only generated once\nand should be kept acquired until <code>LazyConstant.set_value</code> has\nbeen called.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>contextlib.AbstractAsyncContextManager[typing.Any]</strong>: Context manager that can be used to acquire the lock.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.with_concurrency_limit": {"fullname": "tanjun.with_concurrency_limit", "modulename": "tanjun", "qualname": "with_concurrency_limit", "type": "function", "doc": "<p>Add the hooks used to manage a command's concurrency limit through a decorator call.</p>\n\n<p><em>Warning:</em>\nConcurrency limiters will only work if there's a setup injected\n<code>AbstractConcurrencyLimiter</code> dependency with <code>InMemoryConcurrencyLimiter</code>\nbeing usable as a standard in-memory concurrency manager.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe concurrency limit bucket's ID.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (str):\nThe error message to send in response as a command error if this fails\nto acquire the concurrency limit.</p>\n\n<p>Defaults to \"This resource is currently busy; please try again later.\".</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[CommandT], CommandT]</strong>: A decorator that adds the concurrency limiter hooks to a command.</li>\n</ul>\n", "parameters": ["bucket_id", "error_message"], "funcdef": "def"}, "tanjun.with_cooldown": {"fullname": "tanjun.with_cooldown", "modulename": "tanjun", "qualname": "with_cooldown", "type": "function", "doc": "<p>Add a pre-execution hook used to manage a command's cooldown through a decorator call.</p>\n\n<p><em>Warning:</em>\nCooldowns will only work if there's a setup injected <code>AbstractCooldownManager</code>\ndependency with <code>InMemoryCooldownManager</code> being usable as a standard in-memory\ncooldown manager.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe cooldown bucket's ID.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (str):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to f\"Please wait {cooldown:0.2f} seconds before using this command again.\".</p></li>\n<li><p><strong>owners_exempt</strong> (bool):\nWhether owners should be exempt from the cooldown.</p>\n\n<p>Defaults to <code>True</code>.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[CommandT], CommandT]</strong>: A decorator that adds a <code>CooldownPreExecution</code> hook to the command.</li>\n</ul>\n", "parameters": ["bucket_id", "error_message", "owners_exempt"], "funcdef": "def"}, "tanjun.CommandError": {"fullname": "tanjun.CommandError", "modulename": "tanjun", "qualname": "CommandError", "type": "class", "doc": "<p>Error raised to end command execution.</p>\n"}, "tanjun.CommandError.__init__": {"fullname": "tanjun.CommandError.__init__", "modulename": "tanjun", "qualname": "CommandError.__init__", "type": "function", "doc": "<p>Initialise a command error.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>message</strong> (str):\nString message which will be sent as a response to the message\nthat triggered the current command.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raised when the message is over 2000 characters long or empty.</li>\n</ul>\n", "parameters": ["self", "message"], "funcdef": "def"}, "tanjun.CommandError.message": {"fullname": "tanjun.CommandError.message", "modulename": "tanjun", "qualname": "CommandError.message", "type": "variable", "doc": "<p>The response error message.</p>\n\n<p>Tanjun will try to send the string message as a response.</p>\n"}, "tanjun.ConversionError": {"fullname": "tanjun.ConversionError", "modulename": "tanjun", "qualname": "ConversionError", "type": "class", "doc": "<p>Error raised by a parser parameter when it failed to converter a value.</p>\n"}, "tanjun.ConversionError.__init__": {"fullname": "tanjun.ConversionError.__init__", "modulename": "tanjun", "qualname": "ConversionError.__init__", "type": "function", "doc": "<p>Initialise a conversion error.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>parameter</strong> (tanjun.abc.Parameter):\nThe parameter this was raised by.</li>\n<li><strong>errors</strong> (collections.abc.Iterable[ValueError]):\nAn iterable of the source value errors which were raised during conversion.</li>\n</ul>\n", "parameters": ["self", "message", "parameter", "errors"], "funcdef": "def"}, "tanjun.ConversionError.errors": {"fullname": "tanjun.ConversionError.errors", "modulename": "tanjun", "qualname": "ConversionError.errors", "type": "variable", "doc": "<p>Sequence of the errors that were caught during conversion for this parameter.</p>\n"}, "tanjun.ConversionError.parameter": {"fullname": "tanjun.ConversionError.parameter", "modulename": "tanjun", "qualname": "ConversionError.parameter", "type": "variable", "doc": "<p>Name of the parameter this error was raised for.</p>\n"}, "tanjun.HaltExecution": {"fullname": "tanjun.HaltExecution", "modulename": "tanjun", "qualname": "HaltExecution", "type": "class", "doc": "<p>Error raised while looking for a command in-order to end-execution early.</p>\n\n<p>For the most part, this will be raised during checks in-order to prevent\nother commands from being tried.</p>\n"}, "tanjun.FailedCheck": {"fullname": "tanjun.FailedCheck", "modulename": "tanjun", "qualname": "FailedCheck", "type": "class", "doc": "<p>Error raised as an alternative to returning <code>False</code> in a check.</p>\n"}, "tanjun.MissingDependencyError": {"fullname": "tanjun.MissingDependencyError", "modulename": "tanjun", "qualname": "MissingDependencyError", "type": "class", "doc": "<p>Error raised when a dependency couldn't be found.</p>\n"}, "tanjun.MissingDependencyError.__init__": {"fullname": "tanjun.MissingDependencyError.__init__", "modulename": "tanjun", "qualname": "MissingDependencyError.__init__", "type": "function", "doc": "<p>Initialise a missing dependency error.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>message</strong> (str):\nThe error message.</li>\n</ul>\n", "parameters": ["self", "message"], "funcdef": "def"}, "tanjun.MissingDependencyError.message": {"fullname": "tanjun.MissingDependencyError.message", "modulename": "tanjun", "qualname": "MissingDependencyError.message", "type": "variable", "doc": "<p>The error's message.</p>\n"}, "tanjun.NotEnoughArgumentsError": {"fullname": "tanjun.NotEnoughArgumentsError", "modulename": "tanjun", "qualname": "NotEnoughArgumentsError", "type": "class", "doc": "<p>Error raised by the parser when not enough arguments are found for a parameter.</p>\n"}, "tanjun.NotEnoughArgumentsError.__init__": {"fullname": "tanjun.NotEnoughArgumentsError.__init__", "modulename": "tanjun", "qualname": "NotEnoughArgumentsError.__init__", "type": "function", "doc": "<p>Initialise a not enough arguments error.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>message</strong> (str):\nThe error message.</li>\n<li><strong>parameter</strong> (tanjun.abc.Parameter):\nThe parameter this error was raised for.</li>\n</ul>\n", "parameters": ["self", "message", "parameter"], "funcdef": "def"}, "tanjun.NotEnoughArgumentsError.parameter": {"fullname": "tanjun.NotEnoughArgumentsError.parameter", "modulename": "tanjun", "qualname": "NotEnoughArgumentsError.parameter", "type": "variable", "doc": "<p>Name of the parameter this error was raised for.</p>\n"}, "tanjun.TooManyArgumentsError": {"fullname": "tanjun.TooManyArgumentsError", "modulename": "tanjun", "qualname": "TooManyArgumentsError", "type": "class", "doc": "<p>Error raised by the parser when too many arguments are found for a parameter.</p>\n"}, "tanjun.TooManyArgumentsError.__init__": {"fullname": "tanjun.TooManyArgumentsError.__init__", "modulename": "tanjun", "qualname": "TooManyArgumentsError.__init__", "type": "function", "doc": "<p>Initialise a too many arguments error.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>message</strong> (str):\nThe error message.</li>\n<li><strong>parameter</strong> (tanjun.abc.Parameter):\nThe parameter this error was raised for.</li>\n</ul>\n", "parameters": ["self", "message", "parameter"], "funcdef": "def"}, "tanjun.TooManyArgumentsError.parameter": {"fullname": "tanjun.TooManyArgumentsError.parameter", "modulename": "tanjun", "qualname": "TooManyArgumentsError.parameter", "type": "variable", "doc": "<p>Name of the parameter this error was raised for.</p>\n"}, "tanjun.ParserError": {"fullname": "tanjun.ParserError", "modulename": "tanjun", "qualname": "ParserError", "type": "class", "doc": "<p>Base error raised by a parser or parameter during parsing.</p>\n\n<p><em>Note:</em>\nExpected errors raised by the parser will subclass this error.</p>\n"}, "tanjun.ParserError.__init__": {"fullname": "tanjun.ParserError.__init__", "modulename": "tanjun", "qualname": "ParserError.__init__", "type": "function", "doc": "<p>Initialise a parser error.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>message</strong> (str):\nString message for this error.</li>\n<li><strong>parameter</strong> (typing.Optional[str]):\nName of the parameter which caused this error, should be <code>None</code> if not\napplicable.</li>\n</ul>\n", "parameters": ["self", "message", "parameter"], "funcdef": "def"}, "tanjun.ParserError.message": {"fullname": "tanjun.ParserError.message", "modulename": "tanjun", "qualname": "ParserError.message", "type": "variable", "doc": "<p>String message for this error.</p>\n\n<p><em>Note:</em>\nThis may be used as a command response message.</p>\n"}, "tanjun.ParserError.parameter": {"fullname": "tanjun.ParserError.parameter", "modulename": "tanjun", "qualname": "ParserError.parameter", "type": "variable", "doc": "<p>Name of the this was raised for.</p>\n\n<p><em>Note:</em>\nThis will be <code>builtin.None</code> if it was raised while parsing the provided\nmessage content.</p>\n"}, "tanjun.TanjunError": {"fullname": "tanjun.TanjunError", "modulename": "tanjun", "qualname": "TanjunError", "type": "class", "doc": "<p>The base class for all errors raised by Tanjun.</p>\n"}, "tanjun.AnyHooks": {"fullname": "tanjun.AnyHooks", "modulename": "tanjun", "qualname": "AnyHooks", "type": "variable", "doc": "<p></p>\n"}, "tanjun.Hooks": {"fullname": "tanjun.Hooks", "modulename": "tanjun", "qualname": "Hooks", "type": "class", "doc": "<p>Standard implementation of <code>tanjun.abc.Hooks</code> used for command execution.</p>\n\n<p><code>tanjun.abc.ContextT_contra</code> will either be <code>tanjun.abc.Context</code>,\n<code>tanjun.abc.MessageContext</code> or <code>tanjun.abc.SlashContext</code>.</p>\n\n<p><em>Note:</em>\nThis implementation adds a concept of parser errors which won't be\ndispatched to general \"error\" hooks and do not share the error\nsuppression semantics as they favour to always suppress the error\nif a registered handler is found.</p>\n"}, "tanjun.Hooks.__init__": {"fullname": "tanjun.Hooks.__init__", "modulename": "tanjun", "qualname": "Hooks.__init__", "type": "function", "doc": "<p>Initialise a command hook object.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.Hooks.add_to_command": {"fullname": "tanjun.Hooks.add_to_command", "modulename": "tanjun", "qualname": "Hooks.add_to_command", "type": "function", "doc": "<p>Add this hook object to a command.</p>\n\n<p><em>Note:</em>\nThis will likely override any previously added hooks.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>This method may be used as a command decorator:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@standard_hooks</span><span class=\"o\">.</span><span class=\"n\">add_to_command</span>\n<span class=\"nd\">@as_message_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command_command</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"s2\">&quot;You&#39;ve called a command!&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (tanjun.abc.ExecutableCommand[typing.Any]):\nThe command to add the hooks to.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tanjun.abc.ExecutableCommand[typing.Any]</strong>: The command with the hooks added.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.Hooks.copy": {"fullname": "tanjun.Hooks.copy", "modulename": "tanjun", "qualname": "Hooks.copy", "type": "function", "doc": "<p>Copy this hook object.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.Hooks.add_on_error": {"fullname": "tanjun.Hooks.add_on_error", "modulename": "tanjun", "qualname": "Hooks.add_on_error", "type": "function", "doc": "<p>Add an error callback to this hook object.</p>\n\n<p><em>Note:</em>\nThis won't be called for expected <code>tanjun.TanjunError</code> derived errors.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (ErrorHookSig):\nThe callback to add to this hook.</p>\n\n<p>This callback should take two positional arguments (of type\n<code>tanjun.abc.ContextT_contra</code> and <code>Exception</code>) and may be either\nsynchronous or asynchronous.</p>\n\n<p>Returning <code>True</code> indicates that the error should be suppressed,\n<code>False</code> that it should be re-raised and <code>None</code> that no decision has\nbeen made. This will be accounted for along with the decisions\nother error hooks make by majority rule.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.Hooks.set_on_error": {"fullname": "tanjun.Hooks.set_on_error", "modulename": "tanjun", "qualname": "Hooks.set_on_error", "type": "function", "doc": "<p>Set the error callback for this hook object.</p>\n\n<p><em>Note:</em>\nThis will not be called for <code>tanjun.errors.ParserError</code>s as these\nare generally speaking expected. To handle those see\n<code>Hooks.set_on_parser_error</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (typing.Optional[tanjun.abc.ErrorHookSig]):\nThe callback to set for this hook. This will remove any previously\nset callbacks.</p>\n\n<p>This callback should take two positional arguments (of type\n<code>tanjun.abc.ContextT_contra</code> and <code>Exception</code>) and may be either\nsynchronous or asynchronous.</p>\n\n<p>Returning <code>True</code> indicates that the error should be suppressed,\n<code>False</code> that it should be re-raised and <code>None</code> that no decision\nhas been made. This will be accounted for along with the decisions\nother error hooks make by majority rule.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.Hooks.with_on_error": {"fullname": "tanjun.Hooks.with_on_error", "modulename": "tanjun", "qualname": "Hooks.with_on_error", "type": "function", "doc": "<p>Add an error callback to this hook object through a decorator call.</p>\n\n<p><em>Note:</em>\nThis won't be called for expected <code>tanjun.TanjunError</code> derived errors.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">hooks</span> <span class=\"o\">=</span> <span class=\"n\">AnyHooks</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@hooks</span><span class=\"o\">.</span><span class=\"n\">with_on_error</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_error</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"ne\">Exception</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">,</span> <span class=\"n\">SomeExpectedType</span><span class=\"p\">):</span>\n        <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"s2\">&quot;You dun goofed&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>  <span class=\"c1\"># Indicating that it should be suppressed.</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;An error occurred: </span><span class=\"si\">{</span><span class=\"n\">error</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"kc\">False</span>  <span class=\"c1\"># Indicating that it should be re-raised</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (ErrorHookSigT):\nThe callback to add to this hook.</p>\n\n<p>This callback should take two positional arguments (of type\n<code>tanjun.abc.ContextT_contra</code> and <code>Exception</code>) and may be either\nsynchronous or asynchronous.</p>\n\n<p>Returning <code>True</code> indicates that the error shoul be suppressed,\n<code>False</code> that it should be re-raised and <code>None</code> that no decision\nhas been made. This will be accounted for along with the decisions\nother error hooks make by majority rule.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ErrorHookSigT</strong>: The hook callback which was added.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.Hooks.add_on_parser_error": {"fullname": "tanjun.Hooks.add_on_parser_error", "modulename": "tanjun", "qualname": "Hooks.add_on_parser_error", "type": "function", "doc": "<p>Add a parser error callback to this hook object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSig):\nThe callback to add to this hook.</p>\n\n<p>This callback should take two positional arguments (of type\n<code>tanjun.abc.ContextT_contra</code> and <code>tanjun.errors.ParserError</code>),\nreturn <code>None</code> and may be either synchronous or asynchronous.</p>\n\n<p>It's worth noting that this unlike general error handlers, this will\nalways suppress the error.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.Hooks.set_on_parser_error": {"fullname": "tanjun.Hooks.set_on_parser_error", "modulename": "tanjun", "qualname": "Hooks.set_on_parser_error", "type": "function", "doc": "<p>Set the parser error callback for this hook object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (typing.Optional[tanjun.abc.HookSig]):\nThe callback to set for this hook. This will remove any previously\nset callbacks.</p>\n\n<p>This callback should take two positional arguments (of type\n<code>tanjun.abc.ContextT_contra</code> and <code>tanjun.errors.ParserError</code>),\nreturn <code>None</code> and may be either synchronous or asynchronous.</p>\n\n<p>It's worth noting that, unlike general error handlers, this will\nalways suppress the error.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.Hooks.with_on_parser_error": {"fullname": "tanjun.Hooks.with_on_parser_error", "modulename": "tanjun", "qualname": "Hooks.with_on_parser_error", "type": "function", "doc": "<p>Add a parser error callback to this hook object through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">hooks</span> <span class=\"o\">=</span> <span class=\"n\">AnyHooks</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@hooks</span><span class=\"o\">.</span><span class=\"n\">with_on_parser_error</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_parser_error</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">errors</span><span class=\"o\">.</span><span class=\"n\">ParserError</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;You gave invalid input: </span><span class=\"si\">{</span><span class=\"n\">error</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSigT):\nThe parser error callback to add to this hook.</p>\n\n<p>This callback should take two positional arguments (of type\n<code>tanjun.abc.ContextT_contra</code> and <code>tanjun.errors.ParserError</code>),\nreturn <code>None</code> and may be either synchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>HookSigT</strong>: The callback which was added.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.Hooks.add_post_execution": {"fullname": "tanjun.Hooks.add_post_execution", "modulename": "tanjun", "qualname": "Hooks.add_post_execution", "type": "function", "doc": "<p>Add a post-execution callback to this hook object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSig):\nThe callback to add to this hook.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.Hooks.set_post_execution": {"fullname": "tanjun.Hooks.set_post_execution", "modulename": "tanjun", "qualname": "Hooks.set_post_execution", "type": "function", "doc": "<p>Set the post-execution callback for this hook object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (typing.Optional[tanjun.abc.HookSig]):\nThe callback to set for this hook. This will remove any previously\nset callbacks.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.Hooks.with_post_execution": {"fullname": "tanjun.Hooks.with_post_execution", "modulename": "tanjun", "qualname": "Hooks.with_post_execution", "type": "function", "doc": "<p>Add a post-execution callback to this hook object through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">hooks</span> <span class=\"o\">=</span> <span class=\"n\">AnyHooks</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@hooks</span><span class=\"o\">.</span><span class=\"n\">with_post_execution</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">post_execution</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"s2\">&quot;You did something&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSigT):\nThe post-execution callback to add to this hook.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>HookSigT</strong>: The post-execution callback which was seaddedt.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.Hooks.add_pre_execution": {"fullname": "tanjun.Hooks.add_pre_execution", "modulename": "tanjun", "qualname": "Hooks.add_pre_execution", "type": "function", "doc": "<p>Add a pre-execution callback for this hook object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSig):\nThe callback to add to this hook.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.Hooks.set_pre_execution": {"fullname": "tanjun.Hooks.set_pre_execution", "modulename": "tanjun", "qualname": "Hooks.set_pre_execution", "type": "function", "doc": "<p>Set the pre-execution callback for this hook object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (typing.Optional[tanjun.abc.HookSig]):\nThe callback to set for this hook. This will remove any previously\nset callbacks.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.Hooks.with_pre_execution": {"fullname": "tanjun.Hooks.with_pre_execution", "modulename": "tanjun", "qualname": "Hooks.with_pre_execution", "type": "function", "doc": "<p>Add a pre-execution callback to this hook object through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">hooks</span> <span class=\"o\">=</span> <span class=\"n\">AnyHooks</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@hooks</span><span class=\"o\">.</span><span class=\"n\">with_pre_execution</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">pre_execution</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"s2\">&quot;You did something&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSigT):\nThe pre-execution callback to add to this hook.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>HookSigT</strong>: The pre-execution callback which was added.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.Hooks.add_on_success": {"fullname": "tanjun.Hooks.add_on_success", "modulename": "tanjun", "qualname": "Hooks.add_on_success", "type": "function", "doc": "<p>Add a success callback to this hook object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSig):\nThe callback to add to this hook.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.Hooks.set_on_success": {"fullname": "tanjun.Hooks.set_on_success", "modulename": "tanjun", "qualname": "Hooks.set_on_success", "type": "function", "doc": "<p>Set the success callback for this hook object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (typing.Optional[HookSig[tanjun.abc.HookSig]]):\nThe callback to set for this hook. This will remove any previously\nset callbacks.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.Hooks.with_on_success": {"fullname": "tanjun.Hooks.with_on_success", "modulename": "tanjun", "qualname": "Hooks.with_on_success", "type": "function", "doc": "<p>Add a success callback to this hook object through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">hooks</span> <span class=\"o\">=</span> <span class=\"n\">AnyHooks</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@hooks</span><span class=\"o\">.</span><span class=\"n\">with_on_success</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_success</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"s2\">&quot;You did something&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSigT):\nThe success callback to add to this hook.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>HookSigT</strong>: The success callback which was added.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.Hooks.trigger_error": {"fullname": "tanjun.Hooks.trigger_error", "modulename": "tanjun", "qualname": "Hooks.trigger_error", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "exception", "hooks"], "funcdef": "async def"}, "tanjun.Hooks.trigger_post_execution": {"fullname": "tanjun.Hooks.trigger_post_execution", "modulename": "tanjun", "qualname": "Hooks.trigger_post_execution", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "hooks"], "funcdef": "async def"}, "tanjun.Hooks.trigger_pre_execution": {"fullname": "tanjun.Hooks.trigger_pre_execution", "modulename": "tanjun", "qualname": "Hooks.trigger_pre_execution", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "hooks"], "funcdef": "async def"}, "tanjun.Hooks.trigger_success": {"fullname": "tanjun.Hooks.trigger_success", "modulename": "tanjun", "qualname": "Hooks.trigger_success", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "hooks"], "funcdef": "async def"}, "tanjun.MessageHooks": {"fullname": "tanjun.MessageHooks", "modulename": "tanjun", "qualname": "MessageHooks", "type": "variable", "doc": "<p></p>\n"}, "tanjun.SlashHooks": {"fullname": "tanjun.SlashHooks", "modulename": "tanjun", "qualname": "SlashHooks", "type": "variable", "doc": "<p></p>\n"}, "tanjun.as_self_injecting": {"fullname": "tanjun.as_self_injecting", "modulename": "tanjun", "qualname": "as_self_injecting", "type": "function", "doc": "<p>Make a callback self-inecting by linking it to a client through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">make_callback</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"nb\">int</span><span class=\"p\">]:</span>\n    <span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_self_injected</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">)</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">get_int_value</span><span class=\"p\">(</span>\n        <span class=\"n\">redis</span><span class=\"p\">:</span> <span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">Client</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">inject</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"k\">await</span> <span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;key&#39;</span><span class=\"p\">))</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">get_int_value</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>injector_client</strong> (InjectorClient):\nThe injection client to use to resolve dependencies.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[CallbackSig[_T]], SelfInjectingCallback[_T]]</strong></li>\n</ul>\n", "parameters": ["injector_client"], "funcdef": "def"}, "tanjun.inject": {"fullname": "tanjun.inject", "modulename": "tanjun", "qualname": "inject", "type": "function", "doc": "<p>Decare a keyword-argument as requiring an injected dependency.</p>\n\n<p>This should be assigned to an arugment's default value.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;description&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command_callback</span><span class=\"p\">(</span>\n    <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Here we take advantage of scope based special casing which allows</span>\n    <span class=\"c1\"># us to inject the `Component` type.</span>\n    <span class=\"n\">injected_type</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Component</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">inject</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Component</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Here we inject an out-of-scope callback which itself is taking</span>\n    <span class=\"c1\"># advantage of type injection.</span>\n    <span class=\"n\">callback_result</span><span class=\"p\">:</span> <span class=\"n\">ResultT</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">inject</span><span class=\"p\">(</span><span class=\"n\">callback</span><span class=\"o\">=</span><span class=\"n\">injected_callback</span><span class=\"p\">)</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (typing.Optional[CallbackSig[_T]]):\nThe callback to use to resolve the dependency.</p>\n\n<p>If this callback has no type dependencies then this will still work\nwithout an injection context but this can be overridden using\n<code>InjectionClient.set_callback_override</code>.</p></li>\n<li><p><strong>type</strong> (typing.Optional[type[_T]]):\nThe type of the dependency to resolve.</p>\n\n<p>If a union (e.g. <code>typing.Union[A, B]</code>, <code>A | B</code>, <code>typing.Optional[A]</code>)\nis passed for <code>type</code> then each type in the union will be tried\nseparately after the litarl union type is tried, allowing for resolving\n<code>A | B</code> to the value set by <code>set_type_dependency(B, ...)</code>.</p>\n\n<p>If a union has <code>None</code> as one of its types (including <code>Optional[T]</code>)\nthen <code>None</code> will be passed for the parameter if none of the types could\nbe resolved using the linked client.</p></li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If both <code>callback</code> and <code>type</code> are specified or if neither is specified.</li>\n</ul>\n", "parameters": ["callback", "type"], "funcdef": "def"}, "tanjun.ShlexParser": {"fullname": "tanjun.ShlexParser", "modulename": "tanjun", "qualname": "ShlexParser", "type": "class", "doc": "<p>A shlex based <code>AbstractParser</code> implementation.</p>\n"}, "tanjun.ShlexParser.__init__": {"fullname": "tanjun.ShlexParser.__init__", "modulename": "tanjun", "qualname": "ShlexParser.__init__", "type": "function", "doc": "<p>Initialise a shlex parser.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.ShlexParser.needs_injector": {"fullname": "tanjun.ShlexParser.needs_injector", "modulename": "tanjun", "qualname": "ShlexParser.needs_injector", "type": "variable", "doc": "<p>Whether this parser needs an injector to be used.</p>\n"}, "tanjun.ShlexParser.parameters": {"fullname": "tanjun.ShlexParser.parameters", "modulename": "tanjun", "qualname": "ShlexParser.parameters", "type": "variable", "doc": "<p>Sequence of the parameters registered with this parser.</p>\n"}, "tanjun.ShlexParser.copy": {"fullname": "tanjun.ShlexParser.copy", "modulename": "tanjun", "qualname": "ShlexParser.copy", "type": "function", "doc": "<p>Copy the parser.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: A copy of the parser.</li>\n</ul>\n", "parameters": ["self", "_new"], "funcdef": "def"}, "tanjun.ShlexParser.add_parameter": {"fullname": "tanjun.ShlexParser.add_parameter", "modulename": "tanjun", "qualname": "ShlexParser.add_parameter", "type": "function", "doc": "<p>Add a parameter to this parser.</p>\n\n<h6 id=\"arguments\">Arguments</h6>\n\n<p>parameter : typing.Union[Argument, Option]\n    Either the argument or option to add to this parser.</p>\n\n<pre><code>*Note:*\nFor `Argument` type parameters the ordering matters and is decided\nby `add_parameter` call order.\n</code></pre>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The parser instance to enable call chaining.</li>\n</ul>\n", "parameters": ["self", "parameter"], "funcdef": "def"}, "tanjun.ShlexParser.remove_parameter": {"fullname": "tanjun.ShlexParser.remove_parameter", "modulename": "tanjun", "qualname": "ShlexParser.remove_parameter", "type": "function", "doc": "<p>Remove a parameter from the parser.</p>\n\n<h6 id=\"arguments\">Arguments</h6>\n\n<p>parameter : typing.Union[Argument, Option]\n    Either the argument or option to remove from this parser.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The parser instance to enable call chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the parameter isn't registered.</li>\n</ul>\n", "parameters": ["self", "parameter"], "funcdef": "def"}, "tanjun.ShlexParser.add_argument": {"fullname": "tanjun.ShlexParser.add_argument", "modulename": "tanjun", "qualname": "ShlexParser.add_argument", "type": "function", "doc": "<p>Add an argument type parameter to the parser..</p>\n\n<p><em>Note:</em>\nOrder matters for positional arguments.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong> (str):\nThe string identifier of this argument (may be used to pass the result\nof this argument to the command's callback during execution).</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>converters</strong> (typing.Union[ConverterSig, collections.abc.Iterable[ConverterSig]]):\nThe converter(s) this argument should use to handle values passed to it\nduring parsing.</p>\n\n<p>If no converters are provided then the raw string value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>default</strong> (typing.Any):\nThe default value of this argument, if left as\n<code>UNDEFINED_DEFAULT</code> then this will have no default.</li>\n<li><strong>greedy</strong> (bool):\nWhether or not this argument should be greedy (meaning that it\ntakes in the remaining argument values).</li>\n<li><strong>multi</strong> (bool):\nWhether this argument can be passed multiple times.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>SelfT</strong>: This parser to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "key", "converters", "default", "greedy", "multi"], "funcdef": "def"}, "tanjun.ShlexParser.add_option": {"fullname": "tanjun.ShlexParser.add_option", "modulename": "tanjun", "qualname": "ShlexParser.add_option", "type": "function", "doc": "<p>Add an option type parameter to this parser.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong> (str):\nThe string identifier of this option which will be used to pass the\nresult of this argument to the command's callback during execution as\na keyword argument.</li>\n<li><strong>name</strong> (str):\nThe name of this option used for identifying it in the parsed content.</li>\n<li><strong>default</strong> (typing.Any):\nThe default value of this argument, unlike arguments this is required\nfor options.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>*names</strong> (str):\nOther names of this option used for identifying it in the parsed content.</li>\n<li><p><strong>converters</strong> (typing.Union[ConverterSig, collections.abc.Iterable[ConverterSig]]):\nThe converter(s) this argument should use to handle values passed to it\nduring parsing.</p>\n\n<p>If no converters are provided then the raw string value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>empty_value</strong> (typing.Any):\nThe value to use if this option is provided without a value. If left as\n<code>UNDEFINED_DEFAULT</code> then this option will error if it's\nprovided without a value.</li>\n<li><strong>multi</strong> (bool):\nIf this option can be provided multiple times.\nDefaults to <code>False</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>SelfT</strong>: This parser to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "key", "name", "names", "converters", "default", "empty_value", "multi"], "funcdef": "def"}, "tanjun.ShlexParser.set_parameters": {"fullname": "tanjun.ShlexParser.set_parameters", "modulename": "tanjun", "qualname": "ShlexParser.set_parameters", "type": "function", "doc": "<p>Set the parameters for this parser.</p>\n\n<p><em>Note:</em>\nThis will override any previously set parameters.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>parameters</strong> (collections.abc.Iterable[typing.Union[Argument, Option]]):\nIterable of the arguments and options to set for this parser.</p>\n\n<p><em>Note:</em>\nOrder matters for <code>Argument</code> type parameters.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The parser instance to enable call chaining.</li>\n</ul>\n", "parameters": ["self", "parameters"], "funcdef": "def"}, "tanjun.ShlexParser.bind_client": {"fullname": "tanjun.ShlexParser.bind_client", "modulename": "tanjun", "qualname": "ShlexParser.bind_client", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.ShlexParser.bind_component": {"fullname": "tanjun.ShlexParser.bind_component", "modulename": "tanjun", "qualname": "ShlexParser.bind_component", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.ShlexParser.parse": {"fullname": "tanjun.ShlexParser.parse", "modulename": "tanjun", "qualname": "ShlexParser.parse", "type": "function", "doc": "<p>Parse a message context.</p>\n\n<p><em>Warning:</em>\nThis relies on the prefix and command name(s) having been removed\nfrom <code>tanjun.abc.MessageContext.content</code></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ctx</strong> (tanjun.abc.MessageContext):\nThe message context to parse.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict[str, typing.Any]</strong>: Dictionary of argument names to the parsed values for them.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>tanjun.errors.ParserError</strong>: If the message could not be parsed.</li>\n</ul>\n", "parameters": ["self", "ctx"], "funcdef": "def"}, "tanjun.with_argument": {"fullname": "tanjun.with_argument", "modulename": "tanjun", "qualname": "with_argument", "type": "function", "doc": "<p>Add an argument to a parsable command through a decorator call.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>Order matters for positional arguments and since decorator execution\nstarts at the decorator closest to the command and goes upwards this\nwill decide where a positional argument is located in a command's\nsignature.</li>\n<li>If no parser is explicitly set on the command this is decorating before\nthis decorator call then this will set <code>ShlexParser</code> as the parser.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong> (str):\nThe string identifier of this argument (may be used to pass the result\nof this argument to the command's callback during execution).</li>\n<li><p><strong>converters</strong> (typing.Union[ConverterSig, collections.abc.Iterable[ConverterSig]]):\nThe converter(s) this argument should use to handle values passed to it\nduring parsing.</p>\n\n<p>If no converters are provided then the raw string value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>default</strong> (typing.Any):\nThe default value of this argument, if left as\n<code>UNDEFINED_DEFAULT</code> then this will have no default.</li>\n<li><strong>greedy</strong> (bool):\nWhether or not this argument should be greedy (meaning that it\ntakes in the remaining argument values).</li>\n<li><strong>multi</strong> (bool):\nWhether this argument can be passed multiple times.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[ParseableProtoT], ParseableProtoT]:</strong>: Decorator function for the parsable command this argument is being added to.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">tanjun</span>\n\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">with_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"n\">converters</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">with_parser</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">as_message_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"o\">/</span><span class=\"p\">,</span> <span class=\"n\">argument</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n", "parameters": ["key", "converters", "default", "greedy", "multi"], "funcdef": "def"}, "tanjun.with_greedy_argument": {"fullname": "tanjun.with_greedy_argument", "modulename": "tanjun", "qualname": "with_greedy_argument", "type": "function", "doc": "<p>Add a greedy argument to a parsable command through a decorator call.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>A greedy argument will consume the remaining positional arguments and pass\nthem through to the converters as one joined string while also requiring\nthat at least one more positional argument is remaining unless a\ndefault is set.</li>\n<li>Order matters for positional arguments and since decorator execution\nstarts at the decorator closest to the command and goes upwards this\nwill decide where a positional argument is located in a command's\nsignature.</li>\n<li>If no parser is explicitly set on the command this is decorating before\nthis decorator call then this will set <code>ShlexParser</code> as the parser.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong> (str):\nThe string identifier of this argument (may be used to pass the result\nof this argument to the command's callback during execution).</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>converters</strong> (typing.Union[ConverterSig, collections.abc.Iterable[ConverterSig]]):\nThe converter(s) this argument should use to handle values passed to it\nduring parsing.</p>\n\n<p>If no converters are provided then the raw string value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>default</strong> (typing.Any):\nThe default value of this argument, if left as\n<code>UNDEFINED_DEFAULT</code> then this will have no default.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[ParseableProtoT], ParseableProtoT]:</strong>: Decorator function for the parsable command this argument is being added to.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">tanjun</span>\n\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">with_greedy_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"n\">converters</span><span class=\"o\">=</span><span class=\"n\">StringView</span><span class=\"p\">)</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">with_parser</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">as_message_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"o\">/</span><span class=\"p\">,</span> <span class=\"n\">argument</span><span class=\"p\">:</span> <span class=\"n\">StringView</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n", "parameters": ["key", "converters", "default"], "funcdef": "def"}, "tanjun.with_multi_argument": {"fullname": "tanjun.with_multi_argument", "modulename": "tanjun", "qualname": "with_multi_argument", "type": "function", "doc": "<p>Add a multi-argument to a parsable command through a decorator call.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>A multi argument will consume the remaining positional arguments and pass\nthem to the converters through multiple calls while also requiring that\nat least one more positional argument is remaining unless a default is\nset and passing through the results to the command's callback as a\nsequence.</li>\n<li>Order matters for positional arguments and since decorator execution\nstarts at the decorator closest to the command and goes upwards this\nwill decide where a positional argument is located in a command's\nsignature.</li>\n<li>If no parser is explicitly set on the command this is decorating before\nthis decorator call then this will set <code>ShlexParser</code> as the parser.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong> (str):\nThe string identifier of this argument (may be used to pass the result\nof this argument to the command's callback during execution).</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>converters</strong> (typing.Union[ConverterSig, collections.abc.Iterable[ConverterSig]]):\nThe converter(s) this argument should use to handle values passed to it\nduring parsing.</p>\n\n<p>If no converters are provided then the raw string value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>default</strong> (typing.Any):\nThe default value of this argument, if left as\n<code>UNDEFINED_DEFAULT</code> then this will have no default.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[ParseableProtoT], ParseableProtoT]:</strong>: Decorator function for the parsable command this argument is being added to.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">tanjun</span>\n\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">with_multi_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"n\">converters</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">with_parser</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">as_message_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"o\">/</span><span class=\"p\">,</span> <span class=\"n\">argument</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]):</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n", "parameters": ["key", "converters", "default"], "funcdef": "def"}, "tanjun.with_option": {"fullname": "tanjun.with_option", "modulename": "tanjun", "qualname": "with_option", "type": "function", "doc": "<p>Add an option to a parsable command through a decorator call.</p>\n\n<p><em>Note:</em>\nIf no parser is explicitly set on the command this is decorating before\nthis decorator call then this will set <code>ShlexParser</code> as the parser.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong> (str):\nThe string identifier of this option which will be used to pass the\nresult of this argument to the command's callback during execution as\na keyword argument.</li>\n<li><strong>name</strong> (str):\nThe name of this option used for identifying it in the parsed content.</li>\n<li><strong>default</strong> (typing.Any):\nThe default value of this argument, unlike arguments this is required\nfor options.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>*names</strong> (str):\nOther names of this option used for identifying it in the parsed content.</li>\n<li><p><strong>converters</strong> (typing.Union[ConverterSig, collections.abc.Iterable[ConverterSig]]):\nThe converter(s) this argument should use to handle values passed to it\nduring parsing.</p>\n\n<p>If no converters are provided then the raw string value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>empty_value</strong> (typing.Any):\nThe value to use if this option is provided without a value. If left as\n<code>UNDEFINED_DEFAULT</code> then this option will error if it's\nprovided without a value.</li>\n<li><strong>multi</strong> (bool):\nIf this option can be provided multiple times.\nDefaults to <code>False</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[ParseableProtoT], ParseableProtoT]:</strong>: Decorator function for the parsable command this option is being added to.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">tanjun</span>\n\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">with_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"n\">converters</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">with_parser</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">as_message_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"o\">/</span><span class=\"p\">,</span> <span class=\"n\">argument</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n", "parameters": ["key", "name", "names", "converters", "default", "empty_value", "multi"], "funcdef": "def"}, "tanjun.with_multi_option": {"fullname": "tanjun.with_multi_option", "modulename": "tanjun", "qualname": "with_multi_option", "type": "function", "doc": "<p>Add an multi-option to a command's parser through a decorator call.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>A multi option will consume all the values provided for an option and\npass them through to the converters as an array of strings while also\nrequiring that at least one value is provided for the option unless\na default is set.</li>\n<li>If no parser is explicitly set on the command this is decorating before\nthis decorator call then this will set <code>ShlexParser</code> as the parser.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong> (str):\nThe string identifier of this option which will be used to pass the\nresult of this argument to the command's callback during execution as\na keyword argument.</li>\n<li><strong>name</strong> (str):\nThe name of this option used for identifying it in the parsed content.</li>\n<li><strong>default</strong> (typing.Any):\nThe default value of this argument, unlike arguments this is required\nfor options.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>*names</strong> (str):\nOther names of this option used for identifying it in the parsed content.</li>\n<li><p><strong>converters</strong> (typing.Union[ConverterSig, collections.abc.Iterable[ConverterSig]]):\nThe converter(s) this argument should use to handle values passed to it\nduring parsing.</p>\n\n<p>If no converters are provided then the raw string value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>empty_value</strong> (typing.Any):\nThe value to use if this option is provided without a value. If left as\n<code>UNDEFINED_DEFAULT</code> then this option will error if it's\nprovided without a value.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[ParseableProtoT], ParseableProtoT]:</strong>: Decorator function for the parsable command this option is being added to.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">tanjun</span>\n\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">with_multi_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"n\">converters</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"p\">())</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">with_parser</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">as_message_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"o\">/</span><span class=\"p\">,</span> <span class=\"n\">argument</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]):</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n", "parameters": ["key", "name", "names", "converters", "default", "empty_value"], "funcdef": "def"}, "tanjun.with_parser": {"fullname": "tanjun.with_parser", "modulename": "tanjun", "qualname": "with_parser", "type": "function", "doc": "<p>Add a shlex parser command parser to a supported command.</p>\n\n<h6 id=\"example\">Example</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">with_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;arg&quot;</span><span class=\"p\">,</span> <span class=\"n\">converters</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">with_parser</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_message_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;hi&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">hi</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">MessageContext</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (ParseableProtoT):\nThe parseable command to set the parser on.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ParseableProtoT</strong>: The command with the parser set.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the command already has a parser set.</li>\n</ul>\n", "parameters": ["command"], "funcdef": "def"}, "tanjun.as_interval": {"fullname": "tanjun.as_interval", "modulename": "tanjun", "qualname": "as_interval", "type": "function", "doc": "<p>Decorator to create an schedule.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>interval</strong> (typing.Union[int, float, datetime.timedelta]):\nThe callback for the schedule.</p>\n\n<p>This should be an asynchronous function which takes no positional\narguments, returns <code>None</code> and may use dependency injection.</p></li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>fatal_exceptions</strong> (collections.abc.Sequence[type[Exception]]):\nA sequence of exceptions that will cause the schedule to stop if raised\nby the callback, start callback or stop callback.</p>\n\n<p>Defaults to no exceptions.</p></li>\n<li><p><strong>ignored_exceptions</strong> (collections.abc.Sequence[type[Exception]]):\nA sequence of exceptions that should be ignored if raised by the\ncallback, start callback or stop callback.</p>\n\n<p>Defaults to no exceptions.</p></li>\n<li><strong>max_runs</strong> (typing.Optional[int]):\nThe maximum amount of times the schedule runs. Defaults to no maximum.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.Callable[[_CallbackSigT], tanjun.scheduling.IntervalSchedule[_CallbackSigT]]</strong>: The decorator used to create the schedule.</li>\n</ul>\n", "parameters": ["interval", "fatal_exceptions", "ignored_exceptions", "max_runs"], "funcdef": "def"}, "tanjun.abc": {"fullname": "tanjun.abc", "modulename": "tanjun.abc", "qualname": "", "type": "module", "doc": "<p>Interfaces of the objects and clients used within Tanjun.</p>\n"}, "tanjun.abc.ClientLoader": {"fullname": "tanjun.abc.ClientLoader", "modulename": "tanjun.abc", "qualname": "ClientLoader", "type": "class", "doc": "<p>Interface of logic used to load and unload components into a generic client.</p>\n"}, "tanjun.abc.ClientLoader.load": {"fullname": "tanjun.abc.ClientLoader.load", "modulename": "tanjun.abc", "qualname": "ClientLoader.load", "type": "function", "doc": "<p>Load logic into a client instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>client</strong> (Client):\nThe client to load commands and listeners for.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bool</strong>: Whether anything was loaded.</li>\n</ul>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.abc.ClientLoader.unload": {"fullname": "tanjun.abc.ClientLoader.unload", "modulename": "tanjun.abc", "qualname": "ClientLoader.unload", "type": "function", "doc": "<p>Unload logic from a client instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>client</strong> (Client):\nThe client to unload commands and listeners from.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bool</strong>: Whether anything was unloaded.</li>\n</ul>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.abc.BaseSlashCommandT": {"fullname": "tanjun.abc.BaseSlashCommandT", "modulename": "tanjun.abc", "qualname": "BaseSlashCommandT", "type": "variable", "doc": "<p></p>\n"}, "tanjun.abc.CommandCallbackSig": {"fullname": "tanjun.abc.CommandCallbackSig", "modulename": "tanjun.abc", "qualname": "CommandCallbackSig", "type": "class", "doc": "<p>Type hint of the callback a <code>Command</code> instance will operate on.</p>\n\n<p>This will be called when executing a command and will need to take at least one\npositional argument of type <code>Context</code> where any other required or optional\nkeyword or positional arguments will be based on the parser instance for the\ncommand if applicable.</p>\n\n<p><em>Note:</em>\nThis will have to be asynchronous.</p>\n"}, "tanjun.abc.CommandCallbackSigT": {"fullname": "tanjun.abc.CommandCallbackSigT", "modulename": "tanjun.abc", "qualname": "CommandCallbackSigT", "type": "variable", "doc": "<p>Generic equivalent of <code>CommandCallbackSig</code>.</p>\n"}, "tanjun.abc.CheckSig": {"fullname": "tanjun.abc.CheckSig", "modulename": "tanjun.abc", "qualname": "CheckSig", "type": "class", "doc": "<p>Type hint of a general context check used with Tanjun <code>ExecutableCommand</code> classes.</p>\n\n<p>This may be registered with a <code>ExecutableCommand</code> to add a rule which decides whether\nit should execute for each context passed to it. This should take one positional\nargument of type <code>Context</code> and may either be a synchronous or asynchronous\ncallback which returns <code>bool</code> where returning <code>False</code> or\nraising <code>tanjun.errors.FailedCheck</code> will indicate that the current context\nshouldn't lead to an execution.</p>\n"}, "tanjun.abc.CheckSigT": {"fullname": "tanjun.abc.CheckSigT", "modulename": "tanjun.abc", "qualname": "CheckSigT", "type": "variable", "doc": "<p>Generic equivalent of <code>CheckSig</code></p>\n"}, "tanjun.abc.Context": {"fullname": "tanjun.abc.Context", "modulename": "tanjun.abc", "qualname": "Context", "type": "class", "doc": "<p>Interface for the context of a command execution.</p>\n"}, "tanjun.abc.Context.author": {"fullname": "tanjun.abc.Context.author", "modulename": "tanjun.abc", "qualname": "Context.author", "type": "variable", "doc": "<p>Object of the user who triggered this command.</p>\n"}, "tanjun.abc.Context.channel_id": {"fullname": "tanjun.abc.Context.channel_id", "modulename": "tanjun.abc", "qualname": "Context.channel_id", "type": "variable", "doc": "<p>ID of the channel this command was triggered in.</p>\n"}, "tanjun.abc.Context.cache": {"fullname": "tanjun.abc.Context.cache", "modulename": "tanjun.abc", "qualname": "Context.cache", "type": "variable", "doc": "<p>Hikari cache instance this context's command client was initialised with.</p>\n"}, "tanjun.abc.Context.client": {"fullname": "tanjun.abc.Context.client", "modulename": "tanjun.abc", "qualname": "Context.client", "type": "variable", "doc": "<p>Tanjun <code>Client</code> implementation this context was spawned by.</p>\n"}, "tanjun.abc.Context.component": {"fullname": "tanjun.abc.Context.component", "modulename": "tanjun.abc", "qualname": "Context.component", "type": "variable", "doc": "<p>Object of the <code>Component</code> this context is bound to.</p>\n\n<p><em>Note:</em>\nThis will only be <code>None</code> before this has been bound to a\nspecific command but never during command execution nor checks.</p>\n"}, "tanjun.abc.Context.command": {"fullname": "tanjun.abc.Context.command", "modulename": "tanjun.abc", "qualname": "Context.command", "type": "variable", "doc": "<p>Object of the command this context is bound to.</p>\n\n<p><em>Note:</em>\nThis will only be <code>None</code> before this has been bound to a\nspecific command but never during command execution.</p>\n"}, "tanjun.abc.Context.created_at": {"fullname": "tanjun.abc.Context.created_at", "modulename": "tanjun.abc", "qualname": "Context.created_at", "type": "variable", "doc": "<p>When this context was created.</p>\n\n<p><em>Note:</em>\nThis will either refer to a message or integration's creation date.</p>\n"}, "tanjun.abc.Context.events": {"fullname": "tanjun.abc.Context.events", "modulename": "tanjun.abc", "qualname": "Context.events", "type": "variable", "doc": "<p>Object of the event manager this context's client was initialised with.</p>\n"}, "tanjun.abc.Context.guild_id": {"fullname": "tanjun.abc.Context.guild_id", "modulename": "tanjun.abc", "qualname": "Context.guild_id", "type": "variable", "doc": "<p>ID of the guild this command was executed in.</p>\n\n<p>Will be <code>None</code> for all DM command executions.</p>\n"}, "tanjun.abc.Context.has_responded": {"fullname": "tanjun.abc.Context.has_responded", "modulename": "tanjun.abc", "qualname": "Context.has_responded", "type": "variable", "doc": "<p>Whether an initial response has been made for this context.</p>\n"}, "tanjun.abc.Context.is_human": {"fullname": "tanjun.abc.Context.is_human", "modulename": "tanjun.abc", "qualname": "Context.is_human", "type": "variable", "doc": "<p>Whether this command execution was triggered by a human.</p>\n\n<p>Will be <code>False</code> for bot and webhook triggered commands.</p>\n"}, "tanjun.abc.Context.member": {"fullname": "tanjun.abc.Context.member", "modulename": "tanjun.abc", "qualname": "Context.member", "type": "variable", "doc": "<p>Guild member object of this command's author.</p>\n\n<p>Will be <code>None</code> for DM command executions.</p>\n"}, "tanjun.abc.Context.server": {"fullname": "tanjun.abc.Context.server", "modulename": "tanjun.abc", "qualname": "Context.server", "type": "variable", "doc": "<p>Object of the Hikari interaction server provided for this context's client.</p>\n"}, "tanjun.abc.Context.rest": {"fullname": "tanjun.abc.Context.rest", "modulename": "tanjun.abc", "qualname": "Context.rest", "type": "variable", "doc": "<p>Object of the Hikari REST client this context's client was initialised with.</p>\n"}, "tanjun.abc.Context.shards": {"fullname": "tanjun.abc.Context.shards", "modulename": "tanjun.abc", "qualname": "Context.shards", "type": "variable", "doc": "<p>Object of the Hikari shard manager this context's client was initialised with.</p>\n"}, "tanjun.abc.Context.voice": {"fullname": "tanjun.abc.Context.voice", "modulename": "tanjun.abc", "qualname": "Context.voice", "type": "variable", "doc": "<p>Object of the Hikari voice component this context's client was initialised with.</p>\n"}, "tanjun.abc.Context.triggering_name": {"fullname": "tanjun.abc.Context.triggering_name", "modulename": "tanjun.abc", "qualname": "Context.triggering_name", "type": "variable", "doc": "<p>Command name this execution was triggered with.</p>\n"}, "tanjun.abc.Context.set_component": {"fullname": "tanjun.abc.Context.set_component", "modulename": "tanjun.abc", "qualname": "Context.set_component", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "_"], "funcdef": "def"}, "tanjun.abc.Context.fetch_channel": {"fullname": "tanjun.abc.Context.fetch_channel", "modulename": "tanjun.abc", "qualname": "Context.fetch_channel", "type": "function", "doc": "<p>Fetch the channel the context was invoked in.</p>\n\n<p><em>Note:</em>\nThis performs an API call. Consider using <code>Context.get_channel</code>\nif you have <code>hikari.config.CacheComponents.GUILD_CHANNELS</code> cache component enabled.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.TextableChannel</strong>: The textable DM or guild channel the context was invoked in.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>hikari.UnauthorizedError</strong>: If you are unauthorized to make the request (invalid/missing token).</li>\n<li><strong>hikari.ForbiddenError</strong>: If you are missing the <code>READ_MESSAGES</code> permission in the channel.</li>\n<li><strong>hikari.NotFoundError</strong>: If the channel is not found.</li>\n<li><strong>hikari.RateLimitTooLongError</strong>: Raised in the event that a rate limit occurs that is\nlonger than <code>max_rate_limit</code> when making a request.</li>\n<li><strong>hikari.RateLimitTooLongError</strong>: Raised in the event that a rate limit occurs that is\nlonger than <code>max_rate_limit</code> when making a request.</li>\n<li><strong>hikari.RateLimitedError</strong>: Usually, Hikari will handle and retry on hitting\nrate-limits automatically. This includes most bucket-specific\nrate-limits and global rate-limits. In some rare edge cases,\nhowever, Discord implements other undocumented rules for\nrate-limiting, such as limits per attribute. These cannot be\ndetected or handled normally by Hikari due to their undocumented\nnature, and will trigger this exception if they occur.</li>\n<li><strong>hikari.InternalServerError</strong>: If an internal error occurs on Discord while handling the request.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.abc.Context.fetch_guild": {"fullname": "tanjun.abc.Context.fetch_guild", "modulename": "tanjun.abc", "qualname": "Context.fetch_guild", "type": "function", "doc": "<p>Fetch the guild the context was invoked in.</p>\n\n<p><em>Note:</em>\nThis performs an API call. Consider using <code>Context.get_guild</code>\nif you have <code>hikari.config.CacheComponents.GUILDS</code> cache component enabled.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[hikari.Guild]</strong>: An optional guild the context was invoked in.\n<code>None</code> will be returned if the guild was not found or the context was invoked in a DM channel .</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>hikari.ForbiddenError</strong>: If you are not part of the guild.</li>\n<li><strong>hikari.NotFoundError</strong>: If the guild is not found.</li>\n<li><strong>hikari.UnauthorizedError</strong>: If you are unauthorized to make the request (invalid/missing token).</li>\n<li><strong>hikari.RateLimitTooLongError</strong>: Raised in the event that a rate limit occurs that is\nlonger than <code>max_rate_limit</code> when making a request.</li>\n<li><strong>hikari.RateLimitedError</strong>: Usually, Hikari will handle and retry on hitting\nrate-limits automatically. This includes most bucket-specific\nrate-limits and global rate-limits. In some rare edge cases,\nhowever, Discord implements other undocumented rules for\nrate-limiting, such as limits per attribute. These cannot be\ndetected or handled normally by Hikari due to their undocumented\nnature, and will trigger this exception if they occur.</li>\n<li><strong>hikari.InternalServerError</strong>: If an internal error occurs on Discord while handling the request.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.abc.Context.get_channel": {"fullname": "tanjun.abc.Context.get_channel", "modulename": "tanjun.abc", "qualname": "Context.get_channel", "type": "function", "doc": "<p>Retrieve the channel the context was invoked in from the cache.</p>\n\n<p><em>Note:</em>\nThis method requires the <code>hikari.config.CacheComponents.GUILD_CHANNELS</code> cache component.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[hikari.TextableGuildChannel]</strong>: An optional guild channel the context was invoked in.\n<code>None</code> will be returned if the channel was not found or if it\nis DM channel.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.abc.Context.get_guild": {"fullname": "tanjun.abc.Context.get_guild", "modulename": "tanjun.abc", "qualname": "Context.get_guild", "type": "function", "doc": "<p>Fetch the guild that the context was invoked in.</p>\n\n<p><em>Note:</em>\nThis method requires <code>hikari.config.CacheComponents.GUILDS</code> cache component enabled.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[hikari.Guild]</strong>: An optional guild the context was invoked in.\n<code>None</code> will be returned if the guild was not found.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.abc.Context.delete_initial_response": {"fullname": "tanjun.abc.Context.delete_initial_response", "modulename": "tanjun.abc", "qualname": "Context.delete_initial_response", "type": "function", "doc": "<p>Delete the initial response after invoking this context.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>LookupError, hikari.NotFoundError</strong>: The last context has no initial response.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.abc.Context.delete_last_response": {"fullname": "tanjun.abc.Context.delete_last_response", "modulename": "tanjun.abc", "qualname": "Context.delete_last_response", "type": "function", "doc": "<p>Delete the last response after invoking this context.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>LookupError, hikari.NotFoundError</strong>: The last context has no responses.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.abc.Context.edit_initial_response": {"fullname": "tanjun.abc.Context.edit_initial_response", "modulename": "tanjun.abc", "qualname": "Context.edit_initial_response", "type": "function", "doc": "<p>Edit the initial response for this context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>content</strong> (hikari.UndefinedOr[typing.Any]):\nThe content to edit the initial response with.</p>\n\n<p>If provided, the message contents. If\n<code>hikari.UNDEFINED</code>, then nothing will be sent\nin the content. Any other value here will be cast to a\n<code>str</code>.</p>\n\n<p>If this is a <code>hikari.Embed</code> and no <code>embed</code> nor <code>embeds</code> kwarg\nis provided, then this will instead update the embed. This allows\nfor simpler syntax when sending an embed alone.</p>\n\n<p>Likewise, if this is a <code>hikari.Resource</code>, then the\ncontent is instead treated as an attachment if no <code>attachment</code> and\nno <code>attachments</code> kwargs are provided.</p></li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>delete_after</strong> (typing.Union[datetime.timedelta, float, int, None]):\nIf provided, the seconds after which the response message should be deleted.</p>\n\n<p><em>Note:</em>\nSlash command responses can only be deleted within 14 minutes of the\ncommand being received.</p>\n\n<p><em>Note:</em>\nSince (as of writing) ephemeral responses cannot be deleted by the bot,\nthis is ignored for ephemeral slash command responses.</p></li>\n<li><strong>attachment</strong> (hikari.UndefinedOr[hikari.Resourceish]):\nA singular attachment to edit the initial response with.</li>\n<li><strong>attachments</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Resourceish]]):\nA sequence of attachments to edit the initial response with.</li>\n<li><strong>component</strong> (hikari.UndefinedNoneOr[hikari.api.ComponentBuilder]):\nIf provided, builder object of the component to set for this message.\nThis component will replace any previously set components and passing\n<code>None</code> will remove all components.</li>\n<li><strong>components</strong> (hikari.UndefinedNoneOr[collections.abc.Sequence[hikari.api.ComponentBuilder]]):\nIf provided, a sequence of the component builder objects set for\nthis message. These components will replace any previously set\ncomponents and passing <code>None</code> or an empty sequence will\nremove all components.</li>\n<li><strong>embed</strong> (hikari.UndefinedOr[hikari.Embed]):\nAn embed to replace the initial response with.</li>\n<li><strong>embeds</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Embed]]):\nA sequence of embeds to replace the initial response with.</li>\n<li><strong>replace_attachments</strong> (bool):\nWhether to replace the attachments of the response or not. Default to <code>False</code>.</li>\n<li><strong>mentions_everyone</strong> (hikari.UndefinedOr[bool]):\nIf provided, whether the message should parse @everyone/@here\nmentions.</li>\n<li><strong>user_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialUser], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.\nAlternatively this may be a collection of\n<code>hikari.Snowflake</code>, or <code>hikari.PartialUser</code>\nderivatives to enforce mentioning specific users.</li>\n<li><strong>role_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialRole], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.\nAlternatively this may be a collection of\n<code>hikari.Snowflake</code>, or\n<code>hikari.PartialRole</code> derivatives to enforce mentioning\nspecific roles.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>Attachments can be passed as many different things, to aid in\nconvenience.</p>\n\n<ul>\n<li>If a <code>pathlib.PurePath</code> or <code>str</code> to a valid URL, the\nresource at the given URL will be streamed to Discord when\nsending the message. Subclasses of\n<code>hikari.WebResource</code> such as\n<code>hikari.URL</code>,\n<code>hikari.Attachment</code>,\n<code>hikari.Emoji</code>,\n<code>EmbedResource</code>, etc will also be uploaded this way.\nThis will use bit-inception, so only a small percentage of the\nresource will remain in memory at any one time, thus aiding in\nscalability.</li>\n<li>If a <code>hikari.Bytes</code> is passed, or a <code>str</code>\nthat contains a valid data URI is passed, then this is uploaded\nwith a randomized file name if not provided.</li>\n<li>If a <code>hikari.File</code>, <code>pathlib.PurePath</code> or\n<code>str</code> that is an absolute or relative path to a file\non your file system is passed, then this resource is uploaded\nas an attachment using non-blocking code internally and streamed\nusing bit-inception where possible. This depends on the\ntype of <code>concurrent.futures.Executor</code> that is being used for\nthe application (default is a thread pool which supports this\nbehaviour).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Message</strong>: The message that has been edited.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If more than 100 unique objects/entities are passed for\n<code>role_mentions</code> or <code>user_mentions</code>.\nIf <code>delete_after</code> would be more than 14 minutes after the slash\ncommand was called.</li>\n<li><strong>TypeError</strong>: If both <code>attachment</code> and <code>attachments</code> are specified.</li>\n<li><strong>hikari.BadRequestError</strong>: This may be raised in several discrete situations, such as messages\nbeing empty with no attachments or embeds; messages with more than\n2000 characters in them, embeds that exceed one of the many embed\nlimits; too many attachments; attachments that are too large;\ninvalid image URLs in embeds; too many components.</li>\n<li><strong>hikari.UnauthorizedError</strong>: If you are unauthorized to make the request (invalid/missing token).</li>\n<li><strong>hikari.ForbiddenError</strong>: If you are missing the <code>SEND_MESSAGES</code> in the channel or the\nperson you are trying to message has the DM's disabled.</li>\n<li><strong>hikari.NotFoundError</strong>: If the channel is not found.</li>\n<li><strong>hikari.RateLimitTooLongError</strong>: Raised in the event that a rate limit occurs that is\nlonger than <code>max_rate_limit</code> when making a request.</li>\n<li><strong>hikari.RateLimitedError</strong>: Usually, Hikari will handle and retry on hitting\nrate-limits automatically. This includes most bucket-specific\nrate-limits and global rate-limits. In some rare edge cases,\nhowever, Discord implements other undocumented rules for\nrate-limiting, such as limits per attribute. These cannot be\ndetected or handled normally by Hikari due to their undocumented\nnature, and will trigger this exception if they occur.</li>\n<li><strong>hikari.InternalServerError</strong>: If an internal error occurs on Discord while handling the request.</li>\n</ul>\n", "parameters": ["self", "content", "delete_after", "attachment", "attachments", "component", "components", "embed", "embeds", "replace_attachments", "mentions_everyone", "user_mentions", "role_mentions"], "funcdef": "async def"}, "tanjun.abc.Context.edit_last_response": {"fullname": "tanjun.abc.Context.edit_last_response", "modulename": "tanjun.abc", "qualname": "Context.edit_last_response", "type": "function", "doc": "<p>Edit the last response for this context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>content</strong> (hikari.UndefinedOr[typing.Any]):\nThe content to edit the last response with.</p>\n\n<p>If provided, the message contents. If\n<code>hikari.UNDEFINED</code>, then nothing will be sent\nin the content. Any other value here will be cast to a\n<code>str</code>.</p>\n\n<p>If this is a <code>hikari.Embed</code> and no <code>embed</code> nor <code>embeds</code> kwarg\nis provided, then this will instead update the embed. This allows\nfor simpler syntax when sending an embed alone.</p>\n\n<p>Likewise, if this is a <code>hikari.Resource</code>, then the\ncontent is instead treated as an attachment if no <code>attachment</code> and\nno <code>attachments</code> kwargs are provided.</p></li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>delete_after</strong> (typing.Union[datetime.timedelta, float, int, None]):\nIf provided, the seconds after which the response message should be deleted.</p>\n\n<p><em>Note:</em>\nSlash command responses can only be deleted within 14 minutes of the\ncommand being received.</p>\n\n<p><em>Note:</em>\nSince (as of writing) ephemeral responses cannot be deleted by the bot,\nthis is ignored for ephemeral slash command responses.</p></li>\n<li><strong>attachment</strong> (hikari.UndefinedOr[hikari.Resourceish]):\nA singular attachment to edit the last response with.</li>\n<li><strong>attachments</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Resourceish]]):\nA sequence of attachments to edit the last response with.</li>\n<li><strong>component</strong> (hikari.UndefinedNoneOr[hikari.api.ComponentBuilder]):\nIf provided, builder object of the component to set for this message.\nThis component will replace any previously set components and passing\n<code>None</code> will remove all components.</li>\n<li><strong>components</strong> (hikari.UndefinedNoneOr[collections.abc.Sequence[hikari.api.ComponentBuilder]]):\nIf provided, a sequence of the component builder objects set for\nthis message. These components will replace any previously set\ncomponents and passing <code>None</code> or an empty sequence will\nremove all components.</li>\n<li><strong>embed</strong> (hikari.UndefinedOr[hikari.Embed]):\nAn embed to replace the last response with.</li>\n<li><strong>embeds</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Embed]]):\nA sequence of embeds to replace the last response with.</li>\n<li><strong>replace_attachments</strong> (bool):\nWhether to replace the attachments of the response or not. Default to <code>False</code>.</li>\n<li><strong>mentions_everyone</strong> (hikari.UndefinedOr[bool]):\nIf provided, whether the message should parse @everyone/@here\nmentions.</li>\n<li><p><strong>user_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialUser], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.</p>\n\n<p>Alternatively this may be a collection of\n<code>hikari.Snowflake</code>, or <code>hikari.PartialUser</code>\nderivatives to enforce mentioning specific users.</p></li>\n<li><p><strong>role_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialRole], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.</p>\n\n<p>Alternatively this may be a collection of\n<code>hikari.Snowflake</code>, or\n<code>hikari.PartialRole</code> derivatives to enforce mentioning\nspecific roles.</p></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>Attachments can be passed as many different things, to aid in\nconvenience.</p>\n\n<ul>\n<li>If a <code>pathlib.PurePath</code> or <code>str</code> to a valid URL, the\nresource at the given URL will be streamed to Discord when\nsending the message. Subclasses of\n<code>hikari.WebResource</code> such as\n<code>hikari.URL</code>,\n<code>hikari.Attachment</code>,\n<code>hikari.Emoji</code>,\n<code>EmbedResource</code>, etc will also be uploaded this way.\nThis will use bit-inception, so only a small percentage of the\nresource will remain in memory at any one time, thus aiding in\nscalability.</li>\n<li>If a <code>hikari.Bytes</code> is passed, or a <code>str</code>\nthat contains a valid data URI is passed, then this is uploaded\nwith a randomized file name if not provided.</li>\n<li>If a <code>hikari.File</code>, <code>pathlib.PurePath</code> or\n<code>str</code> that is an absolute or relative path to a file\non your file system is passed, then this resource is uploaded\nas an attachment using non-blocking code internally and streamed\nusing bit-inception where possible. This depends on the\ntype of <code>concurrent.futures.Executor</code> that is being used for\nthe application (default is a thread pool which supports this\nbehaviour).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Message</strong>: The message that has been edited.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If more than 100 unique objects/entities are passed for\n<code>role_mentions</code> or <code>user_mentions</code>.\nIf <code>delete_after</code> would be more than 14 minutes after the slash\ncommand was called.</li>\n<li><strong>TypeError</strong>: If both <code>attachment</code> and <code>attachments</code> are specified.</li>\n<li><strong>hikari.BadRequestError</strong>: This may be raised in several discrete situations, such as messages\nbeing empty with no attachments or embeds; messages with more than\n2000 characters in them, embeds that exceed one of the many embed\nlimits; too many attachments; attachments that are too large;\ninvalid image URLs in embeds; too many components.</li>\n<li><strong>hikari.UnauthorizedError</strong>: If you are unauthorized to make the request (invalid/missing token).</li>\n<li><strong>hikari.ForbiddenError</strong>: If you are missing the <code>SEND_MESSAGES</code> in the channel or the\nperson you are trying to message has the DM's disabled.</li>\n<li><strong>hikari.NotFoundError</strong>: If the channel is not found.</li>\n<li><strong>hikari.RateLimitTooLongError</strong>: Raised in the event that a rate limit occurs that is\nlonger than <code>max_rate_limit</code> when making a request.</li>\n<li><strong>hikari.RateLimitedError</strong>: Usually, Hikari will handle and retry on hitting\nrate-limits automatically. This includes most bucket-specific\nrate-limits and global rate-limits. In some rare edge cases,\nhowever, Discord implements other undocumented rules for\nrate-limiting, such as limits per attribute. These cannot be\ndetected or handled normally by Hikari due to their undocumented\nnature, and will trigger this exception if they occur.</li>\n<li><strong>hikari.InternalServerError</strong>: If an internal error occurs on Discord while handling the request.</li>\n</ul>\n", "parameters": ["self", "content", "delete_after", "attachment", "attachments", "component", "components", "embed", "embeds", "replace_attachments", "mentions_everyone", "user_mentions", "role_mentions"], "funcdef": "async def"}, "tanjun.abc.Context.fetch_initial_response": {"fullname": "tanjun.abc.Context.fetch_initial_response", "modulename": "tanjun.abc", "qualname": "Context.fetch_initial_response", "type": "function", "doc": "<p>Fetch the initial response for this context.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>LookupError, hikari.NotFoundError</strong>: The response was not found.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.abc.Context.fetch_last_response": {"fullname": "tanjun.abc.Context.fetch_last_response", "modulename": "tanjun.abc", "qualname": "Context.fetch_last_response", "type": "function", "doc": "<p>Fetch the last response for this context.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>LookupError, hikari.NotFoundError</strong>: The response was not found.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.abc.Context.respond": {"fullname": "tanjun.abc.Context.respond", "modulename": "tanjun.abc", "qualname": "Context.respond", "type": "function", "doc": "<p>Respond to this context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>content</strong> (hikari.UndefinedOr[typing.Any]):\nThe content to respond with.</p>\n\n<p>If provided, the message contents. If\n<code>hikari.UNDEFINED</code>, then nothing will be sent\nin the content. Any other value here will be cast to a\n<code>str</code>.</p>\n\n<p>If this is a <code>hikari.Embed</code> and no <code>embed</code> nor <code>embeds</code> kwarg\nis provided, then this will instead update the embed. This allows\nfor simpler syntax when sending an embed alone.</p>\n\n<p>Likewise, if this is a <code>hikari.Resource</code>, then the\ncontent is instead treated as an attachment if no <code>attachment</code> and\nno <code>attachments</code> kwargs are provided.</p></li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>ensure_result</strong> (bool):\nEnsure that this call will always return a message object.</p>\n\n<p>If <code>True</code> then this will always return <code>hikari.Message</code>, otherwise\nthis will return <code>Optional[hikari.Message]</code>.</p>\n\n<p>It's worth noting that, under certain scenarios within the slash\ncommand flow, this may lead to an extre request being made.</p></li>\n<li><p><strong>delete_after</strong> (typing.Union[datetime.timedelta, float, int, None]):\nIf provided, the seconds after which the response message should be deleted.</p>\n\n<p><em>Note:</em>\nSlash command responses can only be deleted within 14 minutes of the\ncommand being received.</p>\n\n<p><em>Note:</em>\nSince (as of writing) ephemeral responses cannot be deleted by the bot,\nthis is ignored for ephemeral slash command responses.</p></li>\n<li><strong>component</strong> (hikari.UndefinedOr[hikari.api.ComponentBuilder]):\nIf provided, builder object of the component to include in this response.</li>\n<li><strong>components</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.api.ComponentBuilder]]):\nIf provided, a sequence of the component builder objects to include\nin this response.</li>\n<li><strong>embed</strong> (hikari.UndefinedOr[hikari.Embed]):\nAn embed to respond with.</li>\n<li><strong>embeds</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Embed]]):\nA sequence of embeds to respond with.</li>\n<li><strong>mentions_everyone</strong> (hikari.UndefinedOr[bool]):\nIf provided, whether the message should parse @everyone/@here\nmentions.</li>\n<li><p><strong>user_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialUser], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.</p>\n\n<p>Alternatively this may be a collection of\n<code>hikari.Snowflake</code>, or <code>hikari.PartialUser</code>\nderivatives to enforce mentioning specific users.</p></li>\n<li><p><strong>role_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialRole], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.</p>\n\n<p>Alternatively this may be a collection of\n<code>hikari.Snowflake</code>, or\n<code>hikari.PartialRole</code> derivatives to enforce mentioning\nspecific roles.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[hikari.Message]</strong>: The message that has been created if it was immedieatly available or\n<code>ensure_result</code> was set to <code>True</code>, else <code>None</code>.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If more than 100 unique objects/entities are passed for\n<code>role_mentions</code> or <code>user_mentions</code>.\nIf <code>delete_after</code> would be more than 14 minutes after the slash\ncommand was called.</li>\n<li><strong>TypeError</strong>: If both <code>attachment</code> and <code>attachments</code> are specified.</li>\n<li><strong>hikari.BadRequestError</strong>: This may be raised in several discrete situations, such as messages\nbeing empty with no attachments or embeds; messages with more than\n2000 characters in them, embeds that exceed one of the many embed\nlimits; too many attachments; attachments that are too large;\ninvalid image URLs in embeds; too many components.</li>\n<li><strong>hikari.UnauthorizedError</strong>: If you are unauthorized to make the request (invalid/missing token).</li>\n<li><strong>hikari.ForbiddenError</strong>: If you are missing the <code>SEND_MESSAGES</code> in the channel or the\nperson you are trying to message has the DM's disabled.</li>\n<li><strong>hikari.NotFoundError</strong>: If the channel is not found.</li>\n<li><strong>hikari.RateLimitTooLongError</strong>: Raised in the event that a rate limit occurs that is\nlonger than <code>max_rate_limit</code> when making a request.</li>\n<li><strong>hikari.RateLimitedError</strong>: Usually, Hikari will handle and retry on hitting\nrate-limits automatically. This includes most bucket-specific\nrate-limits and global rate-limits. In some rare edge cases,\nhowever, Discord implements other undocumented rules for\nrate-limiting, such as limits per attribute. These cannot be\ndetected or handled normally by Hikari due to their undocumented\nnature, and will trigger this exception if they occur.</li>\n<li><strong>hikari.InternalServerError</strong>: If an internal error occurs on Discord while handling the request.</li>\n</ul>\n", "parameters": ["self", "content", "ensure_result", "delete_after", "component", "components", "embed", "embeds", "mentions_everyone", "user_mentions", "role_mentions"], "funcdef": "async def"}, "tanjun.abc.ClientCallbackNames": {"fullname": "tanjun.abc.ClientCallbackNames", "modulename": "tanjun.abc", "qualname": "ClientCallbackNames", "type": "class", "doc": "<p>Enum of the standard client callback names.</p>\n\n<p>These should be dispatched by all <code>Client</code> implementations.</p>\n"}, "tanjun.abc.ClientCallbackNames.CLOSED": {"fullname": "tanjun.abc.ClientCallbackNames.CLOSED", "modulename": "tanjun.abc", "qualname": "ClientCallbackNames.CLOSED", "type": "variable", "doc": "<p>Called when the client has finished closing.</p>\n\n<p>No positional arguments are provided for this event.</p>\n"}, "tanjun.abc.ClientCallbackNames.CLOSING": {"fullname": "tanjun.abc.ClientCallbackNames.CLOSING", "modulename": "tanjun.abc", "qualname": "ClientCallbackNames.CLOSING", "type": "variable", "doc": "<p>Called when the client is initially instructed to close.</p>\n\n<p>No positional arguments are provided for this event.</p>\n"}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"fullname": "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED", "modulename": "tanjun.abc", "qualname": "ClientCallbackNames.COMPONENT_ADDED", "type": "variable", "doc": "<p>Called when a component is added to an active client.</p>\n\n<p><em>Warning:</em>\nThis event isn't dispatched for components which were registered while\nthe client is inactive.</p>\n\n<p>The first positional argument is the <code>tanjun.abc.Component</code> being added.</p>\n"}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"fullname": "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED", "modulename": "tanjun.abc", "qualname": "ClientCallbackNames.COMPONENT_REMOVED", "type": "variable", "doc": "<p>Called when a component is added to an active client.</p>\n\n<p><em>Warning:</em>\nThis event isn't dispatched for components which were removed while\nthe client is inactive.</p>\n\n<p>The first positional argument is the <code>tanjun.abc.Component</code> being removed.</p>\n"}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"fullname": "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND", "modulename": "tanjun.abc", "qualname": "ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND", "type": "variable", "doc": "<p>Called when a message command is not found.</p>\n\n<p><code>tanjun.abc.MessageContext</code> is provided as the first positional argument.</p>\n"}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"fullname": "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND", "modulename": "tanjun.abc", "qualname": "ClientCallbackNames.SLASH_COMMAND_NOT_FOUND", "type": "variable", "doc": "<p>Called when a slash command is not found.</p>\n\n<p><code>tanjun.abc.MessageContext</code> is provided as the first positional argument.</p>\n"}, "tanjun.abc.ClientCallbackNames.STARTED": {"fullname": "tanjun.abc.ClientCallbackNames.STARTED", "modulename": "tanjun.abc", "qualname": "ClientCallbackNames.STARTED", "type": "variable", "doc": "<p>Called when the client has finished starting.</p>\n\n<p>No positional arguments are provided for this event.</p>\n"}, "tanjun.abc.ClientCallbackNames.STARTING": {"fullname": "tanjun.abc.ClientCallbackNames.STARTING", "modulename": "tanjun.abc", "qualname": "ClientCallbackNames.STARTING", "type": "variable", "doc": "<p>Called when the client is initially instructed to start.</p>\n\n<p>No positional arguments are provided for this event.</p>\n"}, "tanjun.abc.Hooks": {"fullname": "tanjun.abc.Hooks", "modulename": "tanjun.abc", "qualname": "Hooks", "type": "class", "doc": "<p>Interface of a collection of callbacks called during set stage of command execution.</p>\n"}, "tanjun.abc.Hooks.copy": {"fullname": "tanjun.abc.Hooks.copy", "modulename": "tanjun.abc", "qualname": "Hooks.copy", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.abc.Hooks.add_on_error": {"fullname": "tanjun.abc.Hooks.add_on_error", "modulename": "tanjun.abc", "qualname": "Hooks.add_on_error", "type": "function", "doc": "<p>Add an error callback to this hook object.</p>\n\n<p><em>Note:</em>\nThis won't be called for expected <code>tanjun.TanjunError</code> derived errors.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (ErrorHookSig):\nThe callback to add to this hook.</p>\n\n<p>This callback should take two positional arguments (of type\n<code>tanjun.abc.ContextT_contra</code> and <code>Exception</code>) and may be either\nsynchronous or asynchronous.</p>\n\n<p>Returning <code>True</code> indicates that the error should be suppressed,\n<code>False</code> that it should be re-raised and <code>None</code> that no decision has\nbeen made. This will be accounted for along with the decisions\nother error hooks make by majority rule.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.abc.Hooks.with_on_error": {"fullname": "tanjun.abc.Hooks.with_on_error", "modulename": "tanjun.abc", "qualname": "Hooks.with_on_error", "type": "function", "doc": "<p>Add an error callback to this hook object through a decorator call.</p>\n\n<p><em>Note:</em>\nThis won't be called for expected <code>tanjun.TanjunError</code> derived errors.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">hooks</span> <span class=\"o\">=</span> <span class=\"n\">AnyHooks</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@hooks</span><span class=\"o\">.</span><span class=\"n\">with_on_error</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_error</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"ne\">Exception</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">,</span> <span class=\"n\">SomeExpectedType</span><span class=\"p\">):</span>\n        <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"s2\">&quot;You dun goofed&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>  <span class=\"c1\"># Indicating that it should be suppressed.</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;An error occurred: </span><span class=\"si\">{</span><span class=\"n\">error</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"kc\">False</span>  <span class=\"c1\"># Indicating that it should be re-raised</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (ErrorHookSigT):\nThe callback to add to this hook.</p>\n\n<p>This callback should take two positional arguments (of type\n<code>tanjun.abc.ContextT_contra</code> and <code>Exception</code>) and may be either\nsynchronous or asynchronous.</p>\n\n<p>Returning <code>True</code> indicates that the error shoul be suppressed,\n<code>False</code> that it should be re-raised and <code>None</code> that no decision\nhas been made. This will be accounted for along with the decisions\nother error hooks make by majority rule.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ErrorHookSigT</strong>: The hook callback which was added.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.abc.Hooks.add_on_parser_error": {"fullname": "tanjun.abc.Hooks.add_on_parser_error", "modulename": "tanjun.abc", "qualname": "Hooks.add_on_parser_error", "type": "function", "doc": "<p>Add a parser error callback to this hook object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSig):\nThe callback to add to this hook.</p>\n\n<p>This callback should take two positional arguments (of type\n<code>tanjun.abc.ContextT_contra</code> and <code>tanjun.errors.ParserError</code>),\nreturn <code>None</code> and may be either synchronous or asynchronous.</p>\n\n<p>It's worth noting that this unlike general error handlers, this will\nalways suppress the error.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.abc.Hooks.with_on_parser_error": {"fullname": "tanjun.abc.Hooks.with_on_parser_error", "modulename": "tanjun.abc", "qualname": "Hooks.with_on_parser_error", "type": "function", "doc": "<p>Add a parser error callback to this hook object through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">hooks</span> <span class=\"o\">=</span> <span class=\"n\">AnyHooks</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@hooks</span><span class=\"o\">.</span><span class=\"n\">with_on_parser_error</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_parser_error</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">errors</span><span class=\"o\">.</span><span class=\"n\">ParserError</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;You gave invalid input: </span><span class=\"si\">{</span><span class=\"n\">error</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSigT):\nThe parser error callback to add to this hook.</p>\n\n<p>This callback should take two positional arguments (of type\n<code>tanjun.abc.ContextT_contra</code> and <code>tanjun.errors.ParserError</code>),\nreturn <code>None</code> and may be either synchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>HookSigT</strong>: The callback which was added.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.abc.Hooks.add_post_execution": {"fullname": "tanjun.abc.Hooks.add_post_execution", "modulename": "tanjun.abc", "qualname": "Hooks.add_post_execution", "type": "function", "doc": "<p>Add a post-execution callback to this hook object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSig):\nThe callback to add to this hook.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.abc.Hooks.with_post_execution": {"fullname": "tanjun.abc.Hooks.with_post_execution", "modulename": "tanjun.abc", "qualname": "Hooks.with_post_execution", "type": "function", "doc": "<p>Add a post-execution callback to this hook object through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">hooks</span> <span class=\"o\">=</span> <span class=\"n\">AnyHooks</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@hooks</span><span class=\"o\">.</span><span class=\"n\">with_post_execution</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">post_execution</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"s2\">&quot;You did something&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSigT):\nThe post-execution callback to add to this hook.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>HookSigT</strong>: The post-execution callback which was seaddedt.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.abc.Hooks.add_pre_execution": {"fullname": "tanjun.abc.Hooks.add_pre_execution", "modulename": "tanjun.abc", "qualname": "Hooks.add_pre_execution", "type": "function", "doc": "<p>Add a pre-execution callback for this hook object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSig):\nThe callback to add to this hook.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.abc.Hooks.with_pre_execution": {"fullname": "tanjun.abc.Hooks.with_pre_execution", "modulename": "tanjun.abc", "qualname": "Hooks.with_pre_execution", "type": "function", "doc": "<p>Add a pre-execution callback to this hook object through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">hooks</span> <span class=\"o\">=</span> <span class=\"n\">AnyHooks</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@hooks</span><span class=\"o\">.</span><span class=\"n\">with_pre_execution</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">pre_execution</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"s2\">&quot;You did something&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSigT):\nThe pre-execution callback to add to this hook.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>HookSigT</strong>: The pre-execution callback which was added.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.abc.Hooks.add_on_success": {"fullname": "tanjun.abc.Hooks.add_on_success", "modulename": "tanjun.abc", "qualname": "Hooks.add_on_success", "type": "function", "doc": "<p>Add a success callback to this hook object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSig):\nThe callback to add to this hook.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.abc.Hooks.with_on_success": {"fullname": "tanjun.abc.Hooks.with_on_success", "modulename": "tanjun.abc", "qualname": "Hooks.with_on_success", "type": "function", "doc": "<p>Add a success callback to this hook object through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">hooks</span> <span class=\"o\">=</span> <span class=\"n\">AnyHooks</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@hooks</span><span class=\"o\">.</span><span class=\"n\">with_on_success</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_success</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"s2\">&quot;You did something&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSigT):\nThe success callback to add to this hook.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>HookSigT</strong>: The success callback which was added.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.abc.Hooks.trigger_error": {"fullname": "tanjun.abc.Hooks.trigger_error", "modulename": "tanjun.abc", "qualname": "Hooks.trigger_error", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "exception", "hooks"], "funcdef": "async def"}, "tanjun.abc.Hooks.trigger_post_execution": {"fullname": "tanjun.abc.Hooks.trigger_post_execution", "modulename": "tanjun.abc", "qualname": "Hooks.trigger_post_execution", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "hooks"], "funcdef": "async def"}, "tanjun.abc.Hooks.trigger_pre_execution": {"fullname": "tanjun.abc.Hooks.trigger_pre_execution", "modulename": "tanjun.abc", "qualname": "Hooks.trigger_pre_execution", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "hooks"], "funcdef": "async def"}, "tanjun.abc.Hooks.trigger_success": {"fullname": "tanjun.abc.Hooks.trigger_success", "modulename": "tanjun.abc", "qualname": "Hooks.trigger_success", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "hooks"], "funcdef": "async def"}, "tanjun.abc.MetaEventSig": {"fullname": "tanjun.abc.MetaEventSig", "modulename": "tanjun.abc", "qualname": "MetaEventSig", "type": "class", "doc": "<p></p>\n"}, "tanjun.abc.MetaEventSigT": {"fullname": "tanjun.abc.MetaEventSigT", "modulename": "tanjun.abc", "qualname": "MetaEventSigT", "type": "variable", "doc": "<p></p>\n"}, "tanjun.abc.AnyHooks": {"fullname": "tanjun.abc.AnyHooks", "modulename": "tanjun.abc", "qualname": "AnyHooks", "type": "variable", "doc": "<p>Execution hooks for any context.</p>\n"}, "tanjun.abc.MessageHooks": {"fullname": "tanjun.abc.MessageHooks", "modulename": "tanjun.abc", "qualname": "MessageHooks", "type": "variable", "doc": "<p>Execution hooks for messages commands.</p>\n"}, "tanjun.abc.SlashHooks": {"fullname": "tanjun.abc.SlashHooks", "modulename": "tanjun.abc", "qualname": "SlashHooks", "type": "variable", "doc": "<p>Execution hooks for slash commands.</p>\n"}, "tanjun.abc.ExecutableCommand": {"fullname": "tanjun.abc.ExecutableCommand", "modulename": "tanjun.abc", "qualname": "ExecutableCommand", "type": "class", "doc": "<p>Base class for all commands that can be executed.</p>\n"}, "tanjun.abc.ExecutableCommand.checks": {"fullname": "tanjun.abc.ExecutableCommand.checks", "modulename": "tanjun.abc", "qualname": "ExecutableCommand.checks", "type": "variable", "doc": "<p>Collection of checks that must be met before the command can be executed.</p>\n"}, "tanjun.abc.ExecutableCommand.component": {"fullname": "tanjun.abc.ExecutableCommand.component", "modulename": "tanjun.abc", "qualname": "ExecutableCommand.component", "type": "variable", "doc": "<p>Component that the command is registered with.</p>\n"}, "tanjun.abc.ExecutableCommand.hooks": {"fullname": "tanjun.abc.ExecutableCommand.hooks", "modulename": "tanjun.abc", "qualname": "ExecutableCommand.hooks", "type": "variable", "doc": "<p>Hooks that are triggered when the command is executed.</p>\n"}, "tanjun.abc.ExecutableCommand.metadata": {"fullname": "tanjun.abc.ExecutableCommand.metadata", "modulename": "tanjun.abc", "qualname": "ExecutableCommand.metadata", "type": "variable", "doc": "<p>Mutable mapping of metadata set for this command.</p>\n\n<p><em>Note:</em>\nAny modifications made to this mutable mapping will be preserved by\nthe command.</p>\n"}, "tanjun.abc.ExecutableCommand.bind_client": {"fullname": "tanjun.abc.ExecutableCommand.bind_client", "modulename": "tanjun.abc", "qualname": "ExecutableCommand.bind_client", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.abc.ExecutableCommand.bind_component": {"fullname": "tanjun.abc.ExecutableCommand.bind_component", "modulename": "tanjun.abc", "qualname": "ExecutableCommand.bind_component", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.abc.ExecutableCommand.copy": {"fullname": "tanjun.abc.ExecutableCommand.copy", "modulename": "tanjun.abc", "qualname": "ExecutableCommand.copy", "type": "function", "doc": "<p>Create a copy of this command.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: A copy of this command.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.abc.ExecutableCommand.set_hooks": {"fullname": "tanjun.abc.ExecutableCommand.set_hooks", "modulename": "tanjun.abc", "qualname": "ExecutableCommand.set_hooks", "type": "function", "doc": "<p>Set the hooks that are triggered when the command is executed.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>hooks</strong> (typing.Optional[Hooks[ContextT_co]]):\nThe hooks that are triggered when the command is executed.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This command to enable chained calls</li>\n</ul>\n", "parameters": ["self", "_"], "funcdef": "def"}, "tanjun.abc.ExecutableCommand.add_check": {"fullname": "tanjun.abc.ExecutableCommand.add_check", "modulename": "tanjun.abc", "qualname": "ExecutableCommand.add_check", "type": "function", "doc": "<p>Add a check to the command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>check</strong> (CheckSig):\nThe check to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This command to enable chained calls</li>\n</ul>\n", "parameters": ["self", "check"], "funcdef": "def"}, "tanjun.abc.ExecutableCommand.remove_check": {"fullname": "tanjun.abc.ExecutableCommand.remove_check", "modulename": "tanjun.abc", "qualname": "ExecutableCommand.remove_check", "type": "function", "doc": "<p>Remove a check from the command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>check</strong> (CheckSig):\nThe check to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the provided check isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This command to enable chained calls</li>\n</ul>\n", "parameters": ["self", "check"], "funcdef": "def"}, "tanjun.abc.HookSig": {"fullname": "tanjun.abc.HookSig", "modulename": "tanjun.abc", "qualname": "HookSig", "type": "class", "doc": "<p>Type hint of the callback used as a general command hook.</p>\n\n<p><em>Note:</em>\nThis may be asynchronous or synchronous, dependency injection is supported\nfor this callback's keyword arguments and the positional arguments which\nare passed dependent on the type of hook this is being registered as.</p>\n"}, "tanjun.abc.HookSigT": {"fullname": "tanjun.abc.HookSigT", "modulename": "tanjun.abc", "qualname": "HookSigT", "type": "variable", "doc": "<p>Generic equivalent of <code>HookSig</code>.</p>\n"}, "tanjun.abc.ErrorHookSig": {"fullname": "tanjun.abc.ErrorHookSig", "modulename": "tanjun.abc", "qualname": "ErrorHookSig", "type": "class", "doc": "<p>Type hint of the callback used as a unexpected command error hook.</p>\n\n<p>This will be called whenever an unexpected <code>Exception</code> is raised during the\nexecution stage of a command (not including expected <code>tanjun.errors.TanjunError</code>).</p>\n\n<p>This should take two positional arguments - of type <code>tanjun.abc.Context</code> and\n<code>Exception</code> - and may be either a synchronous or asynchronous callback which\nreturns <code>bool</code> or <code>None</code> and may take advantage of dependency injection.</p>\n\n<p><code>True</code> is returned to indicate that the exception should be suppressed and\n<code>False</code> is returned to indicate that the exception should be re-raised.</p>\n"}, "tanjun.abc.ErrorHookSigT": {"fullname": "tanjun.abc.ErrorHookSigT", "modulename": "tanjun.abc", "qualname": "ErrorHookSigT", "type": "variable", "doc": "<p>Generic equivalent of <code>ErrorHookSig</code>.</p>\n"}, "tanjun.abc.ListenerCallbackSig": {"fullname": "tanjun.abc.ListenerCallbackSig", "modulename": "tanjun.abc", "qualname": "ListenerCallbackSig", "type": "class", "doc": "<p>Type hint of a hikari event manager callback.</p>\n\n<p>This is guaranteed one positional arg of type <code>hikari.Event</code> regardless\nof implementation and must be a coruotine function which returns <code>None</code>.</p>\n"}, "tanjun.abc.ListenerCallbackSigT": {"fullname": "tanjun.abc.ListenerCallbackSigT", "modulename": "tanjun.abc", "qualname": "ListenerCallbackSigT", "type": "variable", "doc": "<p>Generic equivalent of <code>ListenerCallbackSig</code>.</p>\n"}, "tanjun.abc.MaybeAwaitableT": {"fullname": "tanjun.abc.MaybeAwaitableT", "modulename": "tanjun.abc", "qualname": "MaybeAwaitableT", "type": "variable", "doc": "<p>Type hint for a value which may need to be awaited to be resolved.</p>\n"}, "tanjun.abc.MessageCommand": {"fullname": "tanjun.abc.MessageCommand", "modulename": "tanjun.abc", "qualname": "MessageCommand", "type": "class", "doc": "<p>Standard interface of a message command.</p>\n"}, "tanjun.abc.MessageCommand.callback": {"fullname": "tanjun.abc.MessageCommand.callback", "modulename": "tanjun.abc", "qualname": "MessageCommand.callback", "type": "variable", "doc": "<p>Callback which is called during execution.</p>\n\n<p><em>Note:</em>\nFor command groups, this is called when none of the inner-commands\nmatches the message.</p>\n"}, "tanjun.abc.MessageCommand.names": {"fullname": "tanjun.abc.MessageCommand.names", "modulename": "tanjun.abc", "qualname": "MessageCommand.names", "type": "variable", "doc": "<p>Collection of this command's names.</p>\n"}, "tanjun.abc.MessageCommand.parent": {"fullname": "tanjun.abc.MessageCommand.parent", "modulename": "tanjun.abc", "qualname": "MessageCommand.parent", "type": "variable", "doc": "<p>Parent group of this command if applicable.</p>\n"}, "tanjun.abc.MessageCommand.set_parent": {"fullname": "tanjun.abc.MessageCommand.set_parent", "modulename": "tanjun.abc", "qualname": "MessageCommand.set_parent", "type": "function", "doc": "<p>Set the parent of this command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>parent</strong> (typing.Optional[MessageCommandGroup[typing.Any]]):\nThe parent of this command.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "_"], "funcdef": "def"}, "tanjun.abc.MessageCommand.copy": {"fullname": "tanjun.abc.MessageCommand.copy", "modulename": "tanjun.abc", "qualname": "MessageCommand.copy", "type": "function", "doc": "<p>Create a copy of this command.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>parent</strong> (typing.Optional[MessageCommandGroup[tping.Any]]):\nThe parent of the copy.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The copy.</li>\n</ul>\n", "parameters": ["self", "parent"], "funcdef": "def"}, "tanjun.abc.MessageCommand.check_context": {"fullname": "tanjun.abc.MessageCommand.check_context", "modulename": "tanjun.abc", "qualname": "MessageCommand.check_context", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx"], "funcdef": "async def"}, "tanjun.abc.MessageCommand.execute": {"fullname": "tanjun.abc.MessageCommand.execute", "modulename": "tanjun.abc", "qualname": "MessageCommand.execute", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "hooks"], "funcdef": "async def"}, "tanjun.abc.MessageCommandT": {"fullname": "tanjun.abc.MessageCommandT", "modulename": "tanjun.abc", "qualname": "MessageCommandT", "type": "variable", "doc": "<p></p>\n"}, "tanjun.abc.MessageCommandGroup": {"fullname": "tanjun.abc.MessageCommandGroup", "modulename": "tanjun.abc", "qualname": "MessageCommandGroup", "type": "class", "doc": "<p>Standard interface of a message command group.</p>\n"}, "tanjun.abc.MessageCommandGroup.commands": {"fullname": "tanjun.abc.MessageCommandGroup.commands", "modulename": "tanjun.abc", "qualname": "MessageCommandGroup.commands", "type": "variable", "doc": "<p>Collection of the commands in this group.</p>\n\n<p><em>Note:</em>\nThis may include command groups.</p>\n"}, "tanjun.abc.MessageCommandGroup.add_command": {"fullname": "tanjun.abc.MessageCommandGroup.add_command", "modulename": "tanjun.abc", "qualname": "MessageCommandGroup.add_command", "type": "function", "doc": "<p>Add a command to this group.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (MessageCommand):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The group instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.abc.MessageCommandGroup.remove_command": {"fullname": "tanjun.abc.MessageCommandGroup.remove_command", "modulename": "tanjun.abc", "qualname": "MessageCommandGroup.remove_command", "type": "function", "doc": "<p>Remove a command from this group.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (MessageCommand):\nThe command to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the provided command isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The group instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.abc.MessageCommandGroup.with_command": {"fullname": "tanjun.abc.MessageCommandGroup.with_command", "modulename": "tanjun.abc", "qualname": "MessageCommandGroup.with_command", "type": "function", "doc": "<p>Add a command to this group through a decorator call.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (MessageCommand):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>MessageCommand</strong>: The added command.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.abc.MessageContext": {"fullname": "tanjun.abc.MessageContext", "modulename": "tanjun.abc", "qualname": "MessageContext", "type": "class", "doc": "<p>Interface for the context of a command execution.</p>\n"}, "tanjun.abc.MessageContext.command": {"fullname": "tanjun.abc.MessageContext.command", "modulename": "tanjun.abc", "qualname": "MessageContext.command", "type": "variable", "doc": "<p>Command that was invoked.</p>\n\n<p><em>Note:</em>\nThis is always set during command, command check and parser\nconverter execution but isn't guaranteed during client callback\nnor client/component check execution.</p>\n"}, "tanjun.abc.MessageContext.content": {"fullname": "tanjun.abc.MessageContext.content", "modulename": "tanjun.abc", "qualname": "MessageContext.content", "type": "variable", "doc": "<p>Content of the context's message minus the triggering name and prefix.</p>\n"}, "tanjun.abc.MessageContext.message": {"fullname": "tanjun.abc.MessageContext.message", "modulename": "tanjun.abc", "qualname": "MessageContext.message", "type": "variable", "doc": "<p>Message that triggered the context.</p>\n"}, "tanjun.abc.MessageContext.shard": {"fullname": "tanjun.abc.MessageContext.shard", "modulename": "tanjun.abc", "qualname": "MessageContext.shard", "type": "variable", "doc": "<p>Shard that triggered the context.</p>\n\n<p><em>Note:</em>\nThis will be <code>None</code> if <code>ctx.shards</code> is also <code>None</code>.</p>\n"}, "tanjun.abc.MessageContext.triggering_prefix": {"fullname": "tanjun.abc.MessageContext.triggering_prefix", "modulename": "tanjun.abc", "qualname": "MessageContext.triggering_prefix", "type": "variable", "doc": "<p>Prefix that triggered the context.</p>\n"}, "tanjun.abc.MessageContext.triggering_name": {"fullname": "tanjun.abc.MessageContext.triggering_name", "modulename": "tanjun.abc", "qualname": "MessageContext.triggering_name", "type": "variable", "doc": "<p>Command name that triggered the context.</p>\n"}, "tanjun.abc.MessageContext.set_command": {"fullname": "tanjun.abc.MessageContext.set_command", "modulename": "tanjun.abc", "qualname": "MessageContext.set_command", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "_"], "funcdef": "def"}, "tanjun.abc.MessageContext.set_content": {"fullname": "tanjun.abc.MessageContext.set_content", "modulename": "tanjun.abc", "qualname": "MessageContext.set_content", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "_"], "funcdef": "def"}, "tanjun.abc.MessageContext.set_triggering_name": {"fullname": "tanjun.abc.MessageContext.set_triggering_name", "modulename": "tanjun.abc", "qualname": "MessageContext.set_triggering_name", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "_"], "funcdef": "def"}, "tanjun.abc.MessageContext.respond": {"fullname": "tanjun.abc.MessageContext.respond", "modulename": "tanjun.abc", "qualname": "MessageContext.respond", "type": "function", "doc": "<p>Respond to this context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>content</strong> (hikari.UndefinedOr[typing.Any]):\nThe content to respond with.</p>\n\n<p>If provided, the message contents. If\n<code>hikari.UNDEFINED</code>, then nothing will be sent\nin the content. Any other value here will be cast to a\n<code>str</code>.</p>\n\n<p>If this is a <code>hikari.Embed</code> and no <code>embed</code> nor <code>embeds</code> kwarg\nis provided, then this will instead update the embed. This allows\nfor simpler syntax when sending an embed alone.</p>\n\n<p>Likewise, if this is a <code>hikari.Resource</code>, then the\ncontent is instead treated as an attachment if no <code>attachment</code> and\nno <code>attachments</code> kwargs are provided.</p></li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>ensure_result</strong> (bool):\nEnsure this method call will return a message object.</p>\n\n<p>This does nothing for message command contexts as the result w ill\nalways be immedieatly available.</p></li>\n<li><strong>delete_after</strong> (typing.Union[datetime.timedelta, float, int, None]):\nIf provided, the seconds after which the response message should be deleted.</li>\n<li><strong>tts</strong> (hikari.UndefinedOr[bool]):\nWhether to respond with tts/text to speech or no.</li>\n<li><p><strong>reply</strong> (typing.Union[bool, hikari.SnowflakeishOr[hikari.PartialMessage], hikari.UndefinedType]):\nWhether to reply instead of sending the content to the context.</p>\n\n<p>Defaults to <code>hikari.UNDEFINED</code>.\nPassing <code>True</code> here indicates a reply to <code>MessageContext.message</code>.</p></li>\n<li><strong>nonce</strong> (hikari.UndefinedOr[str]):\nThe nonce that validates that the message was sent.</li>\n<li><strong>attachment</strong> (hikari.UndefinedOr[hikari.Resourceish]):\nA singular attachment to respond with.</li>\n<li><strong>attachments</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Resourceish]]):\nA sequence of attachments to respond with.</li>\n<li><strong>component</strong> (hikari.UndefinedOr[hikari.api.ComponentBuilder]):\nIf provided, builder object of the component to include in this message.</li>\n<li><strong>components</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.api.ComponentBuilder]]):\nIf provided, a sequence of the component builder objects to include\nin this message.</li>\n<li><strong>embed</strong> (hikari.UndefinedOr[hikari.Embed]):\nAn embed to respond with.</li>\n<li><strong>embeds</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Embed]]):\nA sequence of embeds to respond with.</li>\n<li><strong>mentions_everyone</strong> (hikari.UndefinedOr[bool]):\nIf provided, whether the message should parse @everyone/@here\nmentions.</li>\n<li><p><strong>user_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialUser], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.</p>\n\n<p>Alternatively this may be a collection of\n<code>hikari.Snowflake</code>, or <code>hikari.PartialUser</code>\nderivatives to enforce mentioning specific users.</p></li>\n<li><strong>role_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialRole], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.\nAlternatively this may be a collection of\n<code>hikari.Snowflake</code>, or\n<code>hikari.PartialRole</code> derivatives to enforce mentioning\nspecific roles.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>Attachments can be passed as many different things, to aid in\nconvenience.</p>\n\n<ul>\n<li>If a <code>pathlib.PurePath</code> or <code>str</code> to a valid URL, the\nresource at the given URL will be streamed to Discord when\nsending the message. Subclasses of\n<code>hikari.WebResource</code> such as\n<code>hikari.URL</code>,\n<code>hikari.Attachment</code>,\n<code>hikari.Emoji</code>,\n<code>EmbedResource</code>, etc will also be uploaded this way.\nThis will use bit-inception, so only a small percentage of the\nresource will remain in memory at any one time, thus aiding in\nscalability.</li>\n<li>If a <code>hikari.Bytes</code> is passed, or a <code>str</code>\nthat contains a valid data URI is passed, then this is uploaded\nwith a randomized file name if not provided.</li>\n<li>If a <code>hikari.File</code>, <code>pathlib.PurePath</code> or\n<code>str</code> that is an absolute or relative path to a file\non your file system is passed, then this resource is uploaded\nas an attachment using non-blocking code internally and streamed\nusing bit-inception where possible. This depends on the\ntype of <code>concurrent.futures.Executor</code> that is being used for\nthe application (default is a thread pool which supports this\nbehaviour).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Message</strong>: The message that has been created.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If more than 100 unique objects/entities are passed for\n<code>role_mentions</code> or <code>user_mentions</code>.</li>\n</ul>\n\n<p>If the interaction will have expired before <code>delete_after</code> is reached.</p>\n\n<ul>\n<li><strong>TypeError</strong>: If both <code>attachment</code> and <code>attachments</code> are specified.</li>\n<li><strong>hikari.BadRequestError</strong>: This may be raised in several discrete situations, such as messages\nbeing empty with no attachments or embeds; messages with more than\n2000 characters in them, embeds that exceed one of the many embed\nlimits; too many attachments; attachments that are too large;\ninvalid image URLs in embeds; if <code>reply</code> is not found or not in the\nsame channel as <code>channel</code>; too many components.</li>\n<li><strong>hikari.UnauthorizedError</strong>: If you are unauthorized to make the request (invalid/missing token).</li>\n<li><strong>hikari.ForbiddenError</strong>: If you are missing the <code>SEND_MESSAGES</code> in the channel or the\nperson you are trying to message has the DM's disabled.</li>\n<li><strong>hikari.NotFoundError</strong>: If the channel is not found.</li>\n<li><strong>hikari.RateLimitTooLongError</strong>: Raised in the event that a rate limit occurs that is\nlonger than <code>max_rate_limit</code> when making a request.</li>\n<li><strong>hikari.RateLimitedError</strong>: Usually, Hikari will handle and retry on hitting\nrate-limits automatically. This includes most bucket-specific\nrate-limits and global rate-limits. In some rare edge cases,\nhowever, Discord implements other undocumented rules for\nrate-limiting, such as limits per attribute. These cannot be\ndetected or handled normally by Hikari due to their undocumented\nnature, and will trigger this exception if they occur.</li>\n<li><strong>hikari.InternalServerError</strong>: If an internal error occurs on Discord while handling the request.</li>\n</ul>\n", "parameters": ["self", "content", "ensure_result", "delete_after", "attachment", "attachments", "component", "components", "embed", "embeds", "tts", "nonce", "reply", "mentions_everyone", "mentions_reply", "user_mentions", "role_mentions"], "funcdef": "async def"}, "tanjun.abc.BaseSlashCommand": {"fullname": "tanjun.abc.BaseSlashCommand", "modulename": "tanjun.abc", "qualname": "BaseSlashCommand", "type": "class", "doc": "<p>Base class for all slash command classes.</p>\n"}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"fullname": "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral", "modulename": "tanjun.abc", "qualname": "BaseSlashCommand.defaults_to_ephemeral", "type": "variable", "doc": "<p>Whether contexts executed by this command should default to ephemeral responses.</p>\n\n<p>This effects calls to <code>SlashContext.create_followup</code>,\n<code>SlashContext.create_initial_response</code>, <code>SlashContext.defer</code> and\n<code>SlashContext.respond</code> unless the <code>flags</code> field is provided for the\nmethods which support it.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bool</strong>: Whether calls to this command should default to ephemeral mode.</li>\n</ul>\n\n<p>If this is <code>None</code> then the default from the parent command(s),\ncomponent or client is used.</p>\n"}, "tanjun.abc.BaseSlashCommand.is_global": {"fullname": "tanjun.abc.BaseSlashCommand.is_global", "modulename": "tanjun.abc", "qualname": "BaseSlashCommand.is_global", "type": "variable", "doc": "<p>Whether the command should be declared globally or not.</p>\n\n<p><em>Warning:</em>\nFor commands within command groups the state of this flag\nis inherited regardless of what it's set as on the child command.</p>\n"}, "tanjun.abc.BaseSlashCommand.name": {"fullname": "tanjun.abc.BaseSlashCommand.name", "modulename": "tanjun.abc", "qualname": "BaseSlashCommand.name", "type": "variable", "doc": "<p>Name of the command.</p>\n"}, "tanjun.abc.BaseSlashCommand.parent": {"fullname": "tanjun.abc.BaseSlashCommand.parent", "modulename": "tanjun.abc", "qualname": "BaseSlashCommand.parent", "type": "variable", "doc": "<p>Object of the group this command is in.</p>\n"}, "tanjun.abc.BaseSlashCommand.tracked_command": {"fullname": "tanjun.abc.BaseSlashCommand.tracked_command", "modulename": "tanjun.abc", "qualname": "BaseSlashCommand.tracked_command", "type": "variable", "doc": "<p>Object of the actual command this object tracks if set.</p>\n"}, "tanjun.abc.BaseSlashCommand.tracked_command_id": {"fullname": "tanjun.abc.BaseSlashCommand.tracked_command_id", "modulename": "tanjun.abc", "qualname": "BaseSlashCommand.tracked_command_id", "type": "variable", "doc": "<p>ID of the actual command this object tracks if set.</p>\n"}, "tanjun.abc.BaseSlashCommand.build": {"fullname": "tanjun.abc.BaseSlashCommand.build", "modulename": "tanjun.abc", "qualname": "BaseSlashCommand.build", "type": "function", "doc": "<p>Get a builder object for this command.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.api.CommandBuilder</strong>: A builder object for this command. Use to declare this command on\nglobally or for a specific guild.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.abc.BaseSlashCommand.check_context": {"fullname": "tanjun.abc.BaseSlashCommand.check_context", "modulename": "tanjun.abc", "qualname": "BaseSlashCommand.check_context", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx"], "funcdef": "async def"}, "tanjun.abc.BaseSlashCommand.execute": {"fullname": "tanjun.abc.BaseSlashCommand.execute", "modulename": "tanjun.abc", "qualname": "BaseSlashCommand.execute", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "option", "hooks"], "funcdef": "async def"}, "tanjun.abc.BaseSlashCommand.set_parent": {"fullname": "tanjun.abc.BaseSlashCommand.set_parent", "modulename": "tanjun.abc", "qualname": "BaseSlashCommand.set_parent", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "_"], "funcdef": "def"}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"fullname": "tanjun.abc.BaseSlashCommand.set_tracked_command", "modulename": "tanjun.abc", "qualname": "BaseSlashCommand.set_tracked_command", "type": "function", "doc": "<p>Set the global command this tracks.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (hikari.Command):\nObject of the global command this tracks.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.abc.SlashCommand": {"fullname": "tanjun.abc.SlashCommand", "modulename": "tanjun.abc", "qualname": "SlashCommand", "type": "class", "doc": "<p>A command that can be executed in a slash context.</p>\n"}, "tanjun.abc.SlashCommand.callback": {"fullname": "tanjun.abc.SlashCommand.callback", "modulename": "tanjun.abc", "qualname": "SlashCommand.callback", "type": "variable", "doc": "<p>Callback which is called during execution.</p>\n"}, "tanjun.abc.SlashCommandGroup": {"fullname": "tanjun.abc.SlashCommandGroup", "modulename": "tanjun.abc", "qualname": "SlashCommandGroup", "type": "class", "doc": "<p>Standard interface of a slash command group.</p>\n\n<p><em>Note:</em>\nUnlike <code>MessageCommandGroup</code>, slash command groups do not have\ntheir own callback.</p>\n"}, "tanjun.abc.SlashCommandGroup.commands": {"fullname": "tanjun.abc.SlashCommandGroup.commands", "modulename": "tanjun.abc", "qualname": "SlashCommandGroup.commands", "type": "variable", "doc": "<p>Collection of the commands in this group.</p>\n"}, "tanjun.abc.SlashCommandGroup.add_command": {"fullname": "tanjun.abc.SlashCommandGroup.add_command", "modulename": "tanjun.abc", "qualname": "SlashCommandGroup.add_command", "type": "function", "doc": "<p>Add a command to this group.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (BaseSlashCommand):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command group instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.abc.SlashCommandGroup.remove_command": {"fullname": "tanjun.abc.SlashCommandGroup.remove_command", "modulename": "tanjun.abc", "qualname": "SlashCommandGroup.remove_command", "type": "function", "doc": "<p>Remove a command from this group.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (BaseSlashCommand):\nThe command to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the provided command isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command group instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.abc.SlashCommandGroup.with_command": {"fullname": "tanjun.abc.SlashCommandGroup.with_command", "modulename": "tanjun.abc", "qualname": "SlashCommandGroup.with_command", "type": "function", "doc": "<p>Add a command to this group through a decorator call.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (BaseSlashCommand):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>BaseSlashCommand</strong>: The added command.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.abc.SlashContext": {"fullname": "tanjun.abc.SlashContext", "modulename": "tanjun.abc", "qualname": "SlashContext", "type": "class", "doc": "<p>Interface of a slash command specific context.</p>\n"}, "tanjun.abc.SlashContext.command": {"fullname": "tanjun.abc.SlashContext.command", "modulename": "tanjun.abc", "qualname": "SlashContext.command", "type": "variable", "doc": "<p>Command that was invoked.</p>\n\n<p><em>Note:</em>\nThis should always be set during command, command check execution\nand command hook execution but isn't guaranteed for client callbacks\nnor component/client checks.</p>\n"}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"fullname": "tanjun.abc.SlashContext.defaults_to_ephemeral", "modulename": "tanjun.abc", "qualname": "SlashContext.defaults_to_ephemeral", "type": "variable", "doc": "<p>Whether the context is marked as defaulting to ephemeral response.</p>\n\n<p>This effects calls to <code>SlashContext.create_followup</code>,\n<code>SlashContext.create_initial_response</code>, <code>SlashContext.defer</code> and\n<code>SlashContext.respond</code> unless the <code>flags</code> field is provided for the\nmethods which support it.</p>\n"}, "tanjun.abc.SlashContext.expires_at": {"fullname": "tanjun.abc.SlashContext.expires_at", "modulename": "tanjun.abc", "qualname": "SlashContext.expires_at", "type": "variable", "doc": "<p>When this application command context expires.</p>\n\n<p>After this time is reached, the message/response methods on this\ncontext will always raise <code>hikari.errors.NotFoundError</code>.</p>\n"}, "tanjun.abc.SlashContext.has_been_deferred": {"fullname": "tanjun.abc.SlashContext.has_been_deferred", "modulename": "tanjun.abc", "qualname": "SlashContext.has_been_deferred", "type": "variable", "doc": "<p>Whether the initial response for this context has been deferred.</p>\n\n<p><em>Warning:</em>\nIf this is <code>True</code> when <code>SlashContext.has_responded</code> is <code>False</code>\nthen <code>SlashContext.edit_initial_response</code> will need to be used\nto create the initial response rather than\n<code>SlashContext.create_initial_response</code>.</p>\n"}, "tanjun.abc.SlashContext.interaction": {"fullname": "tanjun.abc.SlashContext.interaction", "modulename": "tanjun.abc", "qualname": "SlashContext.interaction", "type": "variable", "doc": "<p>Interaction this context is for.</p>\n"}, "tanjun.abc.SlashContext.member": {"fullname": "tanjun.abc.SlashContext.member", "modulename": "tanjun.abc", "qualname": "SlashContext.member", "type": "variable", "doc": "<p>Object of the member that triggered this command if this is in a guild.</p>\n"}, "tanjun.abc.SlashContext.options": {"fullname": "tanjun.abc.SlashContext.options", "modulename": "tanjun.abc", "qualname": "SlashContext.options", "type": "variable", "doc": "<p>Mapping of option names to the values provided for them.</p>\n"}, "tanjun.abc.SlashContext.set_command": {"fullname": "tanjun.abc.SlashContext.set_command", "modulename": "tanjun.abc", "qualname": "SlashContext.set_command", "type": "function", "doc": "<p>Set the command for this context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (typing.Optional[BaseSlashCommand]):\nThe command this context is for.</li>\n</ul>\n", "parameters": ["self", "_"], "funcdef": "def"}, "tanjun.abc.SlashContext.set_ephemeral_default": {"fullname": "tanjun.abc.SlashContext.set_ephemeral_default", "modulename": "tanjun.abc", "qualname": "SlashContext.set_ephemeral_default", "type": "function", "doc": "<p>Set the ephemeral default state for this context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>state</strong> (bool):\nThe new ephemeral default state.</p>\n\n<p>If this is <code>True</code> then all calls to the response creating methods\non this context will default to being ephemeral.</p></li>\n</ul>\n", "parameters": ["self", "state"], "funcdef": "def"}, "tanjun.abc.SlashContext.defer": {"fullname": "tanjun.abc.SlashContext.defer", "modulename": "tanjun.abc", "qualname": "SlashContext.defer", "type": "function", "doc": "<p>Defer the initial response for this context.</p>\n\n<p><em>Note:</em>\nThe ephemeral state of the first response is decided by whether the\ndeferral is ephemeral.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>flags</strong> (typing.Union[hikari.UndefinedType, int, hikari.MessageFlag]):\nThe flags to use for the initial response.</li>\n</ul>\n", "parameters": ["self", "flags"], "funcdef": "async def"}, "tanjun.abc.SlashContext.mark_not_found": {"fullname": "tanjun.abc.SlashContext.mark_not_found", "modulename": "tanjun.abc", "qualname": "SlashContext.mark_not_found", "type": "function", "doc": "<p>Mark this context as not found.</p>\n\n<p>Dependent on how the client is configured this may lead to a not found\nresponse message being sent.</p>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.abc.SlashContext.create_followup": {"fullname": "tanjun.abc.SlashContext.create_followup", "modulename": "tanjun.abc", "qualname": "SlashContext.create_followup", "type": "function", "doc": "<p>Create a followup response for this context.</p>\n\n<p><em>Warning:</em>\nCalling this on a context which hasn't had an initial response yet\nwill lead to a <code>hikari.NotFoundError</code> being raised.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>content</strong> (hikari.UndefinedOr[typing.Any]):\nIf provided, the message contents. If\n<code>hikari.UNDEFINED</code>, then nothing will be sent\nin the content. Any other value here will be cast to a\n<code>str</code>.</p>\n\n<p>If this is a <code>hikari.Embed</code> and no <code>embed</code> kwarg is\nprovided, then this will instead update the embed. This allows for\nsimpler syntax when sending an embed alone.</p>\n\n<p>Likewise, if this is a <code>hikari.Resource</code>, then the\ncontent is instead treated as an attachment if no <code>attachment</code> and\nno <code>attachments</code> kwargs are provided.</p></li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>delete_after</strong> (typing.Union[datetime.timedelta, float, int, None]):\nIf provided, the seconds after which the response message should be deleted.</p>\n\n<p><em>Note:</em>\nSlash command responses can only be deleted within 14 minutes of the\ncommand being received.</p>\n\n<p><em>Note:</em>\nSince (as of writing) ephemeral responses cannot be deleted by the bot,\nthis is ignored for ephemeral slash command responses.</p></li>\n<li><strong>attachment</strong> (hikari.UndefinedOr[hikari.Resourceish]):\nIf provided, the message attachment. This can be a resource,\nor string of a path on your computer or a URL.</li>\n<li><strong>attachments</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Resourceish]]):\nIf provided, the message attachments. These can be resources, or\nstrings consisting of paths on your computer or URLs.</li>\n<li><strong>component</strong> (hikari.UndefinedOr[hikari.api.ComponentBuilder]):\nIf provided, builder object of the component to include in this message.</li>\n<li><strong>components</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.api.ComponentBuilder]]):\nIf provided, a sequence of the component builder objects to include\nin this message.</li>\n<li><strong>embed</strong> (hikari.UndefinedOr[hikari.Embed]):\nIf provided, the message embed.</li>\n<li><strong>embeds</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Embed]]):\nIf provided, the message embeds.</li>\n<li><strong>mentions_everyone</strong> (hikari.UndefinedOr[bool]):\nIf provided, whether the message should parse @everyone/@here\nmentions.</li>\n<li><p><strong>user_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialUser], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.</p>\n\n<p>Alternatively this may be a collection of\n<code>hikari.Snowflake</code>, or\n<code>hikari.PartialUser</code> derivatives to enforce mentioning\nspecific users.</p></li>\n<li><strong>role_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialRole], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.\nAlternatively this may be a collection of\n<code>hikari.Snowflake</code>, or\n<code>hikari.PartialRole</code> derivatives to enforce mentioning\nspecific roles.</li>\n<li><strong>tts</strong> (hikari.UndefinedOr[bool]):\nIf provided, whether the message will be sent as a TTS message.</li>\n<li><p><strong>flags</strong> (typing.Union[hikari.UndefinedType, int, hikari.MessageFlag]):\nThe flags to set for this response.</p>\n\n<p>As of writing this can only flag which can be provided is EPHEMERAL,\nother flags are just ignored.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Message</strong>: The created message object.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>hikari.NotFoundError</strong>: If the current interaction is not found or it hasn't had an initial\nresponse yet.</li>\n<li><strong>hikari.BadRequestError</strong>: This can be raised if the file is too large; if the embed exceeds\nthe defined limits; if the message content is specified only and\nempty or greater than <code>2000</code> characters; if neither content, file\nor embeds are specified.\nIf any invalid snowflake IDs are passed; a snowflake may be invalid\ndue to it being outside of the range of a 64 bit integer.</li>\n<li><strong>ValueError</strong>: If more than 100 unique objects/entities are passed for\n<code>role_mentions</code> or `user_mentions.</li>\n</ul>\n\n<p>If the interaction will have expired before <code>delete_after</code> is reached.</p>\n\n<ul>\n<li><strong>TypeError</strong>: If both <code>attachment</code> and <code>attachments</code> are specified.</li>\n</ul>\n", "parameters": ["self", "content", "delete_after", "attachment", "attachments", "component", "components", "embed", "embeds", "mentions_everyone", "user_mentions", "role_mentions", "tts", "flags"], "funcdef": "async def"}, "tanjun.abc.SlashContext.create_initial_response": {"fullname": "tanjun.abc.SlashContext.create_initial_response", "modulename": "tanjun.abc", "qualname": "SlashContext.create_initial_response", "type": "function", "doc": "<p>Create the initial response for this context.</p>\n\n<p><em>Warning:</em>\nCalling this on a context which already has an initial\nresponse will result in this raising a <code>hikari.NotFoundError</code>.\nThis includes if the REST interaction server has already responded\nto the request and deferrals.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>delete_after</strong> (typing.Union[datetime.timedelta, float, int, None]):\nIf provided, the seconds after which the response message should be deleted.</p>\n\n<p><em>Note:</em>\nSlash command responses can only be deleted within 14 minutes of the\ncommand being received.</p>\n\n<p><em>Note:</em>\nSince (as of writing) ephemeral responses cannot be deleted by the bot,\nthis is ignored for ephemeral slash command responses.</p></li>\n<li><p><strong>content</strong> (hikari.UndefinedOr[typing.Any]):\nIf provided, the message contents. If\n<code>hikari.UNDEFINED</code>, then nothing will be sent\nin the content. Any other value here will be cast to a\n<code>str</code>.</p>\n\n<p>If this is a <code>hikari.Embed</code> and no <code>embed</code> nor <code>embeds</code> kwarg\nis provided, then this will instead update the embed. This allows\nfor simpler syntax when sending an embed alone.</p></li>\n<li><strong>component</strong> (hikari.UndefinedOr[hikari.api.ComponentBuilder]):\nIf provided, builder object of the component to include in this message.</li>\n<li><strong>components</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.api.ComponentBuilder]]):\nIf provided, a sequence of the component builder objects to include\nin this message.</li>\n<li><strong>embed</strong> (hikari.UndefinedOr[hikari.Embed]):\nIf provided, the message embed.</li>\n<li><strong>embeds</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Embed]]):\nIf provided, the message embeds.</li>\n<li><p><strong>flags</strong> (typing.Union[int, hikari.MessageFlag, hikari.UndefinedType]):\nIf provided, the message flags this response should have.</p>\n\n<p>As of writing the only message flag which can be set here is\n<code>hikari.MessageFlag.EPHEMERAL</code>.</p></li>\n<li><strong>tts</strong> (hikari.UndefinedOr[bool]):\nIf provided, whether the message will be read out by a screen\nreader using Discord's TTS (text-to-speech) system.</li>\n<li><strong>mentions_everyone</strong> (hikari.UndefinedOr[bool]):\nIf provided, whether the message should parse @everyone/@here\nmentions.</li>\n<li><p><strong>user_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialUser], bool]]):\nIf provided, and <code>True</code>, all user mentions will be detected.\nIf provided, and <code>False</code>, all user mentions will be ignored\nif appearing in the message body.</p>\n\n<p>Alternatively this may be a collection of\n<code>hikari.Snowflake</code>, or\n<code>hikari.PartialUser</code> derivatives to enforce mentioning\nspecific users.</p></li>\n<li><p><strong>role_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialRole], bool]]):\nIf provided, and <code>True</code>, all role mentions will be detected.\nIf provided, and <code>False</code>, all role mentions will be ignored\nif appearing in the message body.</p>\n\n<p>Alternatively this may be a collection of\n<code>hikari.Snowflake</code>, or\n<code>hikari.PartialRole</code> derivatives to enforce mentioning\nspecific roles.</p></li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If more than 100 unique objects/entities are passed for\n<code>role_mentions</code> or <code>user_mentions</code>.</li>\n</ul>\n\n<p>If the interaction will have expired before <code>delete_after</code> is reached.</p>\n\n<ul>\n<li><strong>TypeError</strong>: If both <code>embed</code> and <code>embeds</code> are specified.</li>\n<li><strong>hikari.BadRequestError</strong>: This may be raised in several discrete situations, such as messages\nbeing empty with no embeds; messages with more than\n2000 characters in them, embeds that exceed one of the many embed\nlimits; invalid image URLs in embeds.</li>\n<li><strong>hikari.UnauthorizedError</strong>: If you are unauthorized to make the request (invalid/missing token).</li>\n<li><strong>hikari.NotFoundError</strong>: If the interaction is not found or if the interaction's initial\nresponse has already been created.</li>\n<li><strong>hikari.RateLimitTooLongError</strong>: Raised in the event that a rate limit occurs that is\nlonger than <code>max_rate_limit</code> when making a request.</li>\n<li><strong>hikari.RateLimitedError</strong>: Usually, Hikari will handle and retry on hitting\nrate-limits automatically. This includes most bucket-specific\nrate-limits and global rate-limits. In some rare edge cases,\nhowever, Discord implements other undocumented rules for\nrate-limiting, such as limits per attribute. These cannot be\ndetected or handled normally by Hikari due to their undocumented\nnature, and will trigger this exception if they occur.</li>\n<li><strong>hikari.InternalServerError</strong>: If an internal error occurs on Discord while handling the request.</li>\n</ul>\n", "parameters": ["self", "content", "delete_after", "component", "components", "embed", "embeds", "mentions_everyone", "user_mentions", "role_mentions", "flags", "tts"], "funcdef": "async def"}, "tanjun.abc.SlashOption": {"fullname": "tanjun.abc.SlashOption", "modulename": "tanjun.abc", "qualname": "SlashOption", "type": "class", "doc": "<p>Interface of slash command option with extra logic to help resolve it.</p>\n"}, "tanjun.abc.SlashOption.name": {"fullname": "tanjun.abc.SlashOption.name", "modulename": "tanjun.abc", "qualname": "SlashOption.name", "type": "variable", "doc": "<p>Name of this option.</p>\n"}, "tanjun.abc.SlashOption.type": {"fullname": "tanjun.abc.SlashOption.type", "modulename": "tanjun.abc", "qualname": "SlashOption.type", "type": "variable", "doc": "<p>Type of this option.</p>\n"}, "tanjun.abc.SlashOption.value": {"fullname": "tanjun.abc.SlashOption.value", "modulename": "tanjun.abc", "qualname": "SlashOption.value", "type": "variable", "doc": "<p>Value provided for this option.</p>\n\n<p><em>Note:</em>\nFor discord entity option types (e.g. user, member, channel and\nrole) this will be the entity's ID.</p>\n"}, "tanjun.abc.SlashOption.resolve_value": {"fullname": "tanjun.abc.SlashOption.resolve_value", "modulename": "tanjun.abc", "qualname": "SlashOption.resolve_value", "type": "function", "doc": "<p>Resolve this option to an object value.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Union[hikari.InteractionChannel, hikari.InteractionMember, hikari.Role, hikari.User]</strong>: The object value of this option.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>TypeError</strong>: If the option isn't resolvable.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.abc.SlashOption.resolve_to_channel": {"fullname": "tanjun.abc.SlashOption.resolve_to_channel", "modulename": "tanjun.abc", "qualname": "SlashOption.resolve_to_channel", "type": "function", "doc": "<p>Resolve this option to a channel object.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.InteractionChannel</strong>: The channel object.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>TypeError</strong>: If the option is not a channel and a <code>default</code> wasn't provided.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.abc.SlashOption.resolve_to_member": {"fullname": "tanjun.abc.SlashOption.resolve_to_member", "modulename": "tanjun.abc", "qualname": "SlashOption.resolve_to_member", "type": "function", "doc": "<p>Resolve this option to a member object.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>default:</strong>: The default value to return if this option cannot be resolved.</li>\n</ul>\n\n<p>If this is not provided, this method will raise a <code>TypeError</code> if\nthis option cannot be resolved.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Union[hikari.InteractionMember, _T]</strong>: The member object or <code>default</code> if it was provided and this option\nwas a user type but had no member.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>LookupError</strong>: If no member was found for this option and a <code>default</code> wasn't provided.</li>\n</ul>\n\n<p>This includes if the option is a mentionable type which targets a\nmember-less user.</p>\n\n<p>This could happen if the user isn't in the current guild or if this\ncommand was executed in a DM and this option should still be resolvable\nto a user.</p>\n\n<ul>\n<li><strong>TypeError</strong>: If the option is not a user option and a <code>default</code> wasn't provided.</li>\n</ul>\n\n<p>This includes if the option is a mentionable type but doesn't\ntarget a user.</p>\n", "parameters": ["self", "default"], "funcdef": "def"}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"fullname": "tanjun.abc.SlashOption.resolve_to_mentionable", "modulename": "tanjun.abc", "qualname": "SlashOption.resolve_to_mentionable", "type": "function", "doc": "<p>Resolve this option to a mentionable object.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Union[hikari.Role, hikari.User, hikari.Member]</strong>: The mentionable object.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>TypeError</strong>: If the option is not a mentionable, user or role type.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.abc.SlashOption.resolve_to_role": {"fullname": "tanjun.abc.SlashOption.resolve_to_role", "modulename": "tanjun.abc", "qualname": "SlashOption.resolve_to_role", "type": "function", "doc": "<p>Resolve this option to a role object.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Role</strong>: The role object.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>TypeError</strong>: If the option is not a role.</li>\n</ul>\n\n<p>This includes mentionable options which point towards a user.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.abc.SlashOption.resolve_to_user": {"fullname": "tanjun.abc.SlashOption.resolve_to_user", "modulename": "tanjun.abc", "qualname": "SlashOption.resolve_to_user", "type": "function", "doc": "<p>Resolve this option to a user object.</p>\n\n<p><em>Note:</em>\nThis will resolve to a <code>hikari.Member</code> first if the relevant\ncommand was executed within a guild and the option targeted one of\nthe guild's members, otherwise it will resolve to <code>hikari.User</code>.</p>\n\n<p>It's also worth noting that hikari.Member inherits from hikari.User\nmeaning that the return value of this can always be treated as a\nuser.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Union[hikari.User, hikari.Member]</strong>: The user object.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>TypeError</strong>: If the option is not a user.</li>\n</ul>\n\n<p>This includes mentionable options which point towards a role.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.abc.Component": {"fullname": "tanjun.abc.Component", "modulename": "tanjun.abc", "qualname": "Component", "type": "class", "doc": "<p>Standard interface of a Tanjun component.</p>\n\n<p>This is a collection of message and slash commands, and listeners\nwith logic for command search + execution and loading the listeners\ninto a tanjun client.</p>\n"}, "tanjun.abc.Component.client": {"fullname": "tanjun.abc.Component.client", "modulename": "tanjun.abc", "qualname": "Component.client", "type": "variable", "doc": "<p>Tanjun client this component is bound to.</p>\n"}, "tanjun.abc.Component.defaults_to_ephemeral": {"fullname": "tanjun.abc.Component.defaults_to_ephemeral", "modulename": "tanjun.abc", "qualname": "Component.defaults_to_ephemeral", "type": "variable", "doc": "<p>Whether slash contexts executed in this component should default to ephemeral responses.</p>\n\n<p>This effects calls to <code>SlashContext.create_followup</code>,\n<code>SlashContext.create_initial_response</code>, <code>SlashContext.defer</code> and\n<code>SlashContext.respond</code> unless the <code>flags</code> field is provided for the\nmethods which support it.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>This may be overridden by <code>BaseSlashCommand.defaults_to_ephemeral</code>.</li>\n<li>This only effects slash command execution.</li>\n<li>If this is <code>None</code> then the default from the parent client is used.</li>\n</ul>\n"}, "tanjun.abc.Component.loop": {"fullname": "tanjun.abc.Component.loop", "modulename": "tanjun.abc", "qualname": "Component.loop", "type": "variable", "doc": "<p>The asyncio loop this client is bound to if it has been opened.</p>\n"}, "tanjun.abc.Component.name": {"fullname": "tanjun.abc.Component.name", "modulename": "tanjun.abc", "qualname": "Component.name", "type": "variable", "doc": "<p>Component's unique identifier.</p>\n\n<p><em>Note:</em>\nThis will be preserved between copies of a component.</p>\n"}, "tanjun.abc.Component.slash_commands": {"fullname": "tanjun.abc.Component.slash_commands", "modulename": "tanjun.abc", "qualname": "Component.slash_commands", "type": "variable", "doc": "<p>Collection of the slash commands in this component.</p>\n"}, "tanjun.abc.Component.message_commands": {"fullname": "tanjun.abc.Component.message_commands", "modulename": "tanjun.abc", "qualname": "Component.message_commands", "type": "variable", "doc": "<p>Collection of the message commands in this component.</p>\n"}, "tanjun.abc.Component.listeners": {"fullname": "tanjun.abc.Component.listeners", "modulename": "tanjun.abc", "qualname": "Component.listeners", "type": "variable", "doc": "<p>Mapping of event types to the listeners registered for them in this component.</p>\n"}, "tanjun.abc.Component.metadata": {"fullname": "tanjun.abc.Component.metadata", "modulename": "tanjun.abc", "qualname": "Component.metadata", "type": "variable", "doc": "<p>Mutable mapping of the metadata set for this component.</p>\n\n<p><em>Note:</em>\nAny modifications made to this mutable mapping will be preserved by\nthe component.</p>\n"}, "tanjun.abc.Component.add_slash_command": {"fullname": "tanjun.abc.Component.add_slash_command", "modulename": "tanjun.abc", "qualname": "Component.add_slash_command", "type": "function", "doc": "<p>Add a slash command to this component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (BaseSlashCommand):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.abc.Component.remove_slash_command": {"fullname": "tanjun.abc.Component.remove_slash_command", "modulename": "tanjun.abc", "qualname": "Component.remove_slash_command", "type": "function", "doc": "<p>Remove a slash command from this component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (BaseSlashCommand):\nThe command to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the provided command isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.abc.Component.with_slash_command": {"fullname": "tanjun.abc.Component.with_slash_command", "modulename": "tanjun.abc", "qualname": "Component.with_slash_command", "type": "function", "doc": "<p>Add a slash command to this component through a decorator call.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (BaseSlashCommandT):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>copy</strong> (bool):\nWhether to copy the command before adding it.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>BaseSlashCommandT</strong>: The added command.</li>\n</ul>\n", "parameters": ["self", "command", "copy"], "funcdef": "def"}, "tanjun.abc.Component.add_message_command": {"fullname": "tanjun.abc.Component.add_message_command", "modulename": "tanjun.abc", "qualname": "Component.add_message_command", "type": "function", "doc": "<p>Add a message command to this component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (MessageCommand[typing.Any]):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.abc.Component.remove_message_command": {"fullname": "tanjun.abc.Component.remove_message_command", "modulename": "tanjun.abc", "qualname": "Component.remove_message_command", "type": "function", "doc": "<p>Remove a message command from this component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (MessageCommand[typing.Any]):\nThe command to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the provided command isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.abc.Component.with_message_command": {"fullname": "tanjun.abc.Component.with_message_command", "modulename": "tanjun.abc", "qualname": "Component.with_message_command", "type": "function", "doc": "<p>Add a message command to this component through a decorator call.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (MessageCommandT):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>copy</strong> (bool):\nWhether to copy the command before adding it.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>MessageCommandT</strong>: The added command.</li>\n</ul>\n", "parameters": ["self", "command", "copy"], "funcdef": "def"}, "tanjun.abc.Component.add_listener": {"fullname": "tanjun.abc.Component.add_listener", "modulename": "tanjun.abc", "qualname": "Component.add_listener", "type": "function", "doc": "<p>Add a listener to this component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event</strong> (type[hikari.Event]):\nThe event to listen for.</li>\n<li><strong>listener</strong> (ListenerCallbackSig):\nThe listener to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "event", "listener"], "funcdef": "def"}, "tanjun.abc.Component.remove_listener": {"fullname": "tanjun.abc.Component.remove_listener", "modulename": "tanjun.abc", "qualname": "Component.remove_listener", "type": "function", "doc": "<p>Remove a listener from this component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event</strong> (type[hikari.Event]):\nThe event to listen for.</li>\n<li><strong>listener</strong> (ListenerCallbackSig):\nThe listener to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the listener is not registered for the provided event.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "event", "listener"], "funcdef": "def"}, "tanjun.abc.Component.with_listener": {"fullname": "tanjun.abc.Component.with_listener", "modulename": "tanjun.abc", "qualname": "Component.with_listener", "type": "function", "doc": "<p>Add a listener to this component through a decorator call.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event_type</strong> (type[hikari.Event]):\nThe event to listen for.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[ListenerCallbackSigT], ListenerCallbackSigT]</strong>: Decorator callback which takes listener to add.</li>\n</ul>\n", "parameters": ["self", "event_type"], "funcdef": "def"}, "tanjun.abc.Component.bind_client": {"fullname": "tanjun.abc.Component.bind_client", "modulename": "tanjun.abc", "qualname": "Component.bind_client", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.abc.Component.unbind_client": {"fullname": "tanjun.abc.Component.unbind_client", "modulename": "tanjun.abc", "qualname": "Component.unbind_client", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.abc.Component.check_message_name": {"fullname": "tanjun.abc.Component.check_message_name", "modulename": "tanjun.abc", "qualname": "Component.check_message_name", "type": "function", "doc": "<p>Check whether a name matches any of this component's registered message commands.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>This only checks for name matches against the top level command and\nwill not account for sub-commands.</li>\n<li>Dependent on implementation detail this may partial check name against\ncommand names using name.startswith(command_name), hence why it\nalso returns the name a command was matched by.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name to check for command matches.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[tuple[str, MessageCommand[typing.Any]]]</strong>: Iterator of tuples of command name matches to the relevant message\ncommand objects.</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.abc.Component.check_slash_name": {"fullname": "tanjun.abc.Component.check_slash_name", "modulename": "tanjun.abc", "qualname": "Component.check_slash_name", "type": "function", "doc": "<p>Check whether a name matches any of this component's registered slash commands.</p>\n\n<p><em>Note:</em>\nThis won't check for sub-commands and will expect <code>name</code> to simply be\nthe top level command name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name to check for command matches.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[BaseSlashCommand]</strong>: An iterator of the matching slash commands.</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.abc.Component.execute_interaction": {"fullname": "tanjun.abc.Component.execute_interaction", "modulename": "tanjun.abc", "qualname": "Component.execute_interaction", "type": "function", "doc": "<p>Execute a slash context.</p>\n\n<p><em>Note:</em>\nUnlike <code>Component.execute_message</code>, this shouldn't be expected to\nraise <code>tanjun.errors.HaltExecution</code> nor <code>tanjun.errors.CommandError</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ctx</strong> (SlashContext):\nThe context to execute.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>hooks</strong> (typing.Optional[collections.abc.MutableSet[SlashHooks]] = None):\nSet of hooks to include in this command execution.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[collections.abc.Awaitable[None]]</strong>: Awaitable used to wait for the command execution to finish.</li>\n</ul>\n\n<p>This may be awaited or left to run as a background task.</p>\n\n<p>If this is <code>None</code> then the client should carry on its search for a\ncomponent with a matching command.</p>\n", "parameters": ["self", "ctx", "hooks"], "funcdef": "async def"}, "tanjun.abc.Component.execute_message": {"fullname": "tanjun.abc.Component.execute_message", "modulename": "tanjun.abc", "qualname": "Component.execute_message", "type": "function", "doc": "<p>Execute a message context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ctx</strong> (MessageContext):\nThe context to execute.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>hooks</strong> (typing.Optional[collections.abc.MutableSet[MessageHooks]] = None):\nSet of hooks to include in this command execution.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bool</strong>: Whether a message command was executed in this component with the\nprovided context.</li>\n</ul>\n\n<p>If <code>False</code> then the client should carry on its search for a\ncomponent with a matching command.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>tanjun.errors.CommandError</strong>: To end the command's execution with an error response message.</li>\n<li><strong>tanjun.errors.HaltExecution</strong>: To indicate that the client should stop searching for commands to\nexecute with the current context.</li>\n</ul>\n", "parameters": ["self", "ctx", "hooks"], "funcdef": "async def"}, "tanjun.abc.Component.close": {"fullname": "tanjun.abc.Component.close", "modulename": "tanjun.abc", "qualname": "Component.close", "type": "function", "doc": "<p>Close the component.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the component isn't running.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.abc.Component.open": {"fullname": "tanjun.abc.Component.open", "modulename": "tanjun.abc", "qualname": "Component.open", "type": "function", "doc": "<p>Start the component.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the component is already open.\nIf the component isn't bound to a client.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.abc.Client": {"fullname": "tanjun.abc.Client", "modulename": "tanjun.abc", "qualname": "Client", "type": "class", "doc": "<p>Abstract interface of a Tanjun client.</p>\n\n<p>This should manage both message and slash command execution based on the\nprovided hikari clients.</p>\n"}, "tanjun.abc.Client.cache": {"fullname": "tanjun.abc.Client.cache", "modulename": "tanjun.abc", "qualname": "Client.cache", "type": "variable", "doc": "<p>Hikari cache instance this command client was initialised with.</p>\n"}, "tanjun.abc.Client.components": {"fullname": "tanjun.abc.Client.components", "modulename": "tanjun.abc", "qualname": "Client.components", "type": "variable", "doc": "<p>Collection of the components this command client is using.</p>\n"}, "tanjun.abc.Client.defaults_to_ephemeral": {"fullname": "tanjun.abc.Client.defaults_to_ephemeral", "modulename": "tanjun.abc", "qualname": "Client.defaults_to_ephemeral", "type": "variable", "doc": "<p>Whether slash contexts spawned by this client should default to ephemeral responses.</p>\n\n<p>This effects calls to <code>SlashContext.create_followup</code>,\n<code>SlashContext.create_initial_response</code>, <code>SlashContext.defer</code> and\n<code>SlashContext.respond</code> unless the <code>flags</code> field is provided for the\nmethods which support it.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>This may be overridden by <code>BaseSlashCommand.defaults_to_ephemeral</code>\nand <code>Component.defaults_to_ephemeral</code>.</li>\n<li>This defaults to <code>False</code>.</li>\n<li>This only effects slash command execution.</li>\n</ul>\n"}, "tanjun.abc.Client.events": {"fullname": "tanjun.abc.Client.events", "modulename": "tanjun.abc", "qualname": "Client.events", "type": "variable", "doc": "<p>Object of the event manager this client was initialised with.</p>\n\n<p>This is used for executing message commands if set.</p>\n"}, "tanjun.abc.Client.is_alive": {"fullname": "tanjun.abc.Client.is_alive", "modulename": "tanjun.abc", "qualname": "Client.is_alive", "type": "variable", "doc": "<p>Whether this client is alive.</p>\n"}, "tanjun.abc.Client.listeners": {"fullname": "tanjun.abc.Client.listeners", "modulename": "tanjun.abc", "qualname": "Client.listeners", "type": "variable", "doc": "<p>Mapping of event types to the listeners registered in this client.</p>\n"}, "tanjun.abc.Client.loop": {"fullname": "tanjun.abc.Client.loop", "modulename": "tanjun.abc", "qualname": "Client.loop", "type": "variable", "doc": "<p>The loop this client is bound to if it's alive.</p>\n"}, "tanjun.abc.Client.metadata": {"fullname": "tanjun.abc.Client.metadata", "modulename": "tanjun.abc", "qualname": "Client.metadata", "type": "variable", "doc": "<p>Mutable mapping of the metadata set for this client.</p>\n\n<p><em>Note:</em>\nAny modifications made to this mutable mapping will be preserved by\nthe client.</p>\n"}, "tanjun.abc.Client.prefixes": {"fullname": "tanjun.abc.Client.prefixes", "modulename": "tanjun.abc", "qualname": "Client.prefixes", "type": "variable", "doc": "<p>Collection of the prefixes set for this client.</p>\n\n<p>These are only use during message command execution to match commands\nto this command client.</p>\n"}, "tanjun.abc.Client.rest": {"fullname": "tanjun.abc.Client.rest", "modulename": "tanjun.abc", "qualname": "Client.rest", "type": "variable", "doc": "<p>Object of the Hikari REST client this client was initialised with.</p>\n"}, "tanjun.abc.Client.server": {"fullname": "tanjun.abc.Client.server", "modulename": "tanjun.abc", "qualname": "Client.server", "type": "variable", "doc": "<p>Object of the Hikari interaction server provided for this client.</p>\n\n<p>This is used for executing slash commands if set.</p>\n"}, "tanjun.abc.Client.shards": {"fullname": "tanjun.abc.Client.shards", "modulename": "tanjun.abc", "qualname": "Client.shards", "type": "variable", "doc": "<p>Object of the Hikari shard manager this client was initialised with.</p>\n"}, "tanjun.abc.Client.voice": {"fullname": "tanjun.abc.Client.voice", "modulename": "tanjun.abc", "qualname": "Client.voice", "type": "variable", "doc": "<p>Object of the Hikari voice component this client was initialised with.</p>\n"}, "tanjun.abc.Client.clear_application_commands": {"fullname": "tanjun.abc.Client.clear_application_commands", "modulename": "tanjun.abc", "qualname": "Client.clear_application_commands", "type": "function", "doc": "<p>Clear the commands declared either globally or for a specific guild.</p>\n\n<p><em>Note:</em>\nThe endpoint this uses has a strict ratelimit which, as of writing,\nonly allows for 2 requests per minute (with that ratelimit either\nbeing per-guild if targeting a specific guild otherwise globally).</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>application</strong> (typing.Optional[hikari.snowflakes.SnowflakeishOr[hikari.PartialApplication]]):\nThe application to clear commands for.</p>\n\n<p>If left as <code>None</code> then this will be inferred from the authorization\nbeing used by <code>Client.rest</code>.</p></li>\n<li><p><strong>guild</strong> (hikari.UndefinedOr[hikari.snowflakes.SnowflakeishOr[hikari.PartialGuild]]):\nObject or ID of the guild to clear commands for.</p>\n\n<p>If left as <code>None</code> global commands will be cleared.</p></li>\n</ul>\n", "parameters": ["self", "application", "guild"], "funcdef": "async def"}, "tanjun.abc.Client.declare_global_commands": {"fullname": "tanjun.abc.Client.declare_global_commands", "modulename": "tanjun.abc", "qualname": "Client.declare_global_commands", "type": "function", "doc": "<p>Set the global application commands for a bot based on the loaded components.</p>\n\n<p><em>Warning:</em>\nThis will overwrite any previously set application commands and\nonly targets commands marked as global.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>The endpoint this uses has a strict ratelimit which, as of writing,\nonly allows for 2 requests per minute (with that ratelimit either\nbeing per-guild if targeting a specific guild otherwise globally).</li>\n<li>Setting a specific <code>guild</code> can be useful for testing/debug purposes\nas slash commands may take up to an hour to propagate globally but\nwill immediately propagate when set on a specific guild.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>command_ids</strong> (typing.Optional[collections.abc.Mapping[str, hikari.SnowflakeishOr[hikari.Command]]]):\nIf provided, a mapping of top level command names to IDs of the existing commands to update.</li>\n<li><p><strong>application</strong> (typing.Optional[hikari.snowflakes.SnowflakeishOr[hikari.PartialApplication]]):\nObject or ID of the application to set the global commands for.</p>\n\n<p>If left as <code>None</code> then this will be inferred from the authorization\nbeing used by <code>Client.rest</code>.</p></li>\n<li><p><strong>guild</strong> (hikari.UndefinedOr[hikari.snowflakes.SnowflakeishOr[hikari.PartialGuild]]):\nObject or ID of the guild to set the global commands to.</p>\n\n<p>If left as <code>None</code> global commands will be set.</p></li>\n<li><p><strong>force</strong> (bool):\nForce this to declare the commands regardless of whether or not\nthey match the current state of the declared commands.</p>\n\n<p>Defaults to <code>False</code>. This default behaviour helps avoid issues with the\n2 request per minute (per-guild or globally) ratelimit and the other limit\nof only 200 application command creates per day (per guild or globally).</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Sequence[hikari..Command]</strong>: API representations of the set commands.</li>\n</ul>\n", "parameters": ["self", "command_ids", "application", "guild", "force"], "funcdef": "async def"}, "tanjun.abc.Client.declare_application_command": {"fullname": "tanjun.abc.Client.declare_application_command", "modulename": "tanjun.abc", "qualname": "Client.declare_application_command", "type": "function", "doc": "<p>Declare a single slash command for a bot.</p>\n\n<p><em>Warning:</em>\nProviding <code>command_id</code> when updating a command helps avoid any\npermissions set for the command being lose (e.g. when changing the\ncommand's name).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (BaseSlashCommand):\nThe command to register.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>application</strong> (typing.Optional[hikari.snowflakes.SnowflakeishOr[hikari.PartialApplication]]):\nThe application to register the command with.</p>\n\n<p>If left as <code>None</code> then this will be inferred from the authorization\nbeing used by <code>Client.rest</code>.</p></li>\n<li><strong>command_id</strong> (typing.Optional[hikari.snowflakes.Snowflakeish]):\nID of the command to update.</li>\n<li><p><strong>guild</strong> (typing.Optional[hikari.snowflakes.SnowflakeishOr[hikari.PartialGuild]]):\nObject or ID of the guild to register the command with.</p>\n\n<p>If left as <code>None</code> then the command will be registered globally.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Command</strong>: API representation of the command that was registered.</li>\n</ul>\n", "parameters": ["self", "command", "command_id", "application", "guild"], "funcdef": "async def"}, "tanjun.abc.Client.declare_application_commands": {"fullname": "tanjun.abc.Client.declare_application_commands", "modulename": "tanjun.abc", "qualname": "Client.declare_application_commands", "type": "function", "doc": "<p>Declare a collection of slash commands for a bot.</p>\n\n<p><em>Note:</em>\nThe endpoint this uses has a strict ratelimit which, as of writing,\nonly allows for 2 requests per minute (with that ratelimit either\nbeing per-guild if targeting a specific guild otherwise globally).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>commands</strong> (collections.abc.Iterable[BaseSlashCommand]):\nIterable of the commands to register.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>command_ids</strong> (typing.Optional[collections.abc.Mapping[str, hikari.SnowflakeishOr[hikari.Command]]]):\nIf provided, a mapping of top level command names to IDs of the existing commands to update.</p>\n\n<p>While optional, this can be helpful when updating commands as\nproviding the current IDs will prevent changes such as renames from\nleading to other state set for commands (e.g. permissions) from\nbeing lost.</p></li>\n<li><p><strong>application</strong> (typing.Optional[hikari.snowflakes.SnowflakeishOr[hikari.PartialApplication]]):\nThe application to register the commands with.</p>\n\n<p>If left as <code>None</code> then this will be inferred from the authorization\nbeing used by <code>Client.rest</code>.</p></li>\n<li><p><strong>guild</strong> (typing.Optional[hikari.snowflakes.SnowflakeishOr[hikari.PartialGuild]]):\nObject or ID of the guild to register the commands with.</p>\n\n<p>If left as <code>None</code> then the commands will be registered globally.</p></li>\n<li><p><strong>force</strong> (bool):\nForce this to declare the commands regardless of whether or not\nthey match the current state of the declared commands.</p>\n\n<p>Defaults to <code>False</code>. This default behaviour helps avoid issues with the\n2 request per minute (per-guild or globally) ratelimit and the other limit\nof only 200 application command creates per day (per guild or globally).</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Sequence[hikari.Command]</strong>: API representations of the commands which were registered.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If conflicting command names are found (multiple commanbds have the same top-level name).</li>\n<li>If more than 100 top-level commands are passed.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "commands", "command_ids", "application", "guild", "force"], "funcdef": "async def"}, "tanjun.abc.Client.add_component": {"fullname": "tanjun.abc.Client.add_component", "modulename": "tanjun.abc", "qualname": "Client.add_component", "type": "function", "doc": "<p>Add a component to this client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>component</strong> (Component):\nThe component to move to this client.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to allow chained calls.</li>\n</ul>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.abc.Client.get_component_by_name": {"fullname": "tanjun.abc.Client.get_component_by_name", "modulename": "tanjun.abc", "qualname": "Client.get_component_by_name", "type": "function", "doc": "<p>Get a component from this client by name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName to get a component by.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[Component]</strong>: The component instance if found, else <code>None</code>.</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.abc.Client.remove_component": {"fullname": "tanjun.abc.Client.remove_component", "modulename": "tanjun.abc", "qualname": "Client.remove_component", "type": "function", "doc": "<p>Remove a component from this client.</p>\n\n<p>This will unsubscribe any client callbacks, commands and listeners\nregistered in the provided component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>component</strong> (Component):\nThe component to remove from this client.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the provided component isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to allow chained calls.</li>\n</ul>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.abc.Client.remove_component_by_name": {"fullname": "tanjun.abc.Client.remove_component_by_name", "modulename": "tanjun.abc", "qualname": "Client.remove_component_by_name", "type": "function", "doc": "<p>Remove a component from this client by name.</p>\n\n<p>This will unsubscribe any client callbacks, commands and listeners\nregistered in the provided component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName of the component to remove from this client.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>KeyError</strong>: If the provided component name isn't found.</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.abc.Client.add_client_callback": {"fullname": "tanjun.abc.Client.add_client_callback", "modulename": "tanjun.abc", "qualname": "Client.add_client_callback", "type": "function", "doc": "<p>Add a client callback.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (typing.Union[str, ClientCallbackNames]):\nThe name this callback is being registered to.</p>\n\n<p>This is case-insensitive.</p></li>\n<li><p><strong>callback</strong> (MetaEventSigT):\nThe callback to register.</p>\n\n<p>This may be sync or async and must return None. The positional and\nkeyword arguments a callback should expect depend on implementation\ndetail around the <code>name</code> being subscribed to.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "name", "callback"], "funcdef": "def"}, "tanjun.abc.Client.dispatch_client_callback": {"fullname": "tanjun.abc.Client.dispatch_client_callback", "modulename": "tanjun.abc", "qualname": "Client.dispatch_client_callback", "type": "function", "doc": "<p>Dispatch a client callback.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (typing.Union[str, ClientCallbackNames]):\nThe name of the callback to dispatch.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>*args</strong> (typing.Any):\nPositional arguments to pass to the callback(s).</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>KeyError</strong>: If no callbacks are registered for the given name.</li>\n</ul>\n", "parameters": ["self", "name", "args"], "funcdef": "async def"}, "tanjun.abc.Client.get_client_callbacks": {"fullname": "tanjun.abc.Client.get_client_callbacks", "modulename": "tanjun.abc", "qualname": "Client.get_client_callbacks", "type": "function", "doc": "<p>Get a collection of the callbacks registered for a specific name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (typing.Union[str, ClientCallbackNames]):\nThe name to get the callbacks registered for.</p>\n\n<p>This is case-insensitive.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Collection[MetaEventSig]</strong>: Collection of the callbacks for the provided name.</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.abc.Client.remove_client_callback": {"fullname": "tanjun.abc.Client.remove_client_callback", "modulename": "tanjun.abc", "qualname": "Client.remove_client_callback", "type": "function", "doc": "<p>Remove a client callback.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (typing.Union[str, ClientCallbackNames]):\nThe name this callback is being registered to.</p>\n\n<p>This is case-insensitive.</p></li>\n<li><strong>callback</strong> (MetaEventSigT):\nThe callback to remove from the client's callbacks.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>KeyError</strong>: If the provided name isn't found.</li>\n<li><strong>ValueError</strong>: If the provided callback isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "name", "callback"], "funcdef": "def"}, "tanjun.abc.Client.with_client_callback": {"fullname": "tanjun.abc.Client.with_client_callback", "modulename": "tanjun.abc", "qualname": "Client.with_client_callback", "type": "function", "doc": "<p>Add a client callback through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"o\">.</span><span class=\"n\">from_rest_bot</span><span class=\"p\">(</span><span class=\"n\">bot</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@client</span><span class=\"o\">.</span><span class=\"n\">with_client_callback</span><span class=\"p\">(</span><span class=\"s2\">&quot;closed&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_close</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (typing.Union[str, ClientCallbackNames]):\nThe name this callback is being registered to.</p>\n\n<p>This is case-insensitive.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[MetaEventSigT], MetaEventSigT]</strong>: Decorator callback used to register the client callback.</li>\n</ul>\n\n<p>This may be sync or async and must return None. The positional and\nkeyword arguments a callback should expect depend on implementation\ndetail around the <code>name</code> being subscribed to.</p>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.abc.Client.add_listener": {"fullname": "tanjun.abc.Client.add_listener", "modulename": "tanjun.abc", "qualname": "Client.add_listener", "type": "function", "doc": "<p>Add a listener to the client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event_type</strong> (type[hikari.Event]):\nThe event type to add a listener for.</li>\n<li><p><strong>callback</strong> (ListenerCallbackSig):\nThe callback to register as a listener.</p>\n\n<p>This callback must be a coroutine function which returns <code>None</code> and\nalways takes at least one positional arg of type <code>hikari.Event</code>\nregardless of client implementation detail.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "event_type", "callback"], "funcdef": "def"}, "tanjun.abc.Client.remove_listener": {"fullname": "tanjun.abc.Client.remove_listener", "modulename": "tanjun.abc", "qualname": "Client.remove_listener", "type": "function", "doc": "<p>Remove a listener from the client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event_type</strong> (type[hikari.Event]):\nThe event type to remove a listener for.</li>\n<li><strong>callback</strong> (ListenerCallbackSig):\nThe callback to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>KeyError</strong>: If the provided event type isn't found.</li>\n<li><strong>ValueError</strong>: If the provided callback isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "event_type", "callback"], "funcdef": "def"}, "tanjun.abc.Client.with_listener": {"fullname": "tanjun.abc.Client.with_listener", "modulename": "tanjun.abc", "qualname": "Client.with_listener", "type": "function", "doc": "<p>Add an event listener to this client through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"o\">.</span><span class=\"n\">from_gateway_bot</span><span class=\"p\">(</span><span class=\"n\">bot</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@client</span><span class=\"o\">.</span><span class=\"n\">with_listener</span><span class=\"p\">(</span><span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">MessageCreateEvent</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_message_create</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">MessageCreateEvent</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event_type</strong> (type[hikari.Event]):\nThe event type to listener for.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[ListenerCallbackSigT], ListenerCallbackSigT]</strong>: Decorator callback used to register the event callback.</li>\n</ul>\n\n<p>The callback must be a coroutine function which returns <code>None</code> and\nalways takes at least one positional arg of type <code>hikari.Event</code>\nregardless of client implementation detail.</p>\n", "parameters": ["self", "event_type"], "funcdef": "def"}, "tanjun.abc.Client.iter_commands": {"fullname": "tanjun.abc.Client.iter_commands", "modulename": "tanjun.abc", "qualname": "Client.iter_commands", "type": "function", "doc": "<p>Iterate over all the commands (both message and slash) registered to this client.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[ExecutableCommand[Context]]</strong>: Iterator of all the commands registered to this client.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.abc.Client.iter_message_commands": {"fullname": "tanjun.abc.Client.iter_message_commands", "modulename": "tanjun.abc", "qualname": "Client.iter_message_commands", "type": "function", "doc": "<p>Iterate over all the message commands registered to this client.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[MessageCommand]</strong>: Iterator of all the message commands registered to this client.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.abc.Client.iter_slash_commands": {"fullname": "tanjun.abc.Client.iter_slash_commands", "modulename": "tanjun.abc", "qualname": "Client.iter_slash_commands", "type": "function", "doc": "<p>Iterate over all the slash commands registered to this client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>global_only</strong> (bool):\nWhether to only iterate over global slash commands.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[BaseSlashCommand]</strong>: Iterator of all the slash commands registered to this client.</li>\n</ul>\n", "parameters": ["self", "global_only"], "funcdef": "def"}, "tanjun.abc.Client.check_message_name": {"fullname": "tanjun.abc.Client.check_message_name", "modulename": "tanjun.abc", "qualname": "Client.check_message_name", "type": "function", "doc": "<p>Check whether a message command name is present in the current client.</p>\n\n<p><em>Note:</em>\nDependent on implementation this may partial check name against the\nmessage command's name based on command_name.startswith(name).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name to match commands against.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[tuple[str, MessageCommand]]</strong>: Iterator of the matched command names to the matched message command objects.</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.abc.Client.check_slash_name": {"fullname": "tanjun.abc.Client.check_slash_name", "modulename": "tanjun.abc", "qualname": "Client.check_slash_name", "type": "function", "doc": "<p>Check whether a slash command name is present in the current client.</p>\n\n<p><em>Note:</em>\nThis won't check the commands within command groups.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName to check against.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[BaseSlashCommand]</strong>: Iterator of the matched slash command objects.</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.abc.Client.load_modules": {"fullname": "tanjun.abc.Client.load_modules", "modulename": "tanjun.abc", "qualname": "Client.load_modules", "type": "function", "doc": "<p>Load entities into this client from modules based on present loaders.</p>\n\n<p><em>Note:</em>\nIf an <code>__all__</code> is present in the target module then it will be\nused to find loaders.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>For this to work the target module has to have at least one loader present.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_loader</span>\n<span class=\"k\">def</span> <span class=\"nf\">load_module</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">add_component</span><span class=\"p\">(</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">())</span>\n</code></pre></div>\n\n<p>or</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">loader</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Component</span><span class=\"p\">(</span><span class=\"s2\">&quot;trans component&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">load_from_scope</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">make_loader</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>*modules</strong> (typing.Union[str, pathlib.Path]):\nPath(s) of the modules to load from.</p>\n\n<p>When <code>str</code> this will be treated as a normal import path which is\nabsolute (<code>\"foo.bar.baz\"</code>). It's worth noting that absolute module\npaths may be imported from the current location if the top level\nmodule is a valid module file or module directory in the current\nworking directory.</p>\n\n<p>When <code>pathlib.Path</code> the module will be imported directly from\nthe given path. In this mode any relative imports in the target\nmodule will fail to resolve.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This client instance to enable chained calls.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the module is already loaded.</li>\n<li><strong>RuntimeError</strong>: If no loaders are found in the module.</li>\n<li><strong>ModuleNotFoundError</strong>: If the module is not found.</li>\n</ul>\n", "parameters": ["self", "modules"], "funcdef": "def"}, "tanjun.abc.Client.unload_modules": {"fullname": "tanjun.abc.Client.unload_modules", "modulename": "tanjun.abc", "qualname": "Client.unload_modules", "type": "function", "doc": "<p>Unload entities from this client based on unloaders in one or more modules.</p>\n\n<p><em>Note:</em>\nIf an <code>__all__</code> is present in the target module then it will be\nused to find unloaders.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>For this to work the module has to have at least one unloading enabled\n<code>tanjun.abc.ClientLoader</code> present.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_unloader</span>\n<span class=\"k\">def</span> <span class=\"nf\">unload_component</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">remove_component_by_name</span><span class=\"p\">(</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>or</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># as_loader&#39;s returned ClientLoader handles both loading and unloading.</span>\n<span class=\"n\">loader</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Component</span><span class=\"p\">(</span><span class=\"s2\">&quot;trans component&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">load_from_scope</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_loader</span><span class=\"p\">(</span><span class=\"n\">unload_component</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>*modules</strong> (typing.Union[str, pathlib.Path]):\nPath of one or more modules to unload.</p>\n\n<p>These should be the same path(s) which were passed to <code>load_module</code>.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This client instance to enable chained calls.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the module hasn't been loaded.</li>\n<li><strong>RuntimeError</strong>: If no unloaders are found in the module.</li>\n</ul>\n", "parameters": ["self", "modules"], "funcdef": "def"}, "tanjun.abc.Client.reload_modules": {"fullname": "tanjun.abc.Client.reload_modules", "modulename": "tanjun.abc", "qualname": "Client.reload_modules", "type": "function", "doc": "<p>Reload entities in this client based on the loaders in loaded module(s).</p>\n\n<p><em>Note:</em>\nIf an <code>__all__</code> is present in the target module then it will be\nused to find loaders and unloaders.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>For this to work the module has to have at least one ClientLoader\nwhich handles both loading and unloading present.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>*modules</strong> (typing.Union[str, pathlib.Path]):\nPaths of one or more module to unload.</p>\n\n<p>These should be the same paths which were passed to <code>load_module</code>.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This client instance to enable chained calls.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the module hasn't been loaded.</li>\n<li><strong>RuntimeError</strong>: If no unloaders are found in the current state of the module.\nIf no loaders are found in the new state of the module.</li>\n</ul>\n", "parameters": ["self", "modules"], "funcdef": "def"}, "tanjun.checks": {"fullname": "tanjun.checks", "modulename": "tanjun.checks", "qualname": "", "type": "module", "doc": "<p>A collection of common standard checks designed for Tanjun commands.</p>\n"}, "tanjun.checks.all_checks": {"fullname": "tanjun.checks.all_checks", "modulename": "tanjun.checks", "qualname": "all_checks", "type": "function", "doc": "<p>Combine multiple check callbacks into a check which will only pass if all the callbacks pass.</p>\n\n<p>This ensures that the callbacks are run in the order they were supplied in\nrather than concurrently.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>check</strong> (typing_abc.CheckSig):\nThe first check callback to combine.</li>\n<li><strong>*checks</strong> (typing_abc.CheckSig):\nAdditional check callbacks to combine.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[tanjun_abc.Context], collections.abc.Coroutine[typing.Any, typing.Any, bool]]</strong>: A check which will pass if all of the provided check callbacks pass.</li>\n</ul>\n", "parameters": ["check", "checks"], "funcdef": "def"}, "tanjun.checks.any_checks": {"fullname": "tanjun.checks.any_checks", "modulename": "tanjun.checks", "qualname": "any_checks", "type": "function", "doc": "<p>Combine multiple checks into a check which'll pass if any of the callbacks pass.</p>\n\n<p>This ensures that the callbacks are run in the order they were supplied in\nrather than concurrently.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>check</strong> (typing_abc.CheckSig):\nThe first check callback to combine.</li>\n<li><strong>*checks</strong> (typing_abc.CheckSig):\nAdditional check callbacks to combine.</li>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>This takes priority over <code>halt_execution</code>.</p></li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>suppress</strong> (tuple[type[Exception], ...]):\nTuple of the exceptions to suppress when a check fails.</p>\n\n<p>Defaults to (<code>tanjun.errors.CommandError</code>, <code>tanjun.errors.HaltExecution</code>).</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.Callable[[CommandT], CommandT]</strong>: A decorator which adds the generated check to a command.</li>\n</ul>\n", "parameters": ["check", "checks", "suppress", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.checks.CallbackReturnT": {"fullname": "tanjun.checks.CallbackReturnT", "modulename": "tanjun.checks", "qualname": "CallbackReturnT", "type": "variable", "doc": "<p>Type hint for the return value of decorators which optionally take keyword arguments.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>Decorator functions with this as their return type may either be used as a\ndecorator directly without being explicitly called:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@with_dm_check</span>\n<span class=\"nd\">@as_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo_command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"bp\">NotImplemented</span>\n</code></pre></div>\n\n<p>Or may be called with the listed other parameters as keyword arguments\nwhile decorating a function.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@with_dm_check</span><span class=\"p\">(</span><span class=\"n\">halt_execution</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nd\">@as_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo_command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"bp\">NotImplemented</span>\n</code></pre></div>\n"}, "tanjun.checks.CommandT": {"fullname": "tanjun.checks.CommandT", "modulename": "tanjun.checks", "qualname": "CommandT", "type": "variable", "doc": "<p></p>\n"}, "tanjun.checks.with_all_checks": {"fullname": "tanjun.checks.with_all_checks", "modulename": "tanjun.checks", "qualname": "with_all_checks", "type": "function", "doc": "<p>Add a check which will pass if all the provided checks pass through a decorator call.</p>\n\n<p>This ensures that the callbacks are run in the order they were supplied in\nrather than concurrently.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>check</strong> (typing_abc.CheckSig):\nThe first check callback to combine.</li>\n<li><strong>*checks</strong> (typing_abc.CheckSig):\nAdditional check callbacks to combine.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[tanjun_abc.Context], collections.abc.Coroutine[typing.Any, typing.Any, bool]]</strong>: A check which will pass if all of the provided check callbacks pass.</li>\n</ul>\n", "parameters": ["check", "checks"], "funcdef": "def"}, "tanjun.checks.with_any_checks": {"fullname": "tanjun.checks.with_any_checks", "modulename": "tanjun.checks", "qualname": "with_any_checks", "type": "function", "doc": "<p>Add a check which'll pass if any of the provided checks pass through a decorator call.</p>\n\n<p>This ensures that the callbacks are run in the order they were supplied in\nrather than concurrently.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>check</strong> (typing_abc.CheckSig):\nThe first check callback to combine.</li>\n<li><strong>*checks</strong> (typing_abc.CheckSig):\nAdditional check callbacks to combine.</li>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>This takes priority over <code>halt_execution</code>.</p></li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>suppress</strong> (tuple[type[Exception], ...]):\nTuple of the exceptions to suppress when a check fails.</p>\n\n<p>Defaults to (<code>tanjun.errors.CommandError</code>, <code>tanjun.errors.HaltExecution</code>).</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.Callable[[CommandT], CommandT]</strong>: A decorator which adds the generated check to a command.</li>\n</ul>\n", "parameters": ["check", "checks", "suppress", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.checks.with_check": {"fullname": "tanjun.checks.with_check", "modulename": "tanjun.checks", "qualname": "with_check", "type": "function", "doc": "<p>Add a generic check to a command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>check</strong> (tanjun.abc.CheckSig):\nThe check to add to this command.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[CommandT], CommandT]</strong>: A command decorator callback which adds the check.</li>\n</ul>\n", "parameters": ["check"], "funcdef": "def"}, "tanjun.checks.with_dm_check": {"fullname": "tanjun.checks.with_dm_check", "modulename": "tanjun.checks", "qualname": "with_dm_check", "type": "function", "doc": "<p>Only let a command run in a DM channel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (typing.Optional[CommandT]):\nThe command to add this check to.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"Command can only be used in DMs\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>error_message takes priority over halt_execution.</li>\n<li>For more information on how this is used with other parameters see\n<code>CallbackReturnT</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CallbackReturnT[CommandT]</strong>: The command this check was added to.</li>\n</ul>\n", "parameters": ["command", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.checks.with_guild_check": {"fullname": "tanjun.checks.with_guild_check", "modulename": "tanjun.checks", "qualname": "with_guild_check", "type": "function", "doc": "<p>Only let a command run in a guild channel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (typing.Optional[CommandT]):\nThe command to add this check to.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"Command can only be used in guild channels\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>error_message takes priority over halt_execution.</li>\n<li>For more information on how this is used with other parameters see\n<code>CallbackReturnT</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CallbackReturnT[CommandT]</strong>: The command this check was added to.</li>\n</ul>\n", "parameters": ["command", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.checks.with_nsfw_check": {"fullname": "tanjun.checks.with_nsfw_check", "modulename": "tanjun.checks", "qualname": "with_nsfw_check", "type": "function", "doc": "<p>Only let a command run in a channel that's marked as nsfw.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (typing.Optional[CommandT]):\nThe command to add this check to.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"Command can only be used in NSFW channels\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>error_message takes priority over halt_execution.</li>\n<li>For more information on how this is used with other parameters see\n<code>CallbackReturnT</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CallbackReturnT[CommandT]</strong>: The command this check was added to.</li>\n</ul>\n", "parameters": ["command", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.checks.with_sfw_check": {"fullname": "tanjun.checks.with_sfw_check", "modulename": "tanjun.checks", "qualname": "with_sfw_check", "type": "function", "doc": "<p>Only let a command run in a channel that's marked as sfw.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (typing.Optional[CommandT]):\nThe command to add this check to.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"Command can only be used in SFW channels\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>error_message takes priority over halt_execution.</li>\n<li>For more information on how this is used with other parameters see\n<code>CallbackReturnT</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CallbackReturnT[CommandT]</strong>: The command this check was added to.</li>\n</ul>\n", "parameters": ["command", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.checks.with_owner_check": {"fullname": "tanjun.checks.with_owner_check", "modulename": "tanjun.checks", "qualname": "with_owner_check", "type": "function", "doc": "<p>Only let a command run if it's being triggered by one of the bot's owners.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (typing.Optional[CommandT]):\nThe command to add this check to.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"Only bot owners can use this command\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>error_message takes priority over halt_execution.</li>\n<li>For more information on how this is used with other parameters see\n<code>CallbackReturnT</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CallbackReturnT[CommandT]</strong>: The command this check was added to.</li>\n</ul>\n", "parameters": ["command", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.checks.with_author_permission_check": {"fullname": "tanjun.checks.with_author_permission_check", "modulename": "tanjun.checks", "qualname": "with_author_permission_check", "type": "function", "doc": "<p>Only let a command run if the author has certain permissions in the current channel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>permissions</strong> (typing.Union[hikari.permissions.Permissions, int]):\nThe permission(s) required for this command to run.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"You don't have the permissions required to use this command\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>error_message takes priority over halt_execution.</li>\n<li>This will only pass for commands in DMs if <code>permissions</code> is valid for\na DM context (e.g. can't have any moderation permissions)</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[CommandT], CommandT]</strong>: A command decorator callback which adds the check.</li>\n</ul>\n", "parameters": ["permissions", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.checks.with_own_permission_check": {"fullname": "tanjun.checks.with_own_permission_check", "modulename": "tanjun.checks", "qualname": "with_own_permission_check", "type": "function", "doc": "<p>Only let a command run if we have certain permissions in the current channel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>permissions</strong> (typing.Union[hikari.permissions.Permissions, int]):\nThe permission(s) required for this command to run.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"Bot doesn't have the permissions required to run this command\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>error_message takes priority over halt_execution.</li>\n<li>This will only pass for commands in DMs if <code>permissions</code> is valid for\na DM context (e.g. can't have any moderation permissions)</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[CommandT], CommandT]</strong>: A command decorator callback which adds the check.</li>\n</ul>\n", "parameters": ["permissions", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.checks.DmCheck": {"fullname": "tanjun.checks.DmCheck", "modulename": "tanjun.checks", "qualname": "DmCheck", "type": "class", "doc": "<p>Standard DM check callback registered by <code>with_dm_check</code>.</p>\n\n<p>This check will only pass if the current channel is a DM channel.</p>\n"}, "tanjun.checks.DmCheck.__init__": {"fullname": "tanjun.checks.DmCheck.__init__", "modulename": "tanjun.checks", "qualname": "DmCheck.__init__", "type": "function", "doc": "<p>Initialise a DM check.</p>\n\n<p><em>Note:</em>\nerror_message takes priority over halt_execution.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"Command can only be used in DMs\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n", "parameters": ["self", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.checks.GuildCheck": {"fullname": "tanjun.checks.GuildCheck", "modulename": "tanjun.checks", "qualname": "GuildCheck", "type": "class", "doc": "<p>Standard guild check callback registered by <code>with_guild_check</code>.</p>\n\n<p>This check will only pass if the current channel is in a guild.</p>\n"}, "tanjun.checks.GuildCheck.__init__": {"fullname": "tanjun.checks.GuildCheck.__init__", "modulename": "tanjun.checks", "qualname": "GuildCheck.__init__", "type": "function", "doc": "<p>Initialise a guild check.</p>\n\n<p><em>Note:</em>\nerror_message takes priority over halt_execution.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"Command can only be used in guild channels\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n", "parameters": ["self", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.checks.NsfwCheck": {"fullname": "tanjun.checks.NsfwCheck", "modulename": "tanjun.checks", "qualname": "NsfwCheck", "type": "class", "doc": "<p>Standard NSFW check callback registered by <code>with_nsfw_check</code>.</p>\n\n<p>This check will only pass if the current channel is NSFW.</p>\n"}, "tanjun.checks.NsfwCheck.__init__": {"fullname": "tanjun.checks.NsfwCheck.__init__", "modulename": "tanjun.checks", "qualname": "NsfwCheck.__init__", "type": "function", "doc": "<p>Initialise a NSFW check.</p>\n\n<p><em>Note:</em>\nerror_message takes priority over halt_execution.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"Command can only be used in NSFW channels\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n", "parameters": ["self", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.checks.SfwCheck": {"fullname": "tanjun.checks.SfwCheck", "modulename": "tanjun.checks", "qualname": "SfwCheck", "type": "class", "doc": "<p>Standard SFW check callback registered by <code>with_sfw_check</code>.</p>\n\n<p>This check will only pass if the current channel is SFW.</p>\n"}, "tanjun.checks.SfwCheck.__init__": {"fullname": "tanjun.checks.SfwCheck.__init__", "modulename": "tanjun.checks", "qualname": "SfwCheck.__init__", "type": "function", "doc": "<p>Initialise a SFW check.</p>\n\n<p><em>Note:</em>\nerror_message takes priority over halt_execution.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"Command can only be used in SFW channels\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n", "parameters": ["self", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.checks.OwnerCheck": {"fullname": "tanjun.checks.OwnerCheck", "modulename": "tanjun.checks", "qualname": "OwnerCheck", "type": "class", "doc": "<p>Standard owner check callback registered by <code>with_owner_check</code>.</p>\n\n<p>This check will only pass if the author of the command is a bot owner.</p>\n"}, "tanjun.checks.OwnerCheck.__init__": {"fullname": "tanjun.checks.OwnerCheck.__init__", "modulename": "tanjun.checks", "qualname": "OwnerCheck.__init__", "type": "function", "doc": "<p>Initialise a owner check.</p>\n\n<p><em>Note:</em>\nerror_message takes priority over halt_execution.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"Only bot owners can use this command\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n", "parameters": ["self", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.checks.AuthorPermissionCheck": {"fullname": "tanjun.checks.AuthorPermissionCheck", "modulename": "tanjun.checks", "qualname": "AuthorPermissionCheck", "type": "class", "doc": "<p>Standard author permission check callback registered by <code>with_author_permission_check</code>.</p>\n\n<p>This check will only pass if the current author has the specified permission.</p>\n"}, "tanjun.checks.AuthorPermissionCheck.__init__": {"fullname": "tanjun.checks.AuthorPermissionCheck.__init__", "modulename": "tanjun.checks", "qualname": "AuthorPermissionCheck.__init__", "type": "function", "doc": "<p>Initialise an author permission check.</p>\n\n<p><em>Note:</em>\nerror_message takes priority over halt_execution.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>permissions</strong> (typing.Union[hikari.permissions.Permissions, int]):\nThe permission(s) required for this command to run.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"You don't have the permissions required to use this command\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n", "parameters": ["self", "permissions", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.checks.OwnPermissionCheck": {"fullname": "tanjun.checks.OwnPermissionCheck", "modulename": "tanjun.checks", "qualname": "OwnPermissionCheck", "type": "class", "doc": "<p>Standard own permission check callback registered by <code>with_own_permission_check</code>.</p>\n\n<p>This check will only pass if the current bot user has the specified permission.</p>\n"}, "tanjun.checks.OwnPermissionCheck.__init__": {"fullname": "tanjun.checks.OwnPermissionCheck.__init__", "modulename": "tanjun.checks", "qualname": "OwnPermissionCheck.__init__", "type": "function", "doc": "<p>Initialise a own permission check.</p>\n\n<p><em>Note:</em>\nerror_message takes priority over halt_execution.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>permissions</strong> (typing.Union[hikari.permissions.Permissions, int]):\nThe permission(s) required for this command to run.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (typing.Optional[str]):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to \"Bot doesn't have the permissions required to run this command\" and setting this to <code>None</code>\nwill disable the error message allowing the command search to continue.</p></li>\n<li><p><strong>halt_execution</strong> (bool):\nWhether this check should raise <code>tanjun.errors.HaltExecution</code> to\nend the execution search when it fails instead of returning <code>False</code>.</p>\n\n<p>Defaults to <code>False</code>.</p></li>\n</ul>\n", "parameters": ["self", "permissions", "error_message", "halt_execution"], "funcdef": "def"}, "tanjun.clients": {"fullname": "tanjun.clients", "modulename": "tanjun.clients", "qualname": "", "type": "module", "doc": "<p>Standard Tanjun client.</p>\n"}, "tanjun.clients.as_loader": {"fullname": "tanjun.clients.as_loader", "modulename": "tanjun.clients", "qualname": "as_loader", "type": "function", "doc": "<p>Mark a callback as being used to load Tanjun components from a module.</p>\n\n<p><em>Note:</em>\nThis is only necessary if you wish to use <code>tanjun.Client.load_modules</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (collections.abc.Callable[[tanjun.abc.Client], None]]):\nThe callback used to load Tanjun components from a module.</p>\n\n<p>This should take one argument of type <code>Client</code> (or <code>tanjun.abc.Client</code>\nif <code>standard_impl</code> is <code>False</code>), return nothing and will be expected\nto initiate and add utilities such as components to the provided client.</p></li>\n<li><p><strong>standard_impl</strong> (bool):\nWhether this loader should only allow instances of <code>Client</code> as opposed\nto <code>tanjun.abc.Client</code>.</p>\n\n<p>Defaults to <code>True</code>.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[tanjun.abc.Client], None]]</strong>: The decorated load callback.</li>\n</ul>\n", "parameters": ["callback", "standard_impl"], "funcdef": "def"}, "tanjun.clients.as_unloader": {"fullname": "tanjun.clients.as_unloader", "modulename": "tanjun.clients", "qualname": "as_unloader", "type": "function", "doc": "<p>Mark a callback as being used to unload a module's utilities from a client.</p>\n\n<p><em>Note:</em>\nThis is the inverse of <code>as_loader</code> and is only necessary if you wish\nto use the <code>tanjun.Client.unload_module</code> or\n<code>tanjun.Client.reload_module</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (collections.abc.Callable[[tanjun.Client], None]]):\nThe callback used to unload Tanjun components from a module.</p>\n\n<p>This should take one argument of type <code>Client</code> (or <code>tanjun.abc.Client</code>\nif <code>standard_impl</code> is <code>False</code>), return nothing and will be expected\nto remove utilities such as components from the provided client.</p></li>\n<li><p><strong>standard_impl</strong> (bool):\nWhether this unloader should only allow instances of <code>Client</code> as\nopposed to <code>tanjun.abc.Client</code>.</p>\n\n<p>Defaults to <code>True</code>.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[tanjun.Client], None]]</strong>: The decorated unload callback.</li>\n</ul>\n", "parameters": ["callback", "standard_impl"], "funcdef": "def"}, "tanjun.clients.Client": {"fullname": "tanjun.clients.Client", "modulename": "tanjun.clients", "qualname": "Client", "type": "class", "doc": "<p>Tanjun's standard <code>tanjun.abc.Client</code> implementation.</p>\n\n<p>This implementation supports dependency injection for checks, command\ncallbacks, prefix getters and event listeners. For more information on how\nthis works see <code>tanjun.injecting</code>.</p>\n\n<p><em>Note:</em>\nBy default this client includes a parser error handling hook which will\nby overwritten if you call <code>Client.set_hooks</code>.</p>\n"}, "tanjun.clients.Client.__init__": {"fullname": "tanjun.clients.Client.__init__", "modulename": "tanjun.clients", "qualname": "Client.__init__", "type": "function", "doc": "<p>Initialise a Tanjun client.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>For a quicker way to initiate this client around a standard bot aware\nclient, see <code>Client.from_gateway_bot</code> and <code>Client.from_rest_bot</code>.</li>\n<li>The endpoint used by <code>declare_global_commands</code> has a strict ratelimit which,\nas of writing, only allows for 2 requests per minute (with that ratelimit\neither being per-guild if targeting a specific guild otherwise globally).</li>\n<li><code>event_manager</code> is necessary for message command dispatch and will also\nbe necessary for interaction command dispatch if <code>server</code> isn't\nprovided.</li>\n<li><code>server</code> is used for interaction command dispatch if interaction\nevents aren't being received from the event manager.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>rest</strong> (hikari.api.rest.RestClient):\nThe Hikari REST client this will use.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>cache</strong> (hikari.api.cache.CacheClient):\nThe Hikari cache client this will use if applicable.</li>\n<li><strong>event_manager</strong> (hikari.api.event_manager.EventManagerClient):\nThe Hikari event manager client this will use if applicable.</li>\n<li><strong>server</strong> (hikari.api.interaction_server.InteractionServer):\nThe Hikari interaction server client this will use if applicable.</li>\n<li><strong>shards</strong> (hikari.traits.ShardAware):\nThe Hikari shard aware client this will use if applicable.</li>\n<li><strong>voice</strong> (hikari.api.voice.VoiceComponent):\nThe Hikari voice component this will use if applicable.</li>\n<li><p><strong>event_managed</strong> (bool):\nWhether or not this client is managed by the event manager.</p>\n\n<p>An event managed client will be automatically started and closed based\non Hikari's lifetime events.</p>\n\n<p>Defaults to <code>False</code> and can only be passed as <code>True</code> if <code>event_manager</code>\nis also provided.</p></li>\n<li><p><strong>mention_prefix</strong> (bool):\nWhether or not mention prefixes should be automatically set when this\nclient is first started.</p>\n\n<p>Defaults to <code>False</code> and it should be noted that this only applies to\nmessage commands.</p></li>\n<li><p><strong>declare_global_commands</strong> (typing.Union[hikari.SnowflakeishSequenceOr[hikari.PartialGuild], hikari.SnowflakeishOr[hikari.PartialGuild], bool]):\nWhether or not to automatically set global slash commands when this\nclient is first started. Defaults to <code>False</code>.</p>\n\n<p>If one or more guild objects/IDs are passed here then the registered\nglobal commands will be set on the specified guild(s) at startup rather\nthan globally. This can be useful for testing/debug purposes as slash\ncommands may take up to an hour to propagate globally but will\nimmediately propagate when set on a specific guild.</p></li>\n<li><strong>set_global_commands</strong> (typing.Union[hikari.SnowflakeishOr[hikari.PartialGuild], bool]):\nDeprecated as of v2.1.1a1 alias of <code>declare_global_commands</code>.</li>\n<li><p><strong>command_ids</strong> (typing.Optional[collections.abc.Mapping[str, hikari.SnowflakeishOr[hikari.Command]]]):\nIf provided, a mapping of top level command names to IDs of the commands to update.</p>\n\n<p>This field is complementary to <code>declare_global_commands</code> and, while it\nisn't necessarily required, this will in some situations help avoid\npermissions which were previously set for a command from being lost\nafter a rename.</p>\n\n<p>This currently isn't supported when multiple guild IDs are passed for\n<code>declare_global_commands</code>.</p></li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises for the following reasons:\n<ul>\n<li>If <code>event_managed</code> is <code>True</code> when <code>event_manager</code> is <code>None</code>.</li>\n<li>If <code>command_ids</code> is passed when multiple guild ids are provided for <code>declare_global_commands</code>.</li>\n<li>If <code>command_ids</code> is passed when <code>declare_global_commands</code> is <code>False</code>.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "rest", "cache", "events", "server", "shards", "voice", "event_managed", "mention_prefix", "set_global_commands", "declare_global_commands", "command_ids", "_stack_level"], "funcdef": "def"}, "tanjun.clients.Client.from_gateway_bot": {"fullname": "tanjun.clients.Client.from_gateway_bot", "modulename": "tanjun.clients", "qualname": "Client.from_gateway_bot", "type": "function", "doc": "<p>Build a <code>Client</code> from a <code>hikari.traits.GatewayBotAware</code> instance.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>This implicitly defaults the client to human only mode.</li>\n<li>This sets type dependency injectors for the hikari traits present in\n<code>bot</code> (including <code>hikari.traits.GatewayBotAware</code>).</li>\n<li>The endpoint used by <code>declare_global_commands</code> has a strict ratelimit\nwhich, as of writing, only allows for 2 requests per minute (with that\nratelimit either being per-guild if targeting a specific guild\notherwise globally).</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>bot</strong> (hikari.traits.GatewayBotAware):\nThe bot client to build from.</p>\n\n<p>This will be used to infer the relevant Hikari clients to use.</p></li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>event_managed</strong> (bool):\nWhether or not this client is managed by the event manager.</p>\n\n<p>An event managed client will be automatically started and closed\nbased on Hikari's lifetime events.</p>\n\n<p>Defaults to <code>True</code>.</p></li>\n<li><p><strong>mention_prefix</strong> (bool):\nWhether or not mention prefixes should be automatically set when this\nclient is first started.</p>\n\n<p>Defaults to <code>False</code> and it should be noted that this only applies to\nmessage commands.</p></li>\n<li><p><strong>declare_global_commands</strong> (typing.Union[hikari.SnowflakeishSequenceOr[hikari.PartialGuild], hikari.SnowflakeishOr[hikari.PartialGuild], bool]):\nWhether or not to automatically set global slash commands when this\nclient is first started. Defaults to <code>False</code>.</p>\n\n<p>If one or more guild objects/IDs are passed here then the registered\nglobal commands will be set on the specified guild(s) at startup rather\nthan globally. This can be useful for testing/debug purposes as slash\ncommands may take up to an hour to propagate globally but will\nimmediately propagate when set on a specific guild.</p></li>\n<li><strong>set_global_commands</strong> (typing.Union[hikari.SnowflakeishOr[hikari.PartialGuild], bool]):\nDeprecated as of v2.1.1a1 alias of <code>declare_global_commands</code>.</li>\n<li><p><strong>command_ids</strong> (typing.Optional[collections.abc.Mapping[str, hikari.SnowflakeishOr[hikari.Command]]]):\nIf provided, a mapping of top level command names to IDs of the commands to update.</p>\n\n<p>This field is complementary to <code>declare_global_commands</code> and, while it\nisn't necessarily required, this will in some situations help avoid\npermissions which were previously set for a command from being lost\nafter a rename.</p>\n\n<p>This currently isn't supported when multiple guild IDs are passed for\n<code>declare_global_commands</code>.</p></li>\n</ul>\n", "parameters": ["cls", "bot", "event_managed", "mention_prefix", "declare_global_commands", "set_global_commands", "command_ids"], "funcdef": "def"}, "tanjun.clients.Client.from_rest_bot": {"fullname": "tanjun.clients.Client.from_rest_bot", "modulename": "tanjun.clients", "qualname": "Client.from_rest_bot", "type": "function", "doc": "<p>Build a <code>Client</code> from a <code>hikari.traits.RESTBotAware</code> instance.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>This sets type dependency injectors for the hikari traits present in\n<code>bot</code> (including <code>hikari.traits.RESTBotAware</code>).</li>\n<li>The endpoint used by <code>declare_global_commands</code> has a strict ratelimit\nwhich, as of writing, only allows for 2 requests per minute (with that\nratelimit either being per-guild if targeting a specific guild\notherwise globally).</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bot</strong> (hikari.traits.RESTBotAware):\nThe bot client to build from.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>declare_global_commands</strong> (typing.Union[hikari.SnowflakeishSequenceOr[hikari.PartialGuild], hikari.SnowflakeishOr[hikari.PartialGuild], bool]):\nWhether or not to automatically set global slash commands when this\nclient is first started. Defaults to <code>False</code>.</p>\n\n<p>If one or more guild objects/IDs are passed here then the registered\nglobal commands will be set on the specified guild(s) at startup rather\nthan globally. This can be useful for testing/debug purposes as slash\ncommands may take up to an hour to propagate globally but will\nimmediately propagate when set on a specific guild.</p></li>\n<li><strong>set_global_commands</strong> (typing.Union[hikari.SnowflakeishOr[hikari.PartialGuild], bool]):\nDeprecated as of v2.1.1a1 alias of <code>declare_global_commands</code>.</li>\n<li><p><strong>command_ids</strong> (typing.Optional[collections.abc.Mapping[str, hikari.SnowflakeishOr[hikari.Command]]]):\nIf provided, a mapping of top level command names to IDs of the commands to update.</p>\n\n<p>This field is complementary to <code>declare_global_commands</code> and, while it\nisn't necessarily required, this will in some situations help avoid\npermissions which were previously set for a command from being lost\nafter a rename.</p>\n\n<p>This currently isn't supported when multiple guild IDs are passed for\n<code>declare_global_commands</code>.</p></li>\n</ul>\n", "parameters": ["cls", "bot", "declare_global_commands", "set_global_commands", "command_ids"], "funcdef": "def"}, "tanjun.clients.Client.defaults_to_ephemeral": {"fullname": "tanjun.clients.Client.defaults_to_ephemeral", "modulename": "tanjun.clients", "qualname": "Client.defaults_to_ephemeral", "type": "variable", "doc": "<p>Whether slash contexts spawned by this client should default to ephemeral responses.</p>\n\n<p>This effects calls to <code>SlashContext.create_followup</code>,\n<code>SlashContext.create_initial_response</code>, <code>SlashContext.defer</code> and\n<code>SlashContext.respond</code> unless the <code>flags</code> field is provided for the\nmethods which support it.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>This may be overridden by <code>BaseSlashCommand.defaults_to_ephemeral</code>\nand <code>Component.defaults_to_ephemeral</code>.</li>\n<li>This defaults to <code>False</code>.</li>\n<li>This only effects slash command execution.</li>\n</ul>\n"}, "tanjun.clients.Client.message_accepts": {"fullname": "tanjun.clients.Client.message_accepts", "modulename": "tanjun.clients", "qualname": "Client.message_accepts", "type": "variable", "doc": "<p>Type of message create events this command client accepts for execution.</p>\n"}, "tanjun.clients.Client.is_human_only": {"fullname": "tanjun.clients.Client.is_human_only", "modulename": "tanjun.clients", "qualname": "Client.is_human_only", "type": "variable", "doc": "<p>Whether this client is only executing for non-bot/webhook users messages.</p>\n"}, "tanjun.clients.Client.cache": {"fullname": "tanjun.clients.Client.cache", "modulename": "tanjun.clients", "qualname": "Client.cache", "type": "variable", "doc": "<p>Hikari cache instance this command client was initialised with.</p>\n"}, "tanjun.clients.Client.checks": {"fullname": "tanjun.clients.Client.checks", "modulename": "tanjun.clients", "qualname": "Client.checks", "type": "variable", "doc": "<p>Collection of the level <code>tanjun.abc.Context</code> checks registered to this client.</p>\n\n<p><em>Note:</em>\nThese may be taking advantage of the standard dependency injection.</p>\n"}, "tanjun.clients.Client.components": {"fullname": "tanjun.clients.Client.components", "modulename": "tanjun.clients", "qualname": "Client.components", "type": "variable", "doc": "<p>Collection of the components this command client is using.</p>\n"}, "tanjun.clients.Client.events": {"fullname": "tanjun.clients.Client.events", "modulename": "tanjun.clients", "qualname": "Client.events", "type": "variable", "doc": "<p>Object of the event manager this client was initialised with.</p>\n\n<p>This is used for executing message commands if set.</p>\n"}, "tanjun.clients.Client.listeners": {"fullname": "tanjun.clients.Client.listeners", "modulename": "tanjun.clients", "qualname": "Client.listeners", "type": "variable", "doc": "<p>Mapping of event types to the listeners registered in this client.</p>\n"}, "tanjun.clients.Client.hooks": {"fullname": "tanjun.clients.Client.hooks", "modulename": "tanjun.clients", "qualname": "Client.hooks", "type": "variable", "doc": "<p>Top level <code>tanjun.abc.AnyHooks</code> set for this client.</p>\n\n<p>These are called during both message and interaction command execution.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[tanjun.abc.AnyHooks]</strong>: The top level <code>tanjun.abc.Context</code> based hooks set for this\nclient if applicable, else <code>None</code>.</li>\n</ul>\n"}, "tanjun.clients.Client.slash_hooks": {"fullname": "tanjun.clients.Client.slash_hooks", "modulename": "tanjun.clients", "qualname": "Client.slash_hooks", "type": "variable", "doc": "<p>Top level <code>tanjun.abc.SlashHooks</code> set for this client.</p>\n\n<p>These are only called during interaction command execution.</p>\n"}, "tanjun.clients.Client.is_alive": {"fullname": "tanjun.clients.Client.is_alive", "modulename": "tanjun.clients", "qualname": "Client.is_alive", "type": "variable", "doc": "<p>Whether this client is alive.</p>\n"}, "tanjun.clients.Client.loop": {"fullname": "tanjun.clients.Client.loop", "modulename": "tanjun.clients", "qualname": "Client.loop", "type": "variable", "doc": "<p>The loop this client is bound to if it's alive.</p>\n"}, "tanjun.clients.Client.message_hooks": {"fullname": "tanjun.clients.Client.message_hooks", "modulename": "tanjun.clients", "qualname": "Client.message_hooks", "type": "variable", "doc": "<p>Top level <code>tanjun.abc.MessageHooks</code> set for this client.</p>\n\n<p>These are only called during both message command execution.</p>\n"}, "tanjun.clients.Client.metadata": {"fullname": "tanjun.clients.Client.metadata", "modulename": "tanjun.clients", "qualname": "Client.metadata", "type": "variable", "doc": "<p>Mutable mapping of the metadata set for this client.</p>\n\n<p><em>Note:</em>\nAny modifications made to this mutable mapping will be preserved by\nthe client.</p>\n"}, "tanjun.clients.Client.prefix_getter": {"fullname": "tanjun.clients.Client.prefix_getter", "modulename": "tanjun.clients", "qualname": "Client.prefix_getter", "type": "variable", "doc": "<p>Prefix getter method set for this client.</p>\n\n<p>For more information on this callback's signature see <code>PrefixGetter</code>.</p>\n"}, "tanjun.clients.Client.prefixes": {"fullname": "tanjun.clients.Client.prefixes", "modulename": "tanjun.clients", "qualname": "Client.prefixes", "type": "variable", "doc": "<p>Collection of the standard prefixes set for this client.</p>\n"}, "tanjun.clients.Client.rest": {"fullname": "tanjun.clients.Client.rest", "modulename": "tanjun.clients", "qualname": "Client.rest", "type": "variable", "doc": "<p>Object of the Hikari REST client this client was initialised with.</p>\n"}, "tanjun.clients.Client.server": {"fullname": "tanjun.clients.Client.server", "modulename": "tanjun.clients", "qualname": "Client.server", "type": "variable", "doc": "<p>Object of the Hikari interaction server provided for this client.</p>\n\n<p>This is used for executing slash commands if set.</p>\n"}, "tanjun.clients.Client.shards": {"fullname": "tanjun.clients.Client.shards", "modulename": "tanjun.clients", "qualname": "Client.shards", "type": "variable", "doc": "<p>Object of the Hikari shard manager this client was initialised with.</p>\n"}, "tanjun.clients.Client.voice": {"fullname": "tanjun.clients.Client.voice", "modulename": "tanjun.clients", "qualname": "Client.voice", "type": "variable", "doc": "<p>Object of the Hikari voice component this client was initialised with.</p>\n"}, "tanjun.clients.Client.clear_application_commands": {"fullname": "tanjun.clients.Client.clear_application_commands", "modulename": "tanjun.clients", "qualname": "Client.clear_application_commands", "type": "function", "doc": "<p>Clear the commands declared either globally or for a specific guild.</p>\n\n<p><em>Note:</em>\nThe endpoint this uses has a strict ratelimit which, as of writing,\nonly allows for 2 requests per minute (with that ratelimit either\nbeing per-guild if targeting a specific guild otherwise globally).</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>application</strong> (typing.Optional[hikari.snowflakes.SnowflakeishOr[hikari.PartialApplication]]):\nThe application to clear commands for.</p>\n\n<p>If left as <code>None</code> then this will be inferred from the authorization\nbeing used by <code>Client.rest</code>.</p></li>\n<li><p><strong>guild</strong> (hikari.UndefinedOr[hikari.snowflakes.SnowflakeishOr[hikari.PartialGuild]]):\nObject or ID of the guild to clear commands for.</p>\n\n<p>If left as <code>None</code> global commands will be cleared.</p></li>\n</ul>\n", "parameters": ["self", "application", "guild"], "funcdef": "async def"}, "tanjun.clients.Client.set_global_commands": {"fullname": "tanjun.clients.Client.set_global_commands", "modulename": "tanjun.clients", "qualname": "Client.set_global_commands", "type": "function", "doc": "<p>Alias of <code>Client.declare_global_commands</code>.</p>\n\n<p><em>Deprecated since version v2.1.1a1:</em>\nUse <code>Client.declare_global_commands</code> instead.</p>\n", "parameters": ["self", "application", "guild", "force"], "funcdef": "async def"}, "tanjun.clients.Client.declare_global_commands": {"fullname": "tanjun.clients.Client.declare_global_commands", "modulename": "tanjun.clients", "qualname": "Client.declare_global_commands", "type": "function", "doc": "<p>Set the global application commands for a bot based on the loaded components.</p>\n\n<p><em>Warning:</em>\nThis will overwrite any previously set application commands and\nonly targets commands marked as global.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>The endpoint this uses has a strict ratelimit which, as of writing,\nonly allows for 2 requests per minute (with that ratelimit either\nbeing per-guild if targeting a specific guild otherwise globally).</li>\n<li>Setting a specific <code>guild</code> can be useful for testing/debug purposes\nas slash commands may take up to an hour to propagate globally but\nwill immediately propagate when set on a specific guild.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>command_ids</strong> (typing.Optional[collections.abc.Mapping[str, hikari.SnowflakeishOr[hikari.Command]]]):\nIf provided, a mapping of top level command names to IDs of the existing commands to update.</li>\n<li><p><strong>application</strong> (typing.Optional[hikari.snowflakes.SnowflakeishOr[hikari.PartialApplication]]):\nObject or ID of the application to set the global commands for.</p>\n\n<p>If left as <code>None</code> then this will be inferred from the authorization\nbeing used by <code>Client.rest</code>.</p></li>\n<li><p><strong>guild</strong> (hikari.UndefinedOr[hikari.snowflakes.SnowflakeishOr[hikari.PartialGuild]]):\nObject or ID of the guild to set the global commands to.</p>\n\n<p>If left as <code>None</code> global commands will be set.</p></li>\n<li><p><strong>force</strong> (bool):\nForce this to declare the commands regardless of whether or not\nthey match the current state of the declared commands.</p>\n\n<p>Defaults to <code>False</code>. This default behaviour helps avoid issues with the\n2 request per minute (per-guild or globally) ratelimit and the other limit\nof only 200 application command creates per day (per guild or globally).</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Sequence[hikari..Command]</strong>: API representations of the set commands.</li>\n</ul>\n", "parameters": ["self", "command_ids", "application", "guild", "force"], "funcdef": "async def"}, "tanjun.clients.Client.declare_application_command": {"fullname": "tanjun.clients.Client.declare_application_command", "modulename": "tanjun.clients", "qualname": "Client.declare_application_command", "type": "function", "doc": "<p>Declare a single slash command for a bot.</p>\n\n<p><em>Warning:</em>\nProviding <code>command_id</code> when updating a command helps avoid any\npermissions set for the command being lose (e.g. when changing the\ncommand's name).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (BaseSlashCommand):\nThe command to register.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>application</strong> (typing.Optional[hikari.snowflakes.SnowflakeishOr[hikari.PartialApplication]]):\nThe application to register the command with.</p>\n\n<p>If left as <code>None</code> then this will be inferred from the authorization\nbeing used by <code>Client.rest</code>.</p></li>\n<li><strong>command_id</strong> (typing.Optional[hikari.snowflakes.Snowflakeish]):\nID of the command to update.</li>\n<li><p><strong>guild</strong> (typing.Optional[hikari.snowflakes.SnowflakeishOr[hikari.PartialGuild]]):\nObject or ID of the guild to register the command with.</p>\n\n<p>If left as <code>None</code> then the command will be registered globally.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Command</strong>: API representation of the command that was registered.</li>\n</ul>\n", "parameters": ["self", "command", "command_id", "application", "guild"], "funcdef": "async def"}, "tanjun.clients.Client.declare_application_commands": {"fullname": "tanjun.clients.Client.declare_application_commands", "modulename": "tanjun.clients", "qualname": "Client.declare_application_commands", "type": "function", "doc": "<p>Declare a collection of slash commands for a bot.</p>\n\n<p><em>Note:</em>\nThe endpoint this uses has a strict ratelimit which, as of writing,\nonly allows for 2 requests per minute (with that ratelimit either\nbeing per-guild if targeting a specific guild otherwise globally).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>commands</strong> (collections.abc.Iterable[BaseSlashCommand]):\nIterable of the commands to register.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>command_ids</strong> (typing.Optional[collections.abc.Mapping[str, hikari.SnowflakeishOr[hikari.Command]]]):\nIf provided, a mapping of top level command names to IDs of the existing commands to update.</p>\n\n<p>While optional, this can be helpful when updating commands as\nproviding the current IDs will prevent changes such as renames from\nleading to other state set for commands (e.g. permissions) from\nbeing lost.</p></li>\n<li><p><strong>application</strong> (typing.Optional[hikari.snowflakes.SnowflakeishOr[hikari.PartialApplication]]):\nThe application to register the commands with.</p>\n\n<p>If left as <code>None</code> then this will be inferred from the authorization\nbeing used by <code>Client.rest</code>.</p></li>\n<li><p><strong>guild</strong> (typing.Optional[hikari.snowflakes.SnowflakeishOr[hikari.PartialGuild]]):\nObject or ID of the guild to register the commands with.</p>\n\n<p>If left as <code>None</code> then the commands will be registered globally.</p></li>\n<li><p><strong>force</strong> (bool):\nForce this to declare the commands regardless of whether or not\nthey match the current state of the declared commands.</p>\n\n<p>Defaults to <code>False</code>. This default behaviour helps avoid issues with the\n2 request per minute (per-guild or globally) ratelimit and the other limit\nof only 200 application command creates per day (per guild or globally).</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Sequence[hikari.Command]</strong>: API representations of the commands which were registered.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If conflicting command names are found (multiple commanbds have the same top-level name).</li>\n<li>If more than 100 top-level commands are passed.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "commands", "command_ids", "application", "guild", "force"], "funcdef": "async def"}, "tanjun.clients.Client.set_auto_defer_after": {"fullname": "tanjun.clients.Client.set_auto_defer_after", "modulename": "tanjun.clients", "qualname": "Client.set_auto_defer_after", "type": "function", "doc": "<p>Set when this client should automatically defer execution of commands.</p>\n\n<p><em>Warning:</em>\nIf <code>time</code> is set to <code>None</code> then automatic deferrals will be disabled.\nThis may lead to unexpected behaviour.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>time</strong> (typing.Optional[float]):\nThe time in seconds to defer interaction command responses after.</li>\n</ul>\n", "parameters": ["self", "time"], "funcdef": "def"}, "tanjun.clients.Client.set_ephemeral_default": {"fullname": "tanjun.clients.Client.set_ephemeral_default", "modulename": "tanjun.clients", "qualname": "Client.set_ephemeral_default", "type": "function", "doc": "<p>Set whether slash contexts spawned by this client should default to ephemeral responses.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bool</strong>: Whether slash command contexts executed in this component should\nshould default to ephemeral.</li>\n</ul>\n\n<p>This will be overridden by any response calls which specify flags\nand defaults to <code>False</code>.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>SelfT</strong>: This component to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "state"], "funcdef": "def"}, "tanjun.clients.Client.set_hikari_trait_injectors": {"fullname": "tanjun.clients.Client.set_hikari_trait_injectors", "modulename": "tanjun.clients", "qualname": "Client.set_hikari_trait_injectors", "type": "function", "doc": "<p>Set type based dependency injection based on the hikari traits found in <code>bot</code>.</p>\n\n<p>This is a short hand for calling <code>Client.add_type_dependency</code> for all\nthe hikari trait types <code>bot</code> is valid for with bot.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bot</strong> (hikari_traits.RESTAware):\nThe hikari client to set dependency injectors for.</li>\n</ul>\n", "parameters": ["self", "bot"], "funcdef": "def"}, "tanjun.clients.Client.set_interaction_not_found": {"fullname": "tanjun.clients.Client.set_interaction_not_found", "modulename": "tanjun.clients", "qualname": "Client.set_interaction_not_found", "type": "function", "doc": "<p>Set the response message for when an interaction command is not found.</p>\n\n<p><em>Warning:</em>\nSetting this to <code>None</code> may lead to unexpected behaviour (especially\nwhen the client is still set to auto-defer interactions) and should\nonly be done if you know what you're doing.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>message</strong> (typing.Optional[str]):\nThe message to respond with when an interaction command isn't found.</li>\n</ul>\n", "parameters": ["self", "message"], "funcdef": "def"}, "tanjun.clients.Client.set_message_accepts": {"fullname": "tanjun.clients.Client.set_message_accepts", "modulename": "tanjun.clients", "qualname": "Client.set_message_accepts", "type": "function", "doc": "<p>Set the kind of messages commands should be executed based on.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>accepts</strong> (MessageAcceptsEnum):\nThe type of messages commands should be executed based on.</li>\n</ul>\n", "parameters": ["self", "accepts"], "funcdef": "def"}, "tanjun.clients.Client.set_message_ctx_maker": {"fullname": "tanjun.clients.Client.set_message_ctx_maker", "modulename": "tanjun.clients", "qualname": "Client.set_message_ctx_maker", "type": "function", "doc": "<p>Set the message context maker to use when creating context for a message.</p>\n\n<p><em>Warning:</em>\nThe caller must return an instance of <code>tanjun.context.MessageContext</code>\nrather than just any implementation of the MessageContext abc due to\nthis client relying on implementation detail of\n<code>tanjun.context.MessageContext</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>maker</strong> (_MessageContextMakerProto):\nThe message context maker to use.</p>\n\n<p>This is a callback which should match the signature of\n<code>tanjun.context.MessageContext.__init__</code> and return an instance\nof <code>tanjun.context.MessageContext</code>.</p>\n\n<p>This defaults to <code>tanjun.context.MessageContext</code>.</p></li>\n</ul>\n", "parameters": ["self", "maker"], "funcdef": "def"}, "tanjun.clients.Client.set_slash_ctx_maker": {"fullname": "tanjun.clients.Client.set_slash_ctx_maker", "modulename": "tanjun.clients", "qualname": "Client.set_slash_ctx_maker", "type": "function", "doc": "<p>Set the slash context maker to use when creating context for a slash command.</p>\n\n<p><em>Warning:</em>\nThe caller must return an instance of <code>tanjun.context.SlashContext</code>\nrather than just any implementation of the SlashContext abc due to\nthis client relying on implementation detail of\n<code>tanjun.context.SlashContext</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>maker</strong> (_SlashContextMakerProto):\nThe slash context maker to use.</p>\n\n<p>This is a callback which should match the signature of\n<code>tanjun.context.SlashContext.__init__</code> and return an instance\nof <code>tanjun.context.SlashContext</code>.</p>\n\n<p>This defaults to <code>tanjun.context.SlashContext</code>.</p></li>\n</ul>\n", "parameters": ["self", "maker"], "funcdef": "def"}, "tanjun.clients.Client.set_human_only": {"fullname": "tanjun.clients.Client.set_human_only", "modulename": "tanjun.clients", "qualname": "Client.set_human_only", "type": "function", "doc": "<p>Set whether or not message commands execution should be limited to \"human\" users.</p>\n\n<p><em>Note:</em>\nThis doesn't apply to interaction commands as these can only be\ntriggered by a \"human\" (normal user account).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>value</strong> (bool):\nWhether or not message commands execution should be limited to \"human\" users.</p>\n\n<p>Passing <code>True</code> here will prevent message commands from being executed\nbased on webhook and bot messages.</p></li>\n</ul>\n", "parameters": ["self", "value"], "funcdef": "def"}, "tanjun.clients.Client.add_check": {"fullname": "tanjun.clients.Client.add_check", "modulename": "tanjun.clients", "qualname": "Client.add_check", "type": "function", "doc": "<p>Add a generic check to this client.</p>\n\n<p>This will be applied to both message and slash command execution.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>check</strong> (tanjun_abc.CheckSig):\nThe check to add. This may be either synchronous or asynchronous\nand must take one positional argument of type <code>tanjun.abc.Context</code>\nwith dependency injection being supported for its keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "check"], "funcdef": "def"}, "tanjun.clients.Client.remove_check": {"fullname": "tanjun.clients.Client.remove_check", "modulename": "tanjun.clients", "qualname": "Client.remove_check", "type": "function", "doc": "<p>Remove a check from the client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>check</strong> (tanjun_abc.CheckSig):\nThe check to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the check was not previously added.</li>\n</ul>\n", "parameters": ["self", "check"], "funcdef": "def"}, "tanjun.clients.Client.with_check": {"fullname": "tanjun.clients.Client.with_check", "modulename": "tanjun.clients", "qualname": "Client.with_check", "type": "function", "doc": "<p>Add a check to this client through a decorator call.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>check</strong> (tanjun_abc.CheckSig):\nThe check to add. This may be either synchronous or asynchronous\nand must take one positional argument of type <code>tanjun.abc.Context</code>\nwith dependency injection being supported for its keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tanjun_abc.CheckSig</strong>: The added check.</li>\n</ul>\n", "parameters": ["self", "check"], "funcdef": "def"}, "tanjun.clients.Client.check": {"fullname": "tanjun.clients.Client.check", "modulename": "tanjun.clients", "qualname": "Client.check", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx"], "funcdef": "async def"}, "tanjun.clients.Client.add_component": {"fullname": "tanjun.clients.Client.add_component", "modulename": "tanjun.clients", "qualname": "Client.add_component", "type": "function", "doc": "<p>Add a component to this client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>component</strong> (Component):\nThe component to move to this client.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to allow chained calls.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the component's name is already registered.</li>\n</ul>\n", "parameters": ["self", "component", "add_injector"], "funcdef": "def"}, "tanjun.clients.Client.get_component_by_name": {"fullname": "tanjun.clients.Client.get_component_by_name", "modulename": "tanjun.clients", "qualname": "Client.get_component_by_name", "type": "function", "doc": "<p>Get a component from this client by name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName to get a component by.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[Component]</strong>: The component instance if found, else <code>None</code>.</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.clients.Client.remove_component": {"fullname": "tanjun.clients.Client.remove_component", "modulename": "tanjun.clients", "qualname": "Client.remove_component", "type": "function", "doc": "<p>Remove a component from this client.</p>\n\n<p>This will unsubscribe any client callbacks, commands and listeners\nregistered in the provided component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>component</strong> (Component):\nThe component to remove from this client.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the provided component isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to allow chained calls.</li>\n</ul>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.clients.Client.remove_component_by_name": {"fullname": "tanjun.clients.Client.remove_component_by_name", "modulename": "tanjun.clients", "qualname": "Client.remove_component_by_name", "type": "function", "doc": "<p>Remove a component from this client by name.</p>\n\n<p>This will unsubscribe any client callbacks, commands and listeners\nregistered in the provided component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName of the component to remove from this client.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>KeyError</strong>: If the provided component name isn't found.</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.clients.Client.add_client_callback": {"fullname": "tanjun.clients.Client.add_client_callback", "modulename": "tanjun.clients", "qualname": "Client.add_client_callback", "type": "function", "doc": "<p>Add a client callback.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (typing.Union[str, ClientCallbackNames]):\nThe name this callback is being registered to.</p>\n\n<p>This is case-insensitive.</p></li>\n<li><p><strong>callback</strong> (MetaEventSigT):\nThe callback to register.</p>\n\n<p>This may be sync or async and must return None. The positional and\nkeyword arguments a callback should expect depend on implementation\ndetail around the <code>name</code> being subscribed to.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "name", "callback"], "funcdef": "def"}, "tanjun.clients.Client.dispatch_client_callback": {"fullname": "tanjun.clients.Client.dispatch_client_callback", "modulename": "tanjun.clients", "qualname": "Client.dispatch_client_callback", "type": "function", "doc": "<p>Dispatch a client callback.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (typing.Union[str, ClientCallbackNames]):\nThe name of the callback to dispatch.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>*args</strong> (typing.Any):\nPositional arguments to pass to the callback(s).</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>KeyError</strong>: If no callbacks are registered for the given name.</li>\n</ul>\n", "parameters": ["self", "name", "args"], "funcdef": "async def"}, "tanjun.clients.Client.get_client_callbacks": {"fullname": "tanjun.clients.Client.get_client_callbacks", "modulename": "tanjun.clients", "qualname": "Client.get_client_callbacks", "type": "function", "doc": "<p>Get a collection of the callbacks registered for a specific name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (typing.Union[str, ClientCallbackNames]):\nThe name to get the callbacks registered for.</p>\n\n<p>This is case-insensitive.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Collection[MetaEventSig]</strong>: Collection of the callbacks for the provided name.</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.clients.Client.remove_client_callback": {"fullname": "tanjun.clients.Client.remove_client_callback", "modulename": "tanjun.clients", "qualname": "Client.remove_client_callback", "type": "function", "doc": "<p>Remove a client callback.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (typing.Union[str, ClientCallbackNames]):\nThe name this callback is being registered to.</p>\n\n<p>This is case-insensitive.</p></li>\n<li><strong>callback</strong> (MetaEventSigT):\nThe callback to remove from the client's callbacks.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>KeyError</strong>: If the provided name isn't found.</li>\n<li><strong>ValueError</strong>: If the provided callback isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "name", "callback"], "funcdef": "def"}, "tanjun.clients.Client.with_client_callback": {"fullname": "tanjun.clients.Client.with_client_callback", "modulename": "tanjun.clients", "qualname": "Client.with_client_callback", "type": "function", "doc": "<p>Add a client callback through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"o\">.</span><span class=\"n\">from_rest_bot</span><span class=\"p\">(</span><span class=\"n\">bot</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@client</span><span class=\"o\">.</span><span class=\"n\">with_client_callback</span><span class=\"p\">(</span><span class=\"s2\">&quot;closed&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_close</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (typing.Union[str, ClientCallbackNames]):\nThe name this callback is being registered to.</p>\n\n<p>This is case-insensitive.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[MetaEventSigT], MetaEventSigT]</strong>: Decorator callback used to register the client callback.</li>\n</ul>\n\n<p>This may be sync or async and must return None. The positional and\nkeyword arguments a callback should expect depend on implementation\ndetail around the <code>name</code> being subscribed to.</p>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.clients.Client.add_listener": {"fullname": "tanjun.clients.Client.add_listener", "modulename": "tanjun.clients", "qualname": "Client.add_listener", "type": "function", "doc": "<p>Add a listener to the client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event_type</strong> (type[hikari.Event]):\nThe event type to add a listener for.</li>\n<li><p><strong>callback</strong> (ListenerCallbackSig):\nThe callback to register as a listener.</p>\n\n<p>This callback must be a coroutine function which returns <code>None</code> and\nalways takes at least one positional arg of type <code>hikari.Event</code>\nregardless of client implementation detail.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "event_type", "callback"], "funcdef": "def"}, "tanjun.clients.Client.remove_listener": {"fullname": "tanjun.clients.Client.remove_listener", "modulename": "tanjun.clients", "qualname": "Client.remove_listener", "type": "function", "doc": "<p>Remove a listener from the client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event_type</strong> (type[hikari.Event]):\nThe event type to remove a listener for.</li>\n<li><strong>callback</strong> (ListenerCallbackSig):\nThe callback to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>KeyError</strong>: If the provided event type isn't found.</li>\n<li><strong>ValueError</strong>: If the provided callback isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "event_type", "callback"], "funcdef": "def"}, "tanjun.clients.Client.with_listener": {"fullname": "tanjun.clients.Client.with_listener", "modulename": "tanjun.clients", "qualname": "Client.with_listener", "type": "function", "doc": "<p>Add an event listener to this client through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"o\">.</span><span class=\"n\">from_gateway_bot</span><span class=\"p\">(</span><span class=\"n\">bot</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@client</span><span class=\"o\">.</span><span class=\"n\">with_listener</span><span class=\"p\">(</span><span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">MessageCreateEvent</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_message_create</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">MessageCreateEvent</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event_type</strong> (type[hikari.Event]):\nThe event type to listener for.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[ListenerCallbackSigT], ListenerCallbackSigT]</strong>: Decorator callback used to register the event callback.</li>\n</ul>\n\n<p>The callback must be a coroutine function which returns <code>None</code> and\nalways takes at least one positional arg of type <code>hikari.Event</code>\nregardless of client implementation detail.</p>\n", "parameters": ["self", "event_type"], "funcdef": "def"}, "tanjun.clients.Client.add_prefix": {"fullname": "tanjun.clients.Client.add_prefix", "modulename": "tanjun.clients", "qualname": "Client.add_prefix", "type": "function", "doc": "<p>Add a prefix used to filter message command calls.</p>\n\n<p>This will be matched against the first character(s) in a message's\ncontent to determine whether the message command search stage of\nexecution should be initiated.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>prefixes</strong> (typing.Union[collections.abc.Iterable[str], str]):\nEither a single string or an iterable of strings to be used as\nprefixes.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "prefixes"], "funcdef": "def"}, "tanjun.clients.Client.remove_prefix": {"fullname": "tanjun.clients.Client.remove_prefix", "modulename": "tanjun.clients", "qualname": "Client.remove_prefix", "type": "function", "doc": "<p>Remove a message content prefix from the client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>prefix</strong> (str):\nThe prefix to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the prefix is not registered with the client.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "prefix"], "funcdef": "def"}, "tanjun.clients.Client.set_prefix_getter": {"fullname": "tanjun.clients.Client.set_prefix_getter", "modulename": "tanjun.clients", "qualname": "Client.set_prefix_getter", "type": "function", "doc": "<p>Set the callback used to retrieve message prefixes set for the relevant guild.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>getter</strong> (typing.Optional[PrefixGetterSig]):\nThe callback which'll be used to retrieve prefixes for the guild a\nmessage context is from. If <code>None</code> is passed here then the callback\nwill be unset.</p>\n\n<p>This should be an async callback which one argument of type\n<code>tanjun.abc.MessageContext</code> and returns an iterable of string prefixes.\nDependency injection is supported for this callback's keyword arguments.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "getter"], "funcdef": "def"}, "tanjun.clients.Client.with_prefix_getter": {"fullname": "tanjun.clients.Client.with_prefix_getter", "modulename": "tanjun.clients", "qualname": "Client.with_prefix_getter", "type": "function", "doc": "<p>Set the prefix getter callback for this client through decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"o\">.</span><span class=\"n\">from_rest_bot</span><span class=\"p\">(</span><span class=\"n\">bot</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@client</span><span class=\"o\">.</span><span class=\"n\">with_prefix_getter</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">prefix_getter</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">MessageContext</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>getter</strong> (PrefixGetterSig):\nThe callback which'll be  to retrieve prefixes for the guild a\nmessage event is from.</p>\n\n<p>This should be an async callback which one argument of type\n<code>tanjun.abc.MessageContext</code> and returns an iterable of string prefixes.\nDependency injection is supported for this callback's keyword arguments.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>PrefixGetterSigT</strong>: The registered callback.</li>\n</ul>\n", "parameters": ["self", "getter"], "funcdef": "def"}, "tanjun.clients.Client.iter_commands": {"fullname": "tanjun.clients.Client.iter_commands", "modulename": "tanjun.clients", "qualname": "Client.iter_commands", "type": "function", "doc": "<p>Iterate over all the commands (both message and slash) registered to this client.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[ExecutableCommand[Context]]</strong>: Iterator of all the commands registered to this client.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.clients.Client.iter_message_commands": {"fullname": "tanjun.clients.Client.iter_message_commands", "modulename": "tanjun.clients", "qualname": "Client.iter_message_commands", "type": "function", "doc": "<p>Iterate over all the message commands registered to this client.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[MessageCommand]</strong>: Iterator of all the message commands registered to this client.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.clients.Client.iter_slash_commands": {"fullname": "tanjun.clients.Client.iter_slash_commands", "modulename": "tanjun.clients", "qualname": "Client.iter_slash_commands", "type": "function", "doc": "<p>Iterate over all the slash commands registered to this client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>global_only</strong> (bool):\nWhether to only iterate over global slash commands.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[BaseSlashCommand]</strong>: Iterator of all the slash commands registered to this client.</li>\n</ul>\n", "parameters": ["self", "global_only"], "funcdef": "def"}, "tanjun.clients.Client.check_message_name": {"fullname": "tanjun.clients.Client.check_message_name", "modulename": "tanjun.clients", "qualname": "Client.check_message_name", "type": "function", "doc": "<p>Check whether a message command name is present in the current client.</p>\n\n<p><em>Note:</em>\nDependent on implementation this may partial check name against the\nmessage command's name based on command_name.startswith(name).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name to match commands against.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[tuple[str, MessageCommand]]</strong>: Iterator of the matched command names to the matched message command objects.</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.clients.Client.check_slash_name": {"fullname": "tanjun.clients.Client.check_slash_name", "modulename": "tanjun.clients", "qualname": "Client.check_slash_name", "type": "function", "doc": "<p>Check whether a slash command name is present in the current client.</p>\n\n<p><em>Note:</em>\nThis won't check the commands within command groups.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName to check against.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[BaseSlashCommand]</strong>: Iterator of the matched slash command objects.</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.clients.Client.close": {"fullname": "tanjun.clients.Client.close", "modulename": "tanjun.clients", "qualname": "Client.close", "type": "function", "doc": "<p>Close the client.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the client isn't running.</li>\n</ul>\n", "parameters": ["self", "deregister_listeners"], "funcdef": "async def"}, "tanjun.clients.Client.open": {"fullname": "tanjun.clients.Client.open", "modulename": "tanjun.clients", "qualname": "Client.open", "type": "function", "doc": "<p>Start the client.</p>\n\n<p>If <code>mention_prefix</code> was passed to <code>Client.__init__</code> or\n<code>Client.from_gateway_bot</code> then this function may make a fetch request\nto Discord if it cannot get the current user from the cache.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the client is already active.</li>\n</ul>\n", "parameters": ["self", "register_listeners"], "funcdef": "async def"}, "tanjun.clients.Client.fetch_rest_application_id": {"fullname": "tanjun.clients.Client.fetch_rest_application_id", "modulename": "tanjun.clients", "qualname": "Client.fetch_rest_application_id", "type": "function", "doc": "<p>Fetch the application ID of the application this client is linked to.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Snowflake</strong>: The application ID of the application this client is linked to.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.clients.Client.set_hooks": {"fullname": "tanjun.clients.Client.set_hooks", "modulename": "tanjun.clients", "qualname": "Client.set_hooks", "type": "function", "doc": "<p>Set the general command execution hooks for this client.</p>\n\n<p>The callbacks within this hook will be added to every slash and message\ncommand execution started by this client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>hooks</strong> (typing.Optional[tanjun_abc.AnyHooks]):\nThe general command execution hooks to set for this client.</p>\n\n<p>Passing <code>None</code> will remove all hooks.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "hooks"], "funcdef": "def"}, "tanjun.clients.Client.set_slash_hooks": {"fullname": "tanjun.clients.Client.set_slash_hooks", "modulename": "tanjun.clients", "qualname": "Client.set_slash_hooks", "type": "function", "doc": "<p>Set the slash command execution hooks for this client.</p>\n\n<p>The callbacks within this hook will be added to every slash command\nexecution started by this client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>hooks</strong> (typing.Optional[tanjun_abc.SlashHooks]):\nThe slash context specific command execution hooks to set for this\nclient.</p>\n\n<p>Passing <code>None</code> will remove the hooks.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "hooks"], "funcdef": "def"}, "tanjun.clients.Client.set_message_hooks": {"fullname": "tanjun.clients.Client.set_message_hooks", "modulename": "tanjun.clients", "qualname": "Client.set_message_hooks", "type": "function", "doc": "<p>Set the message command execution hooks for this client.</p>\n\n<p>The callbacks within this hook will be added to every message command\nexecution started by this client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>hooks</strong> (typing.Optional[tanjun_abc.MessageHooks]):\nThe message context specific command execution hooks to set for this\nclient.</p>\n\n<p>Passing <code>None</code> will remove all hooks.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "hooks"], "funcdef": "def"}, "tanjun.clients.Client.load_modules": {"fullname": "tanjun.clients.Client.load_modules", "modulename": "tanjun.clients", "qualname": "Client.load_modules", "type": "function", "doc": "<p>Load entities into this client from modules based on present loaders.</p>\n\n<p><em>Note:</em>\nIf an <code>__all__</code> is present in the target module then it will be\nused to find loaders.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>For this to work the target module has to have at least one loader present.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_loader</span>\n<span class=\"k\">def</span> <span class=\"nf\">load_module</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">add_component</span><span class=\"p\">(</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">())</span>\n</code></pre></div>\n\n<p>or</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">loader</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Component</span><span class=\"p\">(</span><span class=\"s2\">&quot;trans component&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">load_from_scope</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">make_loader</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>*modules</strong> (typing.Union[str, pathlib.Path]):\nPath(s) of the modules to load from.</p>\n\n<p>When <code>str</code> this will be treated as a normal import path which is\nabsolute (<code>\"foo.bar.baz\"</code>). It's worth noting that absolute module\npaths may be imported from the current location if the top level\nmodule is a valid module file or module directory in the current\nworking directory.</p>\n\n<p>When <code>pathlib.Path</code> the module will be imported directly from\nthe given path. In this mode any relative imports in the target\nmodule will fail to resolve.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This client instance to enable chained calls.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the module is already loaded.</li>\n<li><strong>RuntimeError</strong>: If no loaders are found in the module.</li>\n<li><strong>ModuleNotFoundError</strong>: If the module is not found.</li>\n</ul>\n", "parameters": ["self", "modules", "_log"], "funcdef": "def"}, "tanjun.clients.Client.unload_modules": {"fullname": "tanjun.clients.Client.unload_modules", "modulename": "tanjun.clients", "qualname": "Client.unload_modules", "type": "function", "doc": "<p>Unload entities from this client based on unloaders in one or more modules.</p>\n\n<p><em>Note:</em>\nIf an <code>__all__</code> is present in the target module then it will be\nused to find unloaders.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>For this to work the module has to have at least one unloading enabled\n<code>tanjun.abc.ClientLoader</code> present.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_unloader</span>\n<span class=\"k\">def</span> <span class=\"nf\">unload_component</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">remove_component_by_name</span><span class=\"p\">(</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>or</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># as_loader&#39;s returned ClientLoader handles both loading and unloading.</span>\n<span class=\"n\">loader</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Component</span><span class=\"p\">(</span><span class=\"s2\">&quot;trans component&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">load_from_scope</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_loader</span><span class=\"p\">(</span><span class=\"n\">unload_component</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>*modules</strong> (typing.Union[str, pathlib.Path]):\nPath of one or more modules to unload.</p>\n\n<p>These should be the same path(s) which were passed to <code>load_module</code>.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This client instance to enable chained calls.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the module hasn't been loaded.</li>\n<li><strong>RuntimeError</strong>: If no unloaders are found in the module.</li>\n</ul>\n", "parameters": ["self", "modules", "_log"], "funcdef": "def"}, "tanjun.clients.Client.reload_modules": {"fullname": "tanjun.clients.Client.reload_modules", "modulename": "tanjun.clients", "qualname": "Client.reload_modules", "type": "function", "doc": "<p>Reload entities in this client based on the loaders in loaded module(s).</p>\n\n<p><em>Note:</em>\nIf an <code>__all__</code> is present in the target module then it will be\nused to find loaders and unloaders.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>For this to work the module has to have at least one ClientLoader\nwhich handles both loading and unloading present.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>*modules</strong> (typing.Union[str, pathlib.Path]):\nPaths of one or more module to unload.</p>\n\n<p>These should be the same paths which were passed to <code>load_module</code>.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This client instance to enable chained calls.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the module hasn't been loaded.</li>\n<li><strong>RuntimeError</strong>: If no unloaders are found in the current state of the module.\nIf no loaders are found in the new state of the module.</li>\n</ul>\n", "parameters": ["self", "modules"], "funcdef": "def"}, "tanjun.clients.Client.on_message_create_event": {"fullname": "tanjun.clients.Client.on_message_create_event", "modulename": "tanjun.clients", "qualname": "Client.on_message_create_event", "type": "function", "doc": "<p>Execute a message command based on a gateway event.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>hikari.events.message_events.MessageCreateEvent</strong>: The event to handle.</li>\n</ul>\n", "parameters": ["self", "event"], "funcdef": "async def"}, "tanjun.clients.Client.on_interaction_create_event": {"fullname": "tanjun.clients.Client.on_interaction_create_event", "modulename": "tanjun.clients", "qualname": "Client.on_interaction_create_event", "type": "function", "doc": "<p>Execute a slash command based on Gateway events.</p>\n\n<p><em>Note:</em>\nAny event where <code>event.interaction</code> is not\n<code>hikari.CommandInteraction</code> will be ignored.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event</strong> (hikari.events.interaction_events.InteractionCreateEvent):\nThe event to execute commands based on.</li>\n</ul>\n", "parameters": ["self", "event"], "funcdef": "async def"}, "tanjun.clients.Client.on_interaction_create_request": {"fullname": "tanjun.clients.Client.on_interaction_create_request", "modulename": "tanjun.clients", "qualname": "Client.on_interaction_create_request", "type": "function", "doc": "<p>Execute a slash command based on received REST requests.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>interaction</strong> (hikari.CommandInteraction):\nThe interaction to execute a command based on.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tanjun.context.ResponseType</strong>: The initial response to send back to Discord.</li>\n</ul>\n", "parameters": ["self", "interaction"], "funcdef": "async def"}, "tanjun.clients.ClientCallbackNames": {"fullname": "tanjun.clients.ClientCallbackNames", "modulename": "tanjun.clients", "qualname": "ClientCallbackNames", "type": "class", "doc": "<p>Alias of <code>tanjun.abc.ClientCallbackNames</code>.</p>\n"}, "tanjun.clients.ClientCallbackNames.CLOSED": {"fullname": "tanjun.clients.ClientCallbackNames.CLOSED", "modulename": "tanjun.clients", "qualname": "ClientCallbackNames.CLOSED", "type": "variable", "doc": "<p>Called when the client has finished closing.</p>\n\n<p>No positional arguments are provided for this event.</p>\n"}, "tanjun.clients.ClientCallbackNames.CLOSING": {"fullname": "tanjun.clients.ClientCallbackNames.CLOSING", "modulename": "tanjun.clients", "qualname": "ClientCallbackNames.CLOSING", "type": "variable", "doc": "<p>Called when the client is initially instructed to close.</p>\n\n<p>No positional arguments are provided for this event.</p>\n"}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"fullname": "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED", "modulename": "tanjun.clients", "qualname": "ClientCallbackNames.COMPONENT_ADDED", "type": "variable", "doc": "<p>Called when a component is added to an active client.</p>\n\n<p><em>Warning:</em>\nThis event isn't dispatched for components which were registered while\nthe client is inactive.</p>\n\n<p>The first positional argument is the <code>tanjun.abc.Component</code> being added.</p>\n"}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"fullname": "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED", "modulename": "tanjun.clients", "qualname": "ClientCallbackNames.COMPONENT_REMOVED", "type": "variable", "doc": "<p>Called when a component is added to an active client.</p>\n\n<p><em>Warning:</em>\nThis event isn't dispatched for components which were removed while\nthe client is inactive.</p>\n\n<p>The first positional argument is the <code>tanjun.abc.Component</code> being removed.</p>\n"}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"fullname": "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND", "modulename": "tanjun.clients", "qualname": "ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND", "type": "variable", "doc": "<p>Called when a message command is not found.</p>\n\n<p><code>tanjun.abc.MessageContext</code> is provided as the first positional argument.</p>\n"}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"fullname": "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND", "modulename": "tanjun.clients", "qualname": "ClientCallbackNames.SLASH_COMMAND_NOT_FOUND", "type": "variable", "doc": "<p>Called when a slash command is not found.</p>\n\n<p><code>tanjun.abc.MessageContext</code> is provided as the first positional argument.</p>\n"}, "tanjun.clients.ClientCallbackNames.STARTED": {"fullname": "tanjun.clients.ClientCallbackNames.STARTED", "modulename": "tanjun.clients", "qualname": "ClientCallbackNames.STARTED", "type": "variable", "doc": "<p>Called when the client has finished starting.</p>\n\n<p>No positional arguments are provided for this event.</p>\n"}, "tanjun.clients.ClientCallbackNames.STARTING": {"fullname": "tanjun.clients.ClientCallbackNames.STARTING", "modulename": "tanjun.clients", "qualname": "ClientCallbackNames.STARTING", "type": "variable", "doc": "<p>Called when the client is initially instructed to start.</p>\n\n<p>No positional arguments are provided for this event.</p>\n"}, "tanjun.clients.MessageAcceptsEnum": {"fullname": "tanjun.clients.MessageAcceptsEnum", "modulename": "tanjun.clients", "qualname": "MessageAcceptsEnum", "type": "class", "doc": "<p>The possible configurations for which events <code>Client</code> should execute commands based on.</p>\n"}, "tanjun.clients.MessageAcceptsEnum.ALL": {"fullname": "tanjun.clients.MessageAcceptsEnum.ALL", "modulename": "tanjun.clients", "qualname": "MessageAcceptsEnum.ALL", "type": "variable", "doc": "<p>Set the client to execute commands based on both DM and guild message create events.</p>\n"}, "tanjun.clients.MessageAcceptsEnum.DM_ONLY": {"fullname": "tanjun.clients.MessageAcceptsEnum.DM_ONLY", "modulename": "tanjun.clients", "qualname": "MessageAcceptsEnum.DM_ONLY", "type": "variable", "doc": "<p>Set the client to execute commands based only DM message create events.</p>\n"}, "tanjun.clients.MessageAcceptsEnum.GUILD_ONLY": {"fullname": "tanjun.clients.MessageAcceptsEnum.GUILD_ONLY", "modulename": "tanjun.clients", "qualname": "MessageAcceptsEnum.GUILD_ONLY", "type": "variable", "doc": "<p>Set the client to execute commands based only guild message create events.</p>\n"}, "tanjun.clients.MessageAcceptsEnum.NONE": {"fullname": "tanjun.clients.MessageAcceptsEnum.NONE", "modulename": "tanjun.clients", "qualname": "MessageAcceptsEnum.NONE", "type": "variable", "doc": "<p>Set the client to not execute commands based on message create events.</p>\n"}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"fullname": "tanjun.clients.MessageAcceptsEnum.get_event_type", "modulename": "tanjun.clients", "qualname": "MessageAcceptsEnum.get_event_type", "type": "function", "doc": "<p>Get the base event type this mode listens to.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[type[hikari.message_events.MessageCreateEvent]]</strong>: The type object of the MessageCreateEvent class this mode will\nregister a listener for.</li>\n</ul>\n\n<p>This will be <code>None</code> if this mode disables listening to\nmessage create events.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.clients.PrefixGetterSig": {"fullname": "tanjun.clients.PrefixGetterSig", "modulename": "tanjun.clients", "qualname": "PrefixGetterSig", "type": "class", "doc": "<p>Type hint of a callable used to get the prefix(es) for a specific guild.</p>\n\n<p>This should be an asynchronous callable which returns an iterable of strings.</p>\n\n<p><em>Note:</em>\nWhile dependency injection is supported for this, the first positional\nargument will always be a <code>tanjun.abc.MessageContext</code>.</p>\n"}, "tanjun.clients.PrefixGetterSigT": {"fullname": "tanjun.clients.PrefixGetterSigT", "modulename": "tanjun.clients", "qualname": "PrefixGetterSigT", "type": "variable", "doc": "<p></p>\n"}, "tanjun.commands": {"fullname": "tanjun.commands", "modulename": "tanjun.commands", "qualname": "", "type": "module", "doc": "<p>Standard implementation of Tanjun's command objects.</p>\n"}, "tanjun.commands.AnyMessageCommandT": {"fullname": "tanjun.commands.AnyMessageCommandT", "modulename": "tanjun.commands", "qualname": "AnyMessageCommandT", "type": "variable", "doc": "<p></p>\n"}, "tanjun.commands.ConverterSig": {"fullname": "tanjun.commands.ConverterSig", "modulename": "tanjun.commands", "qualname": "ConverterSig", "type": "class", "doc": "<p>Type hint of a converter used for a slash command option.</p>\n"}, "tanjun.commands.as_message_command": {"fullname": "tanjun.commands.as_message_command", "modulename": "tanjun.commands", "qualname": "as_message_command", "type": "function", "doc": "<p>Build a message command from a decorated callback.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe command name.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>*names</strong> (str):\nVariable positional arguments of other names for the command.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_CallbackishT[CommandCallbackSigT]], MessageCommand[CommandCallbackSigT]]</strong>: The decorator callback used to make a <code>MessageCommand</code>.</li>\n</ul>\n\n<p>This can either wrap a raw command callback or another callable command instance\n(e.g. <code>SlashCommand</code>, <code>MessageCommand</code>, <code>MessageCommandGroup</code>) and will manage\nloading the other command into a component when using <code>tanjun.Component.load_from_scope</code>.</p>\n", "parameters": ["name", "names"], "funcdef": "def"}, "tanjun.commands.as_message_command_group": {"fullname": "tanjun.commands.as_message_command_group", "modulename": "tanjun.commands", "qualname": "as_message_command_group", "type": "function", "doc": "<p>Build a message command group from a decorated callback.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe command name.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>*names</strong> (str):\nVariable positional arguments of other names for the command.</li>\n<li><p><strong>strict</strong> (bool):\nWhether this command group should only allow commands without spaces in their names.</p>\n\n<p>This allows for a more optimised command search pattern to be used and\nenforces that command names are unique to a single command within the group.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_CallbackishT[CommandCallbackSigT]], MessageCommand[CommandCallbackSigT]]</strong>: The decorator callback used to make a <code>MessageCommandGroup</code>.</li>\n</ul>\n\n<p>This can either wrap a raw command callback or another callable command instance\n(e.g. <code>SlashCommand</code>, <code>MessageCommand</code>, <code>MessageCommandGroup</code>) and will manage\nloading the other command into a component when using <code>tanjun.Component.load_from_scope</code>.</p>\n", "parameters": ["name", "names", "strict"], "funcdef": "def"}, "tanjun.commands.as_slash_command": {"fullname": "tanjun.commands.as_slash_command", "modulename": "tanjun.commands", "qualname": "as_slash_command", "type": "function", "doc": "<p>Build a <code>SlashCommand</code> by decorating a function.</p>\n\n<p><em>Note:</em>\nUnder the standard implementation, <code>is_global</code> is used to determine whether\nthe command should be bulk set by <code>tanjun.Client.set_global_commands</code>\nor when <code>set_global_commands</code> is True</p>\n\n<p><em>Warning:</em>\n<code>default_permission</code> and <code>is_global</code> are ignored for commands within\nslash command groups.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;ping&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Get the bot&#39;s latency&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">ping_command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"n\">start_time</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">perf_counter</span><span class=\"p\">()</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">fetch_my_user</span><span class=\"p\">()</span>\n    <span class=\"n\">time_taken</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">perf_counter</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">start_time</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">1_000</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;PONG</span><span class=\"se\">\\n</span><span class=\"s2\"> - REST: </span><span class=\"si\">{</span><span class=\"n\">time_taken</span><span class=\"si\">:</span><span class=\"s2\">.0f</span><span class=\"si\">}</span><span class=\"s2\">mss&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe command's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe command's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>always_defer</strong> (bool):\nWhether the contexts this command is executed with should always be deferred\nbefore being passed to the command's callback.</p>\n\n<p>Defaults to <code>False</code>.</p>\n\n<p><em>Note:</em>\nThe ephemeral state of the first response is decided by whether the\ndeferral is ephemeral.</p></li>\n<li><p><strong>default_permission</strong> (bool):\nWhether this command can be accessed without set permissions.</p>\n\n<p>Defaults to <code>True</code>, meaning that users can access the command by default.</p></li>\n<li><p><strong>default_to_ephemeral</strong> (typing.Optional[bool]):\nWhether this command's responses should default to ephemeral unless flags\nare set to override this.</p>\n\n<p>If this is left as <code>None</code> then the default set on the parent command(s),\ncomponent or client will be in effect.</p></li>\n<li><strong>is_global</strong> (bool):\nWhether this command is a global command. Defaults to <code>True</code>.</li>\n<li><p><strong>sort_options</strong> (bool):\nWhether this command should sort its set options based on whether\nthey're required.</p>\n\n<p>If this is <code>True</code> then the options are re-sorted to meet the requirement\nfrom Discord that required command options be listed before optional\nones.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_CallbackishT[CommandCallbackSigT]], SlashCommand[CommandCallbackSigT]]</strong>: The decorator callback used to make a <code>SlashCommand</code>.</li>\n</ul>\n\n<p>This can either wrap a raw command callback or another callable command instance\n(e.g. <code>SlashCommand</code>, <code>MessageCommand</code>, <code>MessageCommandGroup</code>) and will manage\nloading the other command into a component when using <code>tanjun.Component.load_from_scope</code>.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the command name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the command name has uppercase characters.</li>\n<li>If the description is over 100 characters long.</li>\n</ul></li>\n</ul>\n", "parameters": ["name", "description", "always_defer", "default_permission", "default_to_ephemeral", "is_global", "sort_options"], "funcdef": "def"}, "tanjun.commands.slash_command_group": {"fullname": "tanjun.commands.slash_command_group", "modulename": "tanjun.commands", "qualname": "slash_command_group", "type": "function", "doc": "<p>Create a slash command group.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>Sub-commands can be added to the created slash command object through\nthe following decorator based approach:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">help_group</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">slash_command_group</span><span class=\"p\">(</span><span class=\"s2\">&quot;help&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;get help&quot;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@help_group</span><span class=\"o\">.</span><span class=\"n\">with_command</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">with_str_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;command_name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;command name&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Get help with a command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">help_command_command</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">,</span> <span class=\"n\">command_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n\n<span class=\"nd\">@help_group</span><span class=\"o\">.</span><span class=\"n\">with_command</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;me&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;help me&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">help_me_command</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n\n<span class=\"n\">component</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Component</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">add_slash_command</span><span class=\"p\">(</span><span class=\"n\">help_group</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>Unlike message command grups, slash command groups cannot\nbe callable functions themselves.</li>\n<li>Under the standard implementation, <code>is_global</code> is used to determine whether\nthe command should be bulk set by <code>tanjun.Client.set_global_commands</code>\nor when <code>set_global_commands</code> is True</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe name of the command group.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}$</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe description of the command group.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>default_permission</strong> (bool):\nWhether this command can be accessed without set permissions.</p>\n\n<p>Defaults to <code>True</code>, meaning that users can access the command by default.</p></li>\n<li><p><strong>default_to_ephemeral</strong> (typing.Optional[bool]):\nWhether this command's responses should default to ephemeral unless flags\nare set to override this.</p>\n\n<p>If this is left as <code>None</code> then the default set on the parent command(s),\ncomponent or client will be in effect.</p></li>\n<li><strong>is_global</strong> (bool):\nWhether this command is a global command. Defaults to <code>True</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>SlashCommandGroup</strong>: The command group.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the command name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the command name has uppercase characters.</li>\n<li>If the description is over 100 characters long.</li>\n</ul></li>\n</ul>\n", "parameters": ["name", "description", "default_permission", "default_to_ephemeral", "is_global"], "funcdef": "def"}, "tanjun.commands.MessageCommand": {"fullname": "tanjun.commands.MessageCommand", "modulename": "tanjun.commands", "qualname": "MessageCommand", "type": "class", "doc": "<p>Standard implementation of a message command.</p>\n"}, "tanjun.commands.MessageCommand.__init__": {"fullname": "tanjun.commands.MessageCommand.__init__", "modulename": "tanjun.commands", "qualname": "MessageCommand.__init__", "type": "function", "doc": "<p>Initialise a message command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (collections.abc.Callable[[tanjun.abc.MessageContext, ...], collections.abc.Awaitable[None]]):\nCallback to execute when the command is invoked.</p>\n\n<p>This should be an asynchronous callback which takes one positional\nargument of type <code>tanjun.abc.MessageContext</code>, returns <code>None</code> and may use\ndependency injection to access other services.</p></li>\n<li><strong>name</strong> (str):\nThe command name.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>*names</strong> (str):\nVariable positional arguments of other names for the command.</li>\n</ul>\n", "parameters": ["self", "callback", "name", "names", "_wrapped_command"], "funcdef": "def"}, "tanjun.commands.MessageCommand.callback": {"fullname": "tanjun.commands.MessageCommand.callback", "modulename": "tanjun.commands", "qualname": "MessageCommand.callback", "type": "variable", "doc": "<p>Callback which is called during execution.</p>\n\n<p><em>Note:</em>\nFor command groups, this is called when none of the inner-commands\nmatches the message.</p>\n"}, "tanjun.commands.MessageCommand.names": {"fullname": "tanjun.commands.MessageCommand.names", "modulename": "tanjun.commands", "qualname": "MessageCommand.names", "type": "variable", "doc": "<p>Collection of this command's names.</p>\n"}, "tanjun.commands.MessageCommand.needs_injector": {"fullname": "tanjun.commands.MessageCommand.needs_injector", "modulename": "tanjun.commands", "qualname": "MessageCommand.needs_injector", "type": "variable", "doc": "<p></p>\n"}, "tanjun.commands.MessageCommand.parent": {"fullname": "tanjun.commands.MessageCommand.parent", "modulename": "tanjun.commands", "qualname": "MessageCommand.parent", "type": "variable", "doc": "<p>Parent group of this command if applicable.</p>\n"}, "tanjun.commands.MessageCommand.parser": {"fullname": "tanjun.commands.MessageCommand.parser", "modulename": "tanjun.commands", "qualname": "MessageCommand.parser", "type": "variable", "doc": "<p></p>\n"}, "tanjun.commands.MessageCommand.bind_client": {"fullname": "tanjun.commands.MessageCommand.bind_client", "modulename": "tanjun.commands", "qualname": "MessageCommand.bind_client", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.commands.MessageCommand.bind_component": {"fullname": "tanjun.commands.MessageCommand.bind_component", "modulename": "tanjun.commands", "qualname": "MessageCommand.bind_component", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.commands.MessageCommand.copy": {"fullname": "tanjun.commands.MessageCommand.copy", "modulename": "tanjun.commands", "qualname": "MessageCommand.copy", "type": "function", "doc": "<p>Create a copy of this command.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>parent</strong> (typing.Optional[MessageCommandGroup[tping.Any]]):\nThe parent of the copy.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The copy.</li>\n</ul>\n", "parameters": ["self", "parent", "_new"], "funcdef": "def"}, "tanjun.commands.MessageCommand.set_parent": {"fullname": "tanjun.commands.MessageCommand.set_parent", "modulename": "tanjun.commands", "qualname": "MessageCommand.set_parent", "type": "function", "doc": "<p>Set the parent of this command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>parent</strong> (typing.Optional[MessageCommandGroup[typing.Any]]):\nThe parent of this command.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "parent"], "funcdef": "def"}, "tanjun.commands.MessageCommand.set_parser": {"fullname": "tanjun.commands.MessageCommand.set_parser", "modulename": "tanjun.commands", "qualname": "MessageCommand.set_parser", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "parser"], "funcdef": "def"}, "tanjun.commands.MessageCommand.check_context": {"fullname": "tanjun.commands.MessageCommand.check_context", "modulename": "tanjun.commands", "qualname": "MessageCommand.check_context", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx"], "funcdef": "async def"}, "tanjun.commands.MessageCommand.execute": {"fullname": "tanjun.commands.MessageCommand.execute", "modulename": "tanjun.commands", "qualname": "MessageCommand.execute", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "hooks"], "funcdef": "async def"}, "tanjun.commands.MessageCommand.load_into_component": {"fullname": "tanjun.commands.MessageCommand.load_into_component", "modulename": "tanjun.commands", "qualname": "MessageCommand.load_into_component", "type": "function", "doc": "<p>Load the object into the component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>component</strong> (tanjun.abc.Component):\nThe component this object should be loaded into.</li>\n</ul>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.commands.MessageCommandGroup": {"fullname": "tanjun.commands.MessageCommandGroup", "modulename": "tanjun.commands", "qualname": "MessageCommandGroup", "type": "class", "doc": "<p>Standard implementation of a message command group.</p>\n"}, "tanjun.commands.MessageCommandGroup.__init__": {"fullname": "tanjun.commands.MessageCommandGroup.__init__", "modulename": "tanjun.commands", "qualname": "MessageCommandGroup.__init__", "type": "function", "doc": "<p>Initialise a message command group.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe command name.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>*names</strong> (str):\nVariable positional arguments of other names for the command.</li>\n<li><p><strong>strict</strong> (bool):\nWhether this command group should only allow commands without spaces in their names.</p>\n\n<p>This allows for a more optimised command search pattern to be used and\nenforces that command names are unique to a single command within the group.</p></li>\n</ul>\n", "parameters": ["self", "callback", "name", "names", "strict", "_wrapped_command"], "funcdef": "def"}, "tanjun.commands.MessageCommandGroup.commands": {"fullname": "tanjun.commands.MessageCommandGroup.commands", "modulename": "tanjun.commands", "qualname": "MessageCommandGroup.commands", "type": "variable", "doc": "<p>Collection of the commands in this group.</p>\n\n<p><em>Note:</em>\nThis may include command groups.</p>\n"}, "tanjun.commands.MessageCommandGroup.is_strict": {"fullname": "tanjun.commands.MessageCommandGroup.is_strict", "modulename": "tanjun.commands", "qualname": "MessageCommandGroup.is_strict", "type": "variable", "doc": "<p></p>\n"}, "tanjun.commands.MessageCommandGroup.copy": {"fullname": "tanjun.commands.MessageCommandGroup.copy", "modulename": "tanjun.commands", "qualname": "MessageCommandGroup.copy", "type": "function", "doc": "<p>Create a copy of this command.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>parent</strong> (typing.Optional[MessageCommandGroup[tping.Any]]):\nThe parent of the copy.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The copy.</li>\n</ul>\n", "parameters": ["self", "parent", "_new"], "funcdef": "def"}, "tanjun.commands.MessageCommandGroup.add_command": {"fullname": "tanjun.commands.MessageCommandGroup.add_command", "modulename": "tanjun.commands", "qualname": "MessageCommandGroup.add_command", "type": "function", "doc": "<p>Add a command to this group.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (MessageCommand):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The group instance to enable chained calls.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If one of the command's names is already registered in a strict\ncommand group.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.commands.MessageCommandGroup.remove_command": {"fullname": "tanjun.commands.MessageCommandGroup.remove_command", "modulename": "tanjun.commands", "qualname": "MessageCommandGroup.remove_command", "type": "function", "doc": "<p>Remove a command from this group.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (MessageCommand):\nThe command to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the provided command isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The group instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.commands.MessageCommandGroup.with_command": {"fullname": "tanjun.commands.MessageCommandGroup.with_command", "modulename": "tanjun.commands", "qualname": "MessageCommandGroup.with_command", "type": "function", "doc": "<p>Add a command to this group through a decorator call.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (MessageCommand):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>MessageCommand</strong>: The added command.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.commands.MessageCommandGroup.bind_client": {"fullname": "tanjun.commands.MessageCommandGroup.bind_client", "modulename": "tanjun.commands", "qualname": "MessageCommandGroup.bind_client", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.commands.MessageCommandGroup.bind_component": {"fullname": "tanjun.commands.MessageCommandGroup.bind_component", "modulename": "tanjun.commands", "qualname": "MessageCommandGroup.bind_component", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.commands.MessageCommandGroup.find_command": {"fullname": "tanjun.commands.MessageCommandGroup.find_command", "modulename": "tanjun.commands", "qualname": "MessageCommandGroup.find_command", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "content"], "funcdef": "def"}, "tanjun.commands.MessageCommandGroup.execute": {"fullname": "tanjun.commands.MessageCommandGroup.execute", "modulename": "tanjun.commands", "qualname": "MessageCommandGroup.execute", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "hooks"], "funcdef": "async def"}, "tanjun.commands.PartialCommand": {"fullname": "tanjun.commands.PartialCommand", "modulename": "tanjun.commands", "qualname": "PartialCommand", "type": "class", "doc": "<p>Base class for the standard ExecutableCommand implementations.</p>\n"}, "tanjun.commands.PartialCommand.checks": {"fullname": "tanjun.commands.PartialCommand.checks", "modulename": "tanjun.commands", "qualname": "PartialCommand.checks", "type": "variable", "doc": "<p>Collection of checks that must be met before the command can be executed.</p>\n"}, "tanjun.commands.PartialCommand.component": {"fullname": "tanjun.commands.PartialCommand.component", "modulename": "tanjun.commands", "qualname": "PartialCommand.component", "type": "variable", "doc": "<p>Component that the command is registered with.</p>\n"}, "tanjun.commands.PartialCommand.hooks": {"fullname": "tanjun.commands.PartialCommand.hooks", "modulename": "tanjun.commands", "qualname": "PartialCommand.hooks", "type": "variable", "doc": "<p>Hooks that are triggered when the command is executed.</p>\n"}, "tanjun.commands.PartialCommand.metadata": {"fullname": "tanjun.commands.PartialCommand.metadata", "modulename": "tanjun.commands", "qualname": "PartialCommand.metadata", "type": "variable", "doc": "<p>Mutable mapping of metadata set for this command.</p>\n\n<p><em>Note:</em>\nAny modifications made to this mutable mapping will be preserved by\nthe command.</p>\n"}, "tanjun.commands.PartialCommand.needs_injector": {"fullname": "tanjun.commands.PartialCommand.needs_injector", "modulename": "tanjun.commands", "qualname": "PartialCommand.needs_injector", "type": "variable", "doc": "<p></p>\n"}, "tanjun.commands.PartialCommand.copy": {"fullname": "tanjun.commands.PartialCommand.copy", "modulename": "tanjun.commands", "qualname": "PartialCommand.copy", "type": "function", "doc": "<p>Create a copy of this command.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: A copy of this command.</li>\n</ul>\n", "parameters": ["self", "_new"], "funcdef": "def"}, "tanjun.commands.PartialCommand.set_hooks": {"fullname": "tanjun.commands.PartialCommand.set_hooks", "modulename": "tanjun.commands", "qualname": "PartialCommand.set_hooks", "type": "function", "doc": "<p>Set the hooks that are triggered when the command is executed.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>hooks</strong> (typing.Optional[Hooks[ContextT_co]]):\nThe hooks that are triggered when the command is executed.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This command to enable chained calls</li>\n</ul>\n", "parameters": ["self", "hooks"], "funcdef": "def"}, "tanjun.commands.PartialCommand.add_check": {"fullname": "tanjun.commands.PartialCommand.add_check", "modulename": "tanjun.commands", "qualname": "PartialCommand.add_check", "type": "function", "doc": "<p>Add a check to the command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>check</strong> (CheckSig):\nThe check to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This command to enable chained calls</li>\n</ul>\n", "parameters": ["self", "check"], "funcdef": "def"}, "tanjun.commands.PartialCommand.remove_check": {"fullname": "tanjun.commands.PartialCommand.remove_check", "modulename": "tanjun.commands", "qualname": "PartialCommand.remove_check", "type": "function", "doc": "<p>Remove a check from the command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>check</strong> (CheckSig):\nThe check to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the provided check isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This command to enable chained calls</li>\n</ul>\n", "parameters": ["self", "check"], "funcdef": "def"}, "tanjun.commands.PartialCommand.with_check": {"fullname": "tanjun.commands.PartialCommand.with_check", "modulename": "tanjun.commands", "qualname": "PartialCommand.with_check", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "check"], "funcdef": "def"}, "tanjun.commands.PartialCommand.bind_client": {"fullname": "tanjun.commands.PartialCommand.bind_client", "modulename": "tanjun.commands", "qualname": "PartialCommand.bind_client", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.commands.PartialCommand.bind_component": {"fullname": "tanjun.commands.PartialCommand.bind_component", "modulename": "tanjun.commands", "qualname": "PartialCommand.bind_component", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.commands.BaseSlashCommand": {"fullname": "tanjun.commands.BaseSlashCommand", "modulename": "tanjun.commands", "qualname": "BaseSlashCommand", "type": "class", "doc": "<p>Base class used for the standard slash command implementations.</p>\n"}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"fullname": "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral", "modulename": "tanjun.commands", "qualname": "BaseSlashCommand.defaults_to_ephemeral", "type": "variable", "doc": "<p>Whether contexts executed by this command should default to ephemeral responses.</p>\n\n<p>This effects calls to <code>SlashContext.create_followup</code>,\n<code>SlashContext.create_initial_response</code>, <code>SlashContext.defer</code> and\n<code>SlashContext.respond</code> unless the <code>flags</code> field is provided for the\nmethods which support it.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bool</strong>: Whether calls to this command should default to ephemeral mode.</li>\n</ul>\n\n<p>If this is <code>None</code> then the default from the parent command(s),\ncomponent or client is used.</p>\n"}, "tanjun.commands.BaseSlashCommand.description": {"fullname": "tanjun.commands.BaseSlashCommand.description", "modulename": "tanjun.commands", "qualname": "BaseSlashCommand.description", "type": "variable", "doc": "<p></p>\n"}, "tanjun.commands.BaseSlashCommand.is_global": {"fullname": "tanjun.commands.BaseSlashCommand.is_global", "modulename": "tanjun.commands", "qualname": "BaseSlashCommand.is_global", "type": "variable", "doc": "<p>Whether the command should be declared globally or not.</p>\n\n<p><em>Warning:</em>\nFor commands within command groups the state of this flag\nis inherited regardless of what it's set as on the child command.</p>\n"}, "tanjun.commands.BaseSlashCommand.name": {"fullname": "tanjun.commands.BaseSlashCommand.name", "modulename": "tanjun.commands", "qualname": "BaseSlashCommand.name", "type": "variable", "doc": "<p>Name of the command.</p>\n"}, "tanjun.commands.BaseSlashCommand.parent": {"fullname": "tanjun.commands.BaseSlashCommand.parent", "modulename": "tanjun.commands", "qualname": "BaseSlashCommand.parent", "type": "variable", "doc": "<p>Object of the group this command is in.</p>\n"}, "tanjun.commands.BaseSlashCommand.tracked_command": {"fullname": "tanjun.commands.BaseSlashCommand.tracked_command", "modulename": "tanjun.commands", "qualname": "BaseSlashCommand.tracked_command", "type": "variable", "doc": "<p>Object of the actual command this object tracks if set.</p>\n"}, "tanjun.commands.BaseSlashCommand.tracked_command_id": {"fullname": "tanjun.commands.BaseSlashCommand.tracked_command_id", "modulename": "tanjun.commands", "qualname": "BaseSlashCommand.tracked_command_id", "type": "variable", "doc": "<p>ID of the actual command this object tracks if set.</p>\n"}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"fullname": "tanjun.commands.BaseSlashCommand.set_tracked_command", "modulename": "tanjun.commands", "qualname": "BaseSlashCommand.set_tracked_command", "type": "function", "doc": "<p>Set the the global command this should be tracking.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (hikari.Command):\nobject of the global command this should be tracking.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>SelfT</strong>: This command instance for chaining.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"fullname": "tanjun.commands.BaseSlashCommand.set_ephemeral_default", "modulename": "tanjun.commands", "qualname": "BaseSlashCommand.set_ephemeral_default", "type": "function", "doc": "<p>Set whether this command's responses should default to ephemeral.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>typing.Optional[bool]</strong>: Whether this command's responses should default to ephemeral.\nThis will be overridden by any response calls which specify flags.</li>\n</ul>\n\n<p>Setting this to <code>None</code> will let the default set on the parent\ncommand(s), component or client propagate and decide the ephemeral\ndefault for contexts used by this command.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>SelfT</strong>: This command to allow for chaining.</li>\n</ul>\n", "parameters": ["self", "state"], "funcdef": "def"}, "tanjun.commands.BaseSlashCommand.set_parent": {"fullname": "tanjun.commands.BaseSlashCommand.set_parent", "modulename": "tanjun.commands", "qualname": "BaseSlashCommand.set_parent", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "parent"], "funcdef": "def"}, "tanjun.commands.BaseSlashCommand.check_context": {"fullname": "tanjun.commands.BaseSlashCommand.check_context", "modulename": "tanjun.commands", "qualname": "BaseSlashCommand.check_context", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx"], "funcdef": "async def"}, "tanjun.commands.BaseSlashCommand.copy": {"fullname": "tanjun.commands.BaseSlashCommand.copy", "modulename": "tanjun.commands", "qualname": "BaseSlashCommand.copy", "type": "function", "doc": "<p>Create a copy of this command.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: A copy of this command.</li>\n</ul>\n", "parameters": ["self", "_new", "parent"], "funcdef": "def"}, "tanjun.commands.BaseSlashCommand.load_into_component": {"fullname": "tanjun.commands.BaseSlashCommand.load_into_component", "modulename": "tanjun.commands", "qualname": "BaseSlashCommand.load_into_component", "type": "function", "doc": "<p>Load the object into the component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>component</strong> (tanjun.abc.Component):\nThe component this object should be loaded into.</li>\n</ul>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.commands.SlashCommand": {"fullname": "tanjun.commands.SlashCommand", "modulename": "tanjun.commands", "qualname": "SlashCommand", "type": "class", "doc": "<p>Standard implementation of a slash command.</p>\n"}, "tanjun.commands.SlashCommand.__init__": {"fullname": "tanjun.commands.SlashCommand.__init__", "modulename": "tanjun.commands", "qualname": "SlashCommand.__init__", "type": "function", "doc": "<p>Initialise a slash command.</p>\n\n<p><em>Note:</em>\nUnder the standard implementation, <code>is_global</code> is used to determine whether\nthe command should be bulk set by <code>tanjun.Client.set_global_commands</code>\nor when <code>set_global_commands</code> is True</p>\n\n<p><em>Warning:</em>\n<code>default_permission</code> and <code>is_global</code> are ignored for commands within\nslash command groups.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (collections.abc.Callable[[tanjun.abc.SlashContext, ...], collections.abc.Awaitable[None]]):\nCallback to execute when the command is invoked.</p>\n\n<p>This should be an asynchronous callback which takes one positional\nargument of type <code>tanjun.abc.SlashContext</code>, returns <code>None</code> and may use\ndependency injection to access other services.</p></li>\n<li><p><strong>name</strong> (str):\nThe command's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe command's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>always_defer</strong> (bool):\nWhether the contexts this command is executed with should always be deferred\nbefore being passed to the command's callback.</p>\n\n<p>Defaults to <code>False</code>.</p>\n\n<p><em>Note:</em>\nThe ephemeral state of the first response is decided by whether the\ndeferral is ephemeral.</p></li>\n<li><p><strong>default_permission</strong> (bool):\nWhether this command can be accessed without set permissions.</p>\n\n<p>Defaults to <code>True</code>, meaning that users can access the command by default.</p></li>\n<li><p><strong>default_to_ephemeral</strong> (typing.Optional[bool]):\nWhether this command's responses should default to ephemeral unless flags\nare set to override this.</p>\n\n<p>If this is left as <code>None</code> then the default set on the parent command(s),\ncomponent or client will be in effect.</p></li>\n<li><strong>is_global</strong> (bool):\nWhether this command is a global command. Defaults to <code>True</code>.</li>\n<li><p><strong>sort_options</strong> (bool):\nWhether this command should sort its set options based on whether\nthey're required.</p>\n\n<p>If this is <code>True</code> then the options are re-sorted to meet the requirement\nfrom Discord that required command options be listed before optional\nones.</p></li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the command name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the command name has uppercase characters.</li>\n<li>If the description is over 100 characters long.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "callback", "name", "description", "always_defer", "default_permission", "default_to_ephemeral", "is_global", "sort_options", "_wrapped_command"], "funcdef": "def"}, "tanjun.commands.SlashCommand.callback": {"fullname": "tanjun.commands.SlashCommand.callback", "modulename": "tanjun.commands", "qualname": "SlashCommand.callback", "type": "variable", "doc": "<p>Callback which is called during execution.</p>\n"}, "tanjun.commands.SlashCommand.needs_injector": {"fullname": "tanjun.commands.SlashCommand.needs_injector", "modulename": "tanjun.commands", "qualname": "SlashCommand.needs_injector", "type": "variable", "doc": "<p></p>\n"}, "tanjun.commands.SlashCommand.bind_client": {"fullname": "tanjun.commands.SlashCommand.bind_client", "modulename": "tanjun.commands", "qualname": "SlashCommand.bind_client", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.commands.SlashCommand.build": {"fullname": "tanjun.commands.SlashCommand.build", "modulename": "tanjun.commands", "qualname": "SlashCommand.build", "type": "function", "doc": "<p>Get a builder object for this command.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.api.CommandBuilder</strong>: A builder object for this command. Use to declare this command on\nglobally or for a specific guild.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.commands.SlashCommand.load_into_component": {"fullname": "tanjun.commands.SlashCommand.load_into_component", "modulename": "tanjun.commands", "qualname": "SlashCommand.load_into_component", "type": "function", "doc": "<p>Load the object into the component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>component</strong> (tanjun.abc.Component):\nThe component this object should be loaded into.</li>\n</ul>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.commands.SlashCommand.add_str_option": {"fullname": "tanjun.commands.SlashCommand.add_str_option", "modulename": "tanjun.commands", "qualname": "SlashCommand.add_str_option", "type": "function", "doc": "<p>Add a string option to the slash command.</p>\n\n<p><em>Note:</em>\nAs a shorthand, <code>choices</code> also supports passing a list of strings\nrather than a dict of names to values (each string will used as\nboth the choice's name and value with the names being capitalised).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe option's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe option's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>choices</strong> (typing.Union[collections.abc.Mapping[str, str], collections.abc.Sequence[str], None]):\nThe option's choices.</p>\n\n<p>This either a mapping of [option_name, option_value] where both option_name\nand option_value should be strings of up to 100 characters or a sequence\nof strings where the string will be used for both the choice's name and\nvalue.</p></li>\n<li><p><strong>converters</strong> (typing.Union[collections.abc.Sequence[ConverterSig], ConverterSig]):\nThe option's converters.</p>\n\n<p>This may be either one or multiple <code>ConverterSig</code> callbacks used to\nconvert the option's value to the final form.\nIf no converters are provided then the raw value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>default</strong> (typing.Any):\nThe option's default value.\nIf this is left as undefined then this option will be required.</li>\n<li><p><strong>pass_as_kwarg</strong> (bool):\nWhether or not to pass this option as a keyword argument to the\ncommand callback.</p>\n\n<p>Defaults to <code>True</code>. If <code>False</code> is passed here then <code>default</code> will\nonly decide whether the option is required without the actual value\nbeing used and the <code>coverters</code> field will be ignored.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command object for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the option name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the option name has uppercase characters.</li>\n<li>If the option description is over 100 characters in length.</li>\n<li>If the option has more than 25 choices.</li>\n<li>If the command already has 25 options.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "name", "description", "choices", "converters", "default", "pass_as_kwarg", "_stack_level"], "funcdef": "def"}, "tanjun.commands.SlashCommand.add_int_option": {"fullname": "tanjun.commands.SlashCommand.add_int_option", "modulename": "tanjun.commands", "qualname": "SlashCommand.add_int_option", "type": "function", "doc": "<p>Add an integer option to the slash command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe option's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe option's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>choices</strong> (typing.Optional[collections.abc.Mapping[str, int]]):\nThe option's choices.</p>\n\n<p>This is a mapping of [option_name, option_value] where option_name\nshould be a string of up to 100 characters and option_value should\nbe an integer.</p></li>\n<li><p><strong>converters</strong> (typing.Union[collections.abc.Sequence[ConverterSig], ConverterSig, None]):\nThe option's converters.</p>\n\n<p>This may be either one or multiple <code>ConverterSig</code> callbacks used to\nconvert the option's value to the final form.\nIf no converters are provided then the raw value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>default</strong> (typing.Any):\nThe option's default value.\nIf this is left as undefined then this option will be required.</li>\n<li><p><strong>min_value</strong> (typing.Optional[int]):\nThe option's (inclusive) minimum value.</p>\n\n<p>Defaults to no minimum value.</p></li>\n<li><p><strong>max_value</strong> (typing.Optional[int]):\nThe option's (inclusive) maximum value.</p>\n\n<p>Defaults to no minimum value.</p></li>\n<li><p><strong>pass_as_kwarg</strong> (bool):\nWhether or not to pass this option as a keyword argument to the\ncommand callback.</p>\n\n<p>Defaults to <code>True</code>. If <code>False</code> is passed here then <code>default</code> will\nonly decide whether the option is required without the actual value\nbeing used and the <code>coverters</code> field will be ignored.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command object for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the option name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the option name has uppercase characters.</li>\n<li>If the option description is over 100 characters in length.</li>\n<li>If the option has more than 25 choices.</li>\n<li>If the command already has 25 options.</li>\n<li>If <code>min_value</code> is greater than <code>max_value</code>.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "name", "description", "choices", "converters", "default", "min_value", "max_value", "pass_as_kwarg", "_stack_level"], "funcdef": "def"}, "tanjun.commands.SlashCommand.add_float_option": {"fullname": "tanjun.commands.SlashCommand.add_float_option", "modulename": "tanjun.commands", "qualname": "SlashCommand.add_float_option", "type": "function", "doc": "<p>Add a float option to a slash command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe option's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe option's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>always_float</strong> (bool):\nIf this is set to <code>True</code> then the value will always be converted to a\nfloat (this will happen before it's passed to converters).</p>\n\n<p>This masks behaviour from Discord where we will either be provided a <code>float</code>\nor <code>int</code> dependent on what the user provided and defaults to <code>True</code>.</p></li>\n<li><p><strong>choices</strong> (typing.Optional[collections.abc.Mapping[str, float]]):\nThe option's choices.</p>\n\n<p>This is a mapping of [option_name, option_value] where option_name\nshould be a string of up to 100 characters and option_value should\nbe a float.</p></li>\n<li><p><strong>converters</strong> (typing.Union[collections.abc.Sequence[ConverterSig], ConverterSig, None]):\nThe option's converters.</p>\n\n<p>This may be either one or multiple <code>ConverterSig</code> callbacks used to\nconvert the option's value to the final form.\nIf no converters are provided then the raw value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>default</strong> (typing.Any):\nThe option's default value.\nIf this is left as undefined then this option will be required.</li>\n<li><p><strong>min_value</strong> (typing.Optional[float]):\nThe option's (inclusive) minimum value.</p>\n\n<p>Defaults to no minimum value.</p></li>\n<li><p><strong>max_value</strong> (typing.Optional[float]):\nThe option's (inclusive) maximum value.</p>\n\n<p>Defaults to no minimum value.</p></li>\n<li><p><strong>pass_as_kwarg</strong> (bool):\nWhether or not to pass this option as a keyword argument to the\ncommand callback.</p>\n\n<p>Defaults to <code>True</code>. If <code>False</code> is passed here then <code>default</code> will\nonly decide whether the option is required without the actual value\nbeing used and the fields <code>coverters</code>, and <code>always_float</code> will be\nignored.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command object for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the option name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the option name has uppercase characters.</li>\n<li>If the option description is over 100 characters in length.</li>\n<li>If the option has more than 25 choices.</li>\n<li>If the command already has 25 options.</li>\n<li>If <code>min_value</code> is greater than <code>max_value</code>.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "name", "description", "always_float", "choices", "converters", "default", "min_value", "max_value", "pass_as_kwarg", "_stack_level"], "funcdef": "def"}, "tanjun.commands.SlashCommand.add_bool_option": {"fullname": "tanjun.commands.SlashCommand.add_bool_option", "modulename": "tanjun.commands", "qualname": "SlashCommand.add_bool_option", "type": "function", "doc": "<p>Add a boolean option to a slash command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe option's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe option's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>default</strong> (typing.Any):\nThe option's default value.\nIf this is left as undefined then this option will be required.</li>\n<li><p><strong>pass_as_kwarg</strong> (bool):\nWhether or not to pass this option as a keyword argument to the\ncommand callback.</p>\n\n<p>Defaults to <code>True</code>. If <code>False</code> is passed here then <code>default</code> will\nonly decide whether the option is required without the actual value\nbeing used.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command object for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the option name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the option name has uppercase characters.</li>\n<li>If the option description is over 100 characters in length.</li>\n<li>If the command already has 25 options.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "name", "description", "default", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.commands.SlashCommand.add_user_option": {"fullname": "tanjun.commands.SlashCommand.add_user_option", "modulename": "tanjun.commands", "qualname": "SlashCommand.add_user_option", "type": "function", "doc": "<p>Add a user option to a slash command.</p>\n\n<p><em>Note:</em>\nThis may result in <code>hikari.InteractionMember</code> or\n<code>hikari.users.User</code> if the user isn't in the current guild or if this\ncommand was executed in a DM channel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe option's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe option's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>default</strong> (typing.Any):\nThe option's default value.\nIf this is left as undefined then this option will be required.</li>\n<li><p><strong>pass_as_kwarg</strong> (bool):\nWhether or not to pass this option as a keyword argument to the\ncommand callback.</p>\n\n<p>Defaults to <code>True</code>. If <code>False</code> is passed here then <code>default</code> will\nonly decide whether the option is required without the actual value\nbeing used.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command object for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the option name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the option name has uppercase characters.</li>\n<li>If the option description is over 100 characters in length.</li>\n<li>If the option has more than 25 choices.</li>\n<li>If the command already has 25 options.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "name", "description", "default", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.commands.SlashCommand.add_member_option": {"fullname": "tanjun.commands.SlashCommand.add_member_option", "modulename": "tanjun.commands", "qualname": "SlashCommand.add_member_option", "type": "function", "doc": "<p>Add a member option to a slash command.</p>\n\n<p><em>Note:</em>\nThis will always result in <code>hikari.InteractionMember</code>.</p>\n\n<p><em>Warning:</em>\nUnlike the other options, this is an artificial option which adds\na restraint to the USER option type and therefore cannot have\n<code>pass_as_kwarg</code> set to <code>False</code> as this artificial constaint isn't\npresent when its not being passed as a keyword argument.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe option's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe option's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>default</strong> (typing.Any):\nThe option's default value.\nIf this is left as undefined then this option will be required.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command object for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the option name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the option name has uppercase characters.</li>\n<li>If the option description is over 100 characters in length.</li>\n<li>If the command already has 25 options.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "name", "description", "default"], "funcdef": "def"}, "tanjun.commands.SlashCommand.add_channel_option": {"fullname": "tanjun.commands.SlashCommand.add_channel_option", "modulename": "tanjun.commands", "qualname": "SlashCommand.add_channel_option", "type": "function", "doc": "<p>Add a channel option to a slash command.</p>\n\n<p><em>Note:</em>\nThis will always result in <code>hikari.InteractionChannel</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe option's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe option's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"parameters-2\">Parameters</h6>\n\n<ul>\n<li><strong>default</strong> (typing.Any):\nThe option's default value.\nIf this is left as undefined then this option will be required.</li>\n<li><p><strong>types</strong> (typing.Optional[collections.abc.Collection[type[hikari.PartialChannel]]]):\nA collection of the channel classes this option should accept.</p>\n\n<p>If left as <code>None</code> or empty then the option will allow all channel types.</p></li>\n<li><p><strong>pass_as_kwarg</strong> (bool):\nWhether or not to pass this option as a keyword argument to the\ncommand callback.</p>\n\n<p>Defaults to <code>True</code>. If <code>False</code> is passed here then <code>default</code> will\nonly decide whether the option is required without the actual value\nbeing used.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command object for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the option name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the option name has uppercase characters.</li>\n<li>If the option description is over 100 characters in length.</li>\n<li>If the command already has 25 options.</li>\n<li>If an invalid type is passed in <code>types</code>.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "name", "description", "default", "types", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.commands.SlashCommand.add_role_option": {"fullname": "tanjun.commands.SlashCommand.add_role_option", "modulename": "tanjun.commands", "qualname": "SlashCommand.add_role_option", "type": "function", "doc": "<p>Add a role option to a slash command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe option's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe option's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>default</strong> (typing.Any):\nThe option's default value.\nIf this is left as undefined then this option will be required.</li>\n<li><p><strong>pass_as_kwarg</strong> (bool):\nWhether or not to pass this option as a keyword argument to the\ncommand callback.</p>\n\n<p>Defaults to <code>True</code>. If <code>False</code> is passed here then <code>default</code> will\nonly decide whether the option is required without the actual value\nbeing used.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command object for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the option name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the option name has uppercase characters.</li>\n<li>If the option description is over 100 characters in length.</li>\n<li>If the command already has 25 options.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "name", "description", "default", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.commands.SlashCommand.add_mentionable_option": {"fullname": "tanjun.commands.SlashCommand.add_mentionable_option", "modulename": "tanjun.commands", "qualname": "SlashCommand.add_mentionable_option", "type": "function", "doc": "<p>Add a mentionable option to a slash command.</p>\n\n<p><em>Note:</em>\nThis may target roles, guild members or users and results in\n<code>Union[hikari.User, hikari.InteractionMember, hikari.Role]</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe option's name.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe option's description.\nThis should be inclusively between 1-100 characters in length.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>default</strong> (typing.Any):\nThe option's default value.\nIf this is left as undefined then this option will be required.</li>\n<li><p><strong>pass_as_kwarg</strong> (bool):\nWhether or not to pass this option as a keyword argument to the\ncommand callback.</p>\n\n<p>Defaults to <code>True</code>. If <code>False</code> is passed here then <code>default</code> will\nonly decide whether the option is required without the actual value\nbeing used.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The command object for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the option name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the option name has uppercase characters.</li>\n<li>If the option description is over 100 characters in length.</li>\n<li>If the command already has 25 options.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "name", "description", "default", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.commands.SlashCommand.execute": {"fullname": "tanjun.commands.SlashCommand.execute", "modulename": "tanjun.commands", "qualname": "SlashCommand.execute", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "option", "hooks"], "funcdef": "async def"}, "tanjun.commands.SlashCommand.copy": {"fullname": "tanjun.commands.SlashCommand.copy", "modulename": "tanjun.commands", "qualname": "SlashCommand.copy", "type": "function", "doc": "<p>Create a copy of this command.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: A copy of this command.</li>\n</ul>\n", "parameters": ["self", "_new", "parent"], "funcdef": "def"}, "tanjun.commands.SlashCommandGroup": {"fullname": "tanjun.commands.SlashCommandGroup", "modulename": "tanjun.commands", "qualname": "SlashCommandGroup", "type": "class", "doc": "<p>Standard implementation of a slash command group.</p>\n\n<p><em>Note:</em>\nUnlike message command grups, slash command groups cannot\nbe callable functions themselves.</p>\n"}, "tanjun.commands.SlashCommandGroup.__init__": {"fullname": "tanjun.commands.SlashCommandGroup.__init__", "modulename": "tanjun.commands", "qualname": "SlashCommandGroup.__init__", "type": "function", "doc": "<p>Initialise a slash command group.</p>\n\n<p><em>Note:</em>\nUnder the standard implementation, <code>is_global</code> is used to determine\nwhether the command should be bulk set by <code>tanjun.Client.set_global_commands</code>\nor when <code>set_global_commands</code> is True</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>name</strong> (str):\nThe name of the command group.</p>\n\n<p>This must match the regex <code>^[\\w-]{1,32}$</code> in Unicode mode and be lowercase.</p></li>\n<li><strong>description</strong> (str):\nThe description of the command group.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>default_permission</strong> (bool):\nWhether this command can be accessed without set permissions.</p>\n\n<p>Defaults to <code>True</code>, meaning that users can access the command by default.</p></li>\n<li><p><strong>default_to_ephemeral</strong> (typing.Optional[bool]):\nWhether this command's responses should default to ephemeral unless flags\nare set to override this.</p>\n\n<p>If this is left as <code>None</code> then the default set on the parent command(s),\ncomponent or client will be in effect.</p></li>\n<li><strong>is_global</strong> (bool):\nWhether this command is a global command. Defaults to <code>True</code>.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raises a value error for any of the following reasons:\n<ul>\n<li>If the command name doesn't match the regex <code>^[\\w-]{1,32}$</code> (Unicode mode).</li>\n<li>If the command name has uppercase characters.</li>\n<li>If the description is over 100 characters long.</li>\n</ul></li>\n</ul>\n", "parameters": ["self", "name", "description", "default_to_ephemeral", "default_permission", "is_global"], "funcdef": "def"}, "tanjun.commands.SlashCommandGroup.commands": {"fullname": "tanjun.commands.SlashCommandGroup.commands", "modulename": "tanjun.commands", "qualname": "SlashCommandGroup.commands", "type": "variable", "doc": "<p>Collection of the commands in this group.</p>\n"}, "tanjun.commands.SlashCommandGroup.build": {"fullname": "tanjun.commands.SlashCommandGroup.build", "modulename": "tanjun.commands", "qualname": "SlashCommandGroup.build", "type": "function", "doc": "<p>Get a builder object for this command.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.api.CommandBuilder</strong>: A builder object for this command. Use to declare this command on\nglobally or for a specific guild.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.commands.SlashCommandGroup.copy": {"fullname": "tanjun.commands.SlashCommandGroup.copy", "modulename": "tanjun.commands", "qualname": "SlashCommandGroup.copy", "type": "function", "doc": "<p>Create a copy of this command.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: A copy of this command.</li>\n</ul>\n", "parameters": ["self", "_new", "parent"], "funcdef": "def"}, "tanjun.commands.SlashCommandGroup.add_command": {"fullname": "tanjun.commands.SlashCommandGroup.add_command", "modulename": "tanjun.commands", "qualname": "SlashCommandGroup.add_command", "type": "function", "doc": "<p>Add a slash command to this group.</p>\n\n<p><em>Warning:</em>\nCommand groups are only supported within top-level groups.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (tanjun.abc.BaseSlashCommand):\nCommand to add to this group.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: Object of this group to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.commands.SlashCommandGroup.remove_command": {"fullname": "tanjun.commands.SlashCommandGroup.remove_command", "modulename": "tanjun.commands", "qualname": "SlashCommandGroup.remove_command", "type": "function", "doc": "<p>Remove a command from this group.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (tanjun.abc.BaseSlashCommand):\nCommand to remove from this group.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: Object of this group to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.commands.SlashCommandGroup.with_command": {"fullname": "tanjun.commands.SlashCommandGroup.with_command", "modulename": "tanjun.commands", "qualname": "SlashCommandGroup.with_command", "type": "function", "doc": "<p>Add a slash command to this group through a decorator call.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (tanjun.abc.BaseSlashCommand):\nCommand to add to this group.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tanjun.abc.BaseSlashCommand</strong>: Command which was added to this group.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.commands.SlashCommandGroup.execute": {"fullname": "tanjun.commands.SlashCommandGroup.execute", "modulename": "tanjun.commands", "qualname": "SlashCommandGroup.execute", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "option", "hooks"], "funcdef": "async def"}, "tanjun.commands.with_str_slash_option": {"fullname": "tanjun.commands.with_str_slash_option", "modulename": "tanjun.commands", "qualname": "with_str_slash_option", "type": "function", "doc": "<p>Add a string option to a slash command.</p>\n\n<p>For more information on this function's parameters see <code>SlashCommand.add_str_option</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@with_str_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A name.&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_SlashCommandT], _SlashCommandT]</strong>: Decorator callback which adds the option to the command.</li>\n</ul>\n", "parameters": ["name", "description", "choices", "converters", "default", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.commands.with_int_slash_option": {"fullname": "tanjun.commands.with_int_slash_option", "modulename": "tanjun.commands", "qualname": "with_int_slash_option", "type": "function", "doc": "<p>Add an integer option to a slash command.</p>\n\n<p>For information on this function's parameters see <code>SlashCommand.add_int_option</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@with_int_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;int_value&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Int value.&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">,</span> <span class=\"n\">int_value</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_SlashCommandT], _SlashCommandT]</strong>: Decorator callback which adds the option to the command.</li>\n</ul>\n", "parameters": ["name", "description", "choices", "converters", "default", "min_value", "max_value", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.commands.with_float_slash_option": {"fullname": "tanjun.commands.with_float_slash_option", "modulename": "tanjun.commands", "qualname": "with_float_slash_option", "type": "function", "doc": "<p>Add a float option to a slash command.</p>\n\n<p>For information on this function's parameters see <code>SlashCommand.add_float_option</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@with_float_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;float_value&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Float value.&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">,</span> <span class=\"n\">float_value</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_SlashCommandT], _SlashCommandT]</strong>: Decorator callback which adds the option to the command.</li>\n</ul>\n", "parameters": ["name", "description", "always_float", "choices", "converters", "default", "min_value", "max_value", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.commands.with_bool_slash_option": {"fullname": "tanjun.commands.with_bool_slash_option", "modulename": "tanjun.commands", "qualname": "with_bool_slash_option", "type": "function", "doc": "<p>Add a boolean option to a slash command.</p>\n\n<p>For information on this function's parameters see <code>SlashContext.add_bool_option</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@with_bool_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;flag&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Whether this flag should be enabled.&quot;</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"nd\">@as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">,</span> <span class=\"n\">flag</span><span class=\"p\">:</span> <span class=\"nb\">bool</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_SlashCommandT], _SlashCommandT]</strong>: Decorator callback which adds the option to the command.</li>\n</ul>\n", "parameters": ["name", "description", "default", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.commands.with_role_slash_option": {"fullname": "tanjun.commands.with_role_slash_option", "modulename": "tanjun.commands", "qualname": "with_role_slash_option", "type": "function", "doc": "<p>Add a role option to a slash command.</p>\n\n<p>For information on this function's parameters see <code>SlashCommand.add_role_option</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@with_role_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;role&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Role to target.&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">,</span> <span class=\"n\">role</span><span class=\"p\">:</span> <span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">Role</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_SlashCommandT], _SlashCommandT]</strong>: Decorator callback which adds the option to the command.</li>\n</ul>\n", "parameters": ["name", "description", "default", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.commands.with_user_slash_option": {"fullname": "tanjun.commands.with_user_slash_option", "modulename": "tanjun.commands", "qualname": "with_user_slash_option", "type": "function", "doc": "<p>Add a user option to a slash command.</p>\n\n<p>For information on this function's parameters see <code>SlashContext.add_user_option</code>.</p>\n\n<p><em>Note:</em>\nThis may result in <code>hikari.InteractionMember</code> or\n<code>hikari.users.User</code> if the user isn't in the current guild or if this\ncommand was executed in a DM channel.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@with_user_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;user&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;user to target.&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">InteractionMember</span><span class=\"p\">,</span> <span class=\"n\">User</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_SlashCommandT], _SlashCommandT]</strong>: Decorator callback which adds the option to the command.</li>\n</ul>\n", "parameters": ["name", "description", "default", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.commands.with_member_slash_option": {"fullname": "tanjun.commands.with_member_slash_option", "modulename": "tanjun.commands", "qualname": "with_member_slash_option", "type": "function", "doc": "<p>Add a member option to a slash command.</p>\n\n<p>For information on this function's arguments see <code>SlashCommand.add_member_option</code>.</p>\n\n<p><em>Note:</em>\nThis will always result in <code>hikari.InteractionMember</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@with_member_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;member&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;member to target.&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">,</span> <span class=\"n\">member</span><span class=\"p\">:</span> <span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">InteractionMember</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_SlashCommandT], _SlashCommandT]</strong>: Decorator callback which adds the option to the command.</li>\n</ul>\n", "parameters": ["name", "description", "default"], "funcdef": "def"}, "tanjun.commands.with_channel_slash_option": {"fullname": "tanjun.commands.with_channel_slash_option", "modulename": "tanjun.commands", "qualname": "with_channel_slash_option", "type": "function", "doc": "<p>Add a channel option to a slash command.</p>\n\n<p>For information on this function's parameters see <code>SlashCommand.add_channel_option</code>.</p>\n\n<p><em>Note:</em>\nThis will always result in <code>hikari..InteractionChannel</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@with_channel_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;channel&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;channel to target.&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">,</span> <span class=\"n\">channel</span><span class=\"p\">:</span> <span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">InteractionChannel</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_SlashCommandT], _SlashCommandT]</strong>: Decorator callback which adds the option to the command.</li>\n</ul>\n", "parameters": ["name", "description", "types", "default", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.commands.with_mentionable_slash_option": {"fullname": "tanjun.commands.with_mentionable_slash_option", "modulename": "tanjun.commands", "qualname": "with_mentionable_slash_option", "type": "function", "doc": "<p>Add a mentionable option to a slash command.</p>\n\n<p>For information on this function's arguments see <code>SlashCommand.add_mentionable_option</code>.</p>\n\n<p><em>Note:</em>\nThis may target roles, guild members or users and results in\n<code>Union[hikari.User, hikari.InteractionMember, hikari.Role]</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@with_mentionable_slash_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;mentionable&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Mentionable entity to target.&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">SlashContext</span><span class=\"p\">,</span> <span class=\"n\">mentionable</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Role</span><span class=\"p\">,</span> <span class=\"n\">InteractionMember</span><span class=\"p\">,</span> <span class=\"n\">User</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[_SlashCommandT], _SlashCommandT]</strong>: Decorator callback which adds the option to the command.</li>\n</ul>\n", "parameters": ["name", "description", "default", "pass_as_kwarg"], "funcdef": "def"}, "tanjun.components": {"fullname": "tanjun.components", "modulename": "tanjun.components", "qualname": "", "type": "module", "doc": "<p>Standard implementation of Tanjun's \"components\" used to manage separate features within a client.</p>\n"}, "tanjun.components.CommandT": {"fullname": "tanjun.components.CommandT", "modulename": "tanjun.components", "qualname": "CommandT", "type": "variable", "doc": "<p></p>\n"}, "tanjun.components.Component": {"fullname": "tanjun.components.Component", "modulename": "tanjun.components", "qualname": "Component", "type": "class", "doc": "<p>Standard implementation of <code>tanjun.abc.Component</code>.</p>\n\n<p>This is a collcetion of commands (both message and slash), hooks and listener\ncallbacks which can be added to a generic client.</p>\n\n<p><em>Note:</em>\nThis implementation supports dependency injection for its checks,\ncommand callbacks and listeners when linked to a client which\nsupports dependency injection.</p>\n"}, "tanjun.components.Component.__init__": {"fullname": "tanjun.components.Component.__init__", "modulename": "tanjun.components", "qualname": "Component.__init__", "type": "function", "doc": "<p>Initialise a new component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>checks</strong> (typing.Optional[collections.abc.Iterable[abc.CheckSig]]):\nIterable of check callbacks to set for this component, if provided.</li>\n<li><strong>hooks</strong> (typing.Optional[tanjun.abc.AnyHooks]):\nThe hooks this component should add to the execution of all its\ncommands (message and slash).</li>\n<li><strong>slash_hooks</strong> (typing.Optional[tanjun.abc.SlashHooks]):\nThe slash hooks this component should add to the execution of its\nslash commands.</li>\n<li><strong>message_hooks</strong> (typing.Optional[tanjun.abc.MessageHooks]):\nThe message hooks this component should add to the execution of its\nmessage commands.</li>\n<li><p><strong>name</strong> (str):\nThe component's identifier.</p>\n\n<p>If not provided then this will be a random string.</p></li>\n<li><p><strong>strict</strong> (bool):\nWhether this component should use a stricter (more optimal) approach\nfor message command search.</p>\n\n<p>When this is <code>True</code>, message command names will not be allowed to contain\nspaces and will have to be unique to one command within the component.</p></li>\n</ul>\n", "parameters": ["self", "name", "strict"], "funcdef": "def"}, "tanjun.components.Component.checks": {"fullname": "tanjun.components.Component.checks", "modulename": "tanjun.components", "qualname": "Component.checks", "type": "variable", "doc": "<p>Collection of the checks being run against every command execution in this component.</p>\n"}, "tanjun.components.Component.client": {"fullname": "tanjun.components.Component.client", "modulename": "tanjun.components", "qualname": "Component.client", "type": "variable", "doc": "<p>Tanjun client this component is bound to.</p>\n"}, "tanjun.components.Component.defaults_to_ephemeral": {"fullname": "tanjun.components.Component.defaults_to_ephemeral", "modulename": "tanjun.components", "qualname": "Component.defaults_to_ephemeral", "type": "variable", "doc": "<p>Whether slash contexts executed in this component should default to ephemeral responses.</p>\n\n<p>This effects calls to <code>SlashContext.create_followup</code>,\n<code>SlashContext.create_initial_response</code>, <code>SlashContext.defer</code> and\n<code>SlashContext.respond</code> unless the <code>flags</code> field is provided for the\nmethods which support it.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>This may be overridden by <code>BaseSlashCommand.defaults_to_ephemeral</code>.</li>\n<li>This only effects slash command execution.</li>\n<li>If this is <code>None</code> then the default from the parent client is used.</li>\n</ul>\n"}, "tanjun.components.Component.hooks": {"fullname": "tanjun.components.Component.hooks", "modulename": "tanjun.components", "qualname": "Component.hooks", "type": "variable", "doc": "<p></p>\n"}, "tanjun.components.Component.loop": {"fullname": "tanjun.components.Component.loop", "modulename": "tanjun.components", "qualname": "Component.loop", "type": "variable", "doc": "<p>The asyncio loop this client is bound to if it has been opened.</p>\n"}, "tanjun.components.Component.name": {"fullname": "tanjun.components.Component.name", "modulename": "tanjun.components", "qualname": "Component.name", "type": "variable", "doc": "<p>Component's unique identifier.</p>\n\n<p><em>Note:</em>\nThis will be preserved between copies of a component.</p>\n"}, "tanjun.components.Component.schedules": {"fullname": "tanjun.components.Component.schedules", "modulename": "tanjun.components", "qualname": "Component.schedules", "type": "variable", "doc": "<p>Collection of the schedules registered to this component.</p>\n"}, "tanjun.components.Component.slash_commands": {"fullname": "tanjun.components.Component.slash_commands", "modulename": "tanjun.components", "qualname": "Component.slash_commands", "type": "variable", "doc": "<p>Collection of the slash commands in this component.</p>\n"}, "tanjun.components.Component.slash_hooks": {"fullname": "tanjun.components.Component.slash_hooks", "modulename": "tanjun.components", "qualname": "Component.slash_hooks", "type": "variable", "doc": "<p></p>\n"}, "tanjun.components.Component.message_commands": {"fullname": "tanjun.components.Component.message_commands", "modulename": "tanjun.components", "qualname": "Component.message_commands", "type": "variable", "doc": "<p>Collection of the message commands in this component.</p>\n"}, "tanjun.components.Component.message_hooks": {"fullname": "tanjun.components.Component.message_hooks", "modulename": "tanjun.components", "qualname": "Component.message_hooks", "type": "variable", "doc": "<p></p>\n"}, "tanjun.components.Component.needs_injector": {"fullname": "tanjun.components.Component.needs_injector", "modulename": "tanjun.components", "qualname": "Component.needs_injector", "type": "variable", "doc": "<p>Whether any of the checks in this component require dependency injection.</p>\n"}, "tanjun.components.Component.listeners": {"fullname": "tanjun.components.Component.listeners", "modulename": "tanjun.components", "qualname": "Component.listeners", "type": "variable", "doc": "<p>Mapping of event types to the listeners registered for them in this component.</p>\n"}, "tanjun.components.Component.metadata": {"fullname": "tanjun.components.Component.metadata", "modulename": "tanjun.components", "qualname": "Component.metadata", "type": "variable", "doc": "<p>Mutable mapping of the metadata set for this component.</p>\n\n<p><em>Note:</em>\nAny modifications made to this mutable mapping will be preserved by\nthe component.</p>\n"}, "tanjun.components.Component.copy": {"fullname": "tanjun.components.Component.copy", "modulename": "tanjun.components", "qualname": "Component.copy", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "_new"], "funcdef": "def"}, "tanjun.components.Component.load_from_scope": {"fullname": "tanjun.components.Component.load_from_scope", "modulename": "tanjun.components", "qualname": "Component.load_from_scope", "type": "function", "doc": "<p>Load entries such as top-level commands into the component from the calling scope.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>This will load schedules which support <code>AbstractComponentLoader</code>\n(e.g. <code>tanjun.schedules.IntervalSchedule</code>).</li>\n<li>This will ignore commands which are owned by command groups.</li>\n<li>This will detect entries from the calling scope which implement\n<code>AbstractComponentLoader</code> unless <code>scope</code> is passed but this isn't possible\nin a stack-less python implementation; in stack-less environments the\nscope will have to be explicitly passed as <code>scope</code>.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>include_globals</strong> (bool):\nWhether to include global variables (along with local) while\ndetecting from the calling scope.</p>\n\n<p>This defaults to <code>False</code>, cannot be <code>True</code> when <code>scope</code> is provided\nand will only ever be needed when the local scope is different\nfrom the global scope.</p></li>\n<li><p><strong>scope</strong> (typing.Optional[collections.Mapping[str, typing.Any]]):\nThe scope to detect entries which implement <code>AbstractComponentLoader</code>\nfrom.</p>\n\n<p>This overrides the default usage of stackframe introspection.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The current component to allow for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If this is called in a python implementation which doesn't support\nstack frame inspection when <code>scope</code> is not provided.</li>\n<li><strong>ValueError</strong>: If <code>scope</code> is provided when <code>include_globals</code> is True.</li>\n</ul>\n", "parameters": ["self", "include_globals", "scope"], "funcdef": "def"}, "tanjun.components.Component.set_ephemeral_default": {"fullname": "tanjun.components.Component.set_ephemeral_default", "modulename": "tanjun.components", "qualname": "Component.set_ephemeral_default", "type": "function", "doc": "<p>Set whether slash contexts executed in this component should default to ephemeral responses.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>typing.Optional[bool]</strong>: Whether slash command contexts executed in this component should\nshould default to ephemeral.\nThis will be overridden by any response calls which specify flags.</li>\n</ul>\n\n<p>Setting this to <code>None</code> will let the default set on the parent\nclient propagate and decide the ephemeral default behaviour.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>SelfT</strong>: This component to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "state"], "funcdef": "def"}, "tanjun.components.Component.set_slash_hooks": {"fullname": "tanjun.components.Component.set_slash_hooks", "modulename": "tanjun.components", "qualname": "Component.set_slash_hooks", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "hooks_"], "funcdef": "def"}, "tanjun.components.Component.set_message_hooks": {"fullname": "tanjun.components.Component.set_message_hooks", "modulename": "tanjun.components", "qualname": "Component.set_message_hooks", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "hooks_"], "funcdef": "def"}, "tanjun.components.Component.set_hooks": {"fullname": "tanjun.components.Component.set_hooks", "modulename": "tanjun.components", "qualname": "Component.set_hooks", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "hooks"], "funcdef": "def"}, "tanjun.components.Component.add_check": {"fullname": "tanjun.components.Component.add_check", "modulename": "tanjun.components", "qualname": "Component.add_check", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "check"], "funcdef": "def"}, "tanjun.components.Component.remove_check": {"fullname": "tanjun.components.Component.remove_check", "modulename": "tanjun.components", "qualname": "Component.remove_check", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "check"], "funcdef": "def"}, "tanjun.components.Component.with_check": {"fullname": "tanjun.components.Component.with_check", "modulename": "tanjun.components", "qualname": "Component.with_check", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "check"], "funcdef": "def"}, "tanjun.components.Component.add_client_callback": {"fullname": "tanjun.components.Component.add_client_callback", "modulename": "tanjun.components", "qualname": "Component.add_client_callback", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "event_name", "callback"], "funcdef": "def"}, "tanjun.components.Component.get_client_callbacks": {"fullname": "tanjun.components.Component.get_client_callbacks", "modulename": "tanjun.components", "qualname": "Component.get_client_callbacks", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "event_name"], "funcdef": "def"}, "tanjun.components.Component.remove_client_callback": {"fullname": "tanjun.components.Component.remove_client_callback", "modulename": "tanjun.components", "qualname": "Component.remove_client_callback", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "event_name", "callback"], "funcdef": "def"}, "tanjun.components.Component.with_client_callback": {"fullname": "tanjun.components.Component.with_client_callback", "modulename": "tanjun.components", "qualname": "Component.with_client_callback", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "event_name"], "funcdef": "def"}, "tanjun.components.Component.add_command": {"fullname": "tanjun.components.Component.add_command", "modulename": "tanjun.components", "qualname": "Component.add_command", "type": "function", "doc": "<p>Add a command to this component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (tanjun.abc.ExecutableCommand[typing.Any]):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The current component to allow for chaining.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.components.Component.remove_command": {"fullname": "tanjun.components.Component.remove_command", "modulename": "tanjun.components", "qualname": "Component.remove_command", "type": "function", "doc": "<p>Remove a command from this component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (tanjun.abc.ExecutableCommand[typing.Any]):\nThe command to remove.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This component to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.components.Component.with_command": {"fullname": "tanjun.components.Component.with_command", "modulename": "tanjun.components", "qualname": "Component.with_command", "type": "function", "doc": "<p>Add a command to this component through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>This may be used inconjunction with <code>tanjun.as_slash_command</code>\nand <code>tanjun.as_message_command</code>.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@component</span><span class=\"o\">.</span><span class=\"n\">with_command</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">with_slash_str_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;option_name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;option description&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command_name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;command description&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">slash_command</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Hi </span><span class=\"si\">{</span><span class=\"n\">arg</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@component</span><span class=\"o\">.</span><span class=\"n\">with_command</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">with_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;argument_name&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_message_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command_name&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">message_command</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Hi </span><span class=\"si\">{</span><span class=\"n\">arg</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command CommandT</strong>: The command to add to this component.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>copy</strong> (bool):\nWhether to copy the command before adding it to this component.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CommandT</strong>: The added command.</li>\n</ul>\n", "parameters": ["self", "command", "copy"], "funcdef": "def"}, "tanjun.components.Component.add_slash_command": {"fullname": "tanjun.components.Component.add_slash_command", "modulename": "tanjun.components", "qualname": "Component.add_slash_command", "type": "function", "doc": "<p>Add a slash command to this component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (BaseSlashCommand):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.components.Component.remove_slash_command": {"fullname": "tanjun.components.Component.remove_slash_command", "modulename": "tanjun.components", "qualname": "Component.remove_slash_command", "type": "function", "doc": "<p>Remove a slash command from this component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (BaseSlashCommand):\nThe command to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the provided command isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.components.Component.with_slash_command": {"fullname": "tanjun.components.Component.with_slash_command", "modulename": "tanjun.components", "qualname": "Component.with_slash_command", "type": "function", "doc": "<p>Add a slash command to this component through a decorator call.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (BaseSlashCommandT):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>copy</strong> (bool):\nWhether to copy the command before adding it.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>BaseSlashCommandT</strong>: The added command.</li>\n</ul>\n", "parameters": ["self", "command", "copy"], "funcdef": "def"}, "tanjun.components.Component.add_message_command": {"fullname": "tanjun.components.Component.add_message_command", "modulename": "tanjun.components", "qualname": "Component.add_message_command", "type": "function", "doc": "<p>Add a message command to the component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (tanjun.abc.MessageCommand):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component to allow method chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If one of the command's name is already registered in a strict\ncomponent.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.components.Component.remove_message_command": {"fullname": "tanjun.components.Component.remove_message_command", "modulename": "tanjun.components", "qualname": "Component.remove_message_command", "type": "function", "doc": "<p>Remove a message command from this component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (MessageCommand[typing.Any]):\nThe command to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the provided command isn't found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.components.Component.with_message_command": {"fullname": "tanjun.components.Component.with_message_command", "modulename": "tanjun.components", "qualname": "Component.with_message_command", "type": "function", "doc": "<p>Add a message command to this component through a decorator call.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (MessageCommandT):\nThe command to add.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>copy</strong> (bool):\nWhether to copy the command before adding it.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>MessageCommandT</strong>: The added command.</li>\n</ul>\n", "parameters": ["self", "command", "copy"], "funcdef": "def"}, "tanjun.components.Component.add_listener": {"fullname": "tanjun.components.Component.add_listener", "modulename": "tanjun.components", "qualname": "Component.add_listener", "type": "function", "doc": "<p>Add a listener to this component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event</strong> (type[hikari.Event]):\nThe event to listen for.</li>\n<li><strong>listener</strong> (ListenerCallbackSig):\nThe listener to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "event", "listener"], "funcdef": "def"}, "tanjun.components.Component.remove_listener": {"fullname": "tanjun.components.Component.remove_listener", "modulename": "tanjun.components", "qualname": "Component.remove_listener", "type": "function", "doc": "<p>Remove a listener from this component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event</strong> (type[hikari.Event]):\nThe event to listen for.</li>\n<li><strong>listener</strong> (ListenerCallbackSig):\nThe listener to remove.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the listener is not registered for the provided event.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "event", "listener"], "funcdef": "def"}, "tanjun.components.Component.with_listener": {"fullname": "tanjun.components.Component.with_listener", "modulename": "tanjun.components", "qualname": "Component.with_listener", "type": "function", "doc": "<p>Add a listener to this component through a decorator call.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event_type</strong> (type[hikari.Event]):\nThe event to listen for.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[ListenerCallbackSigT], ListenerCallbackSigT]</strong>: Decorator callback which takes listener to add.</li>\n</ul>\n", "parameters": ["self", "event_type"], "funcdef": "def"}, "tanjun.components.Component.add_on_close": {"fullname": "tanjun.components.Component.add_on_close", "modulename": "tanjun.components", "qualname": "Component.add_on_close", "type": "function", "doc": "<p>Add a close callback to this component.</p>\n\n<p><em>Note:</em>\nUnlike the closing and closed client callbacks, this is only\ncalled for the current component's lifetime and is guaranteed to be\ncalled regardless of when the component was added to a client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (OnCallbackSig):\nThe close callback to add to this component.</p>\n\n<p>This should take no positional arguments, return <code>None</code> and may\ntake use injected dependencies.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component object to enable call chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.components.Component.with_on_close": {"fullname": "tanjun.components.Component.with_on_close", "modulename": "tanjun.components", "qualname": "Component.with_on_close", "type": "function", "doc": "<p>Add a close callback to this component through a decorator call.</p>\n\n<p><em>Note:</em>\nUnlike the closing and closed client callbacks, this is only\ncalled for the current component's lifetime and is guaranteed to be\ncalled regardless of when the component was added to a client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (OnCallbackSig):\nThe close callback to add to this component.</p>\n\n<p>This should take no positional arguments, return <code>None</code> and may\ntake use injected dependencies.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>OnCallbackSig</strong>: The added close callback.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.components.Component.add_on_open": {"fullname": "tanjun.components.Component.add_on_open", "modulename": "tanjun.components", "qualname": "Component.add_on_open", "type": "function", "doc": "<p>Add a open callback to this component.</p>\n\n<p><em>Note:</em>\nUnlike the starting and started client callbacks, this is only\ncalled for the current component's lifetime and is guaranteed to be\ncalled regardless of when the component was added to a client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (OnCallbackSig):\nThe open callback to add to this component.</p>\n\n<p>This should take no positional arguments, return <code>None</code> and may\ntake use injected dependencies.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component object to enable call chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.components.Component.with_on_open": {"fullname": "tanjun.components.Component.with_on_open", "modulename": "tanjun.components", "qualname": "Component.with_on_open", "type": "function", "doc": "<p>Add a open callback to this component through a decorator call.</p>\n\n<p><em>Note:</em>\nUnlike the starting and started client callbacks, this is only\ncalled for the current component's lifetime and is guaranteed to be\ncalled regardless of when the component was added to a client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (OnCallbackSig):\nThe open callback to add to this component.</p>\n\n<p>This should take no positional arguments, return <code>None</code> and may\ntake use injected dependencies.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>OnCallbackSig</strong>: The added open callback.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.components.Component.bind_client": {"fullname": "tanjun.components.Component.bind_client", "modulename": "tanjun.components", "qualname": "Component.bind_client", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.components.Component.unbind_client": {"fullname": "tanjun.components.Component.unbind_client", "modulename": "tanjun.components", "qualname": "Component.unbind_client", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.components.Component.check_message_name": {"fullname": "tanjun.components.Component.check_message_name", "modulename": "tanjun.components", "qualname": "Component.check_message_name", "type": "function", "doc": "<p>Check whether a name matches any of this component's registered message commands.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>This only checks for name matches against the top level command and\nwill not account for sub-commands.</li>\n<li>Dependent on implementation detail this may partial check name against\ncommand names using name.startswith(command_name), hence why it\nalso returns the name a command was matched by.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name to check for command matches.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[tuple[str, MessageCommand[typing.Any]]]</strong>: Iterator of tuples of command name matches to the relevant message\ncommand objects.</li>\n</ul>\n", "parameters": ["self", "content"], "funcdef": "def"}, "tanjun.components.Component.check_slash_name": {"fullname": "tanjun.components.Component.check_slash_name", "modulename": "tanjun.components", "qualname": "Component.check_slash_name", "type": "function", "doc": "<p>Check whether a name matches any of this component's registered slash commands.</p>\n\n<p><em>Note:</em>\nThis won't check for sub-commands and will expect <code>name</code> to simply be\nthe top level command name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name to check for command matches.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[BaseSlashCommand]</strong>: An iterator of the matching slash commands.</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.components.Component.execute_interaction": {"fullname": "tanjun.components.Component.execute_interaction", "modulename": "tanjun.components", "qualname": "Component.execute_interaction", "type": "function", "doc": "<p>Execute a slash context.</p>\n\n<p><em>Note:</em>\nUnlike <code>Component.execute_message</code>, this shouldn't be expected to\nraise <code>tanjun.errors.HaltExecution</code> nor <code>tanjun.errors.CommandError</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ctx</strong> (SlashContext):\nThe context to execute.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>hooks</strong> (typing.Optional[collections.abc.MutableSet[SlashHooks]] = None):\nSet of hooks to include in this command execution.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[collections.abc.Awaitable[None]]</strong>: Awaitable used to wait for the command execution to finish.</li>\n</ul>\n\n<p>This may be awaited or left to run as a background task.</p>\n\n<p>If this is <code>None</code> then the client should carry on its search for a\ncomponent with a matching command.</p>\n", "parameters": ["self", "ctx", "hooks"], "funcdef": "def"}, "tanjun.components.Component.execute_message": {"fullname": "tanjun.components.Component.execute_message", "modulename": "tanjun.components", "qualname": "Component.execute_message", "type": "function", "doc": "<p>Execute a message context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ctx</strong> (MessageContext):\nThe context to execute.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>hooks</strong> (typing.Optional[collections.abc.MutableSet[MessageHooks]] = None):\nSet of hooks to include in this command execution.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bool</strong>: Whether a message command was executed in this component with the\nprovided context.</li>\n</ul>\n\n<p>If <code>False</code> then the client should carry on its search for a\ncomponent with a matching command.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>tanjun.errors.CommandError</strong>: To end the command's execution with an error response message.</li>\n<li><strong>tanjun.errors.HaltExecution</strong>: To indicate that the client should stop searching for commands to\nexecute with the current context.</li>\n</ul>\n", "parameters": ["self", "ctx", "hooks"], "funcdef": "async def"}, "tanjun.components.Component.add_schedule": {"fullname": "tanjun.components.Component.add_schedule", "modulename": "tanjun.components", "qualname": "Component.add_schedule", "type": "function", "doc": "<p>Add a schedule to the component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>schedule</strong> (tanjun.schedules.AbstractSchedule):\nThe schedule to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component itself for chaining.</li>\n</ul>\n", "parameters": ["self", "schedule"], "funcdef": "def"}, "tanjun.components.Component.remove_schedule": {"fullname": "tanjun.components.Component.remove_schedule", "modulename": "tanjun.components", "qualname": "Component.remove_schedule", "type": "function", "doc": "<p>Remove a schedule from the component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>schedule</strong> (tanjun.schedules.AbstractSchedule):\nThe schedule to remove</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The component itself for chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the schedule isn't registered.</li>\n</ul>\n", "parameters": ["self", "schedule"], "funcdef": "def"}, "tanjun.components.Component.with_schedule": {"fullname": "tanjun.components.Component.with_schedule", "modulename": "tanjun.components", "qualname": "Component.with_schedule", "type": "function", "doc": "<p>Add a schedule to the component through a decorator call.</p>\n\n<h6 id=\"example\">Example</h6>\n\n<p>This may be used in conjunction with <code>tanjun.as_interval</code>.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@component</span><span class=\"o\">.</span><span class=\"n\">with_schedule</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_interval</span><span class=\"p\">(</span><span class=\"mi\">60</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">my_schedule</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;I&#39;m running every minute!&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>schedule</strong> (schedules.AbstractSchedule):\nThe schedule to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>schedules.AbstractSchedule</strong>: The added schedule.</li>\n</ul>\n", "parameters": ["self", "schedule"], "funcdef": "def"}, "tanjun.components.Component.close": {"fullname": "tanjun.components.Component.close", "modulename": "tanjun.components", "qualname": "Component.close", "type": "function", "doc": "<p>Close the component.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the component isn't running.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.components.Component.open": {"fullname": "tanjun.components.Component.open", "modulename": "tanjun.components", "qualname": "Component.open", "type": "function", "doc": "<p>Start the component.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the component is already open.\nIf the component isn't bound to a client.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.components.Component.make_loader": {"fullname": "tanjun.components.Component.make_loader", "modulename": "tanjun.components", "qualname": "Component.make_loader", "type": "function", "doc": "<p>Make a loader/unloader for this component.</p>\n\n<p>This enables loading, unloading and reloading of this component into a\nclient by targeting the module using <code>tanjun.Client.load_modules</code>,\n<code>tanjun.Client.unload_modules</code> and <code>tanjun.Client.reload_modules</code>.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>copy</strong> (bool):\nWhether to copy the component before loading it into a client.</p>\n\n<p>Defaults to <code>True</code>.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tanjun.abc.ClientLoader</strong>: The loader for this component.</li>\n</ul>\n", "parameters": ["self", "copy"], "funcdef": "def"}, "tanjun.components.AbstractComponentLoader": {"fullname": "tanjun.components.AbstractComponentLoader", "modulename": "tanjun.components", "qualname": "AbstractComponentLoader", "type": "class", "doc": "<p>Abstract interface used for loading utility into a standard <code>Component</code>.</p>\n"}, "tanjun.components.AbstractComponentLoader.load_into_component": {"fullname": "tanjun.components.AbstractComponentLoader.load_into_component", "modulename": "tanjun.components", "qualname": "AbstractComponentLoader.load_into_component", "type": "function", "doc": "<p>Load the object into the component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>component</strong> (tanjun.abc.Component):\nThe component this object should be loaded into.</li>\n</ul>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.components.OnCallbackSig": {"fullname": "tanjun.components.OnCallbackSig", "modulename": "tanjun.components", "qualname": "OnCallbackSig", "type": "class", "doc": "<p>Type hint of a on_open or on_close component callback.</p>\n\n<p>These support dependency injection, should expect no positional arguments and\nshould return <code>None</code>.</p>\n"}, "tanjun.components.OnCallbackSigT": {"fullname": "tanjun.components.OnCallbackSigT", "modulename": "tanjun.components", "qualname": "OnCallbackSigT", "type": "variable", "doc": "<p>Generic version of <code>OnCallbackSig</code>.</p>\n"}, "tanjun.components.WithCommandReturnSig": {"fullname": "tanjun.components.WithCommandReturnSig", "modulename": "tanjun.components", "qualname": "WithCommandReturnSig", "type": "variable", "doc": "<p></p>\n"}, "tanjun.context": {"fullname": "tanjun.context", "modulename": "tanjun.context", "qualname": "", "type": "module", "doc": "<p>Standard command execution context implementations.</p>\n"}, "tanjun.context.MessageContext": {"fullname": "tanjun.context.MessageContext", "modulename": "tanjun.context", "qualname": "MessageContext", "type": "class", "doc": "<p>Standard implementation of a command context as used within Tanjun.</p>\n"}, "tanjun.context.MessageContext.__init__": {"fullname": "tanjun.context.MessageContext.__init__", "modulename": "tanjun.context", "qualname": "MessageContext.__init__", "type": "function", "doc": "<p>Initialise a basic injection context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>client</strong> (InjectorClient):\nThe injection client this context is bound to.</li>\n</ul>\n", "parameters": ["self", "client", "injection_client", "content", "message", "command", "component", "triggering_name", "triggering_prefix"], "funcdef": "def"}, "tanjun.context.MessageContext.author": {"fullname": "tanjun.context.MessageContext.author", "modulename": "tanjun.context", "qualname": "MessageContext.author", "type": "variable", "doc": "<p>Object of the user who triggered this command.</p>\n"}, "tanjun.context.MessageContext.channel_id": {"fullname": "tanjun.context.MessageContext.channel_id", "modulename": "tanjun.context", "qualname": "MessageContext.channel_id", "type": "variable", "doc": "<p>ID of the channel this command was triggered in.</p>\n"}, "tanjun.context.MessageContext.command": {"fullname": "tanjun.context.MessageContext.command", "modulename": "tanjun.context", "qualname": "MessageContext.command", "type": "variable", "doc": "<p>Object of the command this context is bound to.</p>\n\n<p><em>Note:</em>\nThis will only be <code>None</code> before this has been bound to a\nspecific command but never during command execution.</p>\n"}, "tanjun.context.MessageContext.content": {"fullname": "tanjun.context.MessageContext.content", "modulename": "tanjun.context", "qualname": "MessageContext.content", "type": "variable", "doc": "<p>Content of the context's message minus the triggering name and prefix.</p>\n"}, "tanjun.context.MessageContext.created_at": {"fullname": "tanjun.context.MessageContext.created_at", "modulename": "tanjun.context", "qualname": "MessageContext.created_at", "type": "variable", "doc": "<p>When this context was created.</p>\n\n<p><em>Note:</em>\nThis will either refer to a message or integration's creation date.</p>\n"}, "tanjun.context.MessageContext.guild_id": {"fullname": "tanjun.context.MessageContext.guild_id", "modulename": "tanjun.context", "qualname": "MessageContext.guild_id", "type": "variable", "doc": "<p>ID of the guild this command was executed in.</p>\n\n<p>Will be <code>None</code> for all DM command executions.</p>\n"}, "tanjun.context.MessageContext.has_responded": {"fullname": "tanjun.context.MessageContext.has_responded", "modulename": "tanjun.context", "qualname": "MessageContext.has_responded", "type": "variable", "doc": "<p>Whether an initial response has been made for this context.</p>\n"}, "tanjun.context.MessageContext.is_human": {"fullname": "tanjun.context.MessageContext.is_human", "modulename": "tanjun.context", "qualname": "MessageContext.is_human", "type": "variable", "doc": "<p>Whether this command execution was triggered by a human.</p>\n\n<p>Will be <code>False</code> for bot and webhook triggered commands.</p>\n"}, "tanjun.context.MessageContext.member": {"fullname": "tanjun.context.MessageContext.member", "modulename": "tanjun.context", "qualname": "MessageContext.member", "type": "variable", "doc": "<p>Guild member object of this command's author.</p>\n\n<p>Will be <code>None</code> for DM command executions.</p>\n"}, "tanjun.context.MessageContext.message": {"fullname": "tanjun.context.MessageContext.message", "modulename": "tanjun.context", "qualname": "MessageContext.message", "type": "variable", "doc": "<p>Message that triggered the context.</p>\n"}, "tanjun.context.MessageContext.triggering_name": {"fullname": "tanjun.context.MessageContext.triggering_name", "modulename": "tanjun.context", "qualname": "MessageContext.triggering_name", "type": "variable", "doc": "<p>Command name this execution was triggered with.</p>\n"}, "tanjun.context.MessageContext.triggering_prefix": {"fullname": "tanjun.context.MessageContext.triggering_prefix", "modulename": "tanjun.context", "qualname": "MessageContext.triggering_prefix", "type": "variable", "doc": "<p>Prefix that triggered the context.</p>\n"}, "tanjun.context.MessageContext.shard": {"fullname": "tanjun.context.MessageContext.shard", "modulename": "tanjun.context", "qualname": "MessageContext.shard", "type": "variable", "doc": "<p>Shard that triggered the context.</p>\n\n<p><em>Note:</em>\nThis will be <code>None</code> if <code>ctx.shards</code> is also <code>None</code>.</p>\n"}, "tanjun.context.MessageContext.set_command": {"fullname": "tanjun.context.MessageContext.set_command", "modulename": "tanjun.context", "qualname": "MessageContext.set_command", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.context.MessageContext.set_content": {"fullname": "tanjun.context.MessageContext.set_content", "modulename": "tanjun.context", "qualname": "MessageContext.set_content", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "content"], "funcdef": "def"}, "tanjun.context.MessageContext.set_triggering_name": {"fullname": "tanjun.context.MessageContext.set_triggering_name", "modulename": "tanjun.context", "qualname": "MessageContext.set_triggering_name", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "name"], "funcdef": "def"}, "tanjun.context.MessageContext.set_triggering_prefix": {"fullname": "tanjun.context.MessageContext.set_triggering_prefix", "modulename": "tanjun.context", "qualname": "MessageContext.set_triggering_prefix", "type": "function", "doc": "<p>Set the triggering prefix for this context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>triggering_prefix</strong> (str):\nThe triggering prefix to set.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This context to allow for chaining.</li>\n</ul>\n", "parameters": ["self", "triggering_prefix"], "funcdef": "def"}, "tanjun.context.MessageContext.delete_initial_response": {"fullname": "tanjun.context.MessageContext.delete_initial_response", "modulename": "tanjun.context", "qualname": "MessageContext.delete_initial_response", "type": "function", "doc": "<p>Delete the initial response after invoking this context.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>LookupError, hikari.NotFoundError</strong>: The last context has no initial response.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.context.MessageContext.delete_last_response": {"fullname": "tanjun.context.MessageContext.delete_last_response", "modulename": "tanjun.context", "qualname": "MessageContext.delete_last_response", "type": "function", "doc": "<p>Delete the last response after invoking this context.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>LookupError, hikari.NotFoundError</strong>: The last context has no responses.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.context.MessageContext.edit_initial_response": {"fullname": "tanjun.context.MessageContext.edit_initial_response", "modulename": "tanjun.context", "qualname": "MessageContext.edit_initial_response", "type": "function", "doc": "<p>Edit the initial response for this context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>content</strong> (hikari.UndefinedOr[typing.Any]):\nThe content to edit the initial response with.</p>\n\n<p>If provided, the message contents. If\n<code>hikari.UNDEFINED</code>, then nothing will be sent\nin the content. Any other value here will be cast to a\n<code>str</code>.</p>\n\n<p>If this is a <code>hikari.Embed</code> and no <code>embed</code> nor <code>embeds</code> kwarg\nis provided, then this will instead update the embed. This allows\nfor simpler syntax when sending an embed alone.</p>\n\n<p>Likewise, if this is a <code>hikari.Resource</code>, then the\ncontent is instead treated as an attachment if no <code>attachment</code> and\nno <code>attachments</code> kwargs are provided.</p></li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>delete_after</strong> (typing.Union[datetime.timedelta, float, int, None]):\nIf provided, the seconds after which the response message should be deleted.</p>\n\n<p><em>Note:</em>\nSlash command responses can only be deleted within 14 minutes of the\ncommand being received.</p>\n\n<p><em>Note:</em>\nSince (as of writing) ephemeral responses cannot be deleted by the bot,\nthis is ignored for ephemeral slash command responses.</p></li>\n<li><strong>attachment</strong> (hikari.UndefinedOr[hikari.Resourceish]):\nA singular attachment to edit the initial response with.</li>\n<li><strong>attachments</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Resourceish]]):\nA sequence of attachments to edit the initial response with.</li>\n<li><strong>component</strong> (hikari.UndefinedNoneOr[hikari.api.ComponentBuilder]):\nIf provided, builder object of the component to set for this message.\nThis component will replace any previously set components and passing\n<code>None</code> will remove all components.</li>\n<li><strong>components</strong> (hikari.UndefinedNoneOr[collections.abc.Sequence[hikari.api.ComponentBuilder]]):\nIf provided, a sequence of the component builder objects set for\nthis message. These components will replace any previously set\ncomponents and passing <code>None</code> or an empty sequence will\nremove all components.</li>\n<li><strong>embed</strong> (hikari.UndefinedOr[hikari.Embed]):\nAn embed to replace the initial response with.</li>\n<li><strong>embeds</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Embed]]):\nA sequence of embeds to replace the initial response with.</li>\n<li><strong>replace_attachments</strong> (bool):\nWhether to replace the attachments of the response or not. Default to <code>False</code>.</li>\n<li><strong>mentions_everyone</strong> (hikari.UndefinedOr[bool]):\nIf provided, whether the message should parse @everyone/@here\nmentions.</li>\n<li><strong>user_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialUser], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.\nAlternatively this may be a collection of\n<code>hikari.Snowflake</code>, or <code>hikari.PartialUser</code>\nderivatives to enforce mentioning specific users.</li>\n<li><strong>role_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialRole], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.\nAlternatively this may be a collection of\n<code>hikari.Snowflake</code>, or\n<code>hikari.PartialRole</code> derivatives to enforce mentioning\nspecific roles.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>Attachments can be passed as many different things, to aid in\nconvenience.</p>\n\n<ul>\n<li>If a <code>pathlib.PurePath</code> or <code>str</code> to a valid URL, the\nresource at the given URL will be streamed to Discord when\nsending the message. Subclasses of\n<code>hikari.WebResource</code> such as\n<code>hikari.URL</code>,\n<code>hikari.Attachment</code>,\n<code>hikari.Emoji</code>,\n<code>EmbedResource</code>, etc will also be uploaded this way.\nThis will use bit-inception, so only a small percentage of the\nresource will remain in memory at any one time, thus aiding in\nscalability.</li>\n<li>If a <code>hikari.Bytes</code> is passed, or a <code>str</code>\nthat contains a valid data URI is passed, then this is uploaded\nwith a randomized file name if not provided.</li>\n<li>If a <code>hikari.File</code>, <code>pathlib.PurePath</code> or\n<code>str</code> that is an absolute or relative path to a file\non your file system is passed, then this resource is uploaded\nas an attachment using non-blocking code internally and streamed\nusing bit-inception where possible. This depends on the\ntype of <code>concurrent.futures.Executor</code> that is being used for\nthe application (default is a thread pool which supports this\nbehaviour).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Message</strong>: The message that has been edited.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If more than 100 unique objects/entities are passed for\n<code>role_mentions</code> or <code>user_mentions</code>.\nIf <code>delete_after</code> would be more than 14 minutes after the slash\ncommand was called.</li>\n<li><strong>TypeError</strong>: If both <code>attachment</code> and <code>attachments</code> are specified.</li>\n<li><strong>hikari.BadRequestError</strong>: This may be raised in several discrete situations, such as messages\nbeing empty with no attachments or embeds; messages with more than\n2000 characters in them, embeds that exceed one of the many embed\nlimits; too many attachments; attachments that are too large;\ninvalid image URLs in embeds; too many components.</li>\n<li><strong>hikari.UnauthorizedError</strong>: If you are unauthorized to make the request (invalid/missing token).</li>\n<li><strong>hikari.ForbiddenError</strong>: If you are missing the <code>SEND_MESSAGES</code> in the channel or the\nperson you are trying to message has the DM's disabled.</li>\n<li><strong>hikari.NotFoundError</strong>: If the channel is not found.</li>\n<li><strong>hikari.RateLimitTooLongError</strong>: Raised in the event that a rate limit occurs that is\nlonger than <code>max_rate_limit</code> when making a request.</li>\n<li><strong>hikari.RateLimitedError</strong>: Usually, Hikari will handle and retry on hitting\nrate-limits automatically. This includes most bucket-specific\nrate-limits and global rate-limits. In some rare edge cases,\nhowever, Discord implements other undocumented rules for\nrate-limiting, such as limits per attribute. These cannot be\ndetected or handled normally by Hikari due to their undocumented\nnature, and will trigger this exception if they occur.</li>\n<li><strong>hikari.InternalServerError</strong>: If an internal error occurs on Discord while handling the request.</li>\n</ul>\n", "parameters": ["self", "content", "delete_after", "attachment", "attachments", "component", "components", "embed", "embeds", "replace_attachments", "mentions_everyone", "user_mentions", "role_mentions"], "funcdef": "async def"}, "tanjun.context.MessageContext.edit_last_response": {"fullname": "tanjun.context.MessageContext.edit_last_response", "modulename": "tanjun.context", "qualname": "MessageContext.edit_last_response", "type": "function", "doc": "<p>Edit the last response for this context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>content</strong> (hikari.UndefinedOr[typing.Any]):\nThe content to edit the last response with.</p>\n\n<p>If provided, the message contents. If\n<code>hikari.UNDEFINED</code>, then nothing will be sent\nin the content. Any other value here will be cast to a\n<code>str</code>.</p>\n\n<p>If this is a <code>hikari.Embed</code> and no <code>embed</code> nor <code>embeds</code> kwarg\nis provided, then this will instead update the embed. This allows\nfor simpler syntax when sending an embed alone.</p>\n\n<p>Likewise, if this is a <code>hikari.Resource</code>, then the\ncontent is instead treated as an attachment if no <code>attachment</code> and\nno <code>attachments</code> kwargs are provided.</p></li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>delete_after</strong> (typing.Union[datetime.timedelta, float, int, None]):\nIf provided, the seconds after which the response message should be deleted.</p>\n\n<p><em>Note:</em>\nSlash command responses can only be deleted within 14 minutes of the\ncommand being received.</p>\n\n<p><em>Note:</em>\nSince (as of writing) ephemeral responses cannot be deleted by the bot,\nthis is ignored for ephemeral slash command responses.</p></li>\n<li><strong>attachment</strong> (hikari.UndefinedOr[hikari.Resourceish]):\nA singular attachment to edit the last response with.</li>\n<li><strong>attachments</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Resourceish]]):\nA sequence of attachments to edit the last response with.</li>\n<li><strong>component</strong> (hikari.UndefinedNoneOr[hikari.api.ComponentBuilder]):\nIf provided, builder object of the component to set for this message.\nThis component will replace any previously set components and passing\n<code>None</code> will remove all components.</li>\n<li><strong>components</strong> (hikari.UndefinedNoneOr[collections.abc.Sequence[hikari.api.ComponentBuilder]]):\nIf provided, a sequence of the component builder objects set for\nthis message. These components will replace any previously set\ncomponents and passing <code>None</code> or an empty sequence will\nremove all components.</li>\n<li><strong>embed</strong> (hikari.UndefinedOr[hikari.Embed]):\nAn embed to replace the last response with.</li>\n<li><strong>embeds</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Embed]]):\nA sequence of embeds to replace the last response with.</li>\n<li><strong>replace_attachments</strong> (bool):\nWhether to replace the attachments of the response or not. Default to <code>False</code>.</li>\n<li><strong>mentions_everyone</strong> (hikari.UndefinedOr[bool]):\nIf provided, whether the message should parse @everyone/@here\nmentions.</li>\n<li><p><strong>user_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialUser], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.</p>\n\n<p>Alternatively this may be a collection of\n<code>hikari.Snowflake</code>, or <code>hikari.PartialUser</code>\nderivatives to enforce mentioning specific users.</p></li>\n<li><p><strong>role_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialRole], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.</p>\n\n<p>Alternatively this may be a collection of\n<code>hikari.Snowflake</code>, or\n<code>hikari.PartialRole</code> derivatives to enforce mentioning\nspecific roles.</p></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>Attachments can be passed as many different things, to aid in\nconvenience.</p>\n\n<ul>\n<li>If a <code>pathlib.PurePath</code> or <code>str</code> to a valid URL, the\nresource at the given URL will be streamed to Discord when\nsending the message. Subclasses of\n<code>hikari.WebResource</code> such as\n<code>hikari.URL</code>,\n<code>hikari.Attachment</code>,\n<code>hikari.Emoji</code>,\n<code>EmbedResource</code>, etc will also be uploaded this way.\nThis will use bit-inception, so only a small percentage of the\nresource will remain in memory at any one time, thus aiding in\nscalability.</li>\n<li>If a <code>hikari.Bytes</code> is passed, or a <code>str</code>\nthat contains a valid data URI is passed, then this is uploaded\nwith a randomized file name if not provided.</li>\n<li>If a <code>hikari.File</code>, <code>pathlib.PurePath</code> or\n<code>str</code> that is an absolute or relative path to a file\non your file system is passed, then this resource is uploaded\nas an attachment using non-blocking code internally and streamed\nusing bit-inception where possible. This depends on the\ntype of <code>concurrent.futures.Executor</code> that is being used for\nthe application (default is a thread pool which supports this\nbehaviour).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Message</strong>: The message that has been edited.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If more than 100 unique objects/entities are passed for\n<code>role_mentions</code> or <code>user_mentions</code>.\nIf <code>delete_after</code> would be more than 14 minutes after the slash\ncommand was called.</li>\n<li><strong>TypeError</strong>: If both <code>attachment</code> and <code>attachments</code> are specified.</li>\n<li><strong>hikari.BadRequestError</strong>: This may be raised in several discrete situations, such as messages\nbeing empty with no attachments or embeds; messages with more than\n2000 characters in them, embeds that exceed one of the many embed\nlimits; too many attachments; attachments that are too large;\ninvalid image URLs in embeds; too many components.</li>\n<li><strong>hikari.UnauthorizedError</strong>: If you are unauthorized to make the request (invalid/missing token).</li>\n<li><strong>hikari.ForbiddenError</strong>: If you are missing the <code>SEND_MESSAGES</code> in the channel or the\nperson you are trying to message has the DM's disabled.</li>\n<li><strong>hikari.NotFoundError</strong>: If the channel is not found.</li>\n<li><strong>hikari.RateLimitTooLongError</strong>: Raised in the event that a rate limit occurs that is\nlonger than <code>max_rate_limit</code> when making a request.</li>\n<li><strong>hikari.RateLimitedError</strong>: Usually, Hikari will handle and retry on hitting\nrate-limits automatically. This includes most bucket-specific\nrate-limits and global rate-limits. In some rare edge cases,\nhowever, Discord implements other undocumented rules for\nrate-limiting, such as limits per attribute. These cannot be\ndetected or handled normally by Hikari due to their undocumented\nnature, and will trigger this exception if they occur.</li>\n<li><strong>hikari.InternalServerError</strong>: If an internal error occurs on Discord while handling the request.</li>\n</ul>\n", "parameters": ["self", "content", "delete_after", "attachment", "attachments", "component", "components", "embed", "embeds", "replace_attachments", "mentions_everyone", "user_mentions", "role_mentions"], "funcdef": "async def"}, "tanjun.context.MessageContext.fetch_initial_response": {"fullname": "tanjun.context.MessageContext.fetch_initial_response", "modulename": "tanjun.context", "qualname": "MessageContext.fetch_initial_response", "type": "function", "doc": "<p>Fetch the initial response for this context.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>LookupError, hikari.NotFoundError</strong>: The response was not found.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.context.MessageContext.fetch_last_response": {"fullname": "tanjun.context.MessageContext.fetch_last_response", "modulename": "tanjun.context", "qualname": "MessageContext.fetch_last_response", "type": "function", "doc": "<p>Fetch the last response for this context.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>LookupError, hikari.NotFoundError</strong>: The response was not found.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.context.MessageContext.respond": {"fullname": "tanjun.context.MessageContext.respond", "modulename": "tanjun.context", "qualname": "MessageContext.respond", "type": "function", "doc": "<p>Respond to this context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>content</strong> (hikari.UndefinedOr[typing.Any]):\nThe content to respond with.</p>\n\n<p>If provided, the message contents. If\n<code>hikari.UNDEFINED</code>, then nothing will be sent\nin the content. Any other value here will be cast to a\n<code>str</code>.</p>\n\n<p>If this is a <code>hikari.Embed</code> and no <code>embed</code> nor <code>embeds</code> kwarg\nis provided, then this will instead update the embed. This allows\nfor simpler syntax when sending an embed alone.</p>\n\n<p>Likewise, if this is a <code>hikari.Resource</code>, then the\ncontent is instead treated as an attachment if no <code>attachment</code> and\nno <code>attachments</code> kwargs are provided.</p></li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>ensure_result</strong> (bool):\nEnsure that this call will always return a message object.</p>\n\n<p>If <code>True</code> then this will always return <code>hikari.Message</code>, otherwise\nthis will return <code>Optional[hikari.Message]</code>.</p>\n\n<p>It's worth noting that, under certain scenarios within the slash\ncommand flow, this may lead to an extre request being made.</p></li>\n<li><p><strong>delete_after</strong> (typing.Union[datetime.timedelta, float, int, None]):\nIf provided, the seconds after which the response message should be deleted.</p>\n\n<p><em>Note:</em>\nSlash command responses can only be deleted within 14 minutes of the\ncommand being received.</p>\n\n<p><em>Note:</em>\nSince (as of writing) ephemeral responses cannot be deleted by the bot,\nthis is ignored for ephemeral slash command responses.</p></li>\n<li><strong>component</strong> (hikari.UndefinedOr[hikari.api.ComponentBuilder]):\nIf provided, builder object of the component to include in this response.</li>\n<li><strong>components</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.api.ComponentBuilder]]):\nIf provided, a sequence of the component builder objects to include\nin this response.</li>\n<li><strong>embed</strong> (hikari.UndefinedOr[hikari.Embed]):\nAn embed to respond with.</li>\n<li><strong>embeds</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Embed]]):\nA sequence of embeds to respond with.</li>\n<li><strong>mentions_everyone</strong> (hikari.UndefinedOr[bool]):\nIf provided, whether the message should parse @everyone/@here\nmentions.</li>\n<li><p><strong>user_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialUser], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.</p>\n\n<p>Alternatively this may be a collection of\n<code>hikari.Snowflake</code>, or <code>hikari.PartialUser</code>\nderivatives to enforce mentioning specific users.</p></li>\n<li><p><strong>role_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialRole], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.</p>\n\n<p>Alternatively this may be a collection of\n<code>hikari.Snowflake</code>, or\n<code>hikari.PartialRole</code> derivatives to enforce mentioning\nspecific roles.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[hikari.Message]</strong>: The message that has been created if it was immedieatly available or\n<code>ensure_result</code> was set to <code>True</code>, else <code>None</code>.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If more than 100 unique objects/entities are passed for\n<code>role_mentions</code> or <code>user_mentions</code>.\nIf <code>delete_after</code> would be more than 14 minutes after the slash\ncommand was called.</li>\n<li><strong>TypeError</strong>: If both <code>attachment</code> and <code>attachments</code> are specified.</li>\n<li><strong>hikari.BadRequestError</strong>: This may be raised in several discrete situations, such as messages\nbeing empty with no attachments or embeds; messages with more than\n2000 characters in them, embeds that exceed one of the many embed\nlimits; too many attachments; attachments that are too large;\ninvalid image URLs in embeds; too many components.</li>\n<li><strong>hikari.UnauthorizedError</strong>: If you are unauthorized to make the request (invalid/missing token).</li>\n<li><strong>hikari.ForbiddenError</strong>: If you are missing the <code>SEND_MESSAGES</code> in the channel or the\nperson you are trying to message has the DM's disabled.</li>\n<li><strong>hikari.NotFoundError</strong>: If the channel is not found.</li>\n<li><strong>hikari.RateLimitTooLongError</strong>: Raised in the event that a rate limit occurs that is\nlonger than <code>max_rate_limit</code> when making a request.</li>\n<li><strong>hikari.RateLimitedError</strong>: Usually, Hikari will handle and retry on hitting\nrate-limits automatically. This includes most bucket-specific\nrate-limits and global rate-limits. In some rare edge cases,\nhowever, Discord implements other undocumented rules for\nrate-limiting, such as limits per attribute. These cannot be\ndetected or handled normally by Hikari due to their undocumented\nnature, and will trigger this exception if they occur.</li>\n<li><strong>hikari.InternalServerError</strong>: If an internal error occurs on Discord while handling the request.</li>\n</ul>\n", "parameters": ["self", "content", "ensure_result", "delete_after", "attachment", "attachments", "component", "components", "embed", "embeds", "tts", "nonce", "reply", "mentions_everyone", "mentions_reply", "user_mentions", "role_mentions"], "funcdef": "async def"}, "tanjun.context.ResponseTypeT": {"fullname": "tanjun.context.ResponseTypeT", "modulename": "tanjun.context", "qualname": "ResponseTypeT", "type": "variable", "doc": "<p>Union of the response types which are valid for application command interactions.</p>\n"}, "tanjun.context.SlashContext": {"fullname": "tanjun.context.SlashContext", "modulename": "tanjun.context", "qualname": "SlashContext", "type": "class", "doc": "<p>Base class for all standard context implementations.</p>\n"}, "tanjun.context.SlashContext.__init__": {"fullname": "tanjun.context.SlashContext.__init__", "modulename": "tanjun.context", "qualname": "SlashContext.__init__", "type": "function", "doc": "<p>Initialise a basic injection context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>client</strong> (InjectorClient):\nThe injection client this context is bound to.</li>\n</ul>\n", "parameters": ["self", "client", "injection_client", "interaction", "command", "component", "default_to_ephemeral", "on_not_found"], "funcdef": "def"}, "tanjun.context.SlashContext.author": {"fullname": "tanjun.context.SlashContext.author", "modulename": "tanjun.context", "qualname": "SlashContext.author", "type": "variable", "doc": "<p>Object of the user who triggered this command.</p>\n"}, "tanjun.context.SlashContext.channel_id": {"fullname": "tanjun.context.SlashContext.channel_id", "modulename": "tanjun.context", "qualname": "SlashContext.channel_id", "type": "variable", "doc": "<p>ID of the channel this command was triggered in.</p>\n"}, "tanjun.context.SlashContext.client": {"fullname": "tanjun.context.SlashContext.client", "modulename": "tanjun.context", "qualname": "SlashContext.client", "type": "variable", "doc": "<p>Tanjun <code>Client</code> implementation this context was spawned by.</p>\n"}, "tanjun.context.SlashContext.command": {"fullname": "tanjun.context.SlashContext.command", "modulename": "tanjun.context", "qualname": "SlashContext.command", "type": "variable", "doc": "<p>Object of the command this context is bound to.</p>\n\n<p><em>Note:</em>\nThis will only be <code>None</code> before this has been bound to a\nspecific command but never during command execution.</p>\n"}, "tanjun.context.SlashContext.created_at": {"fullname": "tanjun.context.SlashContext.created_at", "modulename": "tanjun.context", "qualname": "SlashContext.created_at", "type": "variable", "doc": "<p>When this context was created.</p>\n\n<p><em>Note:</em>\nThis will either refer to a message or integration's creation date.</p>\n"}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"fullname": "tanjun.context.SlashContext.defaults_to_ephemeral", "modulename": "tanjun.context", "qualname": "SlashContext.defaults_to_ephemeral", "type": "variable", "doc": "<p>Whether the context is marked as defaulting to ephemeral response.</p>\n\n<p>This effects calls to <code>SlashContext.create_followup</code>,\n<code>SlashContext.create_initial_response</code>, <code>SlashContext.defer</code> and\n<code>SlashContext.respond</code> unless the <code>flags</code> field is provided for the\nmethods which support it.</p>\n"}, "tanjun.context.SlashContext.expires_at": {"fullname": "tanjun.context.SlashContext.expires_at", "modulename": "tanjun.context", "qualname": "SlashContext.expires_at", "type": "variable", "doc": "<p>When this application command context expires.</p>\n\n<p>After this time is reached, the message/response methods on this\ncontext will always raise <code>hikari.errors.NotFoundError</code>.</p>\n"}, "tanjun.context.SlashContext.guild_id": {"fullname": "tanjun.context.SlashContext.guild_id", "modulename": "tanjun.context", "qualname": "SlashContext.guild_id", "type": "variable", "doc": "<p>ID of the guild this command was executed in.</p>\n\n<p>Will be <code>None</code> for all DM command executions.</p>\n"}, "tanjun.context.SlashContext.has_been_deferred": {"fullname": "tanjun.context.SlashContext.has_been_deferred", "modulename": "tanjun.context", "qualname": "SlashContext.has_been_deferred", "type": "variable", "doc": "<p>Whether the initial response for this context has been deferred.</p>\n\n<p><em>Warning:</em>\nIf this is <code>True</code> when <code>SlashContext.has_responded</code> is <code>False</code>\nthen <code>SlashContext.edit_initial_response</code> will need to be used\nto create the initial response rather than\n<code>SlashContext.create_initial_response</code>.</p>\n"}, "tanjun.context.SlashContext.has_responded": {"fullname": "tanjun.context.SlashContext.has_responded", "modulename": "tanjun.context", "qualname": "SlashContext.has_responded", "type": "variable", "doc": "<p>Whether an initial response has been made for this context.</p>\n"}, "tanjun.context.SlashContext.is_human": {"fullname": "tanjun.context.SlashContext.is_human", "modulename": "tanjun.context", "qualname": "SlashContext.is_human", "type": "variable", "doc": "<p>Whether this command execution was triggered by a human.</p>\n\n<p>Will be <code>False</code> for bot and webhook triggered commands.</p>\n"}, "tanjun.context.SlashContext.member": {"fullname": "tanjun.context.SlashContext.member", "modulename": "tanjun.context", "qualname": "SlashContext.member", "type": "variable", "doc": "<p>Guild member object of this command's author.</p>\n\n<p>Will be <code>None</code> for DM command executions.</p>\n"}, "tanjun.context.SlashContext.triggering_name": {"fullname": "tanjun.context.SlashContext.triggering_name", "modulename": "tanjun.context", "qualname": "SlashContext.triggering_name", "type": "variable", "doc": "<p>Command name this execution was triggered with.</p>\n"}, "tanjun.context.SlashContext.interaction": {"fullname": "tanjun.context.SlashContext.interaction", "modulename": "tanjun.context", "qualname": "SlashContext.interaction", "type": "variable", "doc": "<p>Interaction this context is for.</p>\n"}, "tanjun.context.SlashContext.options": {"fullname": "tanjun.context.SlashContext.options", "modulename": "tanjun.context", "qualname": "SlashContext.options", "type": "variable", "doc": "<p>Mapping of option names to the values provided for them.</p>\n"}, "tanjun.context.SlashContext.cancel_defer": {"fullname": "tanjun.context.SlashContext.cancel_defer", "modulename": "tanjun.context", "qualname": "SlashContext.cancel_defer", "type": "function", "doc": "<p>Cancel the auto-deferral if its active.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.context.SlashContext.get_response_future": {"fullname": "tanjun.context.SlashContext.get_response_future", "modulename": "tanjun.context", "qualname": "SlashContext.get_response_future", "type": "function", "doc": "<p>Get the future which will be used to set the initial response.</p>\n\n<p><em>Note:</em>\nThis will change the behaviour of this context to match the\nREST server flow.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>asyncio.Future[ResponseTypeT]</strong>: The future which will be used to set the initial response.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.context.SlashContext.mark_not_found": {"fullname": "tanjun.context.SlashContext.mark_not_found", "modulename": "tanjun.context", "qualname": "SlashContext.mark_not_found", "type": "function", "doc": "<p>Mark this context as not found.</p>\n\n<p>Dependent on how the client is configured this may lead to a not found\nresponse message being sent.</p>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.context.SlashContext.start_defer_timer": {"fullname": "tanjun.context.SlashContext.start_defer_timer", "modulename": "tanjun.context", "qualname": "SlashContext.start_defer_timer", "type": "function", "doc": "<p>Start the auto-deferral timer.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>count_down</strong> (typing.Union[int, float]):\nThe number of seconds to wait before automatically deferring the\ninteraction.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This context to allow for chaining.</li>\n</ul>\n", "parameters": ["self", "count_down"], "funcdef": "def"}, "tanjun.context.SlashContext.set_command": {"fullname": "tanjun.context.SlashContext.set_command", "modulename": "tanjun.context", "qualname": "SlashContext.set_command", "type": "function", "doc": "<p>Set the command for this context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (typing.Optional[BaseSlashCommand]):\nThe command this context is for.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.context.SlashContext.set_ephemeral_default": {"fullname": "tanjun.context.SlashContext.set_ephemeral_default", "modulename": "tanjun.context", "qualname": "SlashContext.set_ephemeral_default", "type": "function", "doc": "<p>Set the ephemeral default state for this context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>state</strong> (bool):\nThe new ephemeral default state.</p>\n\n<p>If this is <code>True</code> then all calls to the response creating methods\non this context will default to being ephemeral.</p></li>\n</ul>\n", "parameters": ["self", "state"], "funcdef": "def"}, "tanjun.context.SlashContext.defer": {"fullname": "tanjun.context.SlashContext.defer", "modulename": "tanjun.context", "qualname": "SlashContext.defer", "type": "function", "doc": "<p>Defer the initial response for this context.</p>\n\n<p><em>Note:</em>\nThe ephemeral state of the first response is decided by whether the\ndeferral is ephemeral.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>flags</strong> (typing.Union[hikari.UndefinedType, int, hikari.MessageFlag]):\nThe flags to use for the initial response.</li>\n</ul>\n", "parameters": ["self", "flags"], "funcdef": "async def"}, "tanjun.context.SlashContext.create_followup": {"fullname": "tanjun.context.SlashContext.create_followup", "modulename": "tanjun.context", "qualname": "SlashContext.create_followup", "type": "function", "doc": "<p>Create a followup response for this context.</p>\n\n<p><em>Warning:</em>\nCalling this on a context which hasn't had an initial response yet\nwill lead to a <code>hikari.NotFoundError</code> being raised.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>content</strong> (hikari.UndefinedOr[typing.Any]):\nIf provided, the message contents. If\n<code>hikari.UNDEFINED</code>, then nothing will be sent\nin the content. Any other value here will be cast to a\n<code>str</code>.</p>\n\n<p>If this is a <code>hikari.Embed</code> and no <code>embed</code> kwarg is\nprovided, then this will instead update the embed. This allows for\nsimpler syntax when sending an embed alone.</p>\n\n<p>Likewise, if this is a <code>hikari.Resource</code>, then the\ncontent is instead treated as an attachment if no <code>attachment</code> and\nno <code>attachments</code> kwargs are provided.</p></li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>delete_after</strong> (typing.Union[datetime.timedelta, float, int, None]):\nIf provided, the seconds after which the response message should be deleted.</p>\n\n<p><em>Note:</em>\nSlash command responses can only be deleted within 14 minutes of the\ncommand being received.</p>\n\n<p><em>Note:</em>\nSince (as of writing) ephemeral responses cannot be deleted by the bot,\nthis is ignored for ephemeral slash command responses.</p></li>\n<li><strong>attachment</strong> (hikari.UndefinedOr[hikari.Resourceish]):\nIf provided, the message attachment. This can be a resource,\nor string of a path on your computer or a URL.</li>\n<li><strong>attachments</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Resourceish]]):\nIf provided, the message attachments. These can be resources, or\nstrings consisting of paths on your computer or URLs.</li>\n<li><strong>component</strong> (hikari.UndefinedOr[hikari.api.ComponentBuilder]):\nIf provided, builder object of the component to include in this message.</li>\n<li><strong>components</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.api.ComponentBuilder]]):\nIf provided, a sequence of the component builder objects to include\nin this message.</li>\n<li><strong>embed</strong> (hikari.UndefinedOr[hikari.Embed]):\nIf provided, the message embed.</li>\n<li><strong>embeds</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Embed]]):\nIf provided, the message embeds.</li>\n<li><strong>mentions_everyone</strong> (hikari.UndefinedOr[bool]):\nIf provided, whether the message should parse @everyone/@here\nmentions.</li>\n<li><p><strong>user_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialUser], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.</p>\n\n<p>Alternatively this may be a collection of\n<code>hikari.Snowflake</code>, or\n<code>hikari.PartialUser</code> derivatives to enforce mentioning\nspecific users.</p></li>\n<li><strong>role_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialRole], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.\nAlternatively this may be a collection of\n<code>hikari.Snowflake</code>, or\n<code>hikari.PartialRole</code> derivatives to enforce mentioning\nspecific roles.</li>\n<li><strong>tts</strong> (hikari.UndefinedOr[bool]):\nIf provided, whether the message will be sent as a TTS message.</li>\n<li><p><strong>flags</strong> (typing.Union[hikari.UndefinedType, int, hikari.MessageFlag]):\nThe flags to set for this response.</p>\n\n<p>As of writing this can only flag which can be provided is EPHEMERAL,\nother flags are just ignored.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Message</strong>: The created message object.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>hikari.NotFoundError</strong>: If the current interaction is not found or it hasn't had an initial\nresponse yet.</li>\n<li><strong>hikari.BadRequestError</strong>: This can be raised if the file is too large; if the embed exceeds\nthe defined limits; if the message content is specified only and\nempty or greater than <code>2000</code> characters; if neither content, file\nor embeds are specified.\nIf any invalid snowflake IDs are passed; a snowflake may be invalid\ndue to it being outside of the range of a 64 bit integer.</li>\n<li><strong>ValueError</strong>: If more than 100 unique objects/entities are passed for\n<code>role_mentions</code> or `user_mentions.</li>\n</ul>\n\n<p>If the interaction will have expired before <code>delete_after</code> is reached.</p>\n\n<ul>\n<li><strong>TypeError</strong>: If both <code>attachment</code> and <code>attachments</code> are specified.</li>\n</ul>\n", "parameters": ["self", "content", "delete_after", "attachment", "attachments", "component", "components", "embed", "embeds", "mentions_everyone", "user_mentions", "role_mentions", "tts", "flags"], "funcdef": "async def"}, "tanjun.context.SlashContext.create_initial_response": {"fullname": "tanjun.context.SlashContext.create_initial_response", "modulename": "tanjun.context", "qualname": "SlashContext.create_initial_response", "type": "function", "doc": "<p>Create the initial response for this context.</p>\n\n<p><em>Warning:</em>\nCalling this on a context which already has an initial\nresponse will result in this raising a <code>hikari.NotFoundError</code>.\nThis includes if the REST interaction server has already responded\nto the request and deferrals.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>delete_after</strong> (typing.Union[datetime.timedelta, float, int, None]):\nIf provided, the seconds after which the response message should be deleted.</p>\n\n<p><em>Note:</em>\nSlash command responses can only be deleted within 14 minutes of the\ncommand being received.</p>\n\n<p><em>Note:</em>\nSince (as of writing) ephemeral responses cannot be deleted by the bot,\nthis is ignored for ephemeral slash command responses.</p></li>\n<li><p><strong>content</strong> (hikari.UndefinedOr[typing.Any]):\nIf provided, the message contents. If\n<code>hikari.UNDEFINED</code>, then nothing will be sent\nin the content. Any other value here will be cast to a\n<code>str</code>.</p>\n\n<p>If this is a <code>hikari.Embed</code> and no <code>embed</code> nor <code>embeds</code> kwarg\nis provided, then this will instead update the embed. This allows\nfor simpler syntax when sending an embed alone.</p></li>\n<li><strong>component</strong> (hikari.UndefinedOr[hikari.api.ComponentBuilder]):\nIf provided, builder object of the component to include in this message.</li>\n<li><strong>components</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.api.ComponentBuilder]]):\nIf provided, a sequence of the component builder objects to include\nin this message.</li>\n<li><strong>embed</strong> (hikari.UndefinedOr[hikari.Embed]):\nIf provided, the message embed.</li>\n<li><strong>embeds</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Embed]]):\nIf provided, the message embeds.</li>\n<li><p><strong>flags</strong> (typing.Union[int, hikari.MessageFlag, hikari.UndefinedType]):\nIf provided, the message flags this response should have.</p>\n\n<p>As of writing the only message flag which can be set here is\n<code>hikari.MessageFlag.EPHEMERAL</code>.</p></li>\n<li><strong>tts</strong> (hikari.UndefinedOr[bool]):\nIf provided, whether the message will be read out by a screen\nreader using Discord's TTS (text-to-speech) system.</li>\n<li><strong>mentions_everyone</strong> (hikari.UndefinedOr[bool]):\nIf provided, whether the message should parse @everyone/@here\nmentions.</li>\n<li><p><strong>user_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialUser], bool]]):\nIf provided, and <code>True</code>, all user mentions will be detected.\nIf provided, and <code>False</code>, all user mentions will be ignored\nif appearing in the message body.</p>\n\n<p>Alternatively this may be a collection of\n<code>hikari.Snowflake</code>, or\n<code>hikari.PartialUser</code> derivatives to enforce mentioning\nspecific users.</p></li>\n<li><p><strong>role_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialRole], bool]]):\nIf provided, and <code>True</code>, all role mentions will be detected.\nIf provided, and <code>False</code>, all role mentions will be ignored\nif appearing in the message body.</p>\n\n<p>Alternatively this may be a collection of\n<code>hikari.Snowflake</code>, or\n<code>hikari.PartialRole</code> derivatives to enforce mentioning\nspecific roles.</p></li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If more than 100 unique objects/entities are passed for\n<code>role_mentions</code> or <code>user_mentions</code>.</li>\n</ul>\n\n<p>If the interaction will have expired before <code>delete_after</code> is reached.</p>\n\n<ul>\n<li><strong>TypeError</strong>: If both <code>embed</code> and <code>embeds</code> are specified.</li>\n<li><strong>hikari.BadRequestError</strong>: This may be raised in several discrete situations, such as messages\nbeing empty with no embeds; messages with more than\n2000 characters in them, embeds that exceed one of the many embed\nlimits; invalid image URLs in embeds.</li>\n<li><strong>hikari.UnauthorizedError</strong>: If you are unauthorized to make the request (invalid/missing token).</li>\n<li><strong>hikari.NotFoundError</strong>: If the interaction is not found or if the interaction's initial\nresponse has already been created.</li>\n<li><strong>hikari.RateLimitTooLongError</strong>: Raised in the event that a rate limit occurs that is\nlonger than <code>max_rate_limit</code> when making a request.</li>\n<li><strong>hikari.RateLimitedError</strong>: Usually, Hikari will handle and retry on hitting\nrate-limits automatically. This includes most bucket-specific\nrate-limits and global rate-limits. In some rare edge cases,\nhowever, Discord implements other undocumented rules for\nrate-limiting, such as limits per attribute. These cannot be\ndetected or handled normally by Hikari due to their undocumented\nnature, and will trigger this exception if they occur.</li>\n<li><strong>hikari.InternalServerError</strong>: If an internal error occurs on Discord while handling the request.</li>\n</ul>\n", "parameters": ["self", "content", "delete_after", "component", "components", "embed", "embeds", "mentions_everyone", "user_mentions", "role_mentions", "flags", "tts"], "funcdef": "async def"}, "tanjun.context.SlashContext.delete_initial_response": {"fullname": "tanjun.context.SlashContext.delete_initial_response", "modulename": "tanjun.context", "qualname": "SlashContext.delete_initial_response", "type": "function", "doc": "<p>Delete the initial response after invoking this context.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>LookupError, hikari.NotFoundError</strong>: The last context has no initial response.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.context.SlashContext.delete_last_response": {"fullname": "tanjun.context.SlashContext.delete_last_response", "modulename": "tanjun.context", "qualname": "SlashContext.delete_last_response", "type": "function", "doc": "<p>Delete the last response after invoking this context.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>LookupError, hikari.NotFoundError</strong>: The last context has no responses.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.context.SlashContext.edit_initial_response": {"fullname": "tanjun.context.SlashContext.edit_initial_response", "modulename": "tanjun.context", "qualname": "SlashContext.edit_initial_response", "type": "function", "doc": "<p>Edit the initial response for this context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>content</strong> (hikari.UndefinedOr[typing.Any]):\nThe content to edit the initial response with.</p>\n\n<p>If provided, the message contents. If\n<code>hikari.UNDEFINED</code>, then nothing will be sent\nin the content. Any other value here will be cast to a\n<code>str</code>.</p>\n\n<p>If this is a <code>hikari.Embed</code> and no <code>embed</code> nor <code>embeds</code> kwarg\nis provided, then this will instead update the embed. This allows\nfor simpler syntax when sending an embed alone.</p>\n\n<p>Likewise, if this is a <code>hikari.Resource</code>, then the\ncontent is instead treated as an attachment if no <code>attachment</code> and\nno <code>attachments</code> kwargs are provided.</p></li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>delete_after</strong> (typing.Union[datetime.timedelta, float, int, None]):\nIf provided, the seconds after which the response message should be deleted.</p>\n\n<p><em>Note:</em>\nSlash command responses can only be deleted within 14 minutes of the\ncommand being received.</p>\n\n<p><em>Note:</em>\nSince (as of writing) ephemeral responses cannot be deleted by the bot,\nthis is ignored for ephemeral slash command responses.</p></li>\n<li><strong>attachment</strong> (hikari.UndefinedOr[hikari.Resourceish]):\nA singular attachment to edit the initial response with.</li>\n<li><strong>attachments</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Resourceish]]):\nA sequence of attachments to edit the initial response with.</li>\n<li><strong>component</strong> (hikari.UndefinedNoneOr[hikari.api.ComponentBuilder]):\nIf provided, builder object of the component to set for this message.\nThis component will replace any previously set components and passing\n<code>None</code> will remove all components.</li>\n<li><strong>components</strong> (hikari.UndefinedNoneOr[collections.abc.Sequence[hikari.api.ComponentBuilder]]):\nIf provided, a sequence of the component builder objects set for\nthis message. These components will replace any previously set\ncomponents and passing <code>None</code> or an empty sequence will\nremove all components.</li>\n<li><strong>embed</strong> (hikari.UndefinedOr[hikari.Embed]):\nAn embed to replace the initial response with.</li>\n<li><strong>embeds</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Embed]]):\nA sequence of embeds to replace the initial response with.</li>\n<li><strong>replace_attachments</strong> (bool):\nWhether to replace the attachments of the response or not. Default to <code>False</code>.</li>\n<li><strong>mentions_everyone</strong> (hikari.UndefinedOr[bool]):\nIf provided, whether the message should parse @everyone/@here\nmentions.</li>\n<li><strong>user_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialUser], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.\nAlternatively this may be a collection of\n<code>hikari.Snowflake</code>, or <code>hikari.PartialUser</code>\nderivatives to enforce mentioning specific users.</li>\n<li><strong>role_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialRole], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.\nAlternatively this may be a collection of\n<code>hikari.Snowflake</code>, or\n<code>hikari.PartialRole</code> derivatives to enforce mentioning\nspecific roles.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>Attachments can be passed as many different things, to aid in\nconvenience.</p>\n\n<ul>\n<li>If a <code>pathlib.PurePath</code> or <code>str</code> to a valid URL, the\nresource at the given URL will be streamed to Discord when\nsending the message. Subclasses of\n<code>hikari.WebResource</code> such as\n<code>hikari.URL</code>,\n<code>hikari.Attachment</code>,\n<code>hikari.Emoji</code>,\n<code>EmbedResource</code>, etc will also be uploaded this way.\nThis will use bit-inception, so only a small percentage of the\nresource will remain in memory at any one time, thus aiding in\nscalability.</li>\n<li>If a <code>hikari.Bytes</code> is passed, or a <code>str</code>\nthat contains a valid data URI is passed, then this is uploaded\nwith a randomized file name if not provided.</li>\n<li>If a <code>hikari.File</code>, <code>pathlib.PurePath</code> or\n<code>str</code> that is an absolute or relative path to a file\non your file system is passed, then this resource is uploaded\nas an attachment using non-blocking code internally and streamed\nusing bit-inception where possible. This depends on the\ntype of <code>concurrent.futures.Executor</code> that is being used for\nthe application (default is a thread pool which supports this\nbehaviour).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Message</strong>: The message that has been edited.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If more than 100 unique objects/entities are passed for\n<code>role_mentions</code> or <code>user_mentions</code>.\nIf <code>delete_after</code> would be more than 14 minutes after the slash\ncommand was called.</li>\n<li><strong>TypeError</strong>: If both <code>attachment</code> and <code>attachments</code> are specified.</li>\n<li><strong>hikari.BadRequestError</strong>: This may be raised in several discrete situations, such as messages\nbeing empty with no attachments or embeds; messages with more than\n2000 characters in them, embeds that exceed one of the many embed\nlimits; too many attachments; attachments that are too large;\ninvalid image URLs in embeds; too many components.</li>\n<li><strong>hikari.UnauthorizedError</strong>: If you are unauthorized to make the request (invalid/missing token).</li>\n<li><strong>hikari.ForbiddenError</strong>: If you are missing the <code>SEND_MESSAGES</code> in the channel or the\nperson you are trying to message has the DM's disabled.</li>\n<li><strong>hikari.NotFoundError</strong>: If the channel is not found.</li>\n<li><strong>hikari.RateLimitTooLongError</strong>: Raised in the event that a rate limit occurs that is\nlonger than <code>max_rate_limit</code> when making a request.</li>\n<li><strong>hikari.RateLimitedError</strong>: Usually, Hikari will handle and retry on hitting\nrate-limits automatically. This includes most bucket-specific\nrate-limits and global rate-limits. In some rare edge cases,\nhowever, Discord implements other undocumented rules for\nrate-limiting, such as limits per attribute. These cannot be\ndetected or handled normally by Hikari due to their undocumented\nnature, and will trigger this exception if they occur.</li>\n<li><strong>hikari.InternalServerError</strong>: If an internal error occurs on Discord while handling the request.</li>\n</ul>\n", "parameters": ["self", "content", "delete_after", "attachment", "attachments", "component", "components", "embed", "embeds", "replace_attachments", "mentions_everyone", "user_mentions", "role_mentions"], "funcdef": "async def"}, "tanjun.context.SlashContext.edit_last_response": {"fullname": "tanjun.context.SlashContext.edit_last_response", "modulename": "tanjun.context", "qualname": "SlashContext.edit_last_response", "type": "function", "doc": "<p>Edit the last response for this context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>content</strong> (hikari.UndefinedOr[typing.Any]):\nThe content to edit the last response with.</p>\n\n<p>If provided, the message contents. If\n<code>hikari.UNDEFINED</code>, then nothing will be sent\nin the content. Any other value here will be cast to a\n<code>str</code>.</p>\n\n<p>If this is a <code>hikari.Embed</code> and no <code>embed</code> nor <code>embeds</code> kwarg\nis provided, then this will instead update the embed. This allows\nfor simpler syntax when sending an embed alone.</p>\n\n<p>Likewise, if this is a <code>hikari.Resource</code>, then the\ncontent is instead treated as an attachment if no <code>attachment</code> and\nno <code>attachments</code> kwargs are provided.</p></li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>delete_after</strong> (typing.Union[datetime.timedelta, float, int, None]):\nIf provided, the seconds after which the response message should be deleted.</p>\n\n<p><em>Note:</em>\nSlash command responses can only be deleted within 14 minutes of the\ncommand being received.</p>\n\n<p><em>Note:</em>\nSince (as of writing) ephemeral responses cannot be deleted by the bot,\nthis is ignored for ephemeral slash command responses.</p></li>\n<li><strong>attachment</strong> (hikari.UndefinedOr[hikari.Resourceish]):\nA singular attachment to edit the last response with.</li>\n<li><strong>attachments</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Resourceish]]):\nA sequence of attachments to edit the last response with.</li>\n<li><strong>component</strong> (hikari.UndefinedNoneOr[hikari.api.ComponentBuilder]):\nIf provided, builder object of the component to set for this message.\nThis component will replace any previously set components and passing\n<code>None</code> will remove all components.</li>\n<li><strong>components</strong> (hikari.UndefinedNoneOr[collections.abc.Sequence[hikari.api.ComponentBuilder]]):\nIf provided, a sequence of the component builder objects set for\nthis message. These components will replace any previously set\ncomponents and passing <code>None</code> or an empty sequence will\nremove all components.</li>\n<li><strong>embed</strong> (hikari.UndefinedOr[hikari.Embed]):\nAn embed to replace the last response with.</li>\n<li><strong>embeds</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Embed]]):\nA sequence of embeds to replace the last response with.</li>\n<li><strong>replace_attachments</strong> (bool):\nWhether to replace the attachments of the response or not. Default to <code>False</code>.</li>\n<li><strong>mentions_everyone</strong> (hikari.UndefinedOr[bool]):\nIf provided, whether the message should parse @everyone/@here\nmentions.</li>\n<li><p><strong>user_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialUser], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.</p>\n\n<p>Alternatively this may be a collection of\n<code>hikari.Snowflake</code>, or <code>hikari.PartialUser</code>\nderivatives to enforce mentioning specific users.</p></li>\n<li><p><strong>role_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialRole], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.</p>\n\n<p>Alternatively this may be a collection of\n<code>hikari.Snowflake</code>, or\n<code>hikari.PartialRole</code> derivatives to enforce mentioning\nspecific roles.</p></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>Attachments can be passed as many different things, to aid in\nconvenience.</p>\n\n<ul>\n<li>If a <code>pathlib.PurePath</code> or <code>str</code> to a valid URL, the\nresource at the given URL will be streamed to Discord when\nsending the message. Subclasses of\n<code>hikari.WebResource</code> such as\n<code>hikari.URL</code>,\n<code>hikari.Attachment</code>,\n<code>hikari.Emoji</code>,\n<code>EmbedResource</code>, etc will also be uploaded this way.\nThis will use bit-inception, so only a small percentage of the\nresource will remain in memory at any one time, thus aiding in\nscalability.</li>\n<li>If a <code>hikari.Bytes</code> is passed, or a <code>str</code>\nthat contains a valid data URI is passed, then this is uploaded\nwith a randomized file name if not provided.</li>\n<li>If a <code>hikari.File</code>, <code>pathlib.PurePath</code> or\n<code>str</code> that is an absolute or relative path to a file\non your file system is passed, then this resource is uploaded\nas an attachment using non-blocking code internally and streamed\nusing bit-inception where possible. This depends on the\ntype of <code>concurrent.futures.Executor</code> that is being used for\nthe application (default is a thread pool which supports this\nbehaviour).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Message</strong>: The message that has been edited.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If more than 100 unique objects/entities are passed for\n<code>role_mentions</code> or <code>user_mentions</code>.\nIf <code>delete_after</code> would be more than 14 minutes after the slash\ncommand was called.</li>\n<li><strong>TypeError</strong>: If both <code>attachment</code> and <code>attachments</code> are specified.</li>\n<li><strong>hikari.BadRequestError</strong>: This may be raised in several discrete situations, such as messages\nbeing empty with no attachments or embeds; messages with more than\n2000 characters in them, embeds that exceed one of the many embed\nlimits; too many attachments; attachments that are too large;\ninvalid image URLs in embeds; too many components.</li>\n<li><strong>hikari.UnauthorizedError</strong>: If you are unauthorized to make the request (invalid/missing token).</li>\n<li><strong>hikari.ForbiddenError</strong>: If you are missing the <code>SEND_MESSAGES</code> in the channel or the\nperson you are trying to message has the DM's disabled.</li>\n<li><strong>hikari.NotFoundError</strong>: If the channel is not found.</li>\n<li><strong>hikari.RateLimitTooLongError</strong>: Raised in the event that a rate limit occurs that is\nlonger than <code>max_rate_limit</code> when making a request.</li>\n<li><strong>hikari.RateLimitedError</strong>: Usually, Hikari will handle and retry on hitting\nrate-limits automatically. This includes most bucket-specific\nrate-limits and global rate-limits. In some rare edge cases,\nhowever, Discord implements other undocumented rules for\nrate-limiting, such as limits per attribute. These cannot be\ndetected or handled normally by Hikari due to their undocumented\nnature, and will trigger this exception if they occur.</li>\n<li><strong>hikari.InternalServerError</strong>: If an internal error occurs on Discord while handling the request.</li>\n</ul>\n", "parameters": ["self", "content", "delete_after", "attachment", "attachments", "component", "components", "embed", "embeds", "replace_attachments", "mentions_everyone", "user_mentions", "role_mentions"], "funcdef": "async def"}, "tanjun.context.SlashContext.fetch_initial_response": {"fullname": "tanjun.context.SlashContext.fetch_initial_response", "modulename": "tanjun.context", "qualname": "SlashContext.fetch_initial_response", "type": "function", "doc": "<p>Fetch the initial response for this context.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>LookupError, hikari.NotFoundError</strong>: The response was not found.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.context.SlashContext.fetch_last_response": {"fullname": "tanjun.context.SlashContext.fetch_last_response", "modulename": "tanjun.context", "qualname": "SlashContext.fetch_last_response", "type": "function", "doc": "<p>Fetch the last response for this context.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>LookupError, hikari.NotFoundError</strong>: The response was not found.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.context.SlashContext.respond": {"fullname": "tanjun.context.SlashContext.respond", "modulename": "tanjun.context", "qualname": "SlashContext.respond", "type": "function", "doc": "<p>Respond to this context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>content</strong> (hikari.UndefinedOr[typing.Any]):\nThe content to respond with.</p>\n\n<p>If provided, the message contents. If\n<code>hikari.UNDEFINED</code>, then nothing will be sent\nin the content. Any other value here will be cast to a\n<code>str</code>.</p>\n\n<p>If this is a <code>hikari.Embed</code> and no <code>embed</code> nor <code>embeds</code> kwarg\nis provided, then this will instead update the embed. This allows\nfor simpler syntax when sending an embed alone.</p>\n\n<p>Likewise, if this is a <code>hikari.Resource</code>, then the\ncontent is instead treated as an attachment if no <code>attachment</code> and\nno <code>attachments</code> kwargs are provided.</p></li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>ensure_result</strong> (bool):\nEnsure that this call will always return a message object.</p>\n\n<p>If <code>True</code> then this will always return <code>hikari.Message</code>, otherwise\nthis will return <code>Optional[hikari.Message]</code>.</p>\n\n<p>It's worth noting that, under certain scenarios within the slash\ncommand flow, this may lead to an extre request being made.</p></li>\n<li><p><strong>delete_after</strong> (typing.Union[datetime.timedelta, float, int, None]):\nIf provided, the seconds after which the response message should be deleted.</p>\n\n<p><em>Note:</em>\nSlash command responses can only be deleted within 14 minutes of the\ncommand being received.</p>\n\n<p><em>Note:</em>\nSince (as of writing) ephemeral responses cannot be deleted by the bot,\nthis is ignored for ephemeral slash command responses.</p></li>\n<li><strong>component</strong> (hikari.UndefinedOr[hikari.api.ComponentBuilder]):\nIf provided, builder object of the component to include in this response.</li>\n<li><strong>components</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.api.ComponentBuilder]]):\nIf provided, a sequence of the component builder objects to include\nin this response.</li>\n<li><strong>embed</strong> (hikari.UndefinedOr[hikari.Embed]):\nAn embed to respond with.</li>\n<li><strong>embeds</strong> (hikari.UndefinedOr[collections.abc.Sequence[hikari.Embed]]):\nA sequence of embeds to respond with.</li>\n<li><strong>mentions_everyone</strong> (hikari.UndefinedOr[bool]):\nIf provided, whether the message should parse @everyone/@here\nmentions.</li>\n<li><p><strong>user_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialUser], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.</p>\n\n<p>Alternatively this may be a collection of\n<code>hikari.Snowflake</code>, or <code>hikari.PartialUser</code>\nderivatives to enforce mentioning specific users.</p></li>\n<li><p><strong>role_mentions</strong> (hikari.UndefinedOr[typing.Union[hikari.SnowflakeishSequence[hikari.PartialRole], bool]]):\nIf provided, and <code>True</code>, all mentions will be parsed.\nIf provided, and <code>False</code>, no mentions will be parsed.</p>\n\n<p>Alternatively this may be a collection of\n<code>hikari.Snowflake</code>, or\n<code>hikari.PartialRole</code> derivatives to enforce mentioning\nspecific roles.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[hikari.Message]</strong>: The message that has been created if it was immedieatly available or\n<code>ensure_result</code> was set to <code>True</code>, else <code>None</code>.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If more than 100 unique objects/entities are passed for\n<code>role_mentions</code> or <code>user_mentions</code>.\nIf <code>delete_after</code> would be more than 14 minutes after the slash\ncommand was called.</li>\n<li><strong>TypeError</strong>: If both <code>attachment</code> and <code>attachments</code> are specified.</li>\n<li><strong>hikari.BadRequestError</strong>: This may be raised in several discrete situations, such as messages\nbeing empty with no attachments or embeds; messages with more than\n2000 characters in them, embeds that exceed one of the many embed\nlimits; too many attachments; attachments that are too large;\ninvalid image URLs in embeds; too many components.</li>\n<li><strong>hikari.UnauthorizedError</strong>: If you are unauthorized to make the request (invalid/missing token).</li>\n<li><strong>hikari.ForbiddenError</strong>: If you are missing the <code>SEND_MESSAGES</code> in the channel or the\nperson you are trying to message has the DM's disabled.</li>\n<li><strong>hikari.NotFoundError</strong>: If the channel is not found.</li>\n<li><strong>hikari.RateLimitTooLongError</strong>: Raised in the event that a rate limit occurs that is\nlonger than <code>max_rate_limit</code> when making a request.</li>\n<li><strong>hikari.RateLimitedError</strong>: Usually, Hikari will handle and retry on hitting\nrate-limits automatically. This includes most bucket-specific\nrate-limits and global rate-limits. In some rare edge cases,\nhowever, Discord implements other undocumented rules for\nrate-limiting, such as limits per attribute. These cannot be\ndetected or handled normally by Hikari due to their undocumented\nnature, and will trigger this exception if they occur.</li>\n<li><strong>hikari.InternalServerError</strong>: If an internal error occurs on Discord while handling the request.</li>\n</ul>\n", "parameters": ["self", "content", "ensure_result", "delete_after", "component", "components", "embed", "embeds", "mentions_everyone", "user_mentions", "role_mentions"], "funcdef": "async def"}, "tanjun.context.SlashOption": {"fullname": "tanjun.context.SlashOption", "modulename": "tanjun.context", "qualname": "SlashOption", "type": "class", "doc": "<p>Interface of slash command option with extra logic to help resolve it.</p>\n"}, "tanjun.context.SlashOption.__init__": {"fullname": "tanjun.context.SlashOption.__init__", "modulename": "tanjun.context", "qualname": "SlashOption.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "interaction", "option"], "funcdef": "def"}, "tanjun.context.SlashOption.name": {"fullname": "tanjun.context.SlashOption.name", "modulename": "tanjun.context", "qualname": "SlashOption.name", "type": "variable", "doc": "<p>Name of this option.</p>\n"}, "tanjun.context.SlashOption.type": {"fullname": "tanjun.context.SlashOption.type", "modulename": "tanjun.context", "qualname": "SlashOption.type", "type": "variable", "doc": "<p>Type of this option.</p>\n"}, "tanjun.context.SlashOption.value": {"fullname": "tanjun.context.SlashOption.value", "modulename": "tanjun.context", "qualname": "SlashOption.value", "type": "variable", "doc": "<p>Value provided for this option.</p>\n\n<p><em>Note:</em>\nFor discord entity option types (e.g. user, member, channel and\nrole) this will be the entity's ID.</p>\n"}, "tanjun.context.SlashOption.resolve_value": {"fullname": "tanjun.context.SlashOption.resolve_value", "modulename": "tanjun.context", "qualname": "SlashOption.resolve_value", "type": "function", "doc": "<p>Resolve this option to an object value.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Union[hikari.InteractionChannel, hikari.InteractionMember, hikari.Role, hikari.User]</strong>: The object value of this option.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>TypeError</strong>: If the option isn't resolvable.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.context.SlashOption.resolve_to_channel": {"fullname": "tanjun.context.SlashOption.resolve_to_channel", "modulename": "tanjun.context", "qualname": "SlashOption.resolve_to_channel", "type": "function", "doc": "<p>Resolve this option to a channel object.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.InteractionChannel</strong>: The channel object.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>TypeError</strong>: If the option is not a channel and a <code>default</code> wasn't provided.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.context.SlashOption.resolve_to_member": {"fullname": "tanjun.context.SlashOption.resolve_to_member", "modulename": "tanjun.context", "qualname": "SlashOption.resolve_to_member", "type": "function", "doc": "<p>Resolve this option to a member object.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>default:</strong>: The default value to return if this option cannot be resolved.</li>\n</ul>\n\n<p>If this is not provided, this method will raise a <code>TypeError</code> if\nthis option cannot be resolved.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Union[hikari.InteractionMember, _T]</strong>: The member object or <code>default</code> if it was provided and this option\nwas a user type but had no member.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>LookupError</strong>: If no member was found for this option and a <code>default</code> wasn't provided.</li>\n</ul>\n\n<p>This includes if the option is a mentionable type which targets a\nmember-less user.</p>\n\n<p>This could happen if the user isn't in the current guild or if this\ncommand was executed in a DM and this option should still be resolvable\nto a user.</p>\n\n<ul>\n<li><strong>TypeError</strong>: If the option is not a user option and a <code>default</code> wasn't provided.</li>\n</ul>\n\n<p>This includes if the option is a mentionable type but doesn't\ntarget a user.</p>\n", "parameters": ["self", "default"], "funcdef": "def"}, "tanjun.context.SlashOption.resolve_to_mentionable": {"fullname": "tanjun.context.SlashOption.resolve_to_mentionable", "modulename": "tanjun.context", "qualname": "SlashOption.resolve_to_mentionable", "type": "function", "doc": "<p>Resolve this option to a mentionable object.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Union[hikari.Role, hikari.User, hikari.Member]</strong>: The mentionable object.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>TypeError</strong>: If the option is not a mentionable, user or role type.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.context.SlashOption.resolve_to_role": {"fullname": "tanjun.context.SlashOption.resolve_to_role", "modulename": "tanjun.context", "qualname": "SlashOption.resolve_to_role", "type": "function", "doc": "<p>Resolve this option to a role object.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Role</strong>: The role object.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>TypeError</strong>: If the option is not a role.</li>\n</ul>\n\n<p>This includes mentionable options which point towards a user.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.context.SlashOption.resolve_to_user": {"fullname": "tanjun.context.SlashOption.resolve_to_user", "modulename": "tanjun.context", "qualname": "SlashOption.resolve_to_user", "type": "function", "doc": "<p>Resolve this option to a user object.</p>\n\n<p><em>Note:</em>\nThis will resolve to a <code>hikari.Member</code> first if the relevant\ncommand was executed within a guild and the option targeted one of\nthe guild's members, otherwise it will resolve to <code>hikari.User</code>.</p>\n\n<p>It's also worth noting that hikari.Member inherits from hikari.User\nmeaning that the return value of this can always be treated as a\nuser.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Union[hikari.User, hikari.Member]</strong>: The user object.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>TypeError</strong>: If the option is not a user.</li>\n</ul>\n\n<p>This includes mentionable options which point towards a role.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.conversion": {"fullname": "tanjun.conversion", "modulename": "tanjun.conversion", "qualname": "", "type": "module", "doc": "<p>Functions and classes used to enable more Discord oriented argument converters.</p>\n"}, "tanjun.conversion.ArgumentT": {"fullname": "tanjun.conversion.ArgumentT", "modulename": "tanjun.conversion", "qualname": "ArgumentT", "type": "variable", "doc": "<p></p>\n"}, "tanjun.conversion.from_datetime": {"fullname": "tanjun.conversion.from_datetime", "modulename": "tanjun.conversion", "qualname": "from_datetime", "type": "function", "doc": "<p>Format a datetime as Discord's datetime format.</p>\n\n<p>More information on this format can be found at\nhttps://discord.com/developers/docs/reference#message-formatting-timestamp-styles</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (datetime.datetime):\nThe datetime to format.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>style</strong> (str):\nThe style to use.</p>\n\n<p>The valid styles can be found at\nhttps://discord.com/developers/docs/reference#message-formatting-formats\nand this defaults to <code>\"f\"</code>.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>str</strong>: The formatted datetime.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the provided datetime is timezone naive.\nIf an invalid style is provided.</li>\n</ul>\n", "parameters": ["value", "style"], "funcdef": "def"}, "tanjun.conversion.parse_snowflake": {"fullname": "tanjun.conversion.parse_snowflake", "modulename": "tanjun.conversion", "qualname": "parse_snowflake", "type": "function", "doc": "<p>Parse a snowflake from a string or int value.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (typing.Union[str, int]):\nThe value to parse (this argument can only be passed positionally).</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>message</strong> (str):\nThe error message to raise if the value cannot be parsed.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Snowflake</strong>: The parsed snowflake.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the value cannot be parsed.</li>\n</ul>\n", "parameters": ["value", "message"], "funcdef": "def"}, "tanjun.conversion.parse_channel_id": {"fullname": "tanjun.conversion.parse_channel_id", "modulename": "tanjun.conversion", "qualname": "parse_channel_id", "type": "function", "doc": "<p>Parse a channel ID from a string or int value.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (typing.Union[str, int]):\nThe value to parse (this argument can only be passed positionally).</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>message</strong> (str):\nThe error message to raise if the value cannot be parsed.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Snowflake</strong>: The parsed channel ID.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the value cannot be parsed.</li>\n</ul>\n", "parameters": ["value", "message"], "funcdef": "def"}, "tanjun.conversion.parse_emoji_id": {"fullname": "tanjun.conversion.parse_emoji_id", "modulename": "tanjun.conversion", "qualname": "parse_emoji_id", "type": "function", "doc": "<p>Parse an Emoji ID from a string or int value.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (typing.Union[str, int]):\nThe value to parse (this argument can only be passed positionally).</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>message</strong> (str):\nThe error message to raise if the value cannot be parsed.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Snowflake</strong>: The parsed Emoji ID.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the value cannot be parsed.</li>\n</ul>\n", "parameters": ["value", "message"], "funcdef": "def"}, "tanjun.conversion.parse_role_id": {"fullname": "tanjun.conversion.parse_role_id", "modulename": "tanjun.conversion", "qualname": "parse_role_id", "type": "function", "doc": "<p>Parse a role ID from a string or int value.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (typing.Union[str, int]):\nThe value to parse (this argument can only be passed positionally).</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>message</strong> (str):\nThe error message to raise if the value cannot be parsed.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Snowflake</strong>: The parsed role ID.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the value cannot be parsed.</li>\n</ul>\n", "parameters": ["value", "message"], "funcdef": "def"}, "tanjun.conversion.parse_user_id": {"fullname": "tanjun.conversion.parse_user_id", "modulename": "tanjun.conversion", "qualname": "parse_user_id", "type": "function", "doc": "<p>Parse a user ID from a string or int value.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (typing.Union[str, int]):\nThe value to parse (this argument can only be passed positionally).</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>message</strong> (str):\nThe error message to raise if the value cannot be parsed.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.Snowflake</strong>: The parsed user ID.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the value cannot be parsed.</li>\n</ul>\n", "parameters": ["value", "message"], "funcdef": "def"}, "tanjun.conversion.search_snowflakes": {"fullname": "tanjun.conversion.search_snowflakes", "modulename": "tanjun.conversion", "qualname": "search_snowflakes", "type": "function", "doc": "<p>Iterate over the snowflakes in a string.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (typing.Union[str, int]):\nThe value to parse (this argument can only be passed positionally).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[hikari.Snowflake]</strong>: An iterator over the snowflakes in the string.</li>\n</ul>\n", "parameters": ["value"], "funcdef": "def"}, "tanjun.conversion.search_channel_ids": {"fullname": "tanjun.conversion.search_channel_ids", "modulename": "tanjun.conversion", "qualname": "search_channel_ids", "type": "function", "doc": "<p>Iterate over the channel IDs in a string.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (typing.Union[str, int]):\nThe value to parse (this argument can only be passed positionally).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[hikari.Snowflake]</strong>: An iterator over the channel IDs in the string.</li>\n</ul>\n", "parameters": ["value"], "funcdef": "def"}, "tanjun.conversion.search_emoji_ids": {"fullname": "tanjun.conversion.search_emoji_ids", "modulename": "tanjun.conversion", "qualname": "search_emoji_ids", "type": "function", "doc": "<p>Iterate over the emoji IDs in a string.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (typing.Union[str, int]):\nThe value to parse (this argument can only be passed positionally).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[hikari.Snowflake]</strong>: An iterator over the emoji IDs in the string.</li>\n</ul>\n", "parameters": ["value"], "funcdef": "def"}, "tanjun.conversion.search_role_ids": {"fullname": "tanjun.conversion.search_role_ids", "modulename": "tanjun.conversion", "qualname": "search_role_ids", "type": "function", "doc": "<p>Iterate over the role IDs in a string.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (typing.Union[str, int]):\nThe value to parse (this argument can only be passed positionally).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[hikari.Snowflake]</strong>: An iterator over the role IDs in the string.</li>\n</ul>\n", "parameters": ["value"], "funcdef": "def"}, "tanjun.conversion.search_user_ids": {"fullname": "tanjun.conversion.search_user_ids", "modulename": "tanjun.conversion", "qualname": "search_user_ids", "type": "function", "doc": "<p>Iterate over the user IDs in a string.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (typing.Union[str, int]):\nThe value to parse (this argument can only be passed positionally).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Iterator[hikari.Snowflake]</strong>: An iterator over the user IDs in the string.</li>\n</ul>\n", "parameters": ["value"], "funcdef": "def"}, "tanjun.conversion.to_bool": {"fullname": "tanjun.conversion.to_bool", "modulename": "tanjun.conversion", "qualname": "to_bool", "type": "function", "doc": "<p>Convert user string input into a boolean value.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (str):\nThe value to convert.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bool</strong>: The converted value.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the value cannot be converted.</li>\n</ul>\n", "parameters": ["value"], "funcdef": "def"}, "tanjun.conversion.to_channel": {"fullname": "tanjun.conversion.to_channel", "modulename": "tanjun.conversion", "qualname": "to_channel", "type": "variable", "doc": "<p>Convert user input to a <code>hikari.channels.PartialChannel</code> object.</p>\n"}, "tanjun.conversion.to_color": {"fullname": "tanjun.conversion.to_color", "modulename": "tanjun.conversion", "qualname": "to_color", "type": "function", "doc": "<p>Convert user input to a <code>hikari.colors.Color</code> object.</p>\n", "parameters": ["argument"], "funcdef": "def"}, "tanjun.conversion.to_colour": {"fullname": "tanjun.conversion.to_colour", "modulename": "tanjun.conversion", "qualname": "to_colour", "type": "function", "doc": "<p>Convert user input to a <code>hikari.colors.Color</code> object.</p>\n", "parameters": ["argument"], "funcdef": "def"}, "tanjun.conversion.to_datetime": {"fullname": "tanjun.conversion.to_datetime", "modulename": "tanjun.conversion", "qualname": "to_datetime", "type": "function", "doc": "<p>Parse a datetime from Discord's datetime format.</p>\n\n<p>More information on this format can be found at\nhttps://discord.com/developers/docs/reference#message-formatting-timestamp-styles</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (str):\nThe value to parse.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>datetime.datetime</strong>: The parsed datetime.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the value cannot be parsed.</li>\n</ul>\n", "parameters": ["value"], "funcdef": "def"}, "tanjun.conversion.to_emoji": {"fullname": "tanjun.conversion.to_emoji", "modulename": "tanjun.conversion", "qualname": "to_emoji", "type": "variable", "doc": "<p>Convert user input to a cached <code>hikari.emojis.KnownCustomEmoji</code> object.</p>\n\n<p><em>Note:</em>\nIf you just want to convert inpute to a <code>hikari.Emoji</code>, <code>hikari.CustomEmoji</code>\nor <code>hikari.UnicodeEmoji</code> without making any cache or REST calls then you\ncan just use the relevant <code>hikari.Emoji.parse</code>, <code>hikari.CustomEmoji.parse</code>\nor <code>hikari.UnicodeEmoji.parse</code> methods.</p>\n"}, "tanjun.conversion.to_guild": {"fullname": "tanjun.conversion.to_guild", "modulename": "tanjun.conversion", "qualname": "to_guild", "type": "variable", "doc": "<p>Convert user input to a <code>hikari.guilds.Guild</code> object.</p>\n"}, "tanjun.conversion.to_invite": {"fullname": "tanjun.conversion.to_invite", "modulename": "tanjun.conversion", "qualname": "to_invite", "type": "variable", "doc": "<p>Convert user input to a cached <code>hikari.invites.InviteWithMetadata</code> object.</p>\n"}, "tanjun.conversion.to_invite_with_metadata": {"fullname": "tanjun.conversion.to_invite_with_metadata", "modulename": "tanjun.conversion", "qualname": "to_invite_with_metadata", "type": "variable", "doc": "<p>Convert user input to a <code>hikari.invites.Invite</code> object.</p>\n"}, "tanjun.conversion.to_member": {"fullname": "tanjun.conversion.to_member", "modulename": "tanjun.conversion", "qualname": "to_member", "type": "variable", "doc": "<p>Convert user input to a <code>hikari.guilds.Member</code> object.</p>\n"}, "tanjun.conversion.to_presence": {"fullname": "tanjun.conversion.to_presence", "modulename": "tanjun.conversion", "qualname": "to_presence", "type": "variable", "doc": "<p>Convert user input to a cached <code>hikari.presences.MemberPresence</code>.</p>\n"}, "tanjun.conversion.to_role": {"fullname": "tanjun.conversion.to_role", "modulename": "tanjun.conversion", "qualname": "to_role", "type": "variable", "doc": "<p>Convert user input to a <code>hikari.guilds.Role</code> object.</p>\n"}, "tanjun.conversion.to_snowflake": {"fullname": "tanjun.conversion.to_snowflake", "modulename": "tanjun.conversion", "qualname": "to_snowflake", "type": "function", "doc": "<p>Convert user input to a <code>hikari.snowflakes.Snowflake</code>.</p>\n\n<p><em>Note:</em>\nThis also range validates the input.</p>\n", "parameters": ["value", "message"], "funcdef": "def"}, "tanjun.conversion.to_user": {"fullname": "tanjun.conversion.to_user", "modulename": "tanjun.conversion", "qualname": "to_user", "type": "variable", "doc": "<p>Convert user input to a <code>hikari.users.User</code> object.</p>\n"}, "tanjun.conversion.to_voice_state": {"fullname": "tanjun.conversion.to_voice_state", "modulename": "tanjun.conversion", "qualname": "to_voice_state", "type": "variable", "doc": "<p>Convert user input to a cached <code>hikari.voices.VoiceState</code>.</p>\n"}, "tanjun.conversion.ToChannel": {"fullname": "tanjun.conversion.ToChannel", "modulename": "tanjun.conversion", "qualname": "ToChannel", "type": "class", "doc": "<p>Standard converter for channels mentions/IDs.</p>\n\n<p>For a standard instance of this see <code>to_channel</code>.</p>\n"}, "tanjun.conversion.ToChannel.__init__": {"fullname": "tanjun.conversion.ToChannel.__init__", "modulename": "tanjun.conversion", "qualname": "ToChannel.__init__", "type": "function", "doc": "<p>Initialise a to channel converter.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>include_dms</strong> (bool):\nWhether to include DM channels in the results.</p>\n\n<p>May lead to a lot of extra fallbacks to REST requests if\nthe client doesn't have a registered async cache for DMs.</p>\n\n<p>Defaults to <code>True</code>.</p></li>\n</ul>\n", "parameters": ["self", "include_dms"], "funcdef": "def"}, "tanjun.conversion.ToChannel.async_caches": {"fullname": "tanjun.conversion.ToChannel.async_caches", "modulename": "tanjun.conversion", "qualname": "ToChannel.async_caches", "type": "variable", "doc": "<p>Collection of the asynchronous caches that this converter relies on.</p>\n\n<p>This will only be necessary if the suggested intents or cache_components\naren't enabled for a converter which requires cache.</p>\n"}, "tanjun.conversion.ToChannel.cache_components": {"fullname": "tanjun.conversion.ToChannel.cache_components", "modulename": "tanjun.conversion", "qualname": "ToChannel.cache_components", "type": "variable", "doc": "<p>Cache component(s) the converter takes advantage of.</p>\n\n<p><em>Note:</em>\nUnless <code>BaseConverter.requires_cache</code> is <code>True</code>, these cache components\naren't necessary but simply avoid the converter from falling back to\nREST requests.</p>\n\n<p>This will be <code>hikari.CacheComponents.NONE</code> if the converter doesn't\nmake cache calls.</p>\n"}, "tanjun.conversion.ToChannel.intents": {"fullname": "tanjun.conversion.ToChannel.intents", "modulename": "tanjun.conversion", "qualname": "ToChannel.intents", "type": "variable", "doc": "<p>Gateway intents this converter takes advantage of.</p>\n\n<p><em>Note:</em>\nThis field is supplementary to <code>BaseConverter.cache_components</code> and\nis used to detect when the relevant component might not actually be\nbeing kept up to date or filled by gateway events.</p>\n\n<p>Unless <code>BaseConverter.requires_cache</code> is <code>True</code>, these intents being\ndisabled won't stop this converter from working as it'll still fall\nback to REST requests.</p>\n"}, "tanjun.conversion.ToChannel.requires_cache": {"fullname": "tanjun.conversion.ToChannel.requires_cache", "modulename": "tanjun.conversion", "qualname": "ToChannel.requires_cache", "type": "variable", "doc": "<p>Whether this converter relies on the relevant cache stores to work.</p>\n\n<p>If this is <code>True</code> then this converter will not function properly\nin an environment <code>BaseConverter.intents</code> or <code>BaseConverter.cache_components</code>\nisn't satisfied and will never fallback to REST requests.</p>\n"}, "tanjun.conversion.ToEmoji": {"fullname": "tanjun.conversion.ToEmoji", "modulename": "tanjun.conversion", "qualname": "ToEmoji", "type": "class", "doc": "<p>Standard converter for custom emojis.</p>\n\n<p>For a standard instance of this see <code>to_emoji</code>.</p>\n\n<p><em>Note:</em>\nIf you just want to convert inpute to a <code>hikari.Emoji</code>, <code>hikari.CustomEmoji</code>\nor <code>hikari.UnicodeEmoji</code> without making any cache or REST calls then you\ncan just use the relevant <code>hikari.Emoji.parse</code>, <code>hikari.CustomEmoji.parse</code>\nor <code>hikari.UnicodeEmoji.parse</code> methods.</p>\n"}, "tanjun.conversion.ToEmoji.__init__": {"fullname": "tanjun.conversion.ToEmoji.__init__", "modulename": "tanjun.conversion", "qualname": "ToEmoji.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "tanjun.conversion.ToEmoji.async_caches": {"fullname": "tanjun.conversion.ToEmoji.async_caches", "modulename": "tanjun.conversion", "qualname": "ToEmoji.async_caches", "type": "variable", "doc": "<p>Collection of the asynchronous caches that this converter relies on.</p>\n\n<p>This will only be necessary if the suggested intents or cache_components\naren't enabled for a converter which requires cache.</p>\n"}, "tanjun.conversion.ToEmoji.cache_components": {"fullname": "tanjun.conversion.ToEmoji.cache_components", "modulename": "tanjun.conversion", "qualname": "ToEmoji.cache_components", "type": "variable", "doc": "<p>Cache component(s) the converter takes advantage of.</p>\n\n<p><em>Note:</em>\nUnless <code>BaseConverter.requires_cache</code> is <code>True</code>, these cache components\naren't necessary but simply avoid the converter from falling back to\nREST requests.</p>\n\n<p>This will be <code>hikari.CacheComponents.NONE</code> if the converter doesn't\nmake cache calls.</p>\n"}, "tanjun.conversion.ToEmoji.intents": {"fullname": "tanjun.conversion.ToEmoji.intents", "modulename": "tanjun.conversion", "qualname": "ToEmoji.intents", "type": "variable", "doc": "<p>Gateway intents this converter takes advantage of.</p>\n\n<p><em>Note:</em>\nThis field is supplementary to <code>BaseConverter.cache_components</code> and\nis used to detect when the relevant component might not actually be\nbeing kept up to date or filled by gateway events.</p>\n\n<p>Unless <code>BaseConverter.requires_cache</code> is <code>True</code>, these intents being\ndisabled won't stop this converter from working as it'll still fall\nback to REST requests.</p>\n"}, "tanjun.conversion.ToEmoji.requires_cache": {"fullname": "tanjun.conversion.ToEmoji.requires_cache", "modulename": "tanjun.conversion", "qualname": "ToEmoji.requires_cache", "type": "variable", "doc": "<p>Whether this converter relies on the relevant cache stores to work.</p>\n\n<p>If this is <code>True</code> then this converter will not function properly\nin an environment <code>BaseConverter.intents</code> or <code>BaseConverter.cache_components</code>\nisn't satisfied and will never fallback to REST requests.</p>\n"}, "tanjun.conversion.ToGuild": {"fullname": "tanjun.conversion.ToGuild", "modulename": "tanjun.conversion", "qualname": "ToGuild", "type": "class", "doc": "<p>Stanard converter for guilds.</p>\n\n<p>For a standard instance of this see <code>to_guild</code>.</p>\n"}, "tanjun.conversion.ToGuild.__init__": {"fullname": "tanjun.conversion.ToGuild.__init__", "modulename": "tanjun.conversion", "qualname": "ToGuild.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "tanjun.conversion.ToGuild.async_caches": {"fullname": "tanjun.conversion.ToGuild.async_caches", "modulename": "tanjun.conversion", "qualname": "ToGuild.async_caches", "type": "variable", "doc": "<p>Collection of the asynchronous caches that this converter relies on.</p>\n\n<p>This will only be necessary if the suggested intents or cache_components\naren't enabled for a converter which requires cache.</p>\n"}, "tanjun.conversion.ToGuild.cache_components": {"fullname": "tanjun.conversion.ToGuild.cache_components", "modulename": "tanjun.conversion", "qualname": "ToGuild.cache_components", "type": "variable", "doc": "<p>Cache component(s) the converter takes advantage of.</p>\n\n<p><em>Note:</em>\nUnless <code>BaseConverter.requires_cache</code> is <code>True</code>, these cache components\naren't necessary but simply avoid the converter from falling back to\nREST requests.</p>\n\n<p>This will be <code>hikari.CacheComponents.NONE</code> if the converter doesn't\nmake cache calls.</p>\n"}, "tanjun.conversion.ToGuild.intents": {"fullname": "tanjun.conversion.ToGuild.intents", "modulename": "tanjun.conversion", "qualname": "ToGuild.intents", "type": "variable", "doc": "<p>Gateway intents this converter takes advantage of.</p>\n\n<p><em>Note:</em>\nThis field is supplementary to <code>BaseConverter.cache_components</code> and\nis used to detect when the relevant component might not actually be\nbeing kept up to date or filled by gateway events.</p>\n\n<p>Unless <code>BaseConverter.requires_cache</code> is <code>True</code>, these intents being\ndisabled won't stop this converter from working as it'll still fall\nback to REST requests.</p>\n"}, "tanjun.conversion.ToGuild.requires_cache": {"fullname": "tanjun.conversion.ToGuild.requires_cache", "modulename": "tanjun.conversion", "qualname": "ToGuild.requires_cache", "type": "variable", "doc": "<p>Whether this converter relies on the relevant cache stores to work.</p>\n\n<p>If this is <code>True</code> then this converter will not function properly\nin an environment <code>BaseConverter.intents</code> or <code>BaseConverter.cache_components</code>\nisn't satisfied and will never fallback to REST requests.</p>\n"}, "tanjun.conversion.ToInvite": {"fullname": "tanjun.conversion.ToInvite", "modulename": "tanjun.conversion", "qualname": "ToInvite", "type": "class", "doc": "<p>Standard converter for invites.</p>\n"}, "tanjun.conversion.ToInvite.__init__": {"fullname": "tanjun.conversion.ToInvite.__init__", "modulename": "tanjun.conversion", "qualname": "ToInvite.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "tanjun.conversion.ToInvite.async_caches": {"fullname": "tanjun.conversion.ToInvite.async_caches", "modulename": "tanjun.conversion", "qualname": "ToInvite.async_caches", "type": "variable", "doc": "<p>Collection of the asynchronous caches that this converter relies on.</p>\n\n<p>This will only be necessary if the suggested intents or cache_components\naren't enabled for a converter which requires cache.</p>\n"}, "tanjun.conversion.ToInvite.cache_components": {"fullname": "tanjun.conversion.ToInvite.cache_components", "modulename": "tanjun.conversion", "qualname": "ToInvite.cache_components", "type": "variable", "doc": "<p>Cache component(s) the converter takes advantage of.</p>\n\n<p><em>Note:</em>\nUnless <code>BaseConverter.requires_cache</code> is <code>True</code>, these cache components\naren't necessary but simply avoid the converter from falling back to\nREST requests.</p>\n\n<p>This will be <code>hikari.CacheComponents.NONE</code> if the converter doesn't\nmake cache calls.</p>\n"}, "tanjun.conversion.ToInvite.intents": {"fullname": "tanjun.conversion.ToInvite.intents", "modulename": "tanjun.conversion", "qualname": "ToInvite.intents", "type": "variable", "doc": "<p>Gateway intents this converter takes advantage of.</p>\n\n<p><em>Note:</em>\nThis field is supplementary to <code>BaseConverter.cache_components</code> and\nis used to detect when the relevant component might not actually be\nbeing kept up to date or filled by gateway events.</p>\n\n<p>Unless <code>BaseConverter.requires_cache</code> is <code>True</code>, these intents being\ndisabled won't stop this converter from working as it'll still fall\nback to REST requests.</p>\n"}, "tanjun.conversion.ToInvite.requires_cache": {"fullname": "tanjun.conversion.ToInvite.requires_cache", "modulename": "tanjun.conversion", "qualname": "ToInvite.requires_cache", "type": "variable", "doc": "<p>Whether this converter relies on the relevant cache stores to work.</p>\n\n<p>If this is <code>True</code> then this converter will not function properly\nin an environment <code>BaseConverter.intents</code> or <code>BaseConverter.cache_components</code>\nisn't satisfied and will never fallback to REST requests.</p>\n"}, "tanjun.conversion.ToInviteWithMetadata": {"fullname": "tanjun.conversion.ToInviteWithMetadata", "modulename": "tanjun.conversion", "qualname": "ToInviteWithMetadata", "type": "class", "doc": "<p>Standard converter for invites with metadata.</p>\n\n<p>For a standard instance of this see <code>to_invite_with_metadata</code>.</p>\n\n<p><em>Note:</em>\nUnlike <code>InviteConverter</code>, this converter is cache dependent.</p>\n"}, "tanjun.conversion.ToInviteWithMetadata.__init__": {"fullname": "tanjun.conversion.ToInviteWithMetadata.__init__", "modulename": "tanjun.conversion", "qualname": "ToInviteWithMetadata.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"fullname": "tanjun.conversion.ToInviteWithMetadata.async_caches", "modulename": "tanjun.conversion", "qualname": "ToInviteWithMetadata.async_caches", "type": "variable", "doc": "<p>Collection of the asynchronous caches that this converter relies on.</p>\n\n<p>This will only be necessary if the suggested intents or cache_components\naren't enabled for a converter which requires cache.</p>\n"}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"fullname": "tanjun.conversion.ToInviteWithMetadata.cache_components", "modulename": "tanjun.conversion", "qualname": "ToInviteWithMetadata.cache_components", "type": "variable", "doc": "<p>Cache component(s) the converter takes advantage of.</p>\n\n<p><em>Note:</em>\nUnless <code>BaseConverter.requires_cache</code> is <code>True</code>, these cache components\naren't necessary but simply avoid the converter from falling back to\nREST requests.</p>\n\n<p>This will be <code>hikari.CacheComponents.NONE</code> if the converter doesn't\nmake cache calls.</p>\n"}, "tanjun.conversion.ToInviteWithMetadata.intents": {"fullname": "tanjun.conversion.ToInviteWithMetadata.intents", "modulename": "tanjun.conversion", "qualname": "ToInviteWithMetadata.intents", "type": "variable", "doc": "<p>Gateway intents this converter takes advantage of.</p>\n\n<p><em>Note:</em>\nThis field is supplementary to <code>BaseConverter.cache_components</code> and\nis used to detect when the relevant component might not actually be\nbeing kept up to date or filled by gateway events.</p>\n\n<p>Unless <code>BaseConverter.requires_cache</code> is <code>True</code>, these intents being\ndisabled won't stop this converter from working as it'll still fall\nback to REST requests.</p>\n"}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"fullname": "tanjun.conversion.ToInviteWithMetadata.requires_cache", "modulename": "tanjun.conversion", "qualname": "ToInviteWithMetadata.requires_cache", "type": "variable", "doc": "<p>Whether this converter relies on the relevant cache stores to work.</p>\n\n<p>If this is <code>True</code> then this converter will not function properly\nin an environment <code>BaseConverter.intents</code> or <code>BaseConverter.cache_components</code>\nisn't satisfied and will never fallback to REST requests.</p>\n"}, "tanjun.conversion.ToMember": {"fullname": "tanjun.conversion.ToMember", "modulename": "tanjun.conversion", "qualname": "ToMember", "type": "class", "doc": "<p>Standard converter for guild members.</p>\n\n<p>For a standard instance of this see <code>to_member</code>.</p>\n\n<p>This converter allows both mentions, raw IDs and partial usernames/nicknames\nand only works within a guild context.</p>\n"}, "tanjun.conversion.ToMember.__init__": {"fullname": "tanjun.conversion.ToMember.__init__", "modulename": "tanjun.conversion", "qualname": "ToMember.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "tanjun.conversion.ToMember.async_caches": {"fullname": "tanjun.conversion.ToMember.async_caches", "modulename": "tanjun.conversion", "qualname": "ToMember.async_caches", "type": "variable", "doc": "<p>Collection of the asynchronous caches that this converter relies on.</p>\n\n<p>This will only be necessary if the suggested intents or cache_components\naren't enabled for a converter which requires cache.</p>\n"}, "tanjun.conversion.ToMember.cache_components": {"fullname": "tanjun.conversion.ToMember.cache_components", "modulename": "tanjun.conversion", "qualname": "ToMember.cache_components", "type": "variable", "doc": "<p>Cache component(s) the converter takes advantage of.</p>\n\n<p><em>Note:</em>\nUnless <code>BaseConverter.requires_cache</code> is <code>True</code>, these cache components\naren't necessary but simply avoid the converter from falling back to\nREST requests.</p>\n\n<p>This will be <code>hikari.CacheComponents.NONE</code> if the converter doesn't\nmake cache calls.</p>\n"}, "tanjun.conversion.ToMember.intents": {"fullname": "tanjun.conversion.ToMember.intents", "modulename": "tanjun.conversion", "qualname": "ToMember.intents", "type": "variable", "doc": "<p>Gateway intents this converter takes advantage of.</p>\n\n<p><em>Note:</em>\nThis field is supplementary to <code>BaseConverter.cache_components</code> and\nis used to detect when the relevant component might not actually be\nbeing kept up to date or filled by gateway events.</p>\n\n<p>Unless <code>BaseConverter.requires_cache</code> is <code>True</code>, these intents being\ndisabled won't stop this converter from working as it'll still fall\nback to REST requests.</p>\n"}, "tanjun.conversion.ToMember.requires_cache": {"fullname": "tanjun.conversion.ToMember.requires_cache", "modulename": "tanjun.conversion", "qualname": "ToMember.requires_cache", "type": "variable", "doc": "<p>Whether this converter relies on the relevant cache stores to work.</p>\n\n<p>If this is <code>True</code> then this converter will not function properly\nin an environment <code>BaseConverter.intents</code> or <code>BaseConverter.cache_components</code>\nisn't satisfied and will never fallback to REST requests.</p>\n"}, "tanjun.conversion.ToPresence": {"fullname": "tanjun.conversion.ToPresence", "modulename": "tanjun.conversion", "qualname": "ToPresence", "type": "class", "doc": "<p>Standard converter for presences.</p>\n\n<p>For a standard instance of this see <code>to_presence</code>.</p>\n\n<p>This converter is cache dependent and only works in a guild context.</p>\n"}, "tanjun.conversion.ToPresence.__init__": {"fullname": "tanjun.conversion.ToPresence.__init__", "modulename": "tanjun.conversion", "qualname": "ToPresence.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "tanjun.conversion.ToPresence.async_caches": {"fullname": "tanjun.conversion.ToPresence.async_caches", "modulename": "tanjun.conversion", "qualname": "ToPresence.async_caches", "type": "variable", "doc": "<p>Collection of the asynchronous caches that this converter relies on.</p>\n\n<p>This will only be necessary if the suggested intents or cache_components\naren't enabled for a converter which requires cache.</p>\n"}, "tanjun.conversion.ToPresence.cache_components": {"fullname": "tanjun.conversion.ToPresence.cache_components", "modulename": "tanjun.conversion", "qualname": "ToPresence.cache_components", "type": "variable", "doc": "<p>Cache component(s) the converter takes advantage of.</p>\n\n<p><em>Note:</em>\nUnless <code>BaseConverter.requires_cache</code> is <code>True</code>, these cache components\naren't necessary but simply avoid the converter from falling back to\nREST requests.</p>\n\n<p>This will be <code>hikari.CacheComponents.NONE</code> if the converter doesn't\nmake cache calls.</p>\n"}, "tanjun.conversion.ToPresence.intents": {"fullname": "tanjun.conversion.ToPresence.intents", "modulename": "tanjun.conversion", "qualname": "ToPresence.intents", "type": "variable", "doc": "<p>Gateway intents this converter takes advantage of.</p>\n\n<p><em>Note:</em>\nThis field is supplementary to <code>BaseConverter.cache_components</code> and\nis used to detect when the relevant component might not actually be\nbeing kept up to date or filled by gateway events.</p>\n\n<p>Unless <code>BaseConverter.requires_cache</code> is <code>True</code>, these intents being\ndisabled won't stop this converter from working as it'll still fall\nback to REST requests.</p>\n"}, "tanjun.conversion.ToPresence.requires_cache": {"fullname": "tanjun.conversion.ToPresence.requires_cache", "modulename": "tanjun.conversion", "qualname": "ToPresence.requires_cache", "type": "variable", "doc": "<p>Whether this converter relies on the relevant cache stores to work.</p>\n\n<p>If this is <code>True</code> then this converter will not function properly\nin an environment <code>BaseConverter.intents</code> or <code>BaseConverter.cache_components</code>\nisn't satisfied and will never fallback to REST requests.</p>\n"}, "tanjun.conversion.ToRole": {"fullname": "tanjun.conversion.ToRole", "modulename": "tanjun.conversion", "qualname": "ToRole", "type": "class", "doc": "<p>Standard converter for guild roles.</p>\n\n<p>For a standard instance of this see <code>to_role</code>.</p>\n"}, "tanjun.conversion.ToRole.__init__": {"fullname": "tanjun.conversion.ToRole.__init__", "modulename": "tanjun.conversion", "qualname": "ToRole.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "tanjun.conversion.ToRole.async_caches": {"fullname": "tanjun.conversion.ToRole.async_caches", "modulename": "tanjun.conversion", "qualname": "ToRole.async_caches", "type": "variable", "doc": "<p>Collection of the asynchronous caches that this converter relies on.</p>\n\n<p>This will only be necessary if the suggested intents or cache_components\naren't enabled for a converter which requires cache.</p>\n"}, "tanjun.conversion.ToRole.cache_components": {"fullname": "tanjun.conversion.ToRole.cache_components", "modulename": "tanjun.conversion", "qualname": "ToRole.cache_components", "type": "variable", "doc": "<p>Cache component(s) the converter takes advantage of.</p>\n\n<p><em>Note:</em>\nUnless <code>BaseConverter.requires_cache</code> is <code>True</code>, these cache components\naren't necessary but simply avoid the converter from falling back to\nREST requests.</p>\n\n<p>This will be <code>hikari.CacheComponents.NONE</code> if the converter doesn't\nmake cache calls.</p>\n"}, "tanjun.conversion.ToRole.intents": {"fullname": "tanjun.conversion.ToRole.intents", "modulename": "tanjun.conversion", "qualname": "ToRole.intents", "type": "variable", "doc": "<p>Gateway intents this converter takes advantage of.</p>\n\n<p><em>Note:</em>\nThis field is supplementary to <code>BaseConverter.cache_components</code> and\nis used to detect when the relevant component might not actually be\nbeing kept up to date or filled by gateway events.</p>\n\n<p>Unless <code>BaseConverter.requires_cache</code> is <code>True</code>, these intents being\ndisabled won't stop this converter from working as it'll still fall\nback to REST requests.</p>\n"}, "tanjun.conversion.ToRole.requires_cache": {"fullname": "tanjun.conversion.ToRole.requires_cache", "modulename": "tanjun.conversion", "qualname": "ToRole.requires_cache", "type": "variable", "doc": "<p>Whether this converter relies on the relevant cache stores to work.</p>\n\n<p>If this is <code>True</code> then this converter will not function properly\nin an environment <code>BaseConverter.intents</code> or <code>BaseConverter.cache_components</code>\nisn't satisfied and will never fallback to REST requests.</p>\n"}, "tanjun.conversion.ToUser": {"fullname": "tanjun.conversion.ToUser", "modulename": "tanjun.conversion", "qualname": "ToUser", "type": "class", "doc": "<p>Standard converter for users.</p>\n\n<p>For a standard instance of this see <code>to_user</code>.</p>\n"}, "tanjun.conversion.ToUser.__init__": {"fullname": "tanjun.conversion.ToUser.__init__", "modulename": "tanjun.conversion", "qualname": "ToUser.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "tanjun.conversion.ToUser.async_caches": {"fullname": "tanjun.conversion.ToUser.async_caches", "modulename": "tanjun.conversion", "qualname": "ToUser.async_caches", "type": "variable", "doc": "<p>Collection of the asynchronous caches that this converter relies on.</p>\n\n<p>This will only be necessary if the suggested intents or cache_components\naren't enabled for a converter which requires cache.</p>\n"}, "tanjun.conversion.ToUser.cache_components": {"fullname": "tanjun.conversion.ToUser.cache_components", "modulename": "tanjun.conversion", "qualname": "ToUser.cache_components", "type": "variable", "doc": "<p>Cache component(s) the converter takes advantage of.</p>\n\n<p><em>Note:</em>\nUnless <code>BaseConverter.requires_cache</code> is <code>True</code>, these cache components\naren't necessary but simply avoid the converter from falling back to\nREST requests.</p>\n\n<p>This will be <code>hikari.CacheComponents.NONE</code> if the converter doesn't\nmake cache calls.</p>\n"}, "tanjun.conversion.ToUser.intents": {"fullname": "tanjun.conversion.ToUser.intents", "modulename": "tanjun.conversion", "qualname": "ToUser.intents", "type": "variable", "doc": "<p>Gateway intents this converter takes advantage of.</p>\n\n<p><em>Note:</em>\nThis field is supplementary to <code>BaseConverter.cache_components</code> and\nis used to detect when the relevant component might not actually be\nbeing kept up to date or filled by gateway events.</p>\n\n<p>Unless <code>BaseConverter.requires_cache</code> is <code>True</code>, these intents being\ndisabled won't stop this converter from working as it'll still fall\nback to REST requests.</p>\n"}, "tanjun.conversion.ToUser.requires_cache": {"fullname": "tanjun.conversion.ToUser.requires_cache", "modulename": "tanjun.conversion", "qualname": "ToUser.requires_cache", "type": "variable", "doc": "<p>Whether this converter relies on the relevant cache stores to work.</p>\n\n<p>If this is <code>True</code> then this converter will not function properly\nin an environment <code>BaseConverter.intents</code> or <code>BaseConverter.cache_components</code>\nisn't satisfied and will never fallback to REST requests.</p>\n"}, "tanjun.conversion.ToVoiceState": {"fullname": "tanjun.conversion.ToVoiceState", "modulename": "tanjun.conversion", "qualname": "ToVoiceState", "type": "class", "doc": "<p>Standard converter for voice states.</p>\n\n<p>For a standard instance of this see <code>to_voice_state</code>.</p>\n\n<p><em>Note:</em>\nThis converter is cache dependent and only works in a guild context.</p>\n"}, "tanjun.conversion.ToVoiceState.__init__": {"fullname": "tanjun.conversion.ToVoiceState.__init__", "modulename": "tanjun.conversion", "qualname": "ToVoiceState.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "tanjun.conversion.ToVoiceState.async_caches": {"fullname": "tanjun.conversion.ToVoiceState.async_caches", "modulename": "tanjun.conversion", "qualname": "ToVoiceState.async_caches", "type": "variable", "doc": "<p>Collection of the asynchronous caches that this converter relies on.</p>\n\n<p>This will only be necessary if the suggested intents or cache_components\naren't enabled for a converter which requires cache.</p>\n"}, "tanjun.conversion.ToVoiceState.cache_components": {"fullname": "tanjun.conversion.ToVoiceState.cache_components", "modulename": "tanjun.conversion", "qualname": "ToVoiceState.cache_components", "type": "variable", "doc": "<p>Cache component(s) the converter takes advantage of.</p>\n\n<p><em>Note:</em>\nUnless <code>BaseConverter.requires_cache</code> is <code>True</code>, these cache components\naren't necessary but simply avoid the converter from falling back to\nREST requests.</p>\n\n<p>This will be <code>hikari.CacheComponents.NONE</code> if the converter doesn't\nmake cache calls.</p>\n"}, "tanjun.conversion.ToVoiceState.intents": {"fullname": "tanjun.conversion.ToVoiceState.intents", "modulename": "tanjun.conversion", "qualname": "ToVoiceState.intents", "type": "variable", "doc": "<p>Gateway intents this converter takes advantage of.</p>\n\n<p><em>Note:</em>\nThis field is supplementary to <code>BaseConverter.cache_components</code> and\nis used to detect when the relevant component might not actually be\nbeing kept up to date or filled by gateway events.</p>\n\n<p>Unless <code>BaseConverter.requires_cache</code> is <code>True</code>, these intents being\ndisabled won't stop this converter from working as it'll still fall\nback to REST requests.</p>\n"}, "tanjun.conversion.ToVoiceState.requires_cache": {"fullname": "tanjun.conversion.ToVoiceState.requires_cache", "modulename": "tanjun.conversion", "qualname": "ToVoiceState.requires_cache", "type": "variable", "doc": "<p>Whether this converter relies on the relevant cache stores to work.</p>\n\n<p>If this is <code>True</code> then this converter will not function properly\nin an environment <code>BaseConverter.intents</code> or <code>BaseConverter.cache_components</code>\nisn't satisfied and will never fallback to REST requests.</p>\n"}, "tanjun.dependencies": {"fullname": "tanjun.dependencies", "modulename": "tanjun.dependencies", "qualname": "", "type": "module", "doc": "<p>Default dependency utilities used within Tanjun and their abstract interfaces.</p>\n"}, "tanjun.dependencies.set_standard_dependencies": {"fullname": "tanjun.dependencies.set_standard_dependencies", "modulename": "tanjun.dependencies", "qualname": "set_standard_dependencies", "type": "function", "doc": "<p>Set the standard dependencies for Tanjun.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>client</strong> (tanjun.injecting.InjectorClient):\nThe injector client to set the standard dependencies on.</li>\n</ul>\n", "parameters": ["client"], "funcdef": "def"}, "tanjun.dependencies.AsyncCache": {"fullname": "tanjun.dependencies.AsyncCache", "modulename": "tanjun.dependencies", "qualname": "AsyncCache", "type": "class", "doc": "<p>Abstract interface of a cache which stores globally identifiable resources.</p>\n\n<p><em>Note:</em>\nThis will never be implemented for resources such as <code>hikari.Member</code>\nand <code>hikari.MemberPresence</code> which aren'are only unique per-parent resource.</p>\n"}, "tanjun.dependencies.AsyncCache.get": {"fullname": "tanjun.dependencies.AsyncCache.get", "modulename": "tanjun.dependencies", "qualname": "AsyncCache.get", "type": "function", "doc": "<p>Get an entry from this cache by ID.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong> (_KeyT):\nUnique key of the entry to get; this will often be a snowflake.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>_ValueT</strong>: The found entry.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>CacheMissError</strong>: If the entry wasn't found.</li>\n<li><strong>EntryNotFound</strong>: If the entry wasn't found and the the entry definietly doesn't exist.</li>\n</ul>\n\n<p><em>Note:</em>\nThis is a specialisation of <code>CacheMissError</code> and thus may be\ncaught as <code>CacheMissError</code> and otherwise would need to be\nbefore <code>CacheMissError</code> in a try, multiple catch statement.</p>\n", "parameters": ["self", "key", "default"], "funcdef": "async def"}, "tanjun.dependencies.AsyncCache.iter_all": {"fullname": "tanjun.dependencies.AsyncCache.iter_all", "modulename": "tanjun.dependencies", "qualname": "AsyncCache.iter_all", "type": "function", "doc": "<p>Asynchronously iterate over the globally cached entries for this resource.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CacheIterator[_ValueT]</strong>: An asynchronous iterator of the entries cached globally for this resource.</li>\n</ul>\n\n<p><em>Note:</em>\nFor more information on how this is used, see the documentation for\n<code>hikari.LazyIterator</code>.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.dependencies.ChannelBoundCache": {"fullname": "tanjun.dependencies.ChannelBoundCache", "modulename": "tanjun.dependencies", "qualname": "ChannelBoundCache", "type": "class", "doc": "<p>Abstract interface of a cache which stores channel-bound resources.</p>\n"}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"fullname": "tanjun.dependencies.ChannelBoundCache.get_from_channel", "modulename": "tanjun.dependencies", "qualname": "ChannelBoundCache.get_from_channel", "type": "function", "doc": "<p>Get an entry from this cache for a specific channel by ID.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>channel_id</strong> (hikari.Snowflakeish):\nID of the channel to get an entry for.</li>\n<li><strong>id</strong> (hikari.Snowflakeish):\nUnique key of the entry to get; this will usually be a snowflake.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>_ValueT</strong>: The found entry.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>CacheMissError</strong>: If the entry wasn't found.</li>\n<li><strong>EntryNotFound</strong>: If the entry wasn't found and the the entry definietly doesn't exist.</li>\n</ul>\n\n<p><em>Note:</em>\nThis is a specialisation of <code>CacheMissError</code> and thus may be\ncaught as <code>CacheMissError</code> and otherwise would need to be\nbefore <code>CacheMissError</code> in a try, multiple catch statement.</p>\n", "parameters": ["self", "channel_id", "key", "default"], "funcdef": "async def"}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"fullname": "tanjun.dependencies.ChannelBoundCache.iter_for_channel", "modulename": "tanjun.dependencies", "qualname": "ChannelBoundCache.iter_for_channel", "type": "function", "doc": "<p>Asynchronously iterate over the entries entries cached for a channel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>channel_id</strong> (hikari.Snowflakeish):\nID of the channel to iterate over the entries cached for.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CacheIterator[_ValueT]</strong>: An asynchronous iterator of the entries cached for the specified channel.</li>\n</ul>\n", "parameters": ["self", "channel_id"], "funcdef": "def"}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"fullname": "tanjun.dependencies.ChannelBoundCache.iter_all", "modulename": "tanjun.dependencies", "qualname": "ChannelBoundCache.iter_all", "type": "function", "doc": "<p>Asynchronously iterate over the globally cached entries for this resource.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CacheIterator[_ValueT]</strong>: An asynchronous iterator of the entries cached globally for this resource.</li>\n</ul>\n\n<p><em>Note:</em>\nFor more information on how this is used, see the documentation for\n<code>hikari.LazyIterator</code>.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.dependencies.CacheIterator": {"fullname": "tanjun.dependencies.CacheIterator", "modulename": "tanjun.dependencies", "qualname": "CacheIterator", "type": "class", "doc": "<p>Abstract interface of a cache resource asynchronous iterator.</p>\n\n<p>For more information on how this is used, see the documentation for\n<code>hikari.LazyIterator</code>.</p>\n"}, "tanjun.dependencies.CacheIterator.len": {"fullname": "tanjun.dependencies.CacheIterator.len", "modulename": "tanjun.dependencies", "qualname": "CacheIterator.len", "type": "function", "doc": "<p>Get the length of the target resource.</p>\n\n<p><em>Note:</em>\nUnlike <code>CacheIterator.count</code>, this method will not deplete\nthe iterator.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>int</strong>: The length of the targeted resource.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.dependencies.CacheMissError": {"fullname": "tanjun.dependencies.CacheMissError", "modulename": "tanjun.dependencies", "qualname": "CacheMissError", "type": "class", "doc": "<p>Raised when an entry isn't found in the cache.</p>\n\n<p><em>Note:</em>\n<code>EntryNotFound</code> inherits from this error and will only be raised\nif the cache knows that the entry doesn't exist.</p>\n"}, "tanjun.dependencies.EntryNotFound": {"fullname": "tanjun.dependencies.EntryNotFound", "modulename": "tanjun.dependencies", "qualname": "EntryNotFound", "type": "class", "doc": "<p>Raised when an entry does not exist.</p>\n\n<p><em>Note:</em>\nThis is a specialisation of <code>CacheMissError</code> which indicates\nthat the cache is sure that the entry doesn't exist.</p>\n"}, "tanjun.dependencies.GuildBoundCache": {"fullname": "tanjun.dependencies.GuildBoundCache", "modulename": "tanjun.dependencies", "qualname": "GuildBoundCache", "type": "class", "doc": "<p>Abstract interface of a cache which stores guild-bound resources.</p>\n"}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"fullname": "tanjun.dependencies.GuildBoundCache.get_from_guild", "modulename": "tanjun.dependencies", "qualname": "GuildBoundCache.get_from_guild", "type": "function", "doc": "<p>Get an entry from this cache for a specific guild by ID.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>guild_id</strong> (hikari.Snowflakeish):\nID of the guild to get an entry for.</li>\n<li><strong>key</strong> (_KeyT):\nUnique key of the entry to get; this will usually be a snowflake.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>_ValueT</strong>: The found entry.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>CacheMissError</strong>: If the entry wasn't found.</li>\n<li><strong>EntryNotFound</strong>: If the entry wasn't found and the the entry definietly doesn't exist.</li>\n</ul>\n\n<p><em>Note:</em>\nThis is a specialisation of <code>CacheMissError</code> and thus may be\ncaught as <code>CacheMissError</code> and otherwise would need to be\nbefore <code>CacheMissError</code> in a try, multiple catch statement.</p>\n", "parameters": ["self", "guild_id", "key", "default"], "funcdef": "async def"}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"fullname": "tanjun.dependencies.GuildBoundCache.iter_for_guild", "modulename": "tanjun.dependencies", "qualname": "GuildBoundCache.iter_for_guild", "type": "function", "doc": "<p>Asynchronously iterate over the entries entries cached for a guild.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>guild_id</strong> (hikari.Snowflakeish):\nID of the guild to iterate over the entries cached for.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CacheIterator[_ValueT]</strong>: An asynchronous iterator of the entries cached for the specified guild.</li>\n</ul>\n\n<p><em>Note:</em>\nFor more information on how this is used, see the documentation for\n<code>hikari.LazyIterator</code>.</p>\n", "parameters": ["self", "guild_id"], "funcdef": "def"}, "tanjun.dependencies.GuildBoundCache.iter_all": {"fullname": "tanjun.dependencies.GuildBoundCache.iter_all", "modulename": "tanjun.dependencies", "qualname": "GuildBoundCache.iter_all", "type": "function", "doc": "<p>Asynchronously iterate over the globally cached entries for this resource.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CacheIterator[_ValueT]</strong>: An asynchronous iterator of the entries cached globally for this resource.</li>\n</ul>\n\n<p><em>Note:</em>\nFor more information on how this is used, see the documentation for\n<code>hikari.LazyIterator</code>.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.dependencies.SingleStoreCache": {"fullname": "tanjun.dependencies.SingleStoreCache", "modulename": "tanjun.dependencies", "qualname": "SingleStoreCache", "type": "class", "doc": "<p>Abstract interface of a cache which stores one resource.</p>\n\n<p><em>Note:</em>\nThis is mostly just for the <code>hikari.OwnUser</code> cache store.</p>\n"}, "tanjun.dependencies.SingleStoreCache.get": {"fullname": "tanjun.dependencies.SingleStoreCache.get", "modulename": "tanjun.dependencies", "qualname": "SingleStoreCache.get", "type": "function", "doc": "<p>Get the entry.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>_ValueT</strong>: The found entry.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>CacheMissError</strong>: If the entry wasn't found.</li>\n<li><strong>EntryNotFound</strong>: If the entry wasn't found and the the entry definietly doesn't exist.</li>\n</ul>\n\n<p><em>Note:</em>\nThis is a specialisation of <code>CacheMissError</code> and thus may be\ncaught as <code>CacheMissError</code> and otherwise would need to be\nbefore <code>CacheMissError</code> in a try, multiple catch statement.</p>\n", "parameters": ["self", "default"], "funcdef": "async def"}, "tanjun.dependencies.SfCache": {"fullname": "tanjun.dependencies.SfCache", "modulename": "tanjun.dependencies", "qualname": "SfCache", "type": "variable", "doc": "<p></p>\n"}, "tanjun.dependencies.SfChannelBound": {"fullname": "tanjun.dependencies.SfChannelBound", "modulename": "tanjun.dependencies", "qualname": "SfChannelBound", "type": "variable", "doc": "<p></p>\n"}, "tanjun.dependencies.SfGuildBound": {"fullname": "tanjun.dependencies.SfGuildBound", "modulename": "tanjun.dependencies", "qualname": "SfGuildBound", "type": "variable", "doc": "<p></p>\n"}, "tanjun.dependencies.fetch_my_user": {"fullname": "tanjun.dependencies.fetch_my_user", "modulename": "tanjun.dependencies", "qualname": "fetch_my_user", "type": "function", "doc": "<p>Fetch the current user from the client's cache or rest client.</p>\n\n<p><em>Note:</em>\nThis is used in the standard <code>LazyConstant[hikari.OwnUser]</code>\ndependency.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>client</strong> (tanjun.abc.Client):\nThe client to use to fetch the user.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.OwnUser</strong>: The current user.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the cache couldn't be used to get the current user and the REST\nclient is not bound to a Bot token.</li>\n</ul>\n", "parameters": ["client", "me_cache"], "funcdef": "async def"}, "tanjun.dependencies.cache_callback": {"fullname": "tanjun.dependencies.cache_callback", "modulename": "tanjun.dependencies", "qualname": "cache_callback", "type": "function", "doc": "<p>Cache the result of a callback within a dependency injection context.</p>\n\n<p><em>Note:</em>\nThis is internally used by <code>cached_inject</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>callback</strong> (CallbackSig[_T]):\nThe callback to cache the result of.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>expire_after</strong> (typing.Union[int, float, datetime.timedelta, None]):\nThe amount of time to cache the result for in seconds.</p>\n\n<p>Leave this as <code>None</code> to cache for the runtime of the application.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Callable[..., Awaitable[_T]]</strong>: A callback which will cache the result of the given callback after the\nfirst call.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If expire_after is not a valid value.\nIf expire_after is not less than or equal to 0 seconds.</li>\n</ul>\n", "parameters": ["callback", "expire_after"], "funcdef": "def"}, "tanjun.dependencies.cached_inject": {"fullname": "tanjun.dependencies.cached_inject", "modulename": "tanjun.dependencies", "qualname": "cached_inject", "type": "function", "doc": "<p>Inject a callback with caching.</p>\n\n<p>This acts like <code>tanjun.injecting.inject</code> and the result of it\nshould also be assigned to a parameter's default to be used.</p>\n\n<h6 id=\"example\">Example</h6>\n\n<p>```py\nasync def resolve_database(\n    client: tanjun.abc.Client = tanjun.inject(type=tanjun.abc.Client)\n) -> Database:\n    raise NotImplementedError</p>\n\n<p>@tanjun.as_message_command(\"command name\")\nasync def command(\n    ctx: tanjun.abc.Context, db: Database = tanjun.cached_inject(resolve_database)\n) -> None:\n    raise NotImplementedError</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>callback</strong> (CallbackSig[_T]):\nThe callback to inject.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>expire_after</strong> (typing.Union[int, float, datetime.timedelta, None]):\nThe amount of time to cache the result for in seconds.</p>\n\n<p>Leave this as <code>None</code> to cache for the runtime of the application.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tanjun.injecting.Injected[_T]</strong>: Injector used to resolve the cached callback.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If expire_after is not a valid value.\nIf expire_after is not less than or equal to 0 seconds.</li>\n</ul>\n", "parameters": ["callback", "expire_after"], "funcdef": "def"}, "tanjun.dependencies.LazyConstant": {"fullname": "tanjun.dependencies.LazyConstant", "modulename": "tanjun.dependencies", "qualname": "LazyConstant", "type": "class", "doc": "<p>Injected type used to hold and generate lazy constants.</p>\n\n<p><em>Note:</em>\nTo easily resolve this type use <code>inject_lc</code>.</p>\n"}, "tanjun.dependencies.LazyConstant.__init__": {"fullname": "tanjun.dependencies.LazyConstant.__init__", "modulename": "tanjun.dependencies", "qualname": "LazyConstant.__init__", "type": "function", "doc": "<p>Initiate a new lazy constant.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (collections.abc.Callable[..., tanjun.abc.MaybeAwaitable[_T]]):\nCallback used to resolve this to a constant value.</p>\n\n<p>This supports dependency injection and may either be sync or asynchronous.</p></li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.dependencies.LazyConstant.callback": {"fullname": "tanjun.dependencies.LazyConstant.callback", "modulename": "tanjun.dependencies", "qualname": "LazyConstant.callback", "type": "variable", "doc": "<p>Descriptor of the callback used to get this constant's initial value.</p>\n"}, "tanjun.dependencies.LazyConstant.get_value": {"fullname": "tanjun.dependencies.LazyConstant.get_value", "modulename": "tanjun.dependencies", "qualname": "LazyConstant.get_value", "type": "function", "doc": "<p>Get the value of this constant if set, else <code>None</code>.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.dependencies.LazyConstant.reset": {"fullname": "tanjun.dependencies.LazyConstant.reset", "modulename": "tanjun.dependencies", "qualname": "LazyConstant.reset", "type": "function", "doc": "<p>Clear the internally stored value.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.dependencies.LazyConstant.set_value": {"fullname": "tanjun.dependencies.LazyConstant.set_value", "modulename": "tanjun.dependencies", "qualname": "LazyConstant.set_value", "type": "function", "doc": "<p>Set the constant value.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (_T):\nThe value to set.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the constant has already been set.</li>\n</ul>\n", "parameters": ["self", "value"], "funcdef": "def"}, "tanjun.dependencies.LazyConstant.acquire": {"fullname": "tanjun.dependencies.LazyConstant.acquire", "modulename": "tanjun.dependencies", "qualname": "LazyConstant.acquire", "type": "function", "doc": "<p>Acquire this lazy constant as an asynchronous lock.</p>\n\n<p>This is used to ensure that the value is only generated once\nand should be kept acquired until <code>LazyConstant.set_value</code> has\nbeen called.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>contextlib.AbstractAsyncContextManager[typing.Any]</strong>: Context manager that can be used to acquire the lock.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.dependencies.inject_lc": {"fullname": "tanjun.dependencies.inject_lc", "modulename": "tanjun.dependencies", "qualname": "inject_lc", "type": "function", "doc": "<p>Make a LazyConstant injector.</p>\n\n<p>This acts like <code>tanjun.injecting.inject</code> and the result of it\nshould also be assigned to a parameter's default to be used.</p>\n\n<p><em>Note:</em>\nFor this to work, a <code>LazyConstant</code> must've been set as a type\ndependency for the passed <code>type_</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>type_</strong> (type[_T]):\nThe type of the constant to resolve.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tanjun.injecting.Injected[_T]</strong>: Injector used to resolve the LazyConstant.</li>\n</ul>\n\n<h6 id=\"example\">Example</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@component</span><span class=\"o\">.</span><span class=\"n\">with_command</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_message_command</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span>\n    <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">MessageCommand</span><span class=\"p\">,</span>\n    <span class=\"n\">application</span><span class=\"p\">:</span> <span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">Application</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">inject_lc</span><span class=\"p\">(</span><span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">)</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span>\n\n<span class=\"o\">...</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">resolve_app</span><span class=\"p\">(</span>\n    <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Client</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">inject</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">)</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span>\n\n<span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"o\">.</span><span class=\"n\">from_gateway_bot</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set_type_dependency</span><span class=\"p\">(</span>\n    <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">LazyConstant</span><span class=\"p\">[</span><span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">LazyConstant</span><span class=\"p\">(</span><span class=\"n\">resolve_app</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["type_"], "funcdef": "def"}, "tanjun.dependencies.make_lc_resolver": {"fullname": "tanjun.dependencies.make_lc_resolver", "modulename": "tanjun.dependencies", "qualname": "make_lc_resolver", "type": "function", "doc": "<p>Make an injected callback which resolves a LazyConstant.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>This is internally used by <code>inject_lc</code>.</li>\n<li>For this to work, a <code>LazyConstant</code> must've been set as a type\ndependency for the passed <code>type_</code>.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>type_</strong> (type[_T]):\nThe type of the constant to resolve.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[..., collections.abc.Awaitable[_T]]</strong>: An injected callback used to resolve the LazyConstant.</li>\n</ul>\n", "parameters": ["type_"], "funcdef": "def"}, "tanjun.dependencies.AbstractConcurrencyLimiter": {"fullname": "tanjun.dependencies.AbstractConcurrencyLimiter", "modulename": "tanjun.dependencies", "qualname": "AbstractConcurrencyLimiter", "type": "class", "doc": "<p>Interface used for limiting command concurrent usage.</p>\n"}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"fullname": "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire", "modulename": "tanjun.dependencies", "qualname": "AbstractConcurrencyLimiter.try_acquire", "type": "function", "doc": "<p>Try to acquire a concurrency lock on a bucket.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe concurrency bucket to acquire.</li>\n<li><strong>ctx</strong> (tanjun.abc.Context):\nThe context to acquire this resource lock with.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bool</strong>: Whether the lock was acquired.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "ctx"], "funcdef": "async def"}, "tanjun.dependencies.AbstractConcurrencyLimiter.release": {"fullname": "tanjun.dependencies.AbstractConcurrencyLimiter.release", "modulename": "tanjun.dependencies", "qualname": "AbstractConcurrencyLimiter.release", "type": "function", "doc": "<p>Release a concurrency lock on a bucket.</p>\n", "parameters": ["self", "bucket_id", "ctx"], "funcdef": "async def"}, "tanjun.dependencies.AbstractCooldownManager": {"fullname": "tanjun.dependencies.AbstractCooldownManager", "modulename": "tanjun.dependencies", "qualname": "AbstractCooldownManager", "type": "class", "doc": "<p>Interface used for managing command calldowns.</p>\n"}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"fullname": "tanjun.dependencies.AbstractCooldownManager.check_cooldown", "modulename": "tanjun.dependencies", "qualname": "AbstractCooldownManager.check_cooldown", "type": "function", "doc": "<p>Check if a bucket is on cooldown for the provided context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe cooldown bucket to check.</li>\n<li><strong>ctx</strong> (tanjun.abc.Context):\nThe context of the command.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>increment</strong> (bool):\nWhether this call should increment the bucket's use counter if\nit isn't depleted.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[float]</strong>: When this command will next be usable for the provided context\nif it's in cooldown else <code>None</code>.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "ctx", "increment"], "funcdef": "async def"}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"fullname": "tanjun.dependencies.AbstractCooldownManager.increment_cooldown", "modulename": "tanjun.dependencies", "qualname": "AbstractCooldownManager.increment_cooldown", "type": "function", "doc": "<p>Increment the cooldown of a cooldown bucket.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe cooldown bucket's ID.</li>\n<li><strong>ctx</strong> (tanjun.abc.Context):\nThe context of the command.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "ctx"], "funcdef": "async def"}, "tanjun.dependencies.BucketResource": {"fullname": "tanjun.dependencies.BucketResource", "modulename": "tanjun.dependencies", "qualname": "BucketResource", "type": "class", "doc": "<p>Resource target types used within command calldowns and concurrency limiters.</p>\n"}, "tanjun.dependencies.BucketResource.USER": {"fullname": "tanjun.dependencies.BucketResource.USER", "modulename": "tanjun.dependencies", "qualname": "BucketResource.USER", "type": "variable", "doc": "<p>A per-user resource bucket.</p>\n"}, "tanjun.dependencies.BucketResource.MEMBER": {"fullname": "tanjun.dependencies.BucketResource.MEMBER", "modulename": "tanjun.dependencies", "qualname": "BucketResource.MEMBER", "type": "variable", "doc": "<p>A per-guild member resource bucket.</p>\n\n<p><em>Note:</em>\nWhen executed in a DM this will be per-DM.</p>\n"}, "tanjun.dependencies.BucketResource.CHANNEL": {"fullname": "tanjun.dependencies.BucketResource.CHANNEL", "modulename": "tanjun.dependencies", "qualname": "BucketResource.CHANNEL", "type": "variable", "doc": "<p>A per-channel resource bucket.</p>\n"}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"fullname": "tanjun.dependencies.BucketResource.PARENT_CHANNEL", "modulename": "tanjun.dependencies", "qualname": "BucketResource.PARENT_CHANNEL", "type": "variable", "doc": "<p>A per-parent channel resource bucket.</p>\n\n<p><em>Note:</em>\nFor DM channels this will be per-DM, for guild channels with no parents\nthis'll be per-guild.</p>\n"}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"fullname": "tanjun.dependencies.BucketResource.TOP_ROLE", "modulename": "tanjun.dependencies", "qualname": "BucketResource.TOP_ROLE", "type": "variable", "doc": "<p>A per-highest role resource bucket.</p>\n\n<p><em>Note:</em>\nWhen executed in a DM this will be per-DM, with this defaulting to\ntargeting the @everyone role if they have no real roles.</p>\n"}, "tanjun.dependencies.BucketResource.GUILD": {"fullname": "tanjun.dependencies.BucketResource.GUILD", "modulename": "tanjun.dependencies", "qualname": "BucketResource.GUILD", "type": "variable", "doc": "<p>A per-guild resource bucket.</p>\n\n<p><em>Note:</em>\nWhen executed in a DM this will be per-DM.</p>\n"}, "tanjun.dependencies.BucketResource.GLOBAL": {"fullname": "tanjun.dependencies.BucketResource.GLOBAL", "modulename": "tanjun.dependencies", "qualname": "BucketResource.GLOBAL", "type": "variable", "doc": "<p>A global resource bucket.</p>\n"}, "tanjun.dependencies.ConcurrencyPreExecution": {"fullname": "tanjun.dependencies.ConcurrencyPreExecution", "modulename": "tanjun.dependencies", "qualname": "ConcurrencyPreExecution", "type": "class", "doc": "<p>Pre-execution hook used to acquire a bucket concurrency limiter.</p>\n\n<p><em>Note:</em>\nFor a concurrency limiter to work properly, both <code>ConcurrencyPreExecution</code>\nand <code>ConcurrencyPostExecution</code> hooks must be registered for a command scope.</p>\n"}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"fullname": "tanjun.dependencies.ConcurrencyPreExecution.__init__", "modulename": "tanjun.dependencies", "qualname": "ConcurrencyPreExecution.__init__", "type": "function", "doc": "<p>Initialise a concurrency pre-execution hook.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe concurrency limit bucket's ID.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (str):\nThe error message to send in response as a command error if this fails\nto acquire the concurrency limit.</p>\n\n<p>Defaults to \"This resource is currently busy; please try again later.\".</p></li>\n</ul>\n", "parameters": ["self", "bucket_id", "error_message"], "funcdef": "def"}, "tanjun.dependencies.ConcurrencyPostExecution": {"fullname": "tanjun.dependencies.ConcurrencyPostExecution", "modulename": "tanjun.dependencies", "qualname": "ConcurrencyPostExecution", "type": "class", "doc": "<p>Post-execution hook used to release a bucket concurrency limiter.</p>\n\n<p><em>Note:</em>\nFor a concurrency limiter to work properly, both <code>ConcurrencyPreExecution</code>\nand <code>ConcurrencyPostExecution</code> hooks must be registered for a command scope.</p>\n"}, "tanjun.dependencies.ConcurrencyPostExecution.__init__": {"fullname": "tanjun.dependencies.ConcurrencyPostExecution.__init__", "modulename": "tanjun.dependencies", "qualname": "ConcurrencyPostExecution.__init__", "type": "function", "doc": "<p>Initialise a concurrency post-execution hook.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe concurrency limit bucket's ID.</li>\n</ul>\n", "parameters": ["self", "bucket_id"], "funcdef": "def"}, "tanjun.dependencies.CooldownPreExecution": {"fullname": "tanjun.dependencies.CooldownPreExecution", "modulename": "tanjun.dependencies", "qualname": "CooldownPreExecution", "type": "class", "doc": "<p>Pre-execution hook used to manage a command's cooldowns.</p>\n\n<p>To avoid race-conditions this handles both erroring when the bucket is hit\ninstead and incrementing the bucket's use counter.</p>\n"}, "tanjun.dependencies.CooldownPreExecution.__init__": {"fullname": "tanjun.dependencies.CooldownPreExecution.__init__", "modulename": "tanjun.dependencies", "qualname": "CooldownPreExecution.__init__", "type": "function", "doc": "<p>Initialise a pre-execution cooldown command hook.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe cooldown bucket's ID.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (str):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to f\"Please wait {cooldown:0.2f} seconds before using this command again.\".</p></li>\n<li><p><strong>owners_exempt</strong> (bool):\nWhether owners should be exempt from the cooldown.</p>\n\n<p>Defaults to <code>True</code>.</p></li>\n</ul>\n", "parameters": ["self", "bucket_id", "error_message", "owners_exempt"], "funcdef": "def"}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"fullname": "tanjun.dependencies.InMemoryConcurrencyLimiter", "modulename": "tanjun.dependencies", "qualname": "InMemoryConcurrencyLimiter", "type": "class", "doc": "<p>In-memory standard implementation of <code>AbstractConcurrencyLimiter</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p><code>InMemoryConcurrencyLimiter.set_bucket</code> may be used to set the concurrency\nlimits for a specific bucket:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">(</span>\n    <span class=\"n\">InMemoryConcurrencyLimiter</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Set the default bucket template to 10 concurrent uses of the command per-user.</span>\n    <span class=\"o\">.</span><span class=\"n\">set_bucket</span><span class=\"p\">(</span><span class=\"s2\">&quot;default&quot;</span><span class=\"p\">,</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">BucketResource</span><span class=\"o\">.</span><span class=\"n\">USER</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Set the &quot;moderation&quot; bucket with a limit of 5 concurrent uses per-guild.</span>\n    <span class=\"o\">.</span><span class=\"n\">set_bucket</span><span class=\"p\">(</span><span class=\"s2\">&quot;moderation&quot;</span><span class=\"p\">,</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">BucketResource</span><span class=\"o\">.</span><span class=\"n\">GUILD</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"o\">.</span><span class=\"n\">set_bucket</span><span class=\"p\">()</span>\n    <span class=\"c1\"># add_to_client will setup the concurrency manager (setting it as an</span>\n    <span class=\"c1\"># injected dependency and registering callbacks to manage it).</span>\n    <span class=\"o\">.</span><span class=\"n\">add_to_client</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n"}, "tanjun.dependencies.InMemoryConcurrencyLimiter.__init__": {"fullname": "tanjun.dependencies.InMemoryConcurrencyLimiter.__init__", "modulename": "tanjun.dependencies", "qualname": "InMemoryConcurrencyLimiter.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"fullname": "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client", "modulename": "tanjun.dependencies", "qualname": "InMemoryConcurrencyLimiter.add_to_client", "type": "function", "doc": "<p>Add this concurrency manager to a tanjun client.</p>\n\n<p><em>Note:</em>\nThis registers the manager as a type dependency and manages opening\nand closing the manager based on the client's life cycle.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>client</strong> (tanjun.abc.Client):\nThe client to add this concurrency manager to.</li>\n</ul>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.dependencies.InMemoryConcurrencyLimiter.close": {"fullname": "tanjun.dependencies.InMemoryConcurrencyLimiter.close", "modulename": "tanjun.dependencies", "qualname": "InMemoryConcurrencyLimiter.close", "type": "function", "doc": "<p>Stop the concurrency manager.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the concurrency manager is not running.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.dependencies.InMemoryConcurrencyLimiter.open": {"fullname": "tanjun.dependencies.InMemoryConcurrencyLimiter.open", "modulename": "tanjun.dependencies", "qualname": "InMemoryConcurrencyLimiter.open", "type": "function", "doc": "<p>Start the concurrency manager.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the concurrency manager is already running.\nIf called in a thread with no running event loop.</li>\n</ul>\n", "parameters": ["self", "_loop"], "funcdef": "def"}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"fullname": "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire", "modulename": "tanjun.dependencies", "qualname": "InMemoryConcurrencyLimiter.try_acquire", "type": "function", "doc": "<p>Try to acquire a concurrency lock on a bucket.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe concurrency bucket to acquire.</li>\n<li><strong>ctx</strong> (tanjun.abc.Context):\nThe context to acquire this resource lock with.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bool</strong>: Whether the lock was acquired.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "ctx"], "funcdef": "async def"}, "tanjun.dependencies.InMemoryConcurrencyLimiter.release": {"fullname": "tanjun.dependencies.InMemoryConcurrencyLimiter.release", "modulename": "tanjun.dependencies", "qualname": "InMemoryConcurrencyLimiter.release", "type": "function", "doc": "<p>Release a concurrency lock on a bucket.</p>\n", "parameters": ["self", "bucket_id", "ctx"], "funcdef": "async def"}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"fullname": "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket", "modulename": "tanjun.dependencies", "qualname": "InMemoryConcurrencyLimiter.disable_bucket", "type": "function", "doc": "<p>Disable a concurrency limit bucket.</p>\n\n<p>This will stop the bucket from ever hitting a concurrency limit\nand also prevents the bucket from defaulting.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>bucket_id</strong> (str):\nThe bucket to disable.</p>\n\n<p><em>Note:</em>\n\"default\" is a special bucket which is used as a template\nfor unknown bucket IDs.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This concurrency manager to allow for chaining.</li>\n</ul>\n", "parameters": ["self", "bucket_id"], "funcdef": "def"}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"fullname": "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket", "modulename": "tanjun.dependencies", "qualname": "InMemoryConcurrencyLimiter.set_bucket", "type": "function", "doc": "<p>Set the concurrency limit for a specific bucket.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>bucket_id</strong> (str):\nThe ID of the bucket to set the concurrency limit for.</p>\n\n<p><em>Note:</em>\n\"default\" is a special bucket which is used as a template\nfor unknown bucket IDs.</p></li>\n<li><strong>resource</strong> (tanjun.BucketResource):\nThe type of resource to target for the concurrency limit.</li>\n<li><strong>limit</strong> (int):\nThe maximum number of concurrent uses to allow.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The concurrency manager to allow call chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If an invalid resource type is given.\nif limit is less 0 or negative.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "resource", "limit"], "funcdef": "def"}, "tanjun.dependencies.InMemoryCooldownManager": {"fullname": "tanjun.dependencies.InMemoryCooldownManager", "modulename": "tanjun.dependencies", "qualname": "InMemoryCooldownManager", "type": "class", "doc": "<p>In-memory standard implementation of <code>AbstractCooldownManager</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p><code>InMemoryCooldownManager.set_bucket</code> may be used to set the cooldown for a\nspecific bucket:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">(</span>\n    <span class=\"n\">InMemoryCooldownManager</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Set the default bucket template to a per-user 10 uses per-60 seconds cooldown.</span>\n    <span class=\"o\">.</span><span class=\"n\">set_bucket</span><span class=\"p\">(</span><span class=\"s2\">&quot;default&quot;</span><span class=\"p\">,</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">BucketResource</span><span class=\"o\">.</span><span class=\"n\">USER</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Set the &quot;moderation&quot; bucket to a per-guild 100 uses per-5 minutes cooldown.</span>\n    <span class=\"o\">.</span><span class=\"n\">set_bucket</span><span class=\"p\">(</span><span class=\"s2\">&quot;moderation&quot;</span><span class=\"p\">,</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">BucketResource</span><span class=\"o\">.</span><span class=\"n\">GUILD</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">minutes</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">))</span>\n    <span class=\"o\">.</span><span class=\"n\">set_bucket</span><span class=\"p\">()</span>\n    <span class=\"c1\"># add_to_client will setup the cooldown manager (setting it as an</span>\n    <span class=\"c1\"># injected dependency and registering callbacks to manage it).</span>\n    <span class=\"o\">.</span><span class=\"n\">add_to_client</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n"}, "tanjun.dependencies.InMemoryCooldownManager.__init__": {"fullname": "tanjun.dependencies.InMemoryCooldownManager.__init__", "modulename": "tanjun.dependencies", "qualname": "InMemoryCooldownManager.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"fullname": "tanjun.dependencies.InMemoryCooldownManager.add_to_client", "modulename": "tanjun.dependencies", "qualname": "InMemoryCooldownManager.add_to_client", "type": "function", "doc": "<p>Add this cooldown manager to a tanjun client.</p>\n\n<p><em>Note:</em>\nThis registers the manager as a type dependency and manages opening\nand closing the manager based on the client's life cycle.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>client</strong> (tanjun.abc.Client):\nThe client to add this cooldown manager to.</li>\n</ul>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"fullname": "tanjun.dependencies.InMemoryCooldownManager.check_cooldown", "modulename": "tanjun.dependencies", "qualname": "InMemoryCooldownManager.check_cooldown", "type": "function", "doc": "<p>Check if a bucket is on cooldown for the provided context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe cooldown bucket to check.</li>\n<li><strong>ctx</strong> (tanjun.abc.Context):\nThe context of the command.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>increment</strong> (bool):\nWhether this call should increment the bucket's use counter if\nit isn't depleted.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[float]</strong>: When this command will next be usable for the provided context\nif it's in cooldown else <code>None</code>.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "ctx", "increment"], "funcdef": "async def"}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"fullname": "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown", "modulename": "tanjun.dependencies", "qualname": "InMemoryCooldownManager.increment_cooldown", "type": "function", "doc": "<p>Increment the cooldown of a cooldown bucket.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe cooldown bucket's ID.</li>\n<li><strong>ctx</strong> (tanjun.abc.Context):\nThe context of the command.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "ctx"], "funcdef": "async def"}, "tanjun.dependencies.InMemoryCooldownManager.close": {"fullname": "tanjun.dependencies.InMemoryCooldownManager.close", "modulename": "tanjun.dependencies", "qualname": "InMemoryCooldownManager.close", "type": "function", "doc": "<p>Stop the cooldown manager.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the cooldown manager is not running.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.dependencies.InMemoryCooldownManager.open": {"fullname": "tanjun.dependencies.InMemoryCooldownManager.open", "modulename": "tanjun.dependencies", "qualname": "InMemoryCooldownManager.open", "type": "function", "doc": "<p>Start the cooldown manager.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the cooldown manager is already running.\nIf called in a thread with no running event loop.</li>\n</ul>\n", "parameters": ["self", "_loop"], "funcdef": "def"}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"fullname": "tanjun.dependencies.InMemoryCooldownManager.disable_bucket", "modulename": "tanjun.dependencies", "qualname": "InMemoryCooldownManager.disable_bucket", "type": "function", "doc": "<p>Disable a cooldown bucket.</p>\n\n<p>This will stop the bucket from ever hitting a cooldown and also\nprevents the bucket from defaulting.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>bucket_id</strong> (str):\nThe bucket to disable.</p>\n\n<p><em>Note:</em>\n\"default\" is a special bucket which is used as a template\nfor unknown bucket IDs.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This cooldown manager to allow for chaining.</li>\n</ul>\n", "parameters": ["self", "bucket_id"], "funcdef": "def"}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"fullname": "tanjun.dependencies.InMemoryCooldownManager.set_bucket", "modulename": "tanjun.dependencies", "qualname": "InMemoryCooldownManager.set_bucket", "type": "function", "doc": "<p>Set the cooldown for a specific bucket.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>bucket_id</strong> (str):\nThe ID of the bucket to set the cooldown for.</p>\n\n<p><em>Note:</em>\n\"default\" is a special bucket which is used as a template\nfor unknown bucket IDs.</p></li>\n<li><strong>resource</strong> (tanjun.BucketResource):\nThe type of resource to target for the cooldown.</li>\n<li><strong>limit</strong> (int):\nThe number of uses per cooldown period.</li>\n<li><strong>reset_after</strong> (int, float, datetime.timedelta):\nThe cooldown period.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The cooldown manager to allow call chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If an invalid resource type is given.\nIf reset_after or limit are negative, 0 or invalid.\nif limit is less 0 or negative.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "resource", "limit", "reset_after"], "funcdef": "def"}, "tanjun.dependencies.with_concurrency_limit": {"fullname": "tanjun.dependencies.with_concurrency_limit", "modulename": "tanjun.dependencies", "qualname": "with_concurrency_limit", "type": "function", "doc": "<p>Add the hooks used to manage a command's concurrency limit through a decorator call.</p>\n\n<p><em>Warning:</em>\nConcurrency limiters will only work if there's a setup injected\n<code>AbstractConcurrencyLimiter</code> dependency with <code>InMemoryConcurrencyLimiter</code>\nbeing usable as a standard in-memory concurrency manager.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe concurrency limit bucket's ID.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (str):\nThe error message to send in response as a command error if this fails\nto acquire the concurrency limit.</p>\n\n<p>Defaults to \"This resource is currently busy; please try again later.\".</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[CommandT], CommandT]</strong>: A decorator that adds the concurrency limiter hooks to a command.</li>\n</ul>\n", "parameters": ["bucket_id", "error_message"], "funcdef": "def"}, "tanjun.dependencies.with_cooldown": {"fullname": "tanjun.dependencies.with_cooldown", "modulename": "tanjun.dependencies", "qualname": "with_cooldown", "type": "function", "doc": "<p>Add a pre-execution hook used to manage a command's cooldown through a decorator call.</p>\n\n<p><em>Warning:</em>\nCooldowns will only work if there's a setup injected <code>AbstractCooldownManager</code>\ndependency with <code>InMemoryCooldownManager</code> being usable as a standard in-memory\ncooldown manager.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe cooldown bucket's ID.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (str):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to f\"Please wait {cooldown:0.2f} seconds before using this command again.\".</p></li>\n<li><p><strong>owners_exempt</strong> (bool):\nWhether owners should be exempt from the cooldown.</p>\n\n<p>Defaults to <code>True</code>.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[CommandT], CommandT]</strong>: A decorator that adds a <code>CooldownPreExecution</code> hook to the command.</li>\n</ul>\n", "parameters": ["bucket_id", "error_message", "owners_exempt"], "funcdef": "def"}, "tanjun.dependencies.AbstractOwners": {"fullname": "tanjun.dependencies.AbstractOwners", "modulename": "tanjun.dependencies", "qualname": "AbstractOwners", "type": "class", "doc": "<p>Interface used to check if a user is deemed to be the bot's \"owner\".</p>\n"}, "tanjun.dependencies.AbstractOwners.check_ownership": {"fullname": "tanjun.dependencies.AbstractOwners.check_ownership", "modulename": "tanjun.dependencies", "qualname": "AbstractOwners.check_ownership", "type": "function", "doc": "<p>Check whether this object is owned by the given object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>client</strong> (tanjun.abc.Client):\nThe Tanjun client this check is being called by.</li>\n<li><strong>user</strong> (hikari.User):\nThe user to check ownership for.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bool</strong>: Whether the bot is owned by the provided user.</li>\n</ul>\n", "parameters": ["self", "client", "user"], "funcdef": "async def"}, "tanjun.dependencies.Owners": {"fullname": "tanjun.dependencies.Owners", "modulename": "tanjun.dependencies", "qualname": "Owners", "type": "class", "doc": "<p>Default implementation of the owner check interface.</p>\n\n<p><em>Warning:</em>\n<code>fallback_to_application</code> is only possible when the REST client\nis bound to a Bot token or if a type dependency is registered for\n<code>tanjun.dependencies.SingleStoreCache[hikari.Application]</code>.</p>\n"}, "tanjun.dependencies.Owners.__init__": {"fullname": "tanjun.dependencies.Owners.__init__", "modulename": "tanjun.dependencies", "qualname": "Owners.__init__", "type": "function", "doc": "<p>Initiate a new owner check dependency.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>expire_after</strong> (typing.Union[datetime.timedelta, int, float]):\nThe amount of time to cache application owner data for in seconds.</p>\n\n<p>This defaults to 5 minutes and is only applicable if <code>rest</code> is also\npassed.</p></li>\n<li><p><strong>fallback_to_application</strong> (bool):\nWhether this check should fallback to checking the application's owners\nif the user isn't in `owners.</p>\n\n<p>This only works when the bot's rest client is bound to a Bot token or\nif <code>tanjun.dependencies.SingleStoreCache[hikari.Application]</code> is available.</p></li>\n<li><strong>owners</strong> (typing.Optional[hikari.SnowflakeishSequence[hikari.User]]):\nSequence of objects and IDs of the users that are allowed to use the\nbot's owners-only commands.</li>\n</ul>\n", "parameters": ["self", "expire_after", "fallback_to_application", "owners"], "funcdef": "def"}, "tanjun.dependencies.Owners.check_ownership": {"fullname": "tanjun.dependencies.Owners.check_ownership", "modulename": "tanjun.dependencies", "qualname": "Owners.check_ownership", "type": "function", "doc": "<p>Check whether this object is owned by the given object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>client</strong> (tanjun.abc.Client):\nThe Tanjun client this check is being called by.</li>\n<li><strong>user</strong> (hikari.User):\nThe user to check ownership for.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bool</strong>: Whether the bot is owned by the provided user.</li>\n</ul>\n", "parameters": ["self", "client", "user"], "funcdef": "async def"}, "tanjun.dependencies.async_cache": {"fullname": "tanjun.dependencies.async_cache", "modulename": "tanjun.dependencies.async_cache", "qualname": "", "type": "module", "doc": "<p>Interface for an optional asynchronous gateway cache dependency.</p>\n\n<p>This allows you to share data between instances using something like a redis cache\n(for example) and will be used by standard Tanjun components as well as\nextensions if implemented.</p>\n\n<p><em>Note:</em>\nWhile there aren't any standard implementations for these interfaces, a\nRedis implementation of this for the types found in Hikari's gateway cache\ncan be found in <a href=\"https://github.com/FasterSpeeding/Sake\">hikari-sake</a>\n>=v1.0.1a1 (exposed by <code>RedisResource.add_to_tanjun</code>).</p>\n\n<p>Tanjun will use the following type dependencies for these interfaces if they are\nregistered with the client:</p>\n\n<ul>\n<li><code>AsyncCache[str, hikari.InviteWithMetadata]</code></li>\n<li><code>SfCache[hikari.GuildChannel]</code></li>\n<li><code>SfCache[hikari.KnownCustomEmoji]</code></li>\n<li><code>SfCache[hikari.Guild]</code></li>\n<li><code>SfCache[hikari.Role]</code></li>\n<li><code>SfCache[hikari.User]</code></li>\n<li><code>SfGuildBound[hikari.Member]</code></li>\n<li><code>SfGuildBound[hikari.MemberPresence]</code></li>\n<li><code>SfGuildBound[hikari.VoiceState]</code></li>\n<li><code>SfGuildBound[hikari.Role]</code></li>\n<li><code>SingleStoreCache[hikari.OwnUser]</code></li>\n<li><code>SingleStoreCache[hikari.Application]</code></li>\n<li><code>SingleStoreCache[hikari.AuthorizationApplication]</code></li>\n</ul>\n"}, "tanjun.dependencies.async_cache.AsyncCache": {"fullname": "tanjun.dependencies.async_cache.AsyncCache", "modulename": "tanjun.dependencies.async_cache", "qualname": "AsyncCache", "type": "class", "doc": "<p>Abstract interface of a cache which stores globally identifiable resources.</p>\n\n<p><em>Note:</em>\nThis will never be implemented for resources such as <code>hikari.Member</code>\nand <code>hikari.MemberPresence</code> which aren'are only unique per-parent resource.</p>\n"}, "tanjun.dependencies.async_cache.AsyncCache.get": {"fullname": "tanjun.dependencies.async_cache.AsyncCache.get", "modulename": "tanjun.dependencies.async_cache", "qualname": "AsyncCache.get", "type": "function", "doc": "<p>Get an entry from this cache by ID.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong> (_KeyT):\nUnique key of the entry to get; this will often be a snowflake.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>_ValueT</strong>: The found entry.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>CacheMissError</strong>: If the entry wasn't found.</li>\n<li><strong>EntryNotFound</strong>: If the entry wasn't found and the the entry definietly doesn't exist.</li>\n</ul>\n\n<p><em>Note:</em>\nThis is a specialisation of <code>CacheMissError</code> and thus may be\ncaught as <code>CacheMissError</code> and otherwise would need to be\nbefore <code>CacheMissError</code> in a try, multiple catch statement.</p>\n", "parameters": ["self", "key", "default"], "funcdef": "async def"}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"fullname": "tanjun.dependencies.async_cache.AsyncCache.iter_all", "modulename": "tanjun.dependencies.async_cache", "qualname": "AsyncCache.iter_all", "type": "function", "doc": "<p>Asynchronously iterate over the globally cached entries for this resource.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CacheIterator[_ValueT]</strong>: An asynchronous iterator of the entries cached globally for this resource.</li>\n</ul>\n\n<p><em>Note:</em>\nFor more information on how this is used, see the documentation for\n<code>hikari.LazyIterator</code>.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.dependencies.async_cache.ChannelBoundCache": {"fullname": "tanjun.dependencies.async_cache.ChannelBoundCache", "modulename": "tanjun.dependencies.async_cache", "qualname": "ChannelBoundCache", "type": "class", "doc": "<p>Abstract interface of a cache which stores channel-bound resources.</p>\n"}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"fullname": "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel", "modulename": "tanjun.dependencies.async_cache", "qualname": "ChannelBoundCache.get_from_channel", "type": "function", "doc": "<p>Get an entry from this cache for a specific channel by ID.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>channel_id</strong> (hikari.Snowflakeish):\nID of the channel to get an entry for.</li>\n<li><strong>id</strong> (hikari.Snowflakeish):\nUnique key of the entry to get; this will usually be a snowflake.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>_ValueT</strong>: The found entry.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>CacheMissError</strong>: If the entry wasn't found.</li>\n<li><strong>EntryNotFound</strong>: If the entry wasn't found and the the entry definietly doesn't exist.</li>\n</ul>\n\n<p><em>Note:</em>\nThis is a specialisation of <code>CacheMissError</code> and thus may be\ncaught as <code>CacheMissError</code> and otherwise would need to be\nbefore <code>CacheMissError</code> in a try, multiple catch statement.</p>\n", "parameters": ["self", "channel_id", "key", "default"], "funcdef": "async def"}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"fullname": "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel", "modulename": "tanjun.dependencies.async_cache", "qualname": "ChannelBoundCache.iter_for_channel", "type": "function", "doc": "<p>Asynchronously iterate over the entries entries cached for a channel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>channel_id</strong> (hikari.Snowflakeish):\nID of the channel to iterate over the entries cached for.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CacheIterator[_ValueT]</strong>: An asynchronous iterator of the entries cached for the specified channel.</li>\n</ul>\n", "parameters": ["self", "channel_id"], "funcdef": "def"}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"fullname": "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all", "modulename": "tanjun.dependencies.async_cache", "qualname": "ChannelBoundCache.iter_all", "type": "function", "doc": "<p>Asynchronously iterate over the globally cached entries for this resource.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CacheIterator[_ValueT]</strong>: An asynchronous iterator of the entries cached globally for this resource.</li>\n</ul>\n\n<p><em>Note:</em>\nFor more information on how this is used, see the documentation for\n<code>hikari.LazyIterator</code>.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.dependencies.async_cache.CacheIterator": {"fullname": "tanjun.dependencies.async_cache.CacheIterator", "modulename": "tanjun.dependencies.async_cache", "qualname": "CacheIterator", "type": "class", "doc": "<p>Abstract interface of a cache resource asynchronous iterator.</p>\n\n<p>For more information on how this is used, see the documentation for\n<code>hikari.LazyIterator</code>.</p>\n"}, "tanjun.dependencies.async_cache.CacheIterator.len": {"fullname": "tanjun.dependencies.async_cache.CacheIterator.len", "modulename": "tanjun.dependencies.async_cache", "qualname": "CacheIterator.len", "type": "function", "doc": "<p>Get the length of the target resource.</p>\n\n<p><em>Note:</em>\nUnlike <code>CacheIterator.count</code>, this method will not deplete\nthe iterator.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>int</strong>: The length of the targeted resource.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.dependencies.async_cache.CacheMissError": {"fullname": "tanjun.dependencies.async_cache.CacheMissError", "modulename": "tanjun.dependencies.async_cache", "qualname": "CacheMissError", "type": "class", "doc": "<p>Raised when an entry isn't found in the cache.</p>\n\n<p><em>Note:</em>\n<code>EntryNotFound</code> inherits from this error and will only be raised\nif the cache knows that the entry doesn't exist.</p>\n"}, "tanjun.dependencies.async_cache.EntryNotFound": {"fullname": "tanjun.dependencies.async_cache.EntryNotFound", "modulename": "tanjun.dependencies.async_cache", "qualname": "EntryNotFound", "type": "class", "doc": "<p>Raised when an entry does not exist.</p>\n\n<p><em>Note:</em>\nThis is a specialisation of <code>CacheMissError</code> which indicates\nthat the cache is sure that the entry doesn't exist.</p>\n"}, "tanjun.dependencies.async_cache.GuildBoundCache": {"fullname": "tanjun.dependencies.async_cache.GuildBoundCache", "modulename": "tanjun.dependencies.async_cache", "qualname": "GuildBoundCache", "type": "class", "doc": "<p>Abstract interface of a cache which stores guild-bound resources.</p>\n"}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"fullname": "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild", "modulename": "tanjun.dependencies.async_cache", "qualname": "GuildBoundCache.get_from_guild", "type": "function", "doc": "<p>Get an entry from this cache for a specific guild by ID.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>guild_id</strong> (hikari.Snowflakeish):\nID of the guild to get an entry for.</li>\n<li><strong>key</strong> (_KeyT):\nUnique key of the entry to get; this will usually be a snowflake.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>_ValueT</strong>: The found entry.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>CacheMissError</strong>: If the entry wasn't found.</li>\n<li><strong>EntryNotFound</strong>: If the entry wasn't found and the the entry definietly doesn't exist.</li>\n</ul>\n\n<p><em>Note:</em>\nThis is a specialisation of <code>CacheMissError</code> and thus may be\ncaught as <code>CacheMissError</code> and otherwise would need to be\nbefore <code>CacheMissError</code> in a try, multiple catch statement.</p>\n", "parameters": ["self", "guild_id", "key", "default"], "funcdef": "async def"}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"fullname": "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild", "modulename": "tanjun.dependencies.async_cache", "qualname": "GuildBoundCache.iter_for_guild", "type": "function", "doc": "<p>Asynchronously iterate over the entries entries cached for a guild.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>guild_id</strong> (hikari.Snowflakeish):\nID of the guild to iterate over the entries cached for.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CacheIterator[_ValueT]</strong>: An asynchronous iterator of the entries cached for the specified guild.</li>\n</ul>\n\n<p><em>Note:</em>\nFor more information on how this is used, see the documentation for\n<code>hikari.LazyIterator</code>.</p>\n", "parameters": ["self", "guild_id"], "funcdef": "def"}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"fullname": "tanjun.dependencies.async_cache.GuildBoundCache.iter_all", "modulename": "tanjun.dependencies.async_cache", "qualname": "GuildBoundCache.iter_all", "type": "function", "doc": "<p>Asynchronously iterate over the globally cached entries for this resource.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CacheIterator[_ValueT]</strong>: An asynchronous iterator of the entries cached globally for this resource.</li>\n</ul>\n\n<p><em>Note:</em>\nFor more information on how this is used, see the documentation for\n<code>hikari.LazyIterator</code>.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.dependencies.async_cache.SingleStoreCache": {"fullname": "tanjun.dependencies.async_cache.SingleStoreCache", "modulename": "tanjun.dependencies.async_cache", "qualname": "SingleStoreCache", "type": "class", "doc": "<p>Abstract interface of a cache which stores one resource.</p>\n\n<p><em>Note:</em>\nThis is mostly just for the <code>hikari.OwnUser</code> cache store.</p>\n"}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"fullname": "tanjun.dependencies.async_cache.SingleStoreCache.get", "modulename": "tanjun.dependencies.async_cache", "qualname": "SingleStoreCache.get", "type": "function", "doc": "<p>Get the entry.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>_ValueT</strong>: The found entry.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>CacheMissError</strong>: If the entry wasn't found.</li>\n<li><strong>EntryNotFound</strong>: If the entry wasn't found and the the entry definietly doesn't exist.</li>\n</ul>\n\n<p><em>Note:</em>\nThis is a specialisation of <code>CacheMissError</code> and thus may be\ncaught as <code>CacheMissError</code> and otherwise would need to be\nbefore <code>CacheMissError</code> in a try, multiple catch statement.</p>\n", "parameters": ["self", "default"], "funcdef": "async def"}, "tanjun.dependencies.async_cache.SfCache": {"fullname": "tanjun.dependencies.async_cache.SfCache", "modulename": "tanjun.dependencies.async_cache", "qualname": "SfCache", "type": "variable", "doc": "<p>Alias of <code>AsyncCache</code> where the key is a snowflake.</p>\n"}, "tanjun.dependencies.async_cache.SfChannelBound": {"fullname": "tanjun.dependencies.async_cache.SfChannelBound", "modulename": "tanjun.dependencies.async_cache", "qualname": "SfChannelBound", "type": "variable", "doc": "<p>Alias of <code>ChannelBoundCache</code> where the key is a snowflake.</p>\n"}, "tanjun.dependencies.async_cache.SfGuildBound": {"fullname": "tanjun.dependencies.async_cache.SfGuildBound", "modulename": "tanjun.dependencies.async_cache", "qualname": "SfGuildBound", "type": "variable", "doc": "<p>Alias of <code>GuildBoundCache</code> where the key is a snowflake.</p>\n"}, "tanjun.dependencies.callbacks": {"fullname": "tanjun.dependencies.callbacks", "modulename": "tanjun.dependencies.callbacks", "qualname": "", "type": "module", "doc": "<p>Callback dependencies used for getting context and client based data.</p>\n"}, "tanjun.dependencies.callbacks.fetch_my_user": {"fullname": "tanjun.dependencies.callbacks.fetch_my_user", "modulename": "tanjun.dependencies.callbacks", "qualname": "fetch_my_user", "type": "function", "doc": "<p>Fetch the current user from the client's cache or rest client.</p>\n\n<p><em>Note:</em>\nThis is used in the standard <code>LazyConstant[hikari.OwnUser]</code>\ndependency.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>client</strong> (tanjun.abc.Client):\nThe client to use to fetch the user.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.OwnUser</strong>: The current user.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the cache couldn't be used to get the current user and the REST\nclient is not bound to a Bot token.</li>\n</ul>\n", "parameters": ["client", "me_cache"], "funcdef": "async def"}, "tanjun.dependencies.data": {"fullname": "tanjun.dependencies.data", "modulename": "tanjun.dependencies.data", "qualname": "", "type": "module", "doc": "<p>Dependency utilities used for managing data.</p>\n"}, "tanjun.dependencies.data.cache_callback": {"fullname": "tanjun.dependencies.data.cache_callback", "modulename": "tanjun.dependencies.data", "qualname": "cache_callback", "type": "function", "doc": "<p>Cache the result of a callback within a dependency injection context.</p>\n\n<p><em>Note:</em>\nThis is internally used by <code>cached_inject</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>callback</strong> (CallbackSig[_T]):\nThe callback to cache the result of.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>expire_after</strong> (typing.Union[int, float, datetime.timedelta, None]):\nThe amount of time to cache the result for in seconds.</p>\n\n<p>Leave this as <code>None</code> to cache for the runtime of the application.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Callable[..., Awaitable[_T]]</strong>: A callback which will cache the result of the given callback after the\nfirst call.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If expire_after is not a valid value.\nIf expire_after is not less than or equal to 0 seconds.</li>\n</ul>\n", "parameters": ["callback", "expire_after"], "funcdef": "def"}, "tanjun.dependencies.data.cached_inject": {"fullname": "tanjun.dependencies.data.cached_inject", "modulename": "tanjun.dependencies.data", "qualname": "cached_inject", "type": "function", "doc": "<p>Inject a callback with caching.</p>\n\n<p>This acts like <code>tanjun.injecting.inject</code> and the result of it\nshould also be assigned to a parameter's default to be used.</p>\n\n<h6 id=\"example\">Example</h6>\n\n<p>```py\nasync def resolve_database(\n    client: tanjun.abc.Client = tanjun.inject(type=tanjun.abc.Client)\n) -> Database:\n    raise NotImplementedError</p>\n\n<p>@tanjun.as_message_command(\"command name\")\nasync def command(\n    ctx: tanjun.abc.Context, db: Database = tanjun.cached_inject(resolve_database)\n) -> None:\n    raise NotImplementedError</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>callback</strong> (CallbackSig[_T]):\nThe callback to inject.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>expire_after</strong> (typing.Union[int, float, datetime.timedelta, None]):\nThe amount of time to cache the result for in seconds.</p>\n\n<p>Leave this as <code>None</code> to cache for the runtime of the application.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tanjun.injecting.Injected[_T]</strong>: Injector used to resolve the cached callback.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If expire_after is not a valid value.\nIf expire_after is not less than or equal to 0 seconds.</li>\n</ul>\n", "parameters": ["callback", "expire_after"], "funcdef": "def"}, "tanjun.dependencies.data.LazyConstant": {"fullname": "tanjun.dependencies.data.LazyConstant", "modulename": "tanjun.dependencies.data", "qualname": "LazyConstant", "type": "class", "doc": "<p>Injected type used to hold and generate lazy constants.</p>\n\n<p><em>Note:</em>\nTo easily resolve this type use <code>inject_lc</code>.</p>\n"}, "tanjun.dependencies.data.LazyConstant.__init__": {"fullname": "tanjun.dependencies.data.LazyConstant.__init__", "modulename": "tanjun.dependencies.data", "qualname": "LazyConstant.__init__", "type": "function", "doc": "<p>Initiate a new lazy constant.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (collections.abc.Callable[..., tanjun.abc.MaybeAwaitable[_T]]):\nCallback used to resolve this to a constant value.</p>\n\n<p>This supports dependency injection and may either be sync or asynchronous.</p></li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.dependencies.data.LazyConstant.callback": {"fullname": "tanjun.dependencies.data.LazyConstant.callback", "modulename": "tanjun.dependencies.data", "qualname": "LazyConstant.callback", "type": "variable", "doc": "<p>Descriptor of the callback used to get this constant's initial value.</p>\n"}, "tanjun.dependencies.data.LazyConstant.get_value": {"fullname": "tanjun.dependencies.data.LazyConstant.get_value", "modulename": "tanjun.dependencies.data", "qualname": "LazyConstant.get_value", "type": "function", "doc": "<p>Get the value of this constant if set, else <code>None</code>.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.dependencies.data.LazyConstant.reset": {"fullname": "tanjun.dependencies.data.LazyConstant.reset", "modulename": "tanjun.dependencies.data", "qualname": "LazyConstant.reset", "type": "function", "doc": "<p>Clear the internally stored value.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.dependencies.data.LazyConstant.set_value": {"fullname": "tanjun.dependencies.data.LazyConstant.set_value", "modulename": "tanjun.dependencies.data", "qualname": "LazyConstant.set_value", "type": "function", "doc": "<p>Set the constant value.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (_T):\nThe value to set.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the constant has already been set.</li>\n</ul>\n", "parameters": ["self", "value"], "funcdef": "def"}, "tanjun.dependencies.data.LazyConstant.acquire": {"fullname": "tanjun.dependencies.data.LazyConstant.acquire", "modulename": "tanjun.dependencies.data", "qualname": "LazyConstant.acquire", "type": "function", "doc": "<p>Acquire this lazy constant as an asynchronous lock.</p>\n\n<p>This is used to ensure that the value is only generated once\nand should be kept acquired until <code>LazyConstant.set_value</code> has\nbeen called.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>contextlib.AbstractAsyncContextManager[typing.Any]</strong>: Context manager that can be used to acquire the lock.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.dependencies.data.inject_lc": {"fullname": "tanjun.dependencies.data.inject_lc", "modulename": "tanjun.dependencies.data", "qualname": "inject_lc", "type": "function", "doc": "<p>Make a LazyConstant injector.</p>\n\n<p>This acts like <code>tanjun.injecting.inject</code> and the result of it\nshould also be assigned to a parameter's default to be used.</p>\n\n<p><em>Note:</em>\nFor this to work, a <code>LazyConstant</code> must've been set as a type\ndependency for the passed <code>type_</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>type_</strong> (type[_T]):\nThe type of the constant to resolve.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tanjun.injecting.Injected[_T]</strong>: Injector used to resolve the LazyConstant.</li>\n</ul>\n\n<h6 id=\"example\">Example</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@component</span><span class=\"o\">.</span><span class=\"n\">with_command</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_message_command</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span>\n    <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">MessageCommand</span><span class=\"p\">,</span>\n    <span class=\"n\">application</span><span class=\"p\">:</span> <span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">Application</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">inject_lc</span><span class=\"p\">(</span><span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">)</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span>\n\n<span class=\"o\">...</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">resolve_app</span><span class=\"p\">(</span>\n    <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Client</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">inject</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">)</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span>\n\n<span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"o\">.</span><span class=\"n\">from_gateway_bot</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set_type_dependency</span><span class=\"p\">(</span>\n    <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">LazyConstant</span><span class=\"p\">[</span><span class=\"n\">hikari</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">LazyConstant</span><span class=\"p\">(</span><span class=\"n\">resolve_app</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["type_"], "funcdef": "def"}, "tanjun.dependencies.data.make_lc_resolver": {"fullname": "tanjun.dependencies.data.make_lc_resolver", "modulename": "tanjun.dependencies.data", "qualname": "make_lc_resolver", "type": "function", "doc": "<p>Make an injected callback which resolves a LazyConstant.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>This is internally used by <code>inject_lc</code>.</li>\n<li>For this to work, a <code>LazyConstant</code> must've been set as a type\ndependency for the passed <code>type_</code>.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>type_</strong> (type[_T]):\nThe type of the constant to resolve.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[..., collections.abc.Awaitable[_T]]</strong>: An injected callback used to resolve the LazyConstant.</li>\n</ul>\n", "parameters": ["type_"], "funcdef": "def"}, "tanjun.dependencies.limiters": {"fullname": "tanjun.dependencies.limiters", "modulename": "tanjun.dependencies.limiters", "qualname": "", "type": "module", "doc": "<p>Command cooldown and concurrency limiters.</p>\n"}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter": {"fullname": "tanjun.dependencies.limiters.AbstractConcurrencyLimiter", "modulename": "tanjun.dependencies.limiters", "qualname": "AbstractConcurrencyLimiter", "type": "class", "doc": "<p>Interface used for limiting command concurrent usage.</p>\n"}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"fullname": "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire", "modulename": "tanjun.dependencies.limiters", "qualname": "AbstractConcurrencyLimiter.try_acquire", "type": "function", "doc": "<p>Try to acquire a concurrency lock on a bucket.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe concurrency bucket to acquire.</li>\n<li><strong>ctx</strong> (tanjun.abc.Context):\nThe context to acquire this resource lock with.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bool</strong>: Whether the lock was acquired.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "ctx"], "funcdef": "async def"}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.release": {"fullname": "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.release", "modulename": "tanjun.dependencies.limiters", "qualname": "AbstractConcurrencyLimiter.release", "type": "function", "doc": "<p>Release a concurrency lock on a bucket.</p>\n", "parameters": ["self", "bucket_id", "ctx"], "funcdef": "async def"}, "tanjun.dependencies.limiters.AbstractCooldownManager": {"fullname": "tanjun.dependencies.limiters.AbstractCooldownManager", "modulename": "tanjun.dependencies.limiters", "qualname": "AbstractCooldownManager", "type": "class", "doc": "<p>Interface used for managing command calldowns.</p>\n"}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"fullname": "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown", "modulename": "tanjun.dependencies.limiters", "qualname": "AbstractCooldownManager.check_cooldown", "type": "function", "doc": "<p>Check if a bucket is on cooldown for the provided context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe cooldown bucket to check.</li>\n<li><strong>ctx</strong> (tanjun.abc.Context):\nThe context of the command.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>increment</strong> (bool):\nWhether this call should increment the bucket's use counter if\nit isn't depleted.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[float]</strong>: When this command will next be usable for the provided context\nif it's in cooldown else <code>None</code>.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "ctx", "increment"], "funcdef": "async def"}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"fullname": "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown", "modulename": "tanjun.dependencies.limiters", "qualname": "AbstractCooldownManager.increment_cooldown", "type": "function", "doc": "<p>Increment the cooldown of a cooldown bucket.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe cooldown bucket's ID.</li>\n<li><strong>ctx</strong> (tanjun.abc.Context):\nThe context of the command.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "ctx"], "funcdef": "async def"}, "tanjun.dependencies.limiters.BucketResource": {"fullname": "tanjun.dependencies.limiters.BucketResource", "modulename": "tanjun.dependencies.limiters", "qualname": "BucketResource", "type": "class", "doc": "<p>Resource target types used within command calldowns and concurrency limiters.</p>\n"}, "tanjun.dependencies.limiters.BucketResource.USER": {"fullname": "tanjun.dependencies.limiters.BucketResource.USER", "modulename": "tanjun.dependencies.limiters", "qualname": "BucketResource.USER", "type": "variable", "doc": "<p>A per-user resource bucket.</p>\n"}, "tanjun.dependencies.limiters.BucketResource.MEMBER": {"fullname": "tanjun.dependencies.limiters.BucketResource.MEMBER", "modulename": "tanjun.dependencies.limiters", "qualname": "BucketResource.MEMBER", "type": "variable", "doc": "<p>A per-guild member resource bucket.</p>\n\n<p><em>Note:</em>\nWhen executed in a DM this will be per-DM.</p>\n"}, "tanjun.dependencies.limiters.BucketResource.CHANNEL": {"fullname": "tanjun.dependencies.limiters.BucketResource.CHANNEL", "modulename": "tanjun.dependencies.limiters", "qualname": "BucketResource.CHANNEL", "type": "variable", "doc": "<p>A per-channel resource bucket.</p>\n"}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"fullname": "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL", "modulename": "tanjun.dependencies.limiters", "qualname": "BucketResource.PARENT_CHANNEL", "type": "variable", "doc": "<p>A per-parent channel resource bucket.</p>\n\n<p><em>Note:</em>\nFor DM channels this will be per-DM, for guild channels with no parents\nthis'll be per-guild.</p>\n"}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"fullname": "tanjun.dependencies.limiters.BucketResource.TOP_ROLE", "modulename": "tanjun.dependencies.limiters", "qualname": "BucketResource.TOP_ROLE", "type": "variable", "doc": "<p>A per-highest role resource bucket.</p>\n\n<p><em>Note:</em>\nWhen executed in a DM this will be per-DM, with this defaulting to\ntargeting the @everyone role if they have no real roles.</p>\n"}, "tanjun.dependencies.limiters.BucketResource.GUILD": {"fullname": "tanjun.dependencies.limiters.BucketResource.GUILD", "modulename": "tanjun.dependencies.limiters", "qualname": "BucketResource.GUILD", "type": "variable", "doc": "<p>A per-guild resource bucket.</p>\n\n<p><em>Note:</em>\nWhen executed in a DM this will be per-DM.</p>\n"}, "tanjun.dependencies.limiters.BucketResource.GLOBAL": {"fullname": "tanjun.dependencies.limiters.BucketResource.GLOBAL", "modulename": "tanjun.dependencies.limiters", "qualname": "BucketResource.GLOBAL", "type": "variable", "doc": "<p>A global resource bucket.</p>\n"}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"fullname": "tanjun.dependencies.limiters.ConcurrencyPreExecution", "modulename": "tanjun.dependencies.limiters", "qualname": "ConcurrencyPreExecution", "type": "class", "doc": "<p>Pre-execution hook used to acquire a bucket concurrency limiter.</p>\n\n<p><em>Note:</em>\nFor a concurrency limiter to work properly, both <code>ConcurrencyPreExecution</code>\nand <code>ConcurrencyPostExecution</code> hooks must be registered for a command scope.</p>\n"}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"fullname": "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__", "modulename": "tanjun.dependencies.limiters", "qualname": "ConcurrencyPreExecution.__init__", "type": "function", "doc": "<p>Initialise a concurrency pre-execution hook.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe concurrency limit bucket's ID.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (str):\nThe error message to send in response as a command error if this fails\nto acquire the concurrency limit.</p>\n\n<p>Defaults to \"This resource is currently busy; please try again later.\".</p></li>\n</ul>\n", "parameters": ["self", "bucket_id", "error_message"], "funcdef": "def"}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"fullname": "tanjun.dependencies.limiters.ConcurrencyPostExecution", "modulename": "tanjun.dependencies.limiters", "qualname": "ConcurrencyPostExecution", "type": "class", "doc": "<p>Post-execution hook used to release a bucket concurrency limiter.</p>\n\n<p><em>Note:</em>\nFor a concurrency limiter to work properly, both <code>ConcurrencyPreExecution</code>\nand <code>ConcurrencyPostExecution</code> hooks must be registered for a command scope.</p>\n"}, "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__": {"fullname": "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__", "modulename": "tanjun.dependencies.limiters", "qualname": "ConcurrencyPostExecution.__init__", "type": "function", "doc": "<p>Initialise a concurrency post-execution hook.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe concurrency limit bucket's ID.</li>\n</ul>\n", "parameters": ["self", "bucket_id"], "funcdef": "def"}, "tanjun.dependencies.limiters.CooldownPreExecution": {"fullname": "tanjun.dependencies.limiters.CooldownPreExecution", "modulename": "tanjun.dependencies.limiters", "qualname": "CooldownPreExecution", "type": "class", "doc": "<p>Pre-execution hook used to manage a command's cooldowns.</p>\n\n<p>To avoid race-conditions this handles both erroring when the bucket is hit\ninstead and incrementing the bucket's use counter.</p>\n"}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"fullname": "tanjun.dependencies.limiters.CooldownPreExecution.__init__", "modulename": "tanjun.dependencies.limiters", "qualname": "CooldownPreExecution.__init__", "type": "function", "doc": "<p>Initialise a pre-execution cooldown command hook.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe cooldown bucket's ID.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (str):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to f\"Please wait {cooldown:0.2f} seconds before using this command again.\".</p></li>\n<li><p><strong>owners_exempt</strong> (bool):\nWhether owners should be exempt from the cooldown.</p>\n\n<p>Defaults to <code>True</code>.</p></li>\n</ul>\n", "parameters": ["self", "bucket_id", "error_message", "owners_exempt"], "funcdef": "def"}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"fullname": "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter", "modulename": "tanjun.dependencies.limiters", "qualname": "InMemoryConcurrencyLimiter", "type": "class", "doc": "<p>In-memory standard implementation of <code>AbstractConcurrencyLimiter</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p><code>InMemoryConcurrencyLimiter.set_bucket</code> may be used to set the concurrency\nlimits for a specific bucket:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">(</span>\n    <span class=\"n\">InMemoryConcurrencyLimiter</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Set the default bucket template to 10 concurrent uses of the command per-user.</span>\n    <span class=\"o\">.</span><span class=\"n\">set_bucket</span><span class=\"p\">(</span><span class=\"s2\">&quot;default&quot;</span><span class=\"p\">,</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">BucketResource</span><span class=\"o\">.</span><span class=\"n\">USER</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Set the &quot;moderation&quot; bucket with a limit of 5 concurrent uses per-guild.</span>\n    <span class=\"o\">.</span><span class=\"n\">set_bucket</span><span class=\"p\">(</span><span class=\"s2\">&quot;moderation&quot;</span><span class=\"p\">,</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">BucketResource</span><span class=\"o\">.</span><span class=\"n\">GUILD</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"o\">.</span><span class=\"n\">set_bucket</span><span class=\"p\">()</span>\n    <span class=\"c1\"># add_to_client will setup the concurrency manager (setting it as an</span>\n    <span class=\"c1\"># injected dependency and registering callbacks to manage it).</span>\n    <span class=\"o\">.</span><span class=\"n\">add_to_client</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n"}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.__init__": {"fullname": "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.__init__", "modulename": "tanjun.dependencies.limiters", "qualname": "InMemoryConcurrencyLimiter.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"fullname": "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client", "modulename": "tanjun.dependencies.limiters", "qualname": "InMemoryConcurrencyLimiter.add_to_client", "type": "function", "doc": "<p>Add this concurrency manager to a tanjun client.</p>\n\n<p><em>Note:</em>\nThis registers the manager as a type dependency and manages opening\nand closing the manager based on the client's life cycle.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>client</strong> (tanjun.abc.Client):\nThe client to add this concurrency manager to.</li>\n</ul>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.close": {"fullname": "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.close", "modulename": "tanjun.dependencies.limiters", "qualname": "InMemoryConcurrencyLimiter.close", "type": "function", "doc": "<p>Stop the concurrency manager.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the concurrency manager is not running.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open": {"fullname": "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open", "modulename": "tanjun.dependencies.limiters", "qualname": "InMemoryConcurrencyLimiter.open", "type": "function", "doc": "<p>Start the concurrency manager.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the concurrency manager is already running.\nIf called in a thread with no running event loop.</li>\n</ul>\n", "parameters": ["self", "_loop"], "funcdef": "def"}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"fullname": "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire", "modulename": "tanjun.dependencies.limiters", "qualname": "InMemoryConcurrencyLimiter.try_acquire", "type": "function", "doc": "<p>Try to acquire a concurrency lock on a bucket.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe concurrency bucket to acquire.</li>\n<li><strong>ctx</strong> (tanjun.abc.Context):\nThe context to acquire this resource lock with.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bool</strong>: Whether the lock was acquired.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "ctx"], "funcdef": "async def"}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.release": {"fullname": "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.release", "modulename": "tanjun.dependencies.limiters", "qualname": "InMemoryConcurrencyLimiter.release", "type": "function", "doc": "<p>Release a concurrency lock on a bucket.</p>\n", "parameters": ["self", "bucket_id", "ctx"], "funcdef": "async def"}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"fullname": "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket", "modulename": "tanjun.dependencies.limiters", "qualname": "InMemoryConcurrencyLimiter.disable_bucket", "type": "function", "doc": "<p>Disable a concurrency limit bucket.</p>\n\n<p>This will stop the bucket from ever hitting a concurrency limit\nand also prevents the bucket from defaulting.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>bucket_id</strong> (str):\nThe bucket to disable.</p>\n\n<p><em>Note:</em>\n\"default\" is a special bucket which is used as a template\nfor unknown bucket IDs.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This concurrency manager to allow for chaining.</li>\n</ul>\n", "parameters": ["self", "bucket_id"], "funcdef": "def"}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"fullname": "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket", "modulename": "tanjun.dependencies.limiters", "qualname": "InMemoryConcurrencyLimiter.set_bucket", "type": "function", "doc": "<p>Set the concurrency limit for a specific bucket.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>bucket_id</strong> (str):\nThe ID of the bucket to set the concurrency limit for.</p>\n\n<p><em>Note:</em>\n\"default\" is a special bucket which is used as a template\nfor unknown bucket IDs.</p></li>\n<li><strong>resource</strong> (tanjun.BucketResource):\nThe type of resource to target for the concurrency limit.</li>\n<li><strong>limit</strong> (int):\nThe maximum number of concurrent uses to allow.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The concurrency manager to allow call chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If an invalid resource type is given.\nif limit is less 0 or negative.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "resource", "limit"], "funcdef": "def"}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"fullname": "tanjun.dependencies.limiters.InMemoryCooldownManager", "modulename": "tanjun.dependencies.limiters", "qualname": "InMemoryCooldownManager", "type": "class", "doc": "<p>In-memory standard implementation of <code>AbstractCooldownManager</code>.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p><code>InMemoryCooldownManager.set_bucket</code> may be used to set the cooldown for a\nspecific bucket:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">(</span>\n    <span class=\"n\">InMemoryCooldownManager</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Set the default bucket template to a per-user 10 uses per-60 seconds cooldown.</span>\n    <span class=\"o\">.</span><span class=\"n\">set_bucket</span><span class=\"p\">(</span><span class=\"s2\">&quot;default&quot;</span><span class=\"p\">,</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">BucketResource</span><span class=\"o\">.</span><span class=\"n\">USER</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Set the &quot;moderation&quot; bucket to a per-guild 100 uses per-5 minutes cooldown.</span>\n    <span class=\"o\">.</span><span class=\"n\">set_bucket</span><span class=\"p\">(</span><span class=\"s2\">&quot;moderation&quot;</span><span class=\"p\">,</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">BucketResource</span><span class=\"o\">.</span><span class=\"n\">GUILD</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">minutes</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">))</span>\n    <span class=\"o\">.</span><span class=\"n\">set_bucket</span><span class=\"p\">()</span>\n    <span class=\"c1\"># add_to_client will setup the cooldown manager (setting it as an</span>\n    <span class=\"c1\"># injected dependency and registering callbacks to manage it).</span>\n    <span class=\"o\">.</span><span class=\"n\">add_to_client</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n"}, "tanjun.dependencies.limiters.InMemoryCooldownManager.__init__": {"fullname": "tanjun.dependencies.limiters.InMemoryCooldownManager.__init__", "modulename": "tanjun.dependencies.limiters", "qualname": "InMemoryCooldownManager.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"fullname": "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client", "modulename": "tanjun.dependencies.limiters", "qualname": "InMemoryCooldownManager.add_to_client", "type": "function", "doc": "<p>Add this cooldown manager to a tanjun client.</p>\n\n<p><em>Note:</em>\nThis registers the manager as a type dependency and manages opening\nand closing the manager based on the client's life cycle.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>client</strong> (tanjun.abc.Client):\nThe client to add this cooldown manager to.</li>\n</ul>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"fullname": "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown", "modulename": "tanjun.dependencies.limiters", "qualname": "InMemoryCooldownManager.check_cooldown", "type": "function", "doc": "<p>Check if a bucket is on cooldown for the provided context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe cooldown bucket to check.</li>\n<li><strong>ctx</strong> (tanjun.abc.Context):\nThe context of the command.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>increment</strong> (bool):\nWhether this call should increment the bucket's use counter if\nit isn't depleted.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[float]</strong>: When this command will next be usable for the provided context\nif it's in cooldown else <code>None</code>.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "ctx", "increment"], "funcdef": "async def"}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"fullname": "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown", "modulename": "tanjun.dependencies.limiters", "qualname": "InMemoryCooldownManager.increment_cooldown", "type": "function", "doc": "<p>Increment the cooldown of a cooldown bucket.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe cooldown bucket's ID.</li>\n<li><strong>ctx</strong> (tanjun.abc.Context):\nThe context of the command.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "ctx"], "funcdef": "async def"}, "tanjun.dependencies.limiters.InMemoryCooldownManager.close": {"fullname": "tanjun.dependencies.limiters.InMemoryCooldownManager.close", "modulename": "tanjun.dependencies.limiters", "qualname": "InMemoryCooldownManager.close", "type": "function", "doc": "<p>Stop the cooldown manager.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the cooldown manager is not running.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.dependencies.limiters.InMemoryCooldownManager.open": {"fullname": "tanjun.dependencies.limiters.InMemoryCooldownManager.open", "modulename": "tanjun.dependencies.limiters", "qualname": "InMemoryCooldownManager.open", "type": "function", "doc": "<p>Start the cooldown manager.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the cooldown manager is already running.\nIf called in a thread with no running event loop.</li>\n</ul>\n", "parameters": ["self", "_loop"], "funcdef": "def"}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"fullname": "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket", "modulename": "tanjun.dependencies.limiters", "qualname": "InMemoryCooldownManager.disable_bucket", "type": "function", "doc": "<p>Disable a cooldown bucket.</p>\n\n<p>This will stop the bucket from ever hitting a cooldown and also\nprevents the bucket from defaulting.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>bucket_id</strong> (str):\nThe bucket to disable.</p>\n\n<p><em>Note:</em>\n\"default\" is a special bucket which is used as a template\nfor unknown bucket IDs.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: This cooldown manager to allow for chaining.</li>\n</ul>\n", "parameters": ["self", "bucket_id"], "funcdef": "def"}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"fullname": "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket", "modulename": "tanjun.dependencies.limiters", "qualname": "InMemoryCooldownManager.set_bucket", "type": "function", "doc": "<p>Set the cooldown for a specific bucket.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>bucket_id</strong> (str):\nThe ID of the bucket to set the cooldown for.</p>\n\n<p><em>Note:</em>\n\"default\" is a special bucket which is used as a template\nfor unknown bucket IDs.</p></li>\n<li><strong>resource</strong> (tanjun.BucketResource):\nThe type of resource to target for the cooldown.</li>\n<li><strong>limit</strong> (int):\nThe number of uses per cooldown period.</li>\n<li><strong>reset_after</strong> (int, float, datetime.timedelta):\nThe cooldown period.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The cooldown manager to allow call chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If an invalid resource type is given.\nIf reset_after or limit are negative, 0 or invalid.\nif limit is less 0 or negative.</li>\n</ul>\n", "parameters": ["self", "bucket_id", "resource", "limit", "reset_after"], "funcdef": "def"}, "tanjun.dependencies.limiters.with_concurrency_limit": {"fullname": "tanjun.dependencies.limiters.with_concurrency_limit", "modulename": "tanjun.dependencies.limiters", "qualname": "with_concurrency_limit", "type": "function", "doc": "<p>Add the hooks used to manage a command's concurrency limit through a decorator call.</p>\n\n<p><em>Warning:</em>\nConcurrency limiters will only work if there's a setup injected\n<code>AbstractConcurrencyLimiter</code> dependency with <code>InMemoryConcurrencyLimiter</code>\nbeing usable as a standard in-memory concurrency manager.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe concurrency limit bucket's ID.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (str):\nThe error message to send in response as a command error if this fails\nto acquire the concurrency limit.</p>\n\n<p>Defaults to \"This resource is currently busy; please try again later.\".</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[CommandT], CommandT]</strong>: A decorator that adds the concurrency limiter hooks to a command.</li>\n</ul>\n", "parameters": ["bucket_id", "error_message"], "funcdef": "def"}, "tanjun.dependencies.limiters.with_cooldown": {"fullname": "tanjun.dependencies.limiters.with_cooldown", "modulename": "tanjun.dependencies.limiters", "qualname": "with_cooldown", "type": "function", "doc": "<p>Add a pre-execution hook used to manage a command's cooldown through a decorator call.</p>\n\n<p><em>Warning:</em>\nCooldowns will only work if there's a setup injected <code>AbstractCooldownManager</code>\ndependency with <code>InMemoryCooldownManager</code> being usable as a standard in-memory\ncooldown manager.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bucket_id</strong> (str):\nThe cooldown bucket's ID.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>error_message</strong> (str):\nThe error message to send in response as a command error if the check fails.</p>\n\n<p>Defaults to f\"Please wait {cooldown:0.2f} seconds before using this command again.\".</p></li>\n<li><p><strong>owners_exempt</strong> (bool):\nWhether owners should be exempt from the cooldown.</p>\n\n<p>Defaults to <code>True</code>.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[CommandT], CommandT]</strong>: A decorator that adds a <code>CooldownPreExecution</code> hook to the command.</li>\n</ul>\n", "parameters": ["bucket_id", "error_message", "owners_exempt"], "funcdef": "def"}, "tanjun.dependencies.owners": {"fullname": "tanjun.dependencies.owners", "modulename": "tanjun.dependencies.owners", "qualname": "", "type": "module", "doc": "<p>Dependency used for managing owner checks.</p>\n"}, "tanjun.dependencies.owners.AbstractOwners": {"fullname": "tanjun.dependencies.owners.AbstractOwners", "modulename": "tanjun.dependencies.owners", "qualname": "AbstractOwners", "type": "class", "doc": "<p>Interface used to check if a user is deemed to be the bot's \"owner\".</p>\n"}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"fullname": "tanjun.dependencies.owners.AbstractOwners.check_ownership", "modulename": "tanjun.dependencies.owners", "qualname": "AbstractOwners.check_ownership", "type": "function", "doc": "<p>Check whether this object is owned by the given object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>client</strong> (tanjun.abc.Client):\nThe Tanjun client this check is being called by.</li>\n<li><strong>user</strong> (hikari.User):\nThe user to check ownership for.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bool</strong>: Whether the bot is owned by the provided user.</li>\n</ul>\n", "parameters": ["self", "client", "user"], "funcdef": "async def"}, "tanjun.dependencies.owners.Owners": {"fullname": "tanjun.dependencies.owners.Owners", "modulename": "tanjun.dependencies.owners", "qualname": "Owners", "type": "class", "doc": "<p>Default implementation of the owner check interface.</p>\n\n<p><em>Warning:</em>\n<code>fallback_to_application</code> is only possible when the REST client\nis bound to a Bot token or if a type dependency is registered for\n<code>tanjun.dependencies.SingleStoreCache[hikari.Application]</code>.</p>\n"}, "tanjun.dependencies.owners.Owners.__init__": {"fullname": "tanjun.dependencies.owners.Owners.__init__", "modulename": "tanjun.dependencies.owners", "qualname": "Owners.__init__", "type": "function", "doc": "<p>Initiate a new owner check dependency.</p>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>expire_after</strong> (typing.Union[datetime.timedelta, int, float]):\nThe amount of time to cache application owner data for in seconds.</p>\n\n<p>This defaults to 5 minutes and is only applicable if <code>rest</code> is also\npassed.</p></li>\n<li><p><strong>fallback_to_application</strong> (bool):\nWhether this check should fallback to checking the application's owners\nif the user isn't in `owners.</p>\n\n<p>This only works when the bot's rest client is bound to a Bot token or\nif <code>tanjun.dependencies.SingleStoreCache[hikari.Application]</code> is available.</p></li>\n<li><strong>owners</strong> (typing.Optional[hikari.SnowflakeishSequence[hikari.User]]):\nSequence of objects and IDs of the users that are allowed to use the\nbot's owners-only commands.</li>\n</ul>\n", "parameters": ["self", "expire_after", "fallback_to_application", "owners"], "funcdef": "def"}, "tanjun.dependencies.owners.Owners.check_ownership": {"fullname": "tanjun.dependencies.owners.Owners.check_ownership", "modulename": "tanjun.dependencies.owners", "qualname": "Owners.check_ownership", "type": "function", "doc": "<p>Check whether this object is owned by the given object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>client</strong> (tanjun.abc.Client):\nThe Tanjun client this check is being called by.</li>\n<li><strong>user</strong> (hikari.User):\nThe user to check ownership for.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bool</strong>: Whether the bot is owned by the provided user.</li>\n</ul>\n", "parameters": ["self", "client", "user"], "funcdef": "async def"}, "tanjun.errors": {"fullname": "tanjun.errors", "modulename": "tanjun.errors", "qualname": "", "type": "module", "doc": "<p>The errors and warnings raised within and by Tanjun.</p>\n"}, "tanjun.errors.CommandError": {"fullname": "tanjun.errors.CommandError", "modulename": "tanjun.errors", "qualname": "CommandError", "type": "class", "doc": "<p>Error raised to end command execution.</p>\n"}, "tanjun.errors.CommandError.__init__": {"fullname": "tanjun.errors.CommandError.__init__", "modulename": "tanjun.errors", "qualname": "CommandError.__init__", "type": "function", "doc": "<p>Initialise a command error.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>message</strong> (str):\nString message which will be sent as a response to the message\nthat triggered the current command.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: Raised when the message is over 2000 characters long or empty.</li>\n</ul>\n", "parameters": ["self", "message"], "funcdef": "def"}, "tanjun.errors.CommandError.message": {"fullname": "tanjun.errors.CommandError.message", "modulename": "tanjun.errors", "qualname": "CommandError.message", "type": "variable", "doc": "<p>The response error message.</p>\n\n<p>Tanjun will try to send the string message as a response.</p>\n"}, "tanjun.errors.ConversionError": {"fullname": "tanjun.errors.ConversionError", "modulename": "tanjun.errors", "qualname": "ConversionError", "type": "class", "doc": "<p>Error raised by a parser parameter when it failed to converter a value.</p>\n"}, "tanjun.errors.ConversionError.__init__": {"fullname": "tanjun.errors.ConversionError.__init__", "modulename": "tanjun.errors", "qualname": "ConversionError.__init__", "type": "function", "doc": "<p>Initialise a conversion error.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>parameter</strong> (tanjun.abc.Parameter):\nThe parameter this was raised by.</li>\n<li><strong>errors</strong> (collections.abc.Iterable[ValueError]):\nAn iterable of the source value errors which were raised during conversion.</li>\n</ul>\n", "parameters": ["self", "message", "parameter", "errors"], "funcdef": "def"}, "tanjun.errors.ConversionError.errors": {"fullname": "tanjun.errors.ConversionError.errors", "modulename": "tanjun.errors", "qualname": "ConversionError.errors", "type": "variable", "doc": "<p>Sequence of the errors that were caught during conversion for this parameter.</p>\n"}, "tanjun.errors.ConversionError.parameter": {"fullname": "tanjun.errors.ConversionError.parameter", "modulename": "tanjun.errors", "qualname": "ConversionError.parameter", "type": "variable", "doc": "<p>Name of the parameter this error was raised for.</p>\n"}, "tanjun.errors.HaltExecution": {"fullname": "tanjun.errors.HaltExecution", "modulename": "tanjun.errors", "qualname": "HaltExecution", "type": "class", "doc": "<p>Error raised while looking for a command in-order to end-execution early.</p>\n\n<p>For the most part, this will be raised during checks in-order to prevent\nother commands from being tried.</p>\n"}, "tanjun.errors.FailedCheck": {"fullname": "tanjun.errors.FailedCheck", "modulename": "tanjun.errors", "qualname": "FailedCheck", "type": "class", "doc": "<p>Error raised as an alternative to returning <code>False</code> in a check.</p>\n"}, "tanjun.errors.MissingDependencyError": {"fullname": "tanjun.errors.MissingDependencyError", "modulename": "tanjun.errors", "qualname": "MissingDependencyError", "type": "class", "doc": "<p>Error raised when a dependency couldn't be found.</p>\n"}, "tanjun.errors.MissingDependencyError.__init__": {"fullname": "tanjun.errors.MissingDependencyError.__init__", "modulename": "tanjun.errors", "qualname": "MissingDependencyError.__init__", "type": "function", "doc": "<p>Initialise a missing dependency error.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>message</strong> (str):\nThe error message.</li>\n</ul>\n", "parameters": ["self", "message"], "funcdef": "def"}, "tanjun.errors.MissingDependencyError.message": {"fullname": "tanjun.errors.MissingDependencyError.message", "modulename": "tanjun.errors", "qualname": "MissingDependencyError.message", "type": "variable", "doc": "<p>The error's message.</p>\n"}, "tanjun.errors.NotEnoughArgumentsError": {"fullname": "tanjun.errors.NotEnoughArgumentsError", "modulename": "tanjun.errors", "qualname": "NotEnoughArgumentsError", "type": "class", "doc": "<p>Error raised by the parser when not enough arguments are found for a parameter.</p>\n"}, "tanjun.errors.NotEnoughArgumentsError.__init__": {"fullname": "tanjun.errors.NotEnoughArgumentsError.__init__", "modulename": "tanjun.errors", "qualname": "NotEnoughArgumentsError.__init__", "type": "function", "doc": "<p>Initialise a not enough arguments error.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>message</strong> (str):\nThe error message.</li>\n<li><strong>parameter</strong> (tanjun.abc.Parameter):\nThe parameter this error was raised for.</li>\n</ul>\n", "parameters": ["self", "message", "parameter"], "funcdef": "def"}, "tanjun.errors.NotEnoughArgumentsError.parameter": {"fullname": "tanjun.errors.NotEnoughArgumentsError.parameter", "modulename": "tanjun.errors", "qualname": "NotEnoughArgumentsError.parameter", "type": "variable", "doc": "<p>Name of the parameter this error was raised for.</p>\n"}, "tanjun.errors.TooManyArgumentsError": {"fullname": "tanjun.errors.TooManyArgumentsError", "modulename": "tanjun.errors", "qualname": "TooManyArgumentsError", "type": "class", "doc": "<p>Error raised by the parser when too many arguments are found for a parameter.</p>\n"}, "tanjun.errors.TooManyArgumentsError.__init__": {"fullname": "tanjun.errors.TooManyArgumentsError.__init__", "modulename": "tanjun.errors", "qualname": "TooManyArgumentsError.__init__", "type": "function", "doc": "<p>Initialise a too many arguments error.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>message</strong> (str):\nThe error message.</li>\n<li><strong>parameter</strong> (tanjun.abc.Parameter):\nThe parameter this error was raised for.</li>\n</ul>\n", "parameters": ["self", "message", "parameter"], "funcdef": "def"}, "tanjun.errors.TooManyArgumentsError.parameter": {"fullname": "tanjun.errors.TooManyArgumentsError.parameter", "modulename": "tanjun.errors", "qualname": "TooManyArgumentsError.parameter", "type": "variable", "doc": "<p>Name of the parameter this error was raised for.</p>\n"}, "tanjun.errors.ParserError": {"fullname": "tanjun.errors.ParserError", "modulename": "tanjun.errors", "qualname": "ParserError", "type": "class", "doc": "<p>Base error raised by a parser or parameter during parsing.</p>\n\n<p><em>Note:</em>\nExpected errors raised by the parser will subclass this error.</p>\n"}, "tanjun.errors.ParserError.__init__": {"fullname": "tanjun.errors.ParserError.__init__", "modulename": "tanjun.errors", "qualname": "ParserError.__init__", "type": "function", "doc": "<p>Initialise a parser error.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>message</strong> (str):\nString message for this error.</li>\n<li><strong>parameter</strong> (typing.Optional[str]):\nName of the parameter which caused this error, should be <code>None</code> if not\napplicable.</li>\n</ul>\n", "parameters": ["self", "message", "parameter"], "funcdef": "def"}, "tanjun.errors.ParserError.message": {"fullname": "tanjun.errors.ParserError.message", "modulename": "tanjun.errors", "qualname": "ParserError.message", "type": "variable", "doc": "<p>String message for this error.</p>\n\n<p><em>Note:</em>\nThis may be used as a command response message.</p>\n"}, "tanjun.errors.ParserError.parameter": {"fullname": "tanjun.errors.ParserError.parameter", "modulename": "tanjun.errors", "qualname": "ParserError.parameter", "type": "variable", "doc": "<p>Name of the this was raised for.</p>\n\n<p><em>Note:</em>\nThis will be <code>builtin.None</code> if it was raised while parsing the provided\nmessage content.</p>\n"}, "tanjun.errors.TanjunError": {"fullname": "tanjun.errors.TanjunError", "modulename": "tanjun.errors", "qualname": "TanjunError", "type": "class", "doc": "<p>The base class for all errors raised by Tanjun.</p>\n"}, "tanjun.hooks": {"fullname": "tanjun.hooks", "modulename": "tanjun.hooks", "qualname": "", "type": "module", "doc": "<p>Standard implementation of Tanjun's command execution hook models.</p>\n"}, "tanjun.hooks.AnyHooks": {"fullname": "tanjun.hooks.AnyHooks", "modulename": "tanjun.hooks", "qualname": "AnyHooks", "type": "variable", "doc": "<p>Hooks that can be used with any context.</p>\n\n<p><em>Note:</em>\nThis is shorthand for Hooks[tanjun.abc.Context].</p>\n"}, "tanjun.hooks.Hooks": {"fullname": "tanjun.hooks.Hooks", "modulename": "tanjun.hooks", "qualname": "Hooks", "type": "class", "doc": "<p>Standard implementation of <code>tanjun.abc.Hooks</code> used for command execution.</p>\n\n<p><code>tanjun.abc.ContextT_contra</code> will either be <code>tanjun.abc.Context</code>,\n<code>tanjun.abc.MessageContext</code> or <code>tanjun.abc.SlashContext</code>.</p>\n\n<p><em>Note:</em>\nThis implementation adds a concept of parser errors which won't be\ndispatched to general \"error\" hooks and do not share the error\nsuppression semantics as they favour to always suppress the error\nif a registered handler is found.</p>\n"}, "tanjun.hooks.Hooks.__init__": {"fullname": "tanjun.hooks.Hooks.__init__", "modulename": "tanjun.hooks", "qualname": "Hooks.__init__", "type": "function", "doc": "<p>Initialise a command hook object.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.hooks.Hooks.add_to_command": {"fullname": "tanjun.hooks.Hooks.add_to_command", "modulename": "tanjun.hooks", "qualname": "Hooks.add_to_command", "type": "function", "doc": "<p>Add this hook object to a command.</p>\n\n<p><em>Note:</em>\nThis will likely override any previously added hooks.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>This method may be used as a command decorator:</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@standard_hooks</span><span class=\"o\">.</span><span class=\"n\">add_to_command</span>\n<span class=\"nd\">@as_message_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command_command</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"s2\">&quot;You&#39;ve called a command!&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (tanjun.abc.ExecutableCommand[typing.Any]):\nThe command to add the hooks to.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tanjun.abc.ExecutableCommand[typing.Any]</strong>: The command with the hooks added.</li>\n</ul>\n", "parameters": ["self", "command"], "funcdef": "def"}, "tanjun.hooks.Hooks.copy": {"fullname": "tanjun.hooks.Hooks.copy", "modulename": "tanjun.hooks", "qualname": "Hooks.copy", "type": "function", "doc": "<p>Copy this hook object.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.hooks.Hooks.add_on_error": {"fullname": "tanjun.hooks.Hooks.add_on_error", "modulename": "tanjun.hooks", "qualname": "Hooks.add_on_error", "type": "function", "doc": "<p>Add an error callback to this hook object.</p>\n\n<p><em>Note:</em>\nThis won't be called for expected <code>tanjun.TanjunError</code> derived errors.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (ErrorHookSig):\nThe callback to add to this hook.</p>\n\n<p>This callback should take two positional arguments (of type\n<code>tanjun.abc.ContextT_contra</code> and <code>Exception</code>) and may be either\nsynchronous or asynchronous.</p>\n\n<p>Returning <code>True</code> indicates that the error should be suppressed,\n<code>False</code> that it should be re-raised and <code>None</code> that no decision has\nbeen made. This will be accounted for along with the decisions\nother error hooks make by majority rule.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.hooks.Hooks.set_on_error": {"fullname": "tanjun.hooks.Hooks.set_on_error", "modulename": "tanjun.hooks", "qualname": "Hooks.set_on_error", "type": "function", "doc": "<p>Set the error callback for this hook object.</p>\n\n<p><em>Note:</em>\nThis will not be called for <code>tanjun.errors.ParserError</code>s as these\nare generally speaking expected. To handle those see\n<code>Hooks.set_on_parser_error</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (typing.Optional[tanjun.abc.ErrorHookSig]):\nThe callback to set for this hook. This will remove any previously\nset callbacks.</p>\n\n<p>This callback should take two positional arguments (of type\n<code>tanjun.abc.ContextT_contra</code> and <code>Exception</code>) and may be either\nsynchronous or asynchronous.</p>\n\n<p>Returning <code>True</code> indicates that the error should be suppressed,\n<code>False</code> that it should be re-raised and <code>None</code> that no decision\nhas been made. This will be accounted for along with the decisions\nother error hooks make by majority rule.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.hooks.Hooks.with_on_error": {"fullname": "tanjun.hooks.Hooks.with_on_error", "modulename": "tanjun.hooks", "qualname": "Hooks.with_on_error", "type": "function", "doc": "<p>Add an error callback to this hook object through a decorator call.</p>\n\n<p><em>Note:</em>\nThis won't be called for expected <code>tanjun.TanjunError</code> derived errors.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">hooks</span> <span class=\"o\">=</span> <span class=\"n\">AnyHooks</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@hooks</span><span class=\"o\">.</span><span class=\"n\">with_on_error</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_error</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"ne\">Exception</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">,</span> <span class=\"n\">SomeExpectedType</span><span class=\"p\">):</span>\n        <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"s2\">&quot;You dun goofed&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>  <span class=\"c1\"># Indicating that it should be suppressed.</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;An error occurred: </span><span class=\"si\">{</span><span class=\"n\">error</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"kc\">False</span>  <span class=\"c1\"># Indicating that it should be re-raised</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (ErrorHookSigT):\nThe callback to add to this hook.</p>\n\n<p>This callback should take two positional arguments (of type\n<code>tanjun.abc.ContextT_contra</code> and <code>Exception</code>) and may be either\nsynchronous or asynchronous.</p>\n\n<p>Returning <code>True</code> indicates that the error shoul be suppressed,\n<code>False</code> that it should be re-raised and <code>None</code> that no decision\nhas been made. This will be accounted for along with the decisions\nother error hooks make by majority rule.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ErrorHookSigT</strong>: The hook callback which was added.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.hooks.Hooks.add_on_parser_error": {"fullname": "tanjun.hooks.Hooks.add_on_parser_error", "modulename": "tanjun.hooks", "qualname": "Hooks.add_on_parser_error", "type": "function", "doc": "<p>Add a parser error callback to this hook object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSig):\nThe callback to add to this hook.</p>\n\n<p>This callback should take two positional arguments (of type\n<code>tanjun.abc.ContextT_contra</code> and <code>tanjun.errors.ParserError</code>),\nreturn <code>None</code> and may be either synchronous or asynchronous.</p>\n\n<p>It's worth noting that this unlike general error handlers, this will\nalways suppress the error.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.hooks.Hooks.set_on_parser_error": {"fullname": "tanjun.hooks.Hooks.set_on_parser_error", "modulename": "tanjun.hooks", "qualname": "Hooks.set_on_parser_error", "type": "function", "doc": "<p>Set the parser error callback for this hook object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (typing.Optional[tanjun.abc.HookSig]):\nThe callback to set for this hook. This will remove any previously\nset callbacks.</p>\n\n<p>This callback should take two positional arguments (of type\n<code>tanjun.abc.ContextT_contra</code> and <code>tanjun.errors.ParserError</code>),\nreturn <code>None</code> and may be either synchronous or asynchronous.</p>\n\n<p>It's worth noting that, unlike general error handlers, this will\nalways suppress the error.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.hooks.Hooks.with_on_parser_error": {"fullname": "tanjun.hooks.Hooks.with_on_parser_error", "modulename": "tanjun.hooks", "qualname": "Hooks.with_on_parser_error", "type": "function", "doc": "<p>Add a parser error callback to this hook object through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">hooks</span> <span class=\"o\">=</span> <span class=\"n\">AnyHooks</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@hooks</span><span class=\"o\">.</span><span class=\"n\">with_on_parser_error</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_parser_error</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">errors</span><span class=\"o\">.</span><span class=\"n\">ParserError</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;You gave invalid input: </span><span class=\"si\">{</span><span class=\"n\">error</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSigT):\nThe parser error callback to add to this hook.</p>\n\n<p>This callback should take two positional arguments (of type\n<code>tanjun.abc.ContextT_contra</code> and <code>tanjun.errors.ParserError</code>),\nreturn <code>None</code> and may be either synchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>HookSigT</strong>: The callback which was added.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.hooks.Hooks.add_post_execution": {"fullname": "tanjun.hooks.Hooks.add_post_execution", "modulename": "tanjun.hooks", "qualname": "Hooks.add_post_execution", "type": "function", "doc": "<p>Add a post-execution callback to this hook object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSig):\nThe callback to add to this hook.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.hooks.Hooks.set_post_execution": {"fullname": "tanjun.hooks.Hooks.set_post_execution", "modulename": "tanjun.hooks", "qualname": "Hooks.set_post_execution", "type": "function", "doc": "<p>Set the post-execution callback for this hook object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (typing.Optional[tanjun.abc.HookSig]):\nThe callback to set for this hook. This will remove any previously\nset callbacks.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.hooks.Hooks.with_post_execution": {"fullname": "tanjun.hooks.Hooks.with_post_execution", "modulename": "tanjun.hooks", "qualname": "Hooks.with_post_execution", "type": "function", "doc": "<p>Add a post-execution callback to this hook object through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">hooks</span> <span class=\"o\">=</span> <span class=\"n\">AnyHooks</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@hooks</span><span class=\"o\">.</span><span class=\"n\">with_post_execution</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">post_execution</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"s2\">&quot;You did something&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSigT):\nThe post-execution callback to add to this hook.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>HookSigT</strong>: The post-execution callback which was seaddedt.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.hooks.Hooks.add_pre_execution": {"fullname": "tanjun.hooks.Hooks.add_pre_execution", "modulename": "tanjun.hooks", "qualname": "Hooks.add_pre_execution", "type": "function", "doc": "<p>Add a pre-execution callback for this hook object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSig):\nThe callback to add to this hook.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.hooks.Hooks.set_pre_execution": {"fullname": "tanjun.hooks.Hooks.set_pre_execution", "modulename": "tanjun.hooks", "qualname": "Hooks.set_pre_execution", "type": "function", "doc": "<p>Set the pre-execution callback for this hook object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (typing.Optional[tanjun.abc.HookSig]):\nThe callback to set for this hook. This will remove any previously\nset callbacks.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.hooks.Hooks.with_pre_execution": {"fullname": "tanjun.hooks.Hooks.with_pre_execution", "modulename": "tanjun.hooks", "qualname": "Hooks.with_pre_execution", "type": "function", "doc": "<p>Add a pre-execution callback to this hook object through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">hooks</span> <span class=\"o\">=</span> <span class=\"n\">AnyHooks</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@hooks</span><span class=\"o\">.</span><span class=\"n\">with_pre_execution</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">pre_execution</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"s2\">&quot;You did something&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSigT):\nThe pre-execution callback to add to this hook.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>HookSigT</strong>: The pre-execution callback which was added.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.hooks.Hooks.add_on_success": {"fullname": "tanjun.hooks.Hooks.add_on_success", "modulename": "tanjun.hooks", "qualname": "Hooks.add_on_success", "type": "function", "doc": "<p>Add a success callback to this hook object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSig):\nThe callback to add to this hook.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.hooks.Hooks.set_on_success": {"fullname": "tanjun.hooks.Hooks.set_on_success", "modulename": "tanjun.hooks", "qualname": "Hooks.set_on_success", "type": "function", "doc": "<p>Set the success callback for this hook object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (typing.Optional[HookSig[tanjun.abc.HookSig]]):\nThe callback to set for this hook. This will remove any previously\nset callbacks.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The hook object to enable method chaining.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.hooks.Hooks.with_on_success": {"fullname": "tanjun.hooks.Hooks.with_on_success", "modulename": "tanjun.hooks", "qualname": "Hooks.with_on_success", "type": "function", "doc": "<p>Add a success callback to this hook object through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">hooks</span> <span class=\"o\">=</span> <span class=\"n\">AnyHooks</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@hooks</span><span class=\"o\">.</span><span class=\"n\">with_on_success</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_success</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"s2\">&quot;You did something&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (HookSigT):\nThe success callback to add to this hook.</p>\n\n<p>This callback should take one positional argument (of type\n<code>tanjun.abc.ContextT_contra</code>), return <code>None</code> and may be either\nsynchronous or asynchronous.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>HookSigT</strong>: The success callback which was added.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.hooks.Hooks.trigger_error": {"fullname": "tanjun.hooks.Hooks.trigger_error", "modulename": "tanjun.hooks", "qualname": "Hooks.trigger_error", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "exception", "hooks"], "funcdef": "async def"}, "tanjun.hooks.Hooks.trigger_post_execution": {"fullname": "tanjun.hooks.Hooks.trigger_post_execution", "modulename": "tanjun.hooks", "qualname": "Hooks.trigger_post_execution", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "hooks"], "funcdef": "async def"}, "tanjun.hooks.Hooks.trigger_pre_execution": {"fullname": "tanjun.hooks.Hooks.trigger_pre_execution", "modulename": "tanjun.hooks", "qualname": "Hooks.trigger_pre_execution", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "hooks"], "funcdef": "async def"}, "tanjun.hooks.Hooks.trigger_success": {"fullname": "tanjun.hooks.Hooks.trigger_success", "modulename": "tanjun.hooks", "qualname": "Hooks.trigger_success", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "ctx", "hooks"], "funcdef": "async def"}, "tanjun.hooks.MessageHooks": {"fullname": "tanjun.hooks.MessageHooks", "modulename": "tanjun.hooks", "qualname": "MessageHooks", "type": "variable", "doc": "<p>Hooks that can be used with a message context.</p>\n\n<p><em>Note:</em>\nThis is shorthand for Hooks[tanjun.abc.MessageContext].</p>\n"}, "tanjun.hooks.SlashHooks": {"fullname": "tanjun.hooks.SlashHooks", "modulename": "tanjun.hooks", "qualname": "SlashHooks", "type": "variable", "doc": "<p>Hooks that can be used with a slash context.</p>\n\n<p><em>Note:</em>\nThis is shorthand for Hooks[tanjun.abc.SlashContext].</p>\n"}, "tanjun.injecting": {"fullname": "tanjun.injecting", "modulename": "tanjun.injecting", "qualname": "", "type": "module", "doc": "<p>Logic and data classes used within the standard Tanjun implementation to enable dependency injection.</p>\n"}, "tanjun.injecting.AbstractDescriptor": {"fullname": "tanjun.injecting.AbstractDescriptor", "modulename": "tanjun.injecting", "qualname": "AbstractDescriptor", "type": "class", "doc": "<p>Abstract class for all injected argument descriptors.</p>\n"}, "tanjun.injecting.AbstractDescriptor.needs_injector": {"fullname": "tanjun.injecting.AbstractDescriptor.needs_injector", "modulename": "tanjun.injecting", "qualname": "AbstractDescriptor.needs_injector", "type": "variable", "doc": "<p>Whether this descriptor needs a dependency injection client to run.</p>\n"}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"fullname": "tanjun.injecting.AbstractDescriptor.resolve_with_command_context", "modulename": "tanjun.injecting", "qualname": "AbstractDescriptor.resolve_with_command_context", "type": "function", "doc": "<p>Try to resolve the descriptor with the given command context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ctx</strong> (tanjun.abc.Context):\nThe context to resolve the descriptor with.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>_T</strong>: The result to be injected.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the command context does not have a dependency injection client when\none is required.</li>\n<li><strong>tanjun.errors.MissingDependencyError</strong>: If the client does not have an implementation of a non-defaulting\ntype dependency this descriptor needs.</li>\n</ul>\n", "parameters": ["self", "ctx"], "funcdef": "async def"}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"fullname": "tanjun.injecting.AbstractDescriptor.resolve_without_injector", "modulename": "tanjun.injecting", "qualname": "AbstractDescriptor.resolve_without_injector", "type": "function", "doc": "<p>Try to resolve this descriptor without a dependency injection client.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>_T</strong>: The result to be injected.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If a dependency injection client is required.</li>\n<li><strong>tanjun.errors.MissingDependencyError</strong>: If the client does not have an implementation of a non-defaulting\ntype dependency this descriptor needs.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.injecting.AbstractDescriptor.resolve": {"fullname": "tanjun.injecting.AbstractDescriptor.resolve", "modulename": "tanjun.injecting", "qualname": "AbstractDescriptor.resolve", "type": "function", "doc": "<p>Resolve the descriptor with the given dependency injection context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ctx</strong> (tanjun.abc.AbstractInjectionContext):\nThe context to resolve the type or callback with.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>_T</strong>: The result to be injected.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>tanjun.errors.MissingDependencyError</strong>: If the client does not have an implementation of a non-defaulting\ntype dependency this descriptor needs.</li>\n</ul>\n", "parameters": ["self", "ctx"], "funcdef": "async def"}, "tanjun.injecting.AbstractInjectionContext": {"fullname": "tanjun.injecting.AbstractInjectionContext", "modulename": "tanjun.injecting", "qualname": "AbstractInjectionContext", "type": "class", "doc": "<p>Abstract interface of an injection context.</p>\n"}, "tanjun.injecting.AbstractInjectionContext.injection_client": {"fullname": "tanjun.injecting.AbstractInjectionContext.injection_client", "modulename": "tanjun.injecting", "qualname": "AbstractInjectionContext.injection_client", "type": "variable", "doc": "<p>Injection client this context is bound to.</p>\n"}, "tanjun.injecting.AbstractInjectionContext.cache_result": {"fullname": "tanjun.injecting.AbstractInjectionContext.cache_result", "modulename": "tanjun.injecting", "qualname": "AbstractInjectionContext.cache_result", "type": "function", "doc": "<p>Cache the result of a callback within the scope of this context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>callback</strong> (CallbackSig[_T]):\nThe callback to cache the result of.</li>\n<li><strong>value</strong> (_T):\nThe value to cache.</li>\n</ul>\n", "parameters": ["self", "callback", "value"], "funcdef": "def"}, "tanjun.injecting.AbstractInjectionContext.get_cached_result": {"fullname": "tanjun.injecting.AbstractInjectionContext.get_cached_result", "modulename": "tanjun.injecting", "qualname": "AbstractInjectionContext.get_cached_result", "type": "function", "doc": "<p>Get the cached result of a callback.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>callback</strong> (CallbackSig[_T]):\nThe callback to get the cached result of.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>UndefinedOr[_T]</strong>: The cached result of the callback, or <code>UNDEFINED</code> if the callback\nhas not been cached within this context.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"fullname": "tanjun.injecting.AbstractInjectionContext.get_type_dependency", "modulename": "tanjun.injecting", "qualname": "AbstractInjectionContext.get_type_dependency", "type": "function", "doc": "<p>Get the implementation for an injected type.</p>\n\n<p><em>Note:</em>\nUnlike <code>InjectionClient.get_type_dependency</code>, this method may also\nreturn context specific implementations of a type if the type isn't\nregistered with the client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>type_</strong> (type[_T]):\nThe associated type.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>UndefinedOr[_T]</strong>: The resolved type if found, else <code>Undefined</code>.</li>\n</ul>\n", "parameters": ["self", "type_"], "funcdef": "def"}, "tanjun.injecting.as_self_injecting": {"fullname": "tanjun.injecting.as_self_injecting", "modulename": "tanjun.injecting", "qualname": "as_self_injecting", "type": "function", "doc": "<p>Make a callback self-inecting by linking it to a client through a decorator call.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">make_callback</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"nb\">int</span><span class=\"p\">]:</span>\n    <span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_self_injected</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">)</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">get_int_value</span><span class=\"p\">(</span>\n        <span class=\"n\">redis</span><span class=\"p\">:</span> <span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">Client</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">inject</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"k\">await</span> <span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;key&#39;</span><span class=\"p\">))</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">get_int_value</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>injector_client</strong> (InjectorClient):\nThe injection client to use to resolve dependencies.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[CallbackSig[_T]], SelfInjectingCallback[_T]]</strong></li>\n</ul>\n", "parameters": ["injector_client"], "funcdef": "def"}, "tanjun.injecting.BasicInjectionContext": {"fullname": "tanjun.injecting.BasicInjectionContext", "modulename": "tanjun.injecting", "qualname": "BasicInjectionContext", "type": "class", "doc": "<p>Basic implementation of a <code>AbstractInjectionContext</code>.</p>\n"}, "tanjun.injecting.BasicInjectionContext.__init__": {"fullname": "tanjun.injecting.BasicInjectionContext.__init__", "modulename": "tanjun.injecting", "qualname": "BasicInjectionContext.__init__", "type": "function", "doc": "<p>Initialise a basic injection context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>client</strong> (InjectorClient):\nThe injection client this context is bound to.</li>\n</ul>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.injecting.BasicInjectionContext.injection_client": {"fullname": "tanjun.injecting.BasicInjectionContext.injection_client", "modulename": "tanjun.injecting", "qualname": "BasicInjectionContext.injection_client", "type": "variable", "doc": "<p>Injection client this context is bound to.</p>\n"}, "tanjun.injecting.BasicInjectionContext.cache_result": {"fullname": "tanjun.injecting.BasicInjectionContext.cache_result", "modulename": "tanjun.injecting", "qualname": "BasicInjectionContext.cache_result", "type": "function", "doc": "<p>Cache the result of a callback within the scope of this context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>callback</strong> (CallbackSig[_T]):\nThe callback to cache the result of.</li>\n<li><strong>value</strong> (_T):\nThe value to cache.</li>\n</ul>\n", "parameters": ["self", "callback", "value"], "funcdef": "def"}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"fullname": "tanjun.injecting.BasicInjectionContext.get_cached_result", "modulename": "tanjun.injecting", "qualname": "BasicInjectionContext.get_cached_result", "type": "function", "doc": "<p>Get the cached result of a callback.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>callback</strong> (CallbackSig[_T]):\nThe callback to get the cached result of.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>UndefinedOr[_T]</strong>: The cached result of the callback, or <code>UNDEFINED</code> if the callback\nhas not been cached within this context.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"fullname": "tanjun.injecting.BasicInjectionContext.get_type_dependency", "modulename": "tanjun.injecting", "qualname": "BasicInjectionContext.get_type_dependency", "type": "function", "doc": "<p>Get the implementation for an injected type.</p>\n\n<p><em>Note:</em>\nUnlike <code>InjectionClient.get_type_dependency</code>, this method may also\nreturn context specific implementations of a type if the type isn't\nregistered with the client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>type_</strong> (type[_T]):\nThe associated type.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>UndefinedOr[_T]</strong>: The resolved type if found, else <code>Undefined</code>.</li>\n</ul>\n", "parameters": ["self", "type_"], "funcdef": "def"}, "tanjun.injecting.CallbackDescriptor": {"fullname": "tanjun.injecting.CallbackDescriptor", "modulename": "tanjun.injecting", "qualname": "CallbackDescriptor", "type": "class", "doc": "<p>Descriptor of a callback taking advantage of dependency injection.</p>\n\n<p>This holds metadata and logic necessary for callback injection.</p>\n"}, "tanjun.injecting.CallbackDescriptor.__init__": {"fullname": "tanjun.injecting.CallbackDescriptor.__init__", "modulename": "tanjun.injecting", "qualname": "CallbackDescriptor.__init__", "type": "function", "doc": "<p>Initialise an injected callback descriptor.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>callback</strong> (CallbackSig[_T]):\nThe callback to wrap with dependency injection.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If <code>callback</code> has any injected arguments which can only be passed\npositionally.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.injecting.CallbackDescriptor.callback": {"fullname": "tanjun.injecting.CallbackDescriptor.callback", "modulename": "tanjun.injecting", "qualname": "CallbackDescriptor.callback", "type": "variable", "doc": "<p>The descriptor's callback.</p>\n"}, "tanjun.injecting.CallbackDescriptor.needs_injector": {"fullname": "tanjun.injecting.CallbackDescriptor.needs_injector", "modulename": "tanjun.injecting", "qualname": "CallbackDescriptor.needs_injector", "type": "variable", "doc": "<p>Whether this descriptor needs a dependency injection client to run.</p>\n"}, "tanjun.injecting.CallbackDescriptor.copy": {"fullname": "tanjun.injecting.CallbackDescriptor.copy", "modulename": "tanjun.injecting", "qualname": "CallbackDescriptor.copy", "type": "function", "doc": "<p>Create a copy of this descriptor.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>CallbackDescriptor[_T]</strong>: A copy of this descriptor.</li>\n</ul>\n", "parameters": ["self", "_new"], "funcdef": "def"}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"fullname": "tanjun.injecting.CallbackDescriptor.overwrite_callback", "modulename": "tanjun.injecting", "qualname": "CallbackDescriptor.overwrite_callback", "type": "function", "doc": "<p>Overwrite the callback of this descriptor.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>callback</strong> (CallbackSig[_T]):\nThe new callback to overwrite with.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If <code>callback</code> has any injected arguments which can only be passed\npositionally.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"fullname": "tanjun.injecting.CallbackDescriptor.resolve_with_command_context", "modulename": "tanjun.injecting", "qualname": "CallbackDescriptor.resolve_with_command_context", "type": "function", "doc": "<p>Try to resolve the callback with the given command context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ctx</strong> (tanjun.abc.Context):\nThe context to resolve the callback with.</li>\n<li><strong>*args</strong> (typing.Any):\nThe positional arguments to pass to the callback.</li>\n<li><strong>**kwargs</strong> (typing.Any):\nThe keyword arguments to pass to the callback.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>_T</strong>: The callback's result.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the callback needs a dependency injection client but the\ncontext does not have one.</li>\n<li><strong>tanjun.errors.MissingDependencyError</strong>: If the callback needs an injected type which isn't present in the\ncontext or client and doesn't have a set default.</li>\n</ul>\n", "parameters": ["self", "ctx", "args", "kwargs"], "funcdef": "def"}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"fullname": "tanjun.injecting.CallbackDescriptor.resolve_without_injector", "modulename": "tanjun.injecting", "qualname": "CallbackDescriptor.resolve_without_injector", "type": "function", "doc": "<p>Try to resolve the callback without a dependency injection client.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>*args</strong> (typing.Any):\nThe positional arguments to pass to the callback.</li>\n<li><strong>**kwargs</strong> (typing.Any):\nThe keyword arguments to pass to the callback.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>_T</strong>: The callback's result.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the callback needs a dependency injection client present.</li>\n</ul>\n", "parameters": ["self", "args", "kwargs"], "funcdef": "def"}, "tanjun.injecting.CallbackDescriptor.resolve": {"fullname": "tanjun.injecting.CallbackDescriptor.resolve", "modulename": "tanjun.injecting", "qualname": "CallbackDescriptor.resolve", "type": "function", "doc": "<p>Resolve the callback with the given dependency injection context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ctx</strong> (AbstractInjectionContext):\nThe context to resolve the callback with.</li>\n<li><strong>*args</strong> (typing.Any):\nThe positional arguments to pass to the callback.</li>\n<li><strong>**kwargs</strong> (typing.Any):\nThe keyword arguments to pass to the callback.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>_T</strong>: The callback's result.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>tanjun.errors.MissingDependencyError</strong>: If the callback needs an injected type which isn't present in the\ncontext or client and doesn't have a set default.</li>\n</ul>\n", "parameters": ["self", "ctx", "args", "kwargs"], "funcdef": "async def"}, "tanjun.injecting.CallbackSig": {"fullname": "tanjun.injecting.CallbackSig", "modulename": "tanjun.injecting", "qualname": "CallbackSig", "type": "class", "doc": "<p>Type-hint of a injector callback.</p>\n\n<p><em>Note:</em>\nDependency dependency injection is recursively supported, meaning that the\nkeyword arguments for a dependency callback may also ask for dependencies\nthemselves.</p>\n\n<p>This may either be a synchronous or asynchronous function with dependency\ninjection being available for the callback's keyword arguments but dynamically\nreturning either an awaitable or raw value may lead to errors.</p>\n\n<p>Dependent on the context positional arguments may also be proivded.</p>\n"}, "tanjun.injecting.Undefined": {"fullname": "tanjun.injecting.Undefined", "modulename": "tanjun.injecting", "qualname": "Undefined", "type": "class", "doc": "<p>Class/type of <code>UNDEFINED</code>.</p>\n"}, "tanjun.injecting.Undefined.__init__": {"fullname": "tanjun.injecting.Undefined.__init__", "modulename": "tanjun.injecting", "qualname": "Undefined.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "tanjun.injecting.UNDEFINED": {"fullname": "tanjun.injecting.UNDEFINED", "modulename": "tanjun.injecting", "qualname": "UNDEFINED", "type": "variable", "doc": "<p>Singleton value used within dependency injection to indicate that a value is undefined.</p>\n"}, "tanjun.injecting.UndefinedOr": {"fullname": "tanjun.injecting.UndefinedOr", "modulename": "tanjun.injecting", "qualname": "UndefinedOr", "type": "variable", "doc": "<p>Type-hint generic union used to indicate that a value may be undefined or <code>_T</code>.</p>\n"}, "tanjun.injecting.inject": {"fullname": "tanjun.injecting.inject", "modulename": "tanjun.injecting", "qualname": "inject", "type": "function", "doc": "<p>Decare a keyword-argument as requiring an injected dependency.</p>\n\n<p>This should be assigned to an arugment's default value.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_slash_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;description&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command_callback</span><span class=\"p\">(</span>\n    <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Here we take advantage of scope based special casing which allows</span>\n    <span class=\"c1\"># us to inject the `Component` type.</span>\n    <span class=\"n\">injected_type</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Component</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">inject</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Component</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Here we inject an out-of-scope callback which itself is taking</span>\n    <span class=\"c1\"># advantage of type injection.</span>\n    <span class=\"n\">callback_result</span><span class=\"p\">:</span> <span class=\"n\">ResultT</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">inject</span><span class=\"p\">(</span><span class=\"n\">callback</span><span class=\"o\">=</span><span class=\"n\">injected_callback</span><span class=\"p\">)</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (typing.Optional[CallbackSig[_T]]):\nThe callback to use to resolve the dependency.</p>\n\n<p>If this callback has no type dependencies then this will still work\nwithout an injection context but this can be overridden using\n<code>InjectionClient.set_callback_override</code>.</p></li>\n<li><p><strong>type</strong> (typing.Optional[type[_T]]):\nThe type of the dependency to resolve.</p>\n\n<p>If a union (e.g. <code>typing.Union[A, B]</code>, <code>A | B</code>, <code>typing.Optional[A]</code>)\nis passed for <code>type</code> then each type in the union will be tried\nseparately after the litarl union type is tried, allowing for resolving\n<code>A | B</code> to the value set by <code>set_type_dependency(B, ...)</code>.</p>\n\n<p>If a union has <code>None</code> as one of its types (including <code>Optional[T]</code>)\nthen <code>None</code> will be passed for the parameter if none of the types could\nbe resolved using the linked client.</p></li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If both <code>callback</code> and <code>type</code> are specified or if neither is specified.</li>\n</ul>\n", "parameters": ["callback", "type"], "funcdef": "def"}, "tanjun.injecting.injected": {"fullname": "tanjun.injecting.injected", "modulename": "tanjun.injecting", "qualname": "injected", "type": "function", "doc": "<p>Alias of <code>inject</code>.</p>\n", "parameters": ["callback", "type"], "funcdef": "def"}, "tanjun.injecting.Injected": {"fullname": "tanjun.injecting.Injected", "modulename": "tanjun.injecting", "qualname": "Injected", "type": "class", "doc": "<p>Decare a keyword-argument as requiring an injected dependency.</p>\n\n<p>This is the type returned by <code>inject</code>.</p>\n"}, "tanjun.injecting.Injected.__init__": {"fullname": "tanjun.injecting.Injected.__init__", "modulename": "tanjun.injecting", "qualname": "Injected.__init__", "type": "function", "doc": "<p>Initialise an injection default descriptor.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (typing.Optional[CallbackSig[_T]]):\nThe callback to use to resolve the dependency.</p>\n\n<p>If this callback has no type dependencies then this will still work\nwithout an injection context but this can be overridden using\n<code>InjectionClient.set_callback_override</code>.</p></li>\n<li><p><strong>type</strong> (typing.Optional[type[_T]]):\nThe type of the dependency to resolve.</p>\n\n<p>If a union (e.g. <code>typing.Union[A, B]</code>, <code>A | B</code>, <code>typing.Optional[A]</code>)\nis passed for <code>type</code> then each type in the union will be tried\nseparately after the litarl union type is tried, allowing for resolving\n<code>A | B</code> to the value set by <code>set_type_dependency(B, ...)</code>.</p>\n\n<p>If a union has <code>None</code> as one of its types (including <code>Optional[T]</code>)\nthen <code>None</code> will be passed for the parameter if none of the types could\nbe resolved using the linked client.</p></li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If both <code>callback</code> and <code>type</code> are specified or if neither is specified.</li>\n</ul>\n", "parameters": ["self", "callback", "type"], "funcdef": "def"}, "tanjun.injecting.Injected.callback": {"fullname": "tanjun.injecting.Injected.callback", "modulename": "tanjun.injecting", "qualname": "Injected.callback", "type": "variable", "doc": "<p></p>\n"}, "tanjun.injecting.Injected.type": {"fullname": "tanjun.injecting.Injected.type", "modulename": "tanjun.injecting", "qualname": "Injected.type", "type": "variable", "doc": "<p></p>\n"}, "tanjun.injecting.InjectorClient": {"fullname": "tanjun.injecting.InjectorClient", "modulename": "tanjun.injecting", "qualname": "InjectorClient", "type": "class", "doc": "<p>Dependency injection client used by Tanjun's standard implementation.</p>\n"}, "tanjun.injecting.InjectorClient.__init__": {"fullname": "tanjun.injecting.InjectorClient.__init__", "modulename": "tanjun.injecting", "qualname": "InjectorClient.__init__", "type": "function", "doc": "<p>Initialise an injector client.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.injecting.InjectorClient.set_type_dependency": {"fullname": "tanjun.injecting.InjectorClient.set_type_dependency", "modulename": "tanjun.injecting", "qualname": "InjectorClient.set_type_dependency", "type": "function", "doc": "<p>Set a callback to be called to resolve a injected type.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (CallbackSig[_T]):\nThe callback to use to resolve the dependency.</p>\n\n<p>If this callback has no type dependencies then this will still work\nwithout an injection context but this can be overridden using\n<code>InjectionClient.set_callback_override</code>.</p></li>\n<li><strong>type_</strong> (type[_T]):\nThe type of the dependency to resolve.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to allow chaining.</li>\n</ul>\n", "parameters": ["self", "type_", "value"], "funcdef": "def"}, "tanjun.injecting.InjectorClient.get_type_dependency": {"fullname": "tanjun.injecting.InjectorClient.get_type_dependency", "modulename": "tanjun.injecting", "qualname": "InjectorClient.get_type_dependency", "type": "function", "doc": "<p>Get the implementation for an injected type.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>type_</strong> (type[_T]):\nThe associated type.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>UndefinedOr[_T]</strong>: The resolved type if found, else <code>Undefined</code>.</li>\n</ul>\n", "parameters": ["self", "type_"], "funcdef": "def"}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"fullname": "tanjun.injecting.InjectorClient.remove_type_dependency", "modulename": "tanjun.injecting", "qualname": "InjectorClient.remove_type_dependency", "type": "function", "doc": "<p>Remove a type dependency.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>type_</strong> (type[_T]):\nThe associated type.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to allow chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>KeyError</strong>: If <code>type_</code> is not registered.</li>\n</ul>\n", "parameters": ["self", "type_"], "funcdef": "def"}, "tanjun.injecting.InjectorClient.set_callback_override": {"fullname": "tanjun.injecting.InjectorClient.set_callback_override", "modulename": "tanjun.injecting", "qualname": "InjectorClient.set_callback_override", "type": "function", "doc": "<p>Override a specific injected callback.</p>\n\n<p><em>Note:</em>\nThis does not effect the callbacks set for type injectors.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>callback</strong> (CallbackSig[_T]):\nThe injected callback to override.</li>\n<li><strong>override</strong> (CallbackSig[_T]):\nThe callback to use instead.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to allow chaining.</li>\n</ul>\n", "parameters": ["self", "callback", "override"], "funcdef": "def"}, "tanjun.injecting.InjectorClient.get_callback_override": {"fullname": "tanjun.injecting.InjectorClient.get_callback_override", "modulename": "tanjun.injecting", "qualname": "InjectorClient.get_callback_override", "type": "function", "doc": "<p>Get the set override for a specific injected callback.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>callback</strong> (CallbackSig[_T]):\nThe injected callback to get the override for.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[CallbackDescriptor[_T]]</strong>: The override if found, else <code>None</code>.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.injecting.InjectorClient.remove_callback_override": {"fullname": "tanjun.injecting.InjectorClient.remove_callback_override", "modulename": "tanjun.injecting", "qualname": "InjectorClient.remove_callback_override", "type": "function", "doc": "<p>Remove a callback override.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>callback</strong> (CallbackSig[_T]):\nThe injected callback to remove the override for.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The client instance to allow chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>KeyError</strong>: If no override is found for the callback.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.injecting.SelfInjectingCallback": {"fullname": "tanjun.injecting.SelfInjectingCallback", "modulename": "tanjun.injecting", "qualname": "SelfInjectingCallback", "type": "class", "doc": "<p>Class used to make a callback self-injecting by linking it to a client.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">callback</span><span class=\"p\">(</span><span class=\"n\">database</span><span class=\"p\">:</span> <span class=\"n\">Database</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">inject</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">Database</span><span class=\"p\">))</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">database</span><span class=\"o\">.</span><span class=\"n\">do_something</span><span class=\"p\">()</span>\n\n<span class=\"o\">...</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"o\">.</span><span class=\"n\">from_gateway_bot</span><span class=\"p\">(</span><span class=\"n\">bot</span><span class=\"p\">)</span>\n<span class=\"n\">injecting_callback</span> <span class=\"o\">=</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">SelfInjectingCallback</span><span class=\"p\">(</span><span class=\"n\">callback</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"p\">)</span>\n<span class=\"k\">await</span> <span class=\"n\">injecting_callback</span><span class=\"p\">()</span>\n</code></pre></div>\n"}, "tanjun.injecting.SelfInjectingCallback.__init__": {"fullname": "tanjun.injecting.SelfInjectingCallback.__init__", "modulename": "tanjun.injecting", "qualname": "SelfInjectingCallback.__init__", "type": "function", "doc": "<p>Initialise a self injecting callback.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>injector</strong> (InjectorClient):\nThe injection client to use to resolve dependencies.</li>\n<li><strong>callback</strong> (CallbackSig[_T]):\nThe callback to make self-injecting.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If <code>callback</code> has any injected arguments which can only be passed\npositionally.</li>\n</ul>\n", "parameters": ["self", "injector_client", "callback"], "funcdef": "def"}, "tanjun.injecting.TypeDescriptor": {"fullname": "tanjun.injecting.TypeDescriptor", "modulename": "tanjun.injecting", "qualname": "TypeDescriptor", "type": "class", "doc": "<p>Descriptor of an injected type.</p>\n\n<p>This class holds all the logic for resolving a type with dependency\ninjection.</p>\n"}, "tanjun.injecting.TypeDescriptor.__init__": {"fullname": "tanjun.injecting.TypeDescriptor.__init__", "modulename": "tanjun.injecting", "qualname": "TypeDescriptor.__init__", "type": "function", "doc": "<p>Initialise an injected type descriptor.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>type_</strong> (type[_T]):\nThe type to resolve.</li>\n</ul>\n", "parameters": ["self", "type_"], "funcdef": "def"}, "tanjun.injecting.TypeDescriptor.needs_injector": {"fullname": "tanjun.injecting.TypeDescriptor.needs_injector", "modulename": "tanjun.injecting", "qualname": "TypeDescriptor.needs_injector", "type": "variable", "doc": "<p>Whether this descriptor needs a dependency injection client to run.</p>\n"}, "tanjun.injecting.TypeDescriptor.type": {"fullname": "tanjun.injecting.TypeDescriptor.type", "modulename": "tanjun.injecting", "qualname": "TypeDescriptor.type", "type": "variable", "doc": "<p>The type being injected.</p>\n"}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"fullname": "tanjun.injecting.TypeDescriptor.resolve_with_command_context", "modulename": "tanjun.injecting", "qualname": "TypeDescriptor.resolve_with_command_context", "type": "function", "doc": "<p>Try to resolve the descriptor with the given command context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ctx</strong> (tanjun.abc.Context):\nThe context to resolve the descriptor with.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>_T</strong>: The result to be injected.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the command context does not have a dependency injection client when\none is required.</li>\n<li><strong>tanjun.errors.MissingDependencyError</strong>: If the client does not have an implementation of a non-defaulting\ntype dependency this descriptor needs.</li>\n</ul>\n", "parameters": ["self", "ctx"], "funcdef": "def"}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"fullname": "tanjun.injecting.TypeDescriptor.resolve_without_injector", "modulename": "tanjun.injecting", "qualname": "TypeDescriptor.resolve_without_injector", "type": "function", "doc": "<p>Try to resolve this descriptor without a dependency injection client.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>_T</strong>: The result to be injected.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If a dependency injection client is required.</li>\n<li><strong>tanjun.errors.MissingDependencyError</strong>: If the client does not have an implementation of a non-defaulting\ntype dependency this descriptor needs.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "async def"}, "tanjun.injecting.TypeDescriptor.resolve": {"fullname": "tanjun.injecting.TypeDescriptor.resolve", "modulename": "tanjun.injecting", "qualname": "TypeDescriptor.resolve", "type": "function", "doc": "<p>Resolve the descriptor with the given dependency injection context.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ctx</strong> (tanjun.abc.AbstractInjectionContext):\nThe context to resolve the type or callback with.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>_T</strong>: The result to be injected.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>tanjun.errors.MissingDependencyError</strong>: If the client does not have an implementation of a non-defaulting\ntype dependency this descriptor needs.</li>\n</ul>\n", "parameters": ["self", "ctx"], "funcdef": "async def"}, "tanjun.parsing": {"fullname": "tanjun.parsing", "modulename": "tanjun.parsing", "qualname": "", "type": "module", "doc": "<p>Standard implementation of message command argument parsing.</p>\n"}, "tanjun.parsing.AbstractParser": {"fullname": "tanjun.parsing.AbstractParser", "modulename": "tanjun.parsing", "qualname": "AbstractParser", "type": "class", "doc": "<p>Abstract interface of a message content parser.</p>\n"}, "tanjun.parsing.AbstractParser.parameters": {"fullname": "tanjun.parsing.AbstractParser.parameters", "modulename": "tanjun.parsing", "qualname": "AbstractParser.parameters", "type": "variable", "doc": "<p>Sequence of the parameters registered with this parser.</p>\n"}, "tanjun.parsing.AbstractParser.add_parameter": {"fullname": "tanjun.parsing.AbstractParser.add_parameter", "modulename": "tanjun.parsing", "qualname": "AbstractParser.add_parameter", "type": "function", "doc": "<p>Add a parameter to this parser.</p>\n\n<h6 id=\"arguments\">Arguments</h6>\n\n<p>parameter : typing.Union[Argument, Option]\n    Either the argument or option to add to this parser.</p>\n\n<pre><code>*Note:*\nFor `Argument` type parameters the ordering matters and is decided\nby `add_parameter` call order.\n</code></pre>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The parser instance to enable call chaining.</li>\n</ul>\n", "parameters": ["self", "parameter"], "funcdef": "def"}, "tanjun.parsing.AbstractParser.remove_parameter": {"fullname": "tanjun.parsing.AbstractParser.remove_parameter", "modulename": "tanjun.parsing", "qualname": "AbstractParser.remove_parameter", "type": "function", "doc": "<p>Remove a parameter from the parser.</p>\n\n<h6 id=\"arguments\">Arguments</h6>\n\n<p>parameter : typing.Union[Argument, Option]\n    Either the argument or option to remove from this parser.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The parser instance to enable call chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the parameter isn't registered.</li>\n</ul>\n", "parameters": ["self", "parameter"], "funcdef": "def"}, "tanjun.parsing.AbstractParser.set_parameters": {"fullname": "tanjun.parsing.AbstractParser.set_parameters", "modulename": "tanjun.parsing", "qualname": "AbstractParser.set_parameters", "type": "function", "doc": "<p>Set the parameters for this parser.</p>\n\n<p><em>Note:</em>\nThis will override any previously set parameters.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>parameters</strong> (collections.abc.Iterable[typing.Union[Argument, Option]]):\nIterable of the arguments and options to set for this parser.</p>\n\n<p><em>Note:</em>\nOrder matters for <code>Argument</code> type parameters.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The parser instance to enable call chaining.</li>\n</ul>\n", "parameters": ["self", "parameters"], "funcdef": "def"}, "tanjun.parsing.AbstractParser.bind_client": {"fullname": "tanjun.parsing.AbstractParser.bind_client", "modulename": "tanjun.parsing", "qualname": "AbstractParser.bind_client", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.parsing.AbstractParser.bind_component": {"fullname": "tanjun.parsing.AbstractParser.bind_component", "modulename": "tanjun.parsing", "qualname": "AbstractParser.bind_component", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.parsing.AbstractParser.copy": {"fullname": "tanjun.parsing.AbstractParser.copy", "modulename": "tanjun.parsing", "qualname": "AbstractParser.copy", "type": "function", "doc": "<p>Copy the parser.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: A copy of the parser.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.parsing.AbstractParser.parse": {"fullname": "tanjun.parsing.AbstractParser.parse", "modulename": "tanjun.parsing", "qualname": "AbstractParser.parse", "type": "function", "doc": "<p>Parse a message context.</p>\n\n<p><em>Warning:</em>\nThis relies on the prefix and command name(s) having been removed\nfrom <code>tanjun.abc.MessageContext.content</code></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ctx</strong> (tanjun.abc.MessageContext):\nThe message context to parse.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict[str, typing.Any]</strong>: Dictionary of argument names to the parsed values for them.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>tanjun.errors.ParserError</strong>: If the message could not be parsed.</li>\n</ul>\n", "parameters": ["self", "ctx"], "funcdef": "async def"}, "tanjun.parsing.Argument": {"fullname": "tanjun.parsing.Argument", "modulename": "tanjun.parsing", "qualname": "Argument", "type": "class", "doc": "<p>Representation of a positional argument used by the standard parser.</p>\n"}, "tanjun.parsing.Argument.__init__": {"fullname": "tanjun.parsing.Argument.__init__", "modulename": "tanjun.parsing", "qualname": "Argument.__init__", "type": "function", "doc": "<p>Initialise a positional argument.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong> (str):\nThe string identifier of this argument (may be used to pass the result\nof this argument to the command's callback during execution).</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>converters</strong> (typing.Union[ConverterSig, collections.abc.Iterable[ConverterSig]]):\nThe converter(s) this argument should use to handle values passed to it\nduring parsing.</p>\n\n<p>If no converters are provided then the raw string value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>default</strong> (typing.Any):\nThe default value of this argument, if left as\n<code>UNDEFINED_DEFAULT</code> then this will have no default.</li>\n<li><strong>greedy</strong> (bool):\nWhether or not this argument should be greedy (meaning that it\ntakes in the remaining argument values).</li>\n<li><strong>multi</strong> (bool):\nWhether this argument can be passed multiple times.</li>\n</ul>\n", "parameters": ["self", "key", "converters", "default", "greedy", "multi"], "funcdef": "def"}, "tanjun.parsing.ConverterSig": {"fullname": "tanjun.parsing.ConverterSig", "modulename": "tanjun.parsing", "qualname": "ConverterSig", "type": "class", "doc": "<p>Type hint of a converter used within a parser instance.</p>\n\n<p>This must be a callable or asynchronous callable which takes one position\n<code>str</code>, argument and returns the resultant value.</p>\n"}, "tanjun.parsing.Option": {"fullname": "tanjun.parsing.Option", "modulename": "tanjun.parsing", "qualname": "Option", "type": "class", "doc": "<p>Representation of a named optional parameter used by the standard parser.</p>\n"}, "tanjun.parsing.Option.__init__": {"fullname": "tanjun.parsing.Option.__init__", "modulename": "tanjun.parsing", "qualname": "Option.__init__", "type": "function", "doc": "<p>Initialise a named optional parameter.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong> (str):\nThe string identifier of this option which will be used to pass the\nresult of this argument to the command's callback during execution as\na keyword argument.</li>\n<li><strong>name</strong> (str):\nThe name of this option used for identifying it in the parsed content.</li>\n<li><strong>default</strong> (typing.Any):\nThe default value of this argument, unlike arguments this is required\nfor options.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>*names</strong> (str):\nOther names of this option used for identifying it in the parsed content.</li>\n<li><p><strong>converters</strong> (typing.Union[ConverterSig, collections.abc.Iterable[ConverterSig]]):\nThe converter(s) this argument should use to handle values passed to it\nduring parsing.</p>\n\n<p>If no converters are provided then the raw string value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>empty_value</strong> (typing.Any):\nThe value to use if this option is provided without a value. If left as\n<code>UNDEFINED_DEFAULT</code> then this option will error if it's\nprovided without a value.</li>\n<li><strong>multi</strong> (bool):\nIf this option can be provided multiple times.\nDefaults to <code>False</code>.</li>\n</ul>\n", "parameters": ["self", "key", "name", "names", "converters", "default", "empty_value", "multi"], "funcdef": "def"}, "tanjun.parsing.Option.empty_value": {"fullname": "tanjun.parsing.Option.empty_value", "modulename": "tanjun.parsing", "qualname": "Option.empty_value", "type": "variable", "doc": "<p>The value to return if the option is empty.</p>\n\n<p>If this is <code>UndefinedDefaultT</code> then a value will be required for the\noption.</p>\n"}, "tanjun.parsing.Option.names": {"fullname": "tanjun.parsing.Option.names", "modulename": "tanjun.parsing", "qualname": "Option.names", "type": "variable", "doc": "<p>Sequence of the CLI names of this option.</p>\n"}, "tanjun.parsing.Parameter": {"fullname": "tanjun.parsing.Parameter", "modulename": "tanjun.parsing", "qualname": "Parameter", "type": "class", "doc": "<p>Base class for parameters for the standard parser(s).</p>\n"}, "tanjun.parsing.Parameter.__init__": {"fullname": "tanjun.parsing.Parameter.__init__", "modulename": "tanjun.parsing", "qualname": "Parameter.__init__", "type": "function", "doc": "<p>Initialise a parameter.</p>\n", "parameters": ["self", "key", "converters", "default", "greedy", "multi"], "funcdef": "def"}, "tanjun.parsing.Parameter.converters": {"fullname": "tanjun.parsing.Parameter.converters", "modulename": "tanjun.parsing", "qualname": "Parameter.converters", "type": "variable", "doc": "<p>Sequence of the converters registered for this parameter.</p>\n"}, "tanjun.parsing.Parameter.default": {"fullname": "tanjun.parsing.Parameter.default", "modulename": "tanjun.parsing", "qualname": "Parameter.default", "type": "variable", "doc": "<p>The parameter's default.</p>\n\n<p>If this is <code>UndefinedDefaultT</code> then this parameter is required.</p>\n"}, "tanjun.parsing.Parameter.is_greedy": {"fullname": "tanjun.parsing.Parameter.is_greedy", "modulename": "tanjun.parsing", "qualname": "Parameter.is_greedy", "type": "variable", "doc": "<p>Whether this parameter is greedy.</p>\n\n<p>Greedy parameters will consume the remaining message content as one\nstring (with converters also being passed the whole string).</p>\n\n<p><em>Note:</em>\nGreedy and multi parameters cannot be used together.</p>\n"}, "tanjun.parsing.Parameter.is_multi": {"fullname": "tanjun.parsing.Parameter.is_multi", "modulename": "tanjun.parsing", "qualname": "Parameter.is_multi", "type": "variable", "doc": "<p>Whether this parameter is \"multi\".</p>\n\n<p>Multi parameters will be passed a list of all the values provided for\nthis parameter (with each entry being converted separately.)</p>\n"}, "tanjun.parsing.Parameter.key": {"fullname": "tanjun.parsing.Parameter.key", "modulename": "tanjun.parsing", "qualname": "Parameter.key", "type": "variable", "doc": "<p>The key of this parameter used to pass the result to the command's callback.</p>\n"}, "tanjun.parsing.Parameter.needs_injector": {"fullname": "tanjun.parsing.Parameter.needs_injector", "modulename": "tanjun.parsing", "qualname": "Parameter.needs_injector", "type": "variable", "doc": "<p>Whether this parameter needs an injector to be used.</p>\n"}, "tanjun.parsing.Parameter.bind_client": {"fullname": "tanjun.parsing.Parameter.bind_client", "modulename": "tanjun.parsing", "qualname": "Parameter.bind_client", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.parsing.Parameter.bind_component": {"fullname": "tanjun.parsing.Parameter.bind_component", "modulename": "tanjun.parsing", "qualname": "Parameter.bind_component", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.parsing.Parameter.convert": {"fullname": "tanjun.parsing.Parameter.convert", "modulename": "tanjun.parsing", "qualname": "Parameter.convert", "type": "function", "doc": "<p>Convert the given value to the type of this parameter.</p>\n", "parameters": ["self", "ctx", "value"], "funcdef": "async def"}, "tanjun.parsing.Parameter.copy": {"fullname": "tanjun.parsing.Parameter.copy", "modulename": "tanjun.parsing", "qualname": "Parameter.copy", "type": "function", "doc": "<p>Copy the parameter.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: A copy of the parameter.</li>\n</ul>\n", "parameters": ["self", "_new"], "funcdef": "def"}, "tanjun.parsing.ParseableProto": {"fullname": "tanjun.parsing.ParseableProto", "modulename": "tanjun.parsing", "qualname": "ParseableProto", "type": "class", "doc": "<p>Protocol of a command which supports this parser interface.</p>\n"}, "tanjun.parsing.ParseableProto.__init__": {"fullname": "tanjun.parsing.ParseableProto.__init__", "modulename": "tanjun.parsing", "qualname": "ParseableProto.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "args", "kwargs"], "funcdef": "def"}, "tanjun.parsing.ParseableProto.callback": {"fullname": "tanjun.parsing.ParseableProto.callback", "modulename": "tanjun.parsing", "qualname": "ParseableProto.callback", "type": "variable", "doc": "<p>The callback for this message command.</p>\n"}, "tanjun.parsing.ParseableProto.parser": {"fullname": "tanjun.parsing.ParseableProto.parser", "modulename": "tanjun.parsing", "qualname": "ParseableProto.parser", "type": "variable", "doc": "<p>The parser for this message command, if set.</p>\n"}, "tanjun.parsing.ParseableProto.set_parser": {"fullname": "tanjun.parsing.ParseableProto.set_parser", "modulename": "tanjun.parsing", "qualname": "ParseableProto.set_parser", "type": "function", "doc": "<p>Set the parser for this message command.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>_</strong> (typing.Optional[AbstractParser]):\nThe parser to set.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The message command instance to enable call chaining.</li>\n</ul>\n", "parameters": ["self", "_"], "funcdef": "def"}, "tanjun.parsing.ParseableProtoT": {"fullname": "tanjun.parsing.ParseableProtoT", "modulename": "tanjun.parsing", "qualname": "ParseableProtoT", "type": "variable", "doc": "<p>Generic type hint of <code>ParseableProto</code>.</p>\n"}, "tanjun.parsing.ShlexParser": {"fullname": "tanjun.parsing.ShlexParser", "modulename": "tanjun.parsing", "qualname": "ShlexParser", "type": "class", "doc": "<p>A shlex based <code>AbstractParser</code> implementation.</p>\n"}, "tanjun.parsing.ShlexParser.__init__": {"fullname": "tanjun.parsing.ShlexParser.__init__", "modulename": "tanjun.parsing", "qualname": "ShlexParser.__init__", "type": "function", "doc": "<p>Initialise a shlex parser.</p>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.parsing.ShlexParser.needs_injector": {"fullname": "tanjun.parsing.ShlexParser.needs_injector", "modulename": "tanjun.parsing", "qualname": "ShlexParser.needs_injector", "type": "variable", "doc": "<p>Whether this parser needs an injector to be used.</p>\n"}, "tanjun.parsing.ShlexParser.parameters": {"fullname": "tanjun.parsing.ShlexParser.parameters", "modulename": "tanjun.parsing", "qualname": "ShlexParser.parameters", "type": "variable", "doc": "<p>Sequence of the parameters registered with this parser.</p>\n"}, "tanjun.parsing.ShlexParser.copy": {"fullname": "tanjun.parsing.ShlexParser.copy", "modulename": "tanjun.parsing", "qualname": "ShlexParser.copy", "type": "function", "doc": "<p>Copy the parser.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: A copy of the parser.</li>\n</ul>\n", "parameters": ["self", "_new"], "funcdef": "def"}, "tanjun.parsing.ShlexParser.add_parameter": {"fullname": "tanjun.parsing.ShlexParser.add_parameter", "modulename": "tanjun.parsing", "qualname": "ShlexParser.add_parameter", "type": "function", "doc": "<p>Add a parameter to this parser.</p>\n\n<h6 id=\"arguments\">Arguments</h6>\n\n<p>parameter : typing.Union[Argument, Option]\n    Either the argument or option to add to this parser.</p>\n\n<pre><code>*Note:*\nFor `Argument` type parameters the ordering matters and is decided\nby `add_parameter` call order.\n</code></pre>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The parser instance to enable call chaining.</li>\n</ul>\n", "parameters": ["self", "parameter"], "funcdef": "def"}, "tanjun.parsing.ShlexParser.remove_parameter": {"fullname": "tanjun.parsing.ShlexParser.remove_parameter", "modulename": "tanjun.parsing", "qualname": "ShlexParser.remove_parameter", "type": "function", "doc": "<p>Remove a parameter from the parser.</p>\n\n<h6 id=\"arguments\">Arguments</h6>\n\n<p>parameter : typing.Union[Argument, Option]\n    Either the argument or option to remove from this parser.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The parser instance to enable call chaining.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the parameter isn't registered.</li>\n</ul>\n", "parameters": ["self", "parameter"], "funcdef": "def"}, "tanjun.parsing.ShlexParser.add_argument": {"fullname": "tanjun.parsing.ShlexParser.add_argument", "modulename": "tanjun.parsing", "qualname": "ShlexParser.add_argument", "type": "function", "doc": "<p>Add an argument type parameter to the parser..</p>\n\n<p><em>Note:</em>\nOrder matters for positional arguments.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong> (str):\nThe string identifier of this argument (may be used to pass the result\nof this argument to the command's callback during execution).</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>converters</strong> (typing.Union[ConverterSig, collections.abc.Iterable[ConverterSig]]):\nThe converter(s) this argument should use to handle values passed to it\nduring parsing.</p>\n\n<p>If no converters are provided then the raw string value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>default</strong> (typing.Any):\nThe default value of this argument, if left as\n<code>UNDEFINED_DEFAULT</code> then this will have no default.</li>\n<li><strong>greedy</strong> (bool):\nWhether or not this argument should be greedy (meaning that it\ntakes in the remaining argument values).</li>\n<li><strong>multi</strong> (bool):\nWhether this argument can be passed multiple times.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>SelfT</strong>: This parser to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "key", "converters", "default", "greedy", "multi"], "funcdef": "def"}, "tanjun.parsing.ShlexParser.add_option": {"fullname": "tanjun.parsing.ShlexParser.add_option", "modulename": "tanjun.parsing", "qualname": "ShlexParser.add_option", "type": "function", "doc": "<p>Add an option type parameter to this parser.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong> (str):\nThe string identifier of this option which will be used to pass the\nresult of this argument to the command's callback during execution as\na keyword argument.</li>\n<li><strong>name</strong> (str):\nThe name of this option used for identifying it in the parsed content.</li>\n<li><strong>default</strong> (typing.Any):\nThe default value of this argument, unlike arguments this is required\nfor options.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>*names</strong> (str):\nOther names of this option used for identifying it in the parsed content.</li>\n<li><p><strong>converters</strong> (typing.Union[ConverterSig, collections.abc.Iterable[ConverterSig]]):\nThe converter(s) this argument should use to handle values passed to it\nduring parsing.</p>\n\n<p>If no converters are provided then the raw string value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>empty_value</strong> (typing.Any):\nThe value to use if this option is provided without a value. If left as\n<code>UNDEFINED_DEFAULT</code> then this option will error if it's\nprovided without a value.</li>\n<li><strong>multi</strong> (bool):\nIf this option can be provided multiple times.\nDefaults to <code>False</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>SelfT</strong>: This parser to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "key", "name", "names", "converters", "default", "empty_value", "multi"], "funcdef": "def"}, "tanjun.parsing.ShlexParser.set_parameters": {"fullname": "tanjun.parsing.ShlexParser.set_parameters", "modulename": "tanjun.parsing", "qualname": "ShlexParser.set_parameters", "type": "function", "doc": "<p>Set the parameters for this parser.</p>\n\n<p><em>Note:</em>\nThis will override any previously set parameters.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>parameters</strong> (collections.abc.Iterable[typing.Union[Argument, Option]]):\nIterable of the arguments and options to set for this parser.</p>\n\n<p><em>Note:</em>\nOrder matters for <code>Argument</code> type parameters.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The parser instance to enable call chaining.</li>\n</ul>\n", "parameters": ["self", "parameters"], "funcdef": "def"}, "tanjun.parsing.ShlexParser.bind_client": {"fullname": "tanjun.parsing.ShlexParser.bind_client", "modulename": "tanjun.parsing", "qualname": "ShlexParser.bind_client", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "client"], "funcdef": "def"}, "tanjun.parsing.ShlexParser.bind_component": {"fullname": "tanjun.parsing.ShlexParser.bind_component", "modulename": "tanjun.parsing", "qualname": "ShlexParser.bind_component", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.parsing.ShlexParser.parse": {"fullname": "tanjun.parsing.ShlexParser.parse", "modulename": "tanjun.parsing", "qualname": "ShlexParser.parse", "type": "function", "doc": "<p>Parse a message context.</p>\n\n<p><em>Warning:</em>\nThis relies on the prefix and command name(s) having been removed\nfrom <code>tanjun.abc.MessageContext.content</code></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ctx</strong> (tanjun.abc.MessageContext):\nThe message context to parse.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict[str, typing.Any]</strong>: Dictionary of argument names to the parsed values for them.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>tanjun.errors.ParserError</strong>: If the message could not be parsed.</li>\n</ul>\n", "parameters": ["self", "ctx"], "funcdef": "def"}, "tanjun.parsing.UndefinedDefaultT": {"fullname": "tanjun.parsing.UndefinedDefaultT", "modulename": "tanjun.parsing", "qualname": "UndefinedDefaultT", "type": "class", "doc": "<p>Type of the singleton value used for indicating an empty default.</p>\n"}, "tanjun.parsing.UndefinedDefaultT.__init__": {"fullname": "tanjun.parsing.UndefinedDefaultT.__init__", "modulename": "tanjun.parsing", "qualname": "UndefinedDefaultT.__init__", "type": "function", "doc": "<p></p>\n", "parameters": [], "funcdef": "def"}, "tanjun.parsing.UNDEFINED_DEFAULT": {"fullname": "tanjun.parsing.UNDEFINED_DEFAULT", "modulename": "tanjun.parsing", "qualname": "UNDEFINED_DEFAULT", "type": "variable", "doc": "<p>A singleton used to represent no default for a parameter.</p>\n"}, "tanjun.parsing.with_argument": {"fullname": "tanjun.parsing.with_argument", "modulename": "tanjun.parsing", "qualname": "with_argument", "type": "function", "doc": "<p>Add an argument to a parsable command through a decorator call.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>Order matters for positional arguments and since decorator execution\nstarts at the decorator closest to the command and goes upwards this\nwill decide where a positional argument is located in a command's\nsignature.</li>\n<li>If no parser is explicitly set on the command this is decorating before\nthis decorator call then this will set <code>ShlexParser</code> as the parser.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong> (str):\nThe string identifier of this argument (may be used to pass the result\nof this argument to the command's callback during execution).</li>\n<li><p><strong>converters</strong> (typing.Union[ConverterSig, collections.abc.Iterable[ConverterSig]]):\nThe converter(s) this argument should use to handle values passed to it\nduring parsing.</p>\n\n<p>If no converters are provided then the raw string value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>default</strong> (typing.Any):\nThe default value of this argument, if left as\n<code>UNDEFINED_DEFAULT</code> then this will have no default.</li>\n<li><strong>greedy</strong> (bool):\nWhether or not this argument should be greedy (meaning that it\ntakes in the remaining argument values).</li>\n<li><strong>multi</strong> (bool):\nWhether this argument can be passed multiple times.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[ParseableProtoT], ParseableProtoT]:</strong>: Decorator function for the parsable command this argument is being added to.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">tanjun</span>\n\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">with_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"n\">converters</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">with_parser</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">as_message_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"o\">/</span><span class=\"p\">,</span> <span class=\"n\">argument</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n", "parameters": ["key", "converters", "default", "greedy", "multi"], "funcdef": "def"}, "tanjun.parsing.with_greedy_argument": {"fullname": "tanjun.parsing.with_greedy_argument", "modulename": "tanjun.parsing", "qualname": "with_greedy_argument", "type": "function", "doc": "<p>Add a greedy argument to a parsable command through a decorator call.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>A greedy argument will consume the remaining positional arguments and pass\nthem through to the converters as one joined string while also requiring\nthat at least one more positional argument is remaining unless a\ndefault is set.</li>\n<li>Order matters for positional arguments and since decorator execution\nstarts at the decorator closest to the command and goes upwards this\nwill decide where a positional argument is located in a command's\nsignature.</li>\n<li>If no parser is explicitly set on the command this is decorating before\nthis decorator call then this will set <code>ShlexParser</code> as the parser.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong> (str):\nThe string identifier of this argument (may be used to pass the result\nof this argument to the command's callback during execution).</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>converters</strong> (typing.Union[ConverterSig, collections.abc.Iterable[ConverterSig]]):\nThe converter(s) this argument should use to handle values passed to it\nduring parsing.</p>\n\n<p>If no converters are provided then the raw string value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>default</strong> (typing.Any):\nThe default value of this argument, if left as\n<code>UNDEFINED_DEFAULT</code> then this will have no default.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[ParseableProtoT], ParseableProtoT]:</strong>: Decorator function for the parsable command this argument is being added to.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">tanjun</span>\n\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">with_greedy_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"n\">converters</span><span class=\"o\">=</span><span class=\"n\">StringView</span><span class=\"p\">)</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">with_parser</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">as_message_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"o\">/</span><span class=\"p\">,</span> <span class=\"n\">argument</span><span class=\"p\">:</span> <span class=\"n\">StringView</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n", "parameters": ["key", "converters", "default"], "funcdef": "def"}, "tanjun.parsing.with_multi_argument": {"fullname": "tanjun.parsing.with_multi_argument", "modulename": "tanjun.parsing", "qualname": "with_multi_argument", "type": "function", "doc": "<p>Add a multi-argument to a parsable command through a decorator call.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>A multi argument will consume the remaining positional arguments and pass\nthem to the converters through multiple calls while also requiring that\nat least one more positional argument is remaining unless a default is\nset and passing through the results to the command's callback as a\nsequence.</li>\n<li>Order matters for positional arguments and since decorator execution\nstarts at the decorator closest to the command and goes upwards this\nwill decide where a positional argument is located in a command's\nsignature.</li>\n<li>If no parser is explicitly set on the command this is decorating before\nthis decorator call then this will set <code>ShlexParser</code> as the parser.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong> (str):\nThe string identifier of this argument (may be used to pass the result\nof this argument to the command's callback during execution).</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>converters</strong> (typing.Union[ConverterSig, collections.abc.Iterable[ConverterSig]]):\nThe converter(s) this argument should use to handle values passed to it\nduring parsing.</p>\n\n<p>If no converters are provided then the raw string value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>default</strong> (typing.Any):\nThe default value of this argument, if left as\n<code>UNDEFINED_DEFAULT</code> then this will have no default.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[ParseableProtoT], ParseableProtoT]:</strong>: Decorator function for the parsable command this argument is being added to.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">tanjun</span>\n\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">with_multi_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"n\">converters</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">with_parser</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">as_message_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"o\">/</span><span class=\"p\">,</span> <span class=\"n\">argument</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]):</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n", "parameters": ["key", "converters", "default"], "funcdef": "def"}, "tanjun.parsing.with_option": {"fullname": "tanjun.parsing.with_option", "modulename": "tanjun.parsing", "qualname": "with_option", "type": "function", "doc": "<p>Add an option to a parsable command through a decorator call.</p>\n\n<p><em>Note:</em>\nIf no parser is explicitly set on the command this is decorating before\nthis decorator call then this will set <code>ShlexParser</code> as the parser.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong> (str):\nThe string identifier of this option which will be used to pass the\nresult of this argument to the command's callback during execution as\na keyword argument.</li>\n<li><strong>name</strong> (str):\nThe name of this option used for identifying it in the parsed content.</li>\n<li><strong>default</strong> (typing.Any):\nThe default value of this argument, unlike arguments this is required\nfor options.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>*names</strong> (str):\nOther names of this option used for identifying it in the parsed content.</li>\n<li><p><strong>converters</strong> (typing.Union[ConverterSig, collections.abc.Iterable[ConverterSig]]):\nThe converter(s) this argument should use to handle values passed to it\nduring parsing.</p>\n\n<p>If no converters are provided then the raw string value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>empty_value</strong> (typing.Any):\nThe value to use if this option is provided without a value. If left as\n<code>UNDEFINED_DEFAULT</code> then this option will error if it's\nprovided without a value.</li>\n<li><strong>multi</strong> (bool):\nIf this option can be provided multiple times.\nDefaults to <code>False</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[ParseableProtoT], ParseableProtoT]:</strong>: Decorator function for the parsable command this option is being added to.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">tanjun</span>\n\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">with_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"n\">converters</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">with_parser</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">as_message_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"o\">/</span><span class=\"p\">,</span> <span class=\"n\">argument</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n", "parameters": ["key", "name", "names", "converters", "default", "empty_value", "multi"], "funcdef": "def"}, "tanjun.parsing.with_multi_option": {"fullname": "tanjun.parsing.with_multi_option", "modulename": "tanjun.parsing", "qualname": "with_multi_option", "type": "function", "doc": "<p>Add an multi-option to a command's parser through a decorator call.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<ul>\n<li>A multi option will consume all the values provided for an option and\npass them through to the converters as an array of strings while also\nrequiring that at least one value is provided for the option unless\na default is set.</li>\n<li>If no parser is explicitly set on the command this is decorating before\nthis decorator call then this will set <code>ShlexParser</code> as the parser.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong> (str):\nThe string identifier of this option which will be used to pass the\nresult of this argument to the command's callback during execution as\na keyword argument.</li>\n<li><strong>name</strong> (str):\nThe name of this option used for identifying it in the parsed content.</li>\n<li><strong>default</strong> (typing.Any):\nThe default value of this argument, unlike arguments this is required\nfor options.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>*names</strong> (str):\nOther names of this option used for identifying it in the parsed content.</li>\n<li><p><strong>converters</strong> (typing.Union[ConverterSig, collections.abc.Iterable[ConverterSig]]):\nThe converter(s) this argument should use to handle values passed to it\nduring parsing.</p>\n\n<p>If no converters are provided then the raw string value will be passed.</p>\n\n<p>Only the first converter to pass will be used.</p></li>\n<li><strong>empty_value</strong> (typing.Any):\nThe value to use if this option is provided without a value. If left as\n<code>UNDEFINED_DEFAULT</code> then this option will error if it's\nprovided without a value.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[[ParseableProtoT], ParseableProtoT]:</strong>: Decorator function for the parsable command this option is being added to.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">tanjun</span>\n\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">with_multi_option</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">,</span> <span class=\"n\">converters</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"p\">())</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">with_parser</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">as_message_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;command&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"o\">/</span><span class=\"p\">,</span> <span class=\"n\">argument</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]):</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n", "parameters": ["key", "name", "names", "converters", "default", "empty_value"], "funcdef": "def"}, "tanjun.parsing.with_parser": {"fullname": "tanjun.parsing.with_parser", "modulename": "tanjun.parsing", "qualname": "with_parser", "type": "function", "doc": "<p>Add a shlex parser command parser to a supported command.</p>\n\n<h6 id=\"example\">Example</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">with_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;arg&quot;</span><span class=\"p\">,</span> <span class=\"n\">converters</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">with_parser</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_message_command</span><span class=\"p\">(</span><span class=\"s2\">&quot;hi&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">hi</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span> <span class=\"n\">tanjun</span><span class=\"o\">.</span><span class=\"n\">MessageContext</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre></div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (ParseableProtoT):\nThe parseable command to set the parser on.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ParseableProtoT</strong>: The command with the parser set.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the command already has a parser set.</li>\n</ul>\n", "parameters": ["command"], "funcdef": "def"}, "tanjun.schedules": {"fullname": "tanjun.schedules", "modulename": "tanjun.schedules", "qualname": "", "type": "module", "doc": "<p>Interface and interval implementation for a Tanjun based callback scheduler.</p>\n"}, "tanjun.schedules.AbstractSchedule": {"fullname": "tanjun.schedules.AbstractSchedule", "modulename": "tanjun.schedules", "qualname": "AbstractSchedule", "type": "class", "doc": "<p>Abstract callback schedule class.</p>\n"}, "tanjun.schedules.AbstractSchedule.callback": {"fullname": "tanjun.schedules.AbstractSchedule.callback", "modulename": "tanjun.schedules", "qualname": "AbstractSchedule.callback", "type": "variable", "doc": "<p>Return the callback attached to the schedule.</p>\n\n<p>This will be an asynchronous function which takes zero positional\narguments, returns <code>None</code> and may be relying on dependency injection.</p>\n"}, "tanjun.schedules.AbstractSchedule.is_alive": {"fullname": "tanjun.schedules.AbstractSchedule.is_alive", "modulename": "tanjun.schedules", "qualname": "AbstractSchedule.is_alive", "type": "variable", "doc": "<p>Whether the schedule is alive.</p>\n"}, "tanjun.schedules.AbstractSchedule.iteration_count": {"fullname": "tanjun.schedules.AbstractSchedule.iteration_count", "modulename": "tanjun.schedules", "qualname": "AbstractSchedule.iteration_count", "type": "variable", "doc": "<p>Return the number of times this schedule has run.</p>\n\n<p>This increments after a call regardless of if it failed.</p>\n"}, "tanjun.schedules.AbstractSchedule.copy": {"fullname": "tanjun.schedules.AbstractSchedule.copy", "modulename": "tanjun.schedules", "qualname": "AbstractSchedule.copy", "type": "function", "doc": "<p>Copy the schedule.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The copied schedule.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the schedule is active.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.schedules.AbstractSchedule.start": {"fullname": "tanjun.schedules.AbstractSchedule.start", "modulename": "tanjun.schedules", "qualname": "AbstractSchedule.start", "type": "function", "doc": "<p>Start the schedule.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>tanjun.injecting.InjectorClient</strong>: The injector client calls should be resolved with.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>loop</strong> (typing.Optional[asyncio.AbstractEventLoop]):\nThe event loop to use. If not provided, the current event loop will\nbe used.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the scheduled callback is already running.\nIf the current or provided event loop isn't running.</li>\n</ul>\n", "parameters": ["self", "client", "loop"], "funcdef": "def"}, "tanjun.schedules.AbstractSchedule.stop": {"fullname": "tanjun.schedules.AbstractSchedule.stop", "modulename": "tanjun.schedules", "qualname": "AbstractSchedule.stop", "type": "function", "doc": "<p>Stop the schedule.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the scheduled callback isn't running.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.schedules.as_interval": {"fullname": "tanjun.schedules.as_interval", "modulename": "tanjun.schedules", "qualname": "as_interval", "type": "function", "doc": "<p>Decorator to create an schedule.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>interval</strong> (typing.Union[int, float, datetime.timedelta]):\nThe callback for the schedule.</p>\n\n<p>This should be an asynchronous function which takes no positional\narguments, returns <code>None</code> and may use dependency injection.</p></li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>fatal_exceptions</strong> (collections.abc.Sequence[type[Exception]]):\nA sequence of exceptions that will cause the schedule to stop if raised\nby the callback, start callback or stop callback.</p>\n\n<p>Defaults to no exceptions.</p></li>\n<li><p><strong>ignored_exceptions</strong> (collections.abc.Sequence[type[Exception]]):\nA sequence of exceptions that should be ignored if raised by the\ncallback, start callback or stop callback.</p>\n\n<p>Defaults to no exceptions.</p></li>\n<li><strong>max_runs</strong> (typing.Optional[int]):\nThe maximum amount of times the schedule runs. Defaults to no maximum.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.Callable[[_CallbackSigT], tanjun.scheduling.IntervalSchedule[_CallbackSigT]]</strong>: The decorator used to create the schedule.</li>\n</ul>\n", "parameters": ["interval", "fatal_exceptions", "ignored_exceptions", "max_runs"], "funcdef": "def"}, "tanjun.schedules.IntervalSchedule": {"fullname": "tanjun.schedules.IntervalSchedule", "modulename": "tanjun.schedules", "qualname": "IntervalSchedule", "type": "class", "doc": "<p>A callback schedule with an interval between calls.</p>\n"}, "tanjun.schedules.IntervalSchedule.__init__": {"fullname": "tanjun.schedules.IntervalSchedule.__init__", "modulename": "tanjun.schedules", "qualname": "IntervalSchedule.__init__", "type": "function", "doc": "<p>Initialise an interval schedule.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>callback</strong> (collections.abc.Callable[...,  collections.abc.Awaitable[None]]):\nThe callback for the schedule.</p>\n\n<p>This should be an asynchronous function which takes no positional\narguments, returns <code>None</code> and may use dependency injection.</p></li>\n<li><strong>interval</strong> (typing.Union[datetime.timedelta, int, float]):\nThe interval between calls. Passed as a timedelta, or a number of seconds.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>fatal_exceptions</strong> (collections.abc.Sequence[type[Exception]]):\nA sequence of exceptions that will cause the schedule to stop if raised\nby the callback, start callback or stop callback.</p>\n\n<p>Defaults to no exceptions.</p></li>\n<li><p><strong>ignored_exceptions</strong> (collections.abc.Sequence[type[Exception]]):\nA sequence of exceptions that should be ignored if raised by the\ncallback, start callback or stop callback.</p>\n\n<p>Defaults to no exceptions.</p></li>\n<li><strong>max_runs</strong> (typing.Optional[int]):\nThe maximum amount of times the schedule runs. Defaults to no maximum.</li>\n</ul>\n", "parameters": ["self", "callback", "interval", "fatal_exceptions", "ignored_exceptions", "max_runs"], "funcdef": "def"}, "tanjun.schedules.IntervalSchedule.callback": {"fullname": "tanjun.schedules.IntervalSchedule.callback", "modulename": "tanjun.schedules", "qualname": "IntervalSchedule.callback", "type": "variable", "doc": "<p>Return the callback attached to the schedule.</p>\n\n<p>This will be an asynchronous function which takes zero positional\narguments, returns <code>None</code> and may be relying on dependency injection.</p>\n"}, "tanjun.schedules.IntervalSchedule.interval": {"fullname": "tanjun.schedules.IntervalSchedule.interval", "modulename": "tanjun.schedules", "qualname": "IntervalSchedule.interval", "type": "variable", "doc": "<p>The interval between scheduled callback calls.</p>\n"}, "tanjun.schedules.IntervalSchedule.is_alive": {"fullname": "tanjun.schedules.IntervalSchedule.is_alive", "modulename": "tanjun.schedules", "qualname": "IntervalSchedule.is_alive", "type": "variable", "doc": "<p>Whether the schedule is alive.</p>\n"}, "tanjun.schedules.IntervalSchedule.iteration_count": {"fullname": "tanjun.schedules.IntervalSchedule.iteration_count", "modulename": "tanjun.schedules", "qualname": "IntervalSchedule.iteration_count", "type": "variable", "doc": "<p>Return the number of times this schedule has run.</p>\n\n<p>This increments after a call regardless of if it failed.</p>\n"}, "tanjun.schedules.IntervalSchedule.copy": {"fullname": "tanjun.schedules.IntervalSchedule.copy", "modulename": "tanjun.schedules", "qualname": "IntervalSchedule.copy", "type": "function", "doc": "<p>Copy the schedule.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The copied schedule.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the schedule is active.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.schedules.IntervalSchedule.load_into_component": {"fullname": "tanjun.schedules.IntervalSchedule.load_into_component", "modulename": "tanjun.schedules", "qualname": "IntervalSchedule.load_into_component", "type": "function", "doc": "<p>Load the object into the component.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>component</strong> (tanjun.abc.Component):\nThe component this object should be loaded into.</li>\n</ul>\n", "parameters": ["self", "component"], "funcdef": "def"}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"fullname": "tanjun.schedules.IntervalSchedule.set_start_callback", "modulename": "tanjun.schedules", "qualname": "IntervalSchedule.set_start_callback", "type": "function", "doc": "<p>Set the callback executed before the schedule starts to run.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>callback</strong> (CallbackSig):\nThe callback to set.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The schedule instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"fullname": "tanjun.schedules.IntervalSchedule.set_stop_callback", "modulename": "tanjun.schedules", "qualname": "IntervalSchedule.set_stop_callback", "type": "function", "doc": "<p>Set the callback executed after the schedule is finished.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>callback</strong> (collections.abc.Callable[...,  collections.abc.Awaitable[None]]):\nThe callback to set.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The schedule instance to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.schedules.IntervalSchedule.start": {"fullname": "tanjun.schedules.IntervalSchedule.start", "modulename": "tanjun.schedules", "qualname": "IntervalSchedule.start", "type": "function", "doc": "<p>Start the schedule.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>tanjun.injecting.InjectorClient</strong>: The injector client calls should be resolved with.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>loop</strong> (typing.Optional[asyncio.AbstractEventLoop]):\nThe event loop to use. If not provided, the current event loop will\nbe used.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the scheduled callback is already running.\nIf the current or provided event loop isn't running.</li>\n</ul>\n", "parameters": ["self", "client", "loop"], "funcdef": "def"}, "tanjun.schedules.IntervalSchedule.stop": {"fullname": "tanjun.schedules.IntervalSchedule.stop", "modulename": "tanjun.schedules", "qualname": "IntervalSchedule.stop", "type": "function", "doc": "<p>Stop the schedule.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>RuntimeError</strong>: If the scheduled callback isn't running.</li>\n</ul>\n", "parameters": ["self"], "funcdef": "def"}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"fullname": "tanjun.schedules.IntervalSchedule.with_start_callback", "modulename": "tanjun.schedules", "qualname": "IntervalSchedule.with_start_callback", "type": "function", "doc": "<p>Set the callback executed before the schedule is finished/stopped.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>callback</strong> (collections.abc.Callable[...,  collections.abc.Awaitable[None]]):\nThe callback to set.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[...,  collections.abc.Awaitable[None]]</strong>: The added callback.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@component</span><span class=\"o\">.</span><span class=\"n\">with_schedule</span><span class=\"p\">()</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_interval</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">max_runs</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">interval</span><span class=\"p\">():</span>\n    <span class=\"k\">global</span> <span class=\"n\">counter</span>\n    <span class=\"n\">counter</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Run #</span><span class=\"si\">{</span><span class=\"n\">counter</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@interval</span><span class=\"o\">.</span><span class=\"n\">with_start_callback</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">pre</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;pre callback&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"fullname": "tanjun.schedules.IntervalSchedule.with_stop_callback", "modulename": "tanjun.schedules", "qualname": "IntervalSchedule.with_stop_callback", "type": "function", "doc": "<p>Set the callback executed after the schedule is finished.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>callback</strong> (collections.abc.Callable[...,  collections.abc.Awaitable[None]]):\nThe callback to set.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>collections.abc.Callable[...,  collections.abc.Awaitable[None]]</strong>: The added callback.</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@component</span><span class=\"o\">.</span><span class=\"n\">with_schedule</span><span class=\"p\">()</span>\n<span class=\"nd\">@tanjun</span><span class=\"o\">.</span><span class=\"n\">as_interval</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">max_runs</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">interval</span><span class=\"p\">():</span>\n    <span class=\"k\">global</span> <span class=\"n\">counter</span>\n    <span class=\"n\">counter</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Run #</span><span class=\"si\">{</span><span class=\"n\">counter</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@interval</span><span class=\"o\">.</span><span class=\"n\">with_stop_callback</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">post</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;pre callback&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n", "parameters": ["self", "callback"], "funcdef": "def"}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"fullname": "tanjun.schedules.IntervalSchedule.set_ignored_exceptions", "modulename": "tanjun.schedules", "qualname": "IntervalSchedule.set_ignored_exceptions", "type": "function", "doc": "<p>Set the exceptions that a schedule will ignore.</p>\n\n<p>If any of these exceptions are encountered, there will be nothing printed to console.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>*exceptions</strong> (type[Exception]):\nTypes of the exceptions to ignore.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The schedule object to enable chained calls.</li>\n</ul>\n", "parameters": ["self", "exceptions"], "funcdef": "def"}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"fullname": "tanjun.schedules.IntervalSchedule.set_fatal_exceptions", "modulename": "tanjun.schedules", "qualname": "IntervalSchedule.set_fatal_exceptions", "type": "function", "doc": "<p>Set the exceptions that will stop a schedule.</p>\n\n<p>If any of these exceptions are encountered, the task will stop.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>*exceptions</strong> (type[Exception]):\nTypes of the exceptions to stop the task on.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Self</strong>: The schedule object to enable chianed calls.</li>\n</ul>\n", "parameters": ["self", "exceptions"], "funcdef": "def"}, "tanjun.utilities": {"fullname": "tanjun.utilities", "modulename": "tanjun.utilities", "qualname": "", "type": "module", "doc": "<p>Collection of utility functions used within Tanjun.</p>\n"}, "tanjun.utilities.gather_checks": {"fullname": "tanjun.utilities.gather_checks", "modulename": "tanjun.utilities", "qualname": "gather_checks", "type": "function", "doc": "<p>Gather a collection of checks.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ctx</strong> (tanjun.abc.Context):\nThe context to check.</li>\n<li><strong>checks</strong> (collections.abc.Iterable[tanjun.injecting.InjectableCheck]):\nAn iterable of injectable checks.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bool</strong>: Whether all the checks passed or not.</li>\n</ul>\n", "parameters": ["ctx", "checks_"], "funcdef": "async def"}, "tanjun.utilities.ALL_PERMISSIONS": {"fullname": "tanjun.utilities.ALL_PERMISSIONS", "modulename": "tanjun.utilities", "qualname": "ALL_PERMISSIONS", "type": "variable", "doc": "<p>All of all the known permissions based on the linked version of Hikari.</p>\n"}, "tanjun.utilities.CastedView": {"fullname": "tanjun.utilities.CastedView", "modulename": "tanjun.utilities", "qualname": "CastedView", "type": "class", "doc": "<p>Abstract base class for generic types.</p>\n\n<p>A generic type is typically declared by inheriting from\nthis class parameterized with one or more type variables.\nFor example, a generic mapping type might be defined as::</p>\n\n<p>class Mapping(Generic[KT, VT]):\n      def __getitem__(self, key: KT) -> VT:\n          ...\n      # Etc.</p>\n\n<p>This class can then be used as follows::</p>\n\n<p>def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n      try:\n          return mapping[key]\n      except KeyError:\n          return default</p>\n"}, "tanjun.utilities.CastedView.__init__": {"fullname": "tanjun.utilities.CastedView.__init__", "modulename": "tanjun.utilities", "qualname": "CastedView.__init__", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "raw_data", "cast"], "funcdef": "def"}, "tanjun.utilities.DM_PERMISSIONS": {"fullname": "tanjun.utilities.DM_PERMISSIONS", "modulename": "tanjun.utilities", "qualname": "DM_PERMISSIONS", "type": "variable", "doc": "<p>Bitfield of the permissions which are accessibly within DM channels.</p>\n"}, "tanjun.utilities.calculate_everyone_permissions": {"fullname": "tanjun.utilities.calculate_everyone_permissions", "modulename": "tanjun.utilities", "qualname": "calculate_everyone_permissions", "type": "function", "doc": "<p>Calculate a guild's default permissions within the guild or for a specific channel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>everyone_role</strong> (hikari.guilds.Role):\nThe guild's default @everyone role.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>channel</strong> (typing.Optional[hikari.channels.GuildChannel]):\nThe channel to calculate the permissions for.</p>\n\n<p>If this is left as <code>None</code> then this will just calculate the default\npermissions on a guild level.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.permissions.Permissions</strong>: The calculated permissions.</li>\n</ul>\n", "parameters": ["everyone_role", "channel"], "funcdef": "def"}, "tanjun.utilities.calculate_permissions": {"fullname": "tanjun.utilities.calculate_permissions", "modulename": "tanjun.utilities", "qualname": "calculate_permissions", "type": "function", "doc": "<p>Calculate the permissions a member has within a guild.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>member</strong> (hikari.guilds.Member):\nObject of the member to calculate the permissions for.</li>\n<li><strong>guild</strong> (hikari.guilds.Guild):\nObject of the guild to calculate their permissions within.</li>\n<li><strong>roles</strong> (collections.abc.Mapping[hikari.snowflakes.Snowflake, hikari.guilds.Role]):\nMapping of snowflake IDs to objects of the roles within the target\nguild.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>channel</strong> (typing.Optional[hikari.channels.GuildChannel]):\nObject of the channel to calculate the member's permissions in.</p>\n\n<p>If this is left as <code>None</code> then this will just calculate their\npermissions on a guild level.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.permissions.Permission</strong>: Value of the member's permissions either within the guild or specified\nguild channel.</li>\n</ul>\n", "parameters": ["member", "guild", "roles", "channel"], "funcdef": "def"}, "tanjun.utilities.fetch_everyone_permissions": {"fullname": "tanjun.utilities.fetch_everyone_permissions", "modulename": "tanjun.utilities", "qualname": "fetch_everyone_permissions", "type": "function", "doc": "<p>Calculate the permissions a guild's default @everyone role has within a guild or for a specific channel.</p>\n\n<p><em>Note:</em>\nThis callback will fallback to REST requests if cache lookups fail or\nare not possible.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>client</strong> (tanjun.abc.Client):\nThe Tanjun client to use for lookups.</li>\n<li><strong>guild_id</strong> (hikari.snowflakes.Snowflake):\nID of the guild to calculate the default permissions for.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><p><strong>channel</strong> (typing.Optional[hikari.snowflakes.SnowflakeishOr[hikari.channels.PartialChannel]]):\nThe channel to calculate the permissions for.</p>\n\n<p>If this is left as <code>None</code> then this will just calculate the default\npermissions on a guild level.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.permissions.Permissions</strong>: The calculated permissions.</li>\n</ul>\n", "parameters": ["client", "guild_id", "channel"], "funcdef": "async def"}, "tanjun.utilities.fetch_permissions": {"fullname": "tanjun.utilities.fetch_permissions", "modulename": "tanjun.utilities", "qualname": "fetch_permissions", "type": "function", "doc": "<p>Calculate the permissions a member has within a guild.</p>\n\n<p><em>Note:</em>\nThis callback will fallback to REST requests if cache lookups fail or\nare not possible.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>client</strong> (tanjun.abc.Client):\nThe Tanjun client to use for lookups.</li>\n<li><strong>member</strong> (hikari.guilds.Member):\nThe object of the member to calculate the permissions for.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>channel</strong> (typing.Optional[hikari.snowflakes.SnowflakeishOr[hikari.channels.GuildChannel]]):\nThe object of ID of the channel to get their permissions in.\nIf left as <code>None</code> then this will return their base guild\npermissions.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>hikari.permissions.Permissions</strong>: The calculated permissions.</li>\n</ul>\n", "parameters": ["client", "member", "channel"], "funcdef": "async def"}, "tanjun.utilities.match_prefix_names": {"fullname": "tanjun.utilities.match_prefix_names", "modulename": "tanjun.utilities", "qualname": "match_prefix_names", "type": "function", "doc": "<p>Search for a matching name in a string.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>content</strong> (str):\nThe string to match names against.</li>\n<li><strong>names</strong> (collections.abc.Iterable[str]):\nThe names to search for.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>typing.Optional[str]</strong>: The name that matched or None if no name matched.</li>\n</ul>\n", "parameters": ["content", "names"], "funcdef": "def"}}, "docInfo": {"tanjun": {"qualname": 0, "fullname": 1, "doc": 285}, "tanjun.ClientCallbackNames": {"qualname": 1, "fullname": 2, "doc": 8}, "tanjun.ClientCallbackNames.CLOSED": {"qualname": 2, "fullname": 3, "doc": 8}, "tanjun.ClientCallbackNames.CLOSING": {"qualname": 2, "fullname": 3, "doc": 9}, "tanjun.ClientCallbackNames.COMPONENT_ADDED": {"qualname": 3, "fullname": 4, "doc": 21}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"qualname": 3, "fullname": 4, "doc": 21}, "tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"qualname": 4, "fullname": 5, "doc": 11}, "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"qualname": 4, "fullname": 5, "doc": 11}, "tanjun.ClientCallbackNames.STARTED": {"qualname": 2, "fullname": 3, "doc": 8}, "tanjun.ClientCallbackNames.STARTING": {"qualname": 2, "fullname": 3, "doc": 9}, "tanjun.with_all_checks": {"qualname": 1, "fullname": 2, "doc": 49}, "tanjun.with_any_checks": {"qualname": 1, "fullname": 2, "doc": 92}, "tanjun.with_check": {"qualname": 1, "fullname": 2, "doc": 22}, "tanjun.with_dm_check": {"qualname": 2, "fullname": 3, "doc": 74}, "tanjun.with_guild_check": {"qualname": 2, "fullname": 3, "doc": 75}, "tanjun.with_nsfw_check": {"qualname": 2, "fullname": 3, "doc": 77}, "tanjun.with_sfw_check": {"qualname": 2, "fullname": 3, "doc": 77}, "tanjun.with_owner_check": {"qualname": 2, "fullname": 3, "doc": 79}, "tanjun.with_author_permission_check": {"qualname": 3, "fullname": 4, "doc": 94}, "tanjun.with_own_permission_check": {"qualname": 2, "fullname": 3, "doc": 94}, "tanjun.as_loader": {"qualname": 1, "fullname": 2, "doc": 75}, "tanjun.as_unloader": {"qualname": 1, "fullname": 2, "doc": 78}, "tanjun.Client": {"qualname": 1, "fullname": 2, "doc": 36}, "tanjun.Client.__init__": {"qualname": 2, "fullname": 3, "doc": 316}, "tanjun.Client.from_gateway_bot": {"qualname": 3, "fullname": 4, "doc": 211}, "tanjun.Client.from_rest_bot": {"qualname": 3, "fullname": 4, "doc": 163}, "tanjun.Client.defaults_to_ephemeral": {"qualname": 3, "fullname": 4, "doc": 41}, "tanjun.Client.message_accepts": {"qualname": 3, "fullname": 4, "doc": 8}, "tanjun.Client.is_human_only": {"qualname": 2, "fullname": 3, "doc": 7}, "tanjun.Client.cache": {"qualname": 2, "fullname": 3, "doc": 6}, "tanjun.Client.checks": {"qualname": 2, "fullname": 3, "doc": 14}, "tanjun.Client.components": {"qualname": 2, "fullname": 3, "doc": 5}, "tanjun.Client.events": {"qualname": 2, "fullname": 3, "doc": 10}, "tanjun.Client.listeners": {"qualname": 2, "fullname": 3, "doc": 6}, "tanjun.Client.hooks": {"qualname": 2, "fullname": 3, "doc": 30}, "tanjun.Client.slash_hooks": {"qualname": 3, "fullname": 4, "doc": 12}, "tanjun.Client.is_alive": {"qualname": 2, "fullname": 3, "doc": 3}, "tanjun.Client.loop": {"qualname": 2, "fullname": 3, "doc": 5}, "tanjun.Client.message_hooks": {"qualname": 3, "fullname": 4, "doc": 13}, "tanjun.Client.metadata": {"qualname": 2, "fullname": 3, "doc": 12}, "tanjun.Client.prefix_getter": {"qualname": 3, "fullname": 4, "doc": 11}, "tanjun.Client.prefixes": {"qualname": 2, "fullname": 3, "doc": 5}, "tanjun.Client.rest": {"qualname": 2, "fullname": 3, "doc": 6}, "tanjun.Client.server": {"qualname": 2, "fullname": 3, "doc": 11}, "tanjun.Client.shards": {"qualname": 2, "fullname": 3, "doc": 6}, "tanjun.Client.voice": {"qualname": 2, "fullname": 3, "doc": 6}, "tanjun.Client.clear_application_commands": {"qualname": 4, "fullname": 5, "doc": 60}, "tanjun.Client.set_global_commands": {"qualname": 4, "fullname": 5, "doc": 16}, "tanjun.Client.declare_global_commands": {"qualname": 4, "fullname": 5, "doc": 159}, "tanjun.Client.declare_application_command": {"qualname": 4, "fullname": 5, "doc": 78}, "tanjun.Client.declare_application_commands": {"qualname": 4, "fullname": 5, "doc": 175}, "tanjun.Client.set_auto_defer_after": {"qualname": 4, "fullname": 5, "doc": 26}, "tanjun.Client.set_ephemeral_default": {"qualname": 4, "fullname": 5, "doc": 32}, "tanjun.Client.set_hikari_trait_injectors": {"qualname": 5, "fullname": 6, "doc": 33}, "tanjun.Client.set_interaction_not_found": {"qualname": 4, "fullname": 5, "doc": 33}, "tanjun.Client.set_message_accepts": {"qualname": 4, "fullname": 5, "doc": 14}, "tanjun.Client.set_message_ctx_maker": {"qualname": 5, "fullname": 6, "doc": 49}, "tanjun.Client.set_slash_ctx_maker": {"qualname": 5, "fullname": 6, "doc": 50}, "tanjun.Client.set_human_only": {"qualname": 3, "fullname": 4, "doc": 40}, "tanjun.Client.add_check": {"qualname": 3, "fullname": 4, "doc": 40}, "tanjun.Client.remove_check": {"qualname": 3, "fullname": 4, "doc": 15}, "tanjun.Client.with_check": {"qualname": 2, "fullname": 3, "doc": 35}, "tanjun.Client.check": {"qualname": 2, "fullname": 3, "doc": 0}, "tanjun.Client.add_component": {"qualname": 3, "fullname": 4, "doc": 22}, "tanjun.Client.get_component_by_name": {"qualname": 3, "fullname": 4, "doc": 15}, "tanjun.Client.remove_component": {"qualname": 3, "fullname": 4, "doc": 30}, "tanjun.Client.remove_component_by_name": {"qualname": 4, "fullname": 5, "doc": 26}, "tanjun.Client.add_client_callback": {"qualname": 4, "fullname": 5, "doc": 41}, "tanjun.Client.dispatch_client_callback": {"qualname": 4, "fullname": 5, "doc": 24}, "tanjun.Client.get_client_callbacks": {"qualname": 3, "fullname": 4, "doc": 23}, "tanjun.Client.remove_client_callback": {"qualname": 4, "fullname": 5, "doc": 38}, "tanjun.Client.with_client_callback": {"qualname": 3, "fullname": 4, "doc": 64}, "tanjun.Client.add_listener": {"qualname": 3, "fullname": 4, "doc": 41}, "tanjun.Client.remove_listener": {"qualname": 3, "fullname": 4, "doc": 35}, "tanjun.Client.with_listener": {"qualname": 2, "fullname": 3, "doc": 65}, "tanjun.Client.add_prefix": {"qualname": 3, "fullname": 4, "doc": 41}, "tanjun.Client.remove_prefix": {"qualname": 3, "fullname": 4, "doc": 22}, "tanjun.Client.set_prefix_getter": {"qualname": 4, "fullname": 5, "doc": 51}, "tanjun.Client.with_prefix_getter": {"qualname": 3, "fullname": 4, "doc": 65}, "tanjun.Client.iter_commands": {"qualname": 3, "fullname": 4, "doc": 16}, "tanjun.Client.iter_message_commands": {"qualname": 4, "fullname": 5, "doc": 15}, "tanjun.Client.iter_slash_commands": {"qualname": 4, "fullname": 5, "doc": 24}, "tanjun.Client.check_message_name": {"qualname": 4, "fullname": 5, "doc": 42}, "tanjun.Client.check_slash_name": {"qualname": 4, "fullname": 5, "doc": 30}, "tanjun.Client.close": {"qualname": 2, "fullname": 3, "doc": 7}, "tanjun.Client.open": {"qualname": 2, "fullname": 3, "doc": 23}, "tanjun.Client.fetch_rest_application_id": {"qualname": 5, "fullname": 6, "doc": 14}, "tanjun.Client.set_hooks": {"qualname": 3, "fullname": 4, "doc": 39}, "tanjun.Client.set_slash_hooks": {"qualname": 4, "fullname": 5, "doc": 40}, "tanjun.Client.set_message_hooks": {"qualname": 4, "fullname": 5, "doc": 40}, "tanjun.Client.load_modules": {"qualname": 3, "fullname": 4, "doc": 118}, "tanjun.Client.unload_modules": {"qualname": 3, "fullname": 4, "doc": 94}, "tanjun.Client.reload_modules": {"qualname": 3, "fullname": 4, "doc": 64}, "tanjun.Client.on_message_create_event": {"qualname": 4, "fullname": 5, "doc": 14}, "tanjun.Client.on_interaction_create_event": {"qualname": 4, "fullname": 5, "doc": 24}, "tanjun.Client.on_interaction_create_request": {"qualname": 4, "fullname": 5, "doc": 24}, "tanjun.MessageAcceptsEnum": {"qualname": 1, "fullname": 2, "doc": 7}, "tanjun.MessageAcceptsEnum.ALL": {"qualname": 1, "fullname": 2, "doc": 11}, "tanjun.MessageAcceptsEnum.DM_ONLY": {"qualname": 2, "fullname": 3, "doc": 9}, "tanjun.MessageAcceptsEnum.GUILD_ONLY": {"qualname": 2, "fullname": 3, "doc": 9}, "tanjun.MessageAcceptsEnum.NONE": {"qualname": 2, "fullname": 3, "doc": 8}, "tanjun.MessageAcceptsEnum.get_event_type": {"qualname": 3, "fullname": 4, "doc": 25}, "tanjun.as_message_command": {"qualname": 2, "fullname": 3, "doc": 51}, "tanjun.as_message_command_group": {"qualname": 3, "fullname": 4, "doc": 77}, "tanjun.as_slash_command": {"qualname": 2, "fullname": 3, "doc": 267}, "tanjun.slash_command_group": {"qualname": 3, "fullname": 4, "doc": 221}, "tanjun.MessageCommand": {"qualname": 1, "fullname": 2, "doc": 4}, "tanjun.MessageCommand.__init__": {"qualname": 2, "fullname": 3, "doc": 46}, "tanjun.MessageCommand.callback": {"qualname": 2, "fullname": 3, "doc": 13}, "tanjun.MessageCommand.names": {"qualname": 2, "fullname": 3, "doc": 3}, "tanjun.MessageCommand.needs_injector": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.MessageCommand.parent": {"qualname": 2, "fullname": 3, "doc": 4}, "tanjun.MessageCommand.parser": {"qualname": 2, "fullname": 3, "doc": 0}, "tanjun.MessageCommand.bind_client": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.MessageCommand.bind_component": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.MessageCommand.copy": {"qualname": 2, "fullname": 3, "doc": 12}, "tanjun.MessageCommand.set_parent": {"qualname": 3, "fullname": 4, "doc": 16}, "tanjun.MessageCommand.set_parser": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.MessageCommand.check_context": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.MessageCommand.execute": {"qualname": 2, "fullname": 3, "doc": 0}, "tanjun.MessageCommand.load_into_component": {"qualname": 3, "fullname": 4, "doc": 11}, "tanjun.MessageCommandGroup": {"qualname": 1, "fullname": 2, "doc": 5}, "tanjun.MessageCommandGroup.__init__": {"qualname": 2, "fullname": 3, "doc": 42}, "tanjun.MessageCommandGroup.commands": {"qualname": 2, "fullname": 3, "doc": 7}, "tanjun.MessageCommandGroup.is_strict": {"qualname": 2, "fullname": 3, "doc": 0}, "tanjun.MessageCommandGroup.copy": {"qualname": 2, "fullname": 3, "doc": 12}, "tanjun.MessageCommandGroup.add_command": {"qualname": 3, "fullname": 4, "doc": 25}, "tanjun.MessageCommandGroup.remove_command": {"qualname": 3, "fullname": 4, "doc": 21}, "tanjun.MessageCommandGroup.with_command": {"qualname": 2, "fullname": 3, "doc": 15}, "tanjun.MessageCommandGroup.bind_client": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.MessageCommandGroup.bind_component": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.MessageCommandGroup.find_command": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.MessageCommandGroup.execute": {"qualname": 2, "fullname": 3, "doc": 0}, "tanjun.SlashCommand": {"qualname": 1, "fullname": 2, "doc": 4}, "tanjun.SlashCommand.__init__": {"qualname": 2, "fullname": 3, "doc": 208}, "tanjun.SlashCommand.callback": {"qualname": 2, "fullname": 3, "doc": 4}, "tanjun.SlashCommand.needs_injector": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.SlashCommand.bind_client": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.SlashCommand.build": {"qualname": 2, "fullname": 3, "doc": 16}, "tanjun.SlashCommand.load_into_component": {"qualname": 3, "fullname": 4, "doc": 11}, "tanjun.SlashCommand.add_str_option": {"qualname": 4, "fullname": 5, "doc": 185}, "tanjun.SlashCommand.add_int_option": {"qualname": 4, "fullname": 5, "doc": 181}, "tanjun.SlashCommand.add_float_option": {"qualname": 4, "fullname": 5, "doc": 208}, "tanjun.SlashCommand.add_bool_option": {"qualname": 4, "fullname": 5, "doc": 97}, "tanjun.SlashCommand.add_user_option": {"qualname": 4, "fullname": 5, "doc": 116}, "tanjun.SlashCommand.add_member_option": {"qualname": 4, "fullname": 5, "doc": 100}, "tanjun.SlashCommand.add_channel_option": {"qualname": 4, "fullname": 5, "doc": 124}, "tanjun.SlashCommand.add_role_option": {"qualname": 4, "fullname": 5, "doc": 97}, "tanjun.SlashCommand.add_mentionable_option": {"qualname": 4, "fullname": 5, "doc": 110}, "tanjun.SlashCommand.execute": {"qualname": 2, "fullname": 3, "doc": 0}, "tanjun.SlashCommand.copy": {"qualname": 2, "fullname": 3, "doc": 7}, "tanjun.SlashCommandGroup": {"qualname": 1, "fullname": 2, "doc": 16}, "tanjun.SlashCommandGroup.__init__": {"qualname": 2, "fullname": 3, "doc": 114}, "tanjun.SlashCommandGroup.commands": {"qualname": 2, "fullname": 3, "doc": 3}, "tanjun.SlashCommandGroup.build": {"qualname": 2, "fullname": 3, "doc": 16}, "tanjun.SlashCommandGroup.copy": {"qualname": 2, "fullname": 3, "doc": 7}, "tanjun.SlashCommandGroup.add_command": {"qualname": 3, "fullname": 4, "doc": 27}, "tanjun.SlashCommandGroup.remove_command": {"qualname": 3, "fullname": 4, "doc": 18}, "tanjun.SlashCommandGroup.with_command": {"qualname": 2, "fullname": 3, "doc": 22}, "tanjun.SlashCommandGroup.execute": {"qualname": 2, "fullname": 3, "doc": 0}, "tanjun.with_str_slash_option": {"qualname": 3, "fullname": 4, "doc": 55}, "tanjun.with_int_slash_option": {"qualname": 3, "fullname": 4, "doc": 57}, "tanjun.with_float_slash_option": {"qualname": 3, "fullname": 4, "doc": 57}, "tanjun.with_bool_slash_option": {"qualname": 3, "fullname": 4, "doc": 58}, "tanjun.with_role_slash_option": {"qualname": 3, "fullname": 4, "doc": 56}, "tanjun.with_user_slash_option": {"qualname": 3, "fullname": 4, "doc": 72}, "tanjun.with_member_slash_option": {"qualname": 3, "fullname": 4, "doc": 61}, "tanjun.with_channel_slash_option": {"qualname": 3, "fullname": 4, "doc": 61}, "tanjun.with_mentionable_slash_option": {"qualname": 3, "fullname": 4, "doc": 71}, "tanjun.Component": {"qualname": 1, "fullname": 2, "doc": 30}, "tanjun.Component.__init__": {"qualname": 2, "fullname": 3, "doc": 85}, "tanjun.Component.checks": {"qualname": 2, "fullname": 3, "doc": 8}, "tanjun.Component.client": {"qualname": 2, "fullname": 3, "doc": 4}, "tanjun.Component.defaults_to_ephemeral": {"qualname": 3, "fullname": 4, "doc": 41}, "tanjun.Component.hooks": {"qualname": 2, "fullname": 3, "doc": 0}, "tanjun.Component.loop": {"qualname": 2, "fullname": 3, "doc": 5}, "tanjun.Component.name": {"qualname": 2, "fullname": 3, "doc": 8}, "tanjun.Component.schedules": {"qualname": 2, "fullname": 3, "doc": 4}, "tanjun.Component.slash_commands": {"qualname": 3, "fullname": 4, "doc": 4}, "tanjun.Component.slash_hooks": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.Component.message_commands": {"qualname": 3, "fullname": 4, "doc": 4}, "tanjun.Component.message_hooks": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.Component.needs_injector": {"qualname": 3, "fullname": 4, "doc": 6}, "tanjun.Component.listeners": {"qualname": 2, "fullname": 3, "doc": 6}, "tanjun.Component.metadata": {"qualname": 2, "fullname": 3, "doc": 12}, "tanjun.Component.copy": {"qualname": 2, "fullname": 3, "doc": 0}, "tanjun.Component.load_from_scope": {"qualname": 3, "fullname": 4, "doc": 109}, "tanjun.Component.set_ephemeral_default": {"qualname": 4, "fullname": 5, "doc": 42}, "tanjun.Component.set_slash_hooks": {"qualname": 4, "fullname": 5, "doc": 0}, "tanjun.Component.set_message_hooks": {"qualname": 4, "fullname": 5, "doc": 0}, "tanjun.Component.set_hooks": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.Component.add_check": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.Component.remove_check": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.Component.with_check": {"qualname": 2, "fullname": 3, "doc": 0}, "tanjun.Component.add_client_callback": {"qualname": 4, "fullname": 5, "doc": 0}, "tanjun.Component.get_client_callbacks": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.Component.remove_client_callback": {"qualname": 4, "fullname": 5, "doc": 0}, "tanjun.Component.with_client_callback": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.Component.add_command": {"qualname": 3, "fullname": 4, "doc": 16}, "tanjun.Component.remove_command": {"qualname": 3, "fullname": 4, "doc": 16}, "tanjun.Component.with_command": {"qualname": 2, "fullname": 3, "doc": 114}, "tanjun.Component.add_slash_command": {"qualname": 4, "fullname": 5, "doc": 15}, "tanjun.Component.remove_slash_command": {"qualname": 4, "fullname": 5, "doc": 21}, "tanjun.Component.with_slash_command": {"qualname": 3, "fullname": 4, "doc": 24}, "tanjun.Component.add_message_command": {"qualname": 4, "fullname": 5, "doc": 26}, "tanjun.Component.remove_message_command": {"qualname": 4, "fullname": 5, "doc": 21}, "tanjun.Component.with_message_command": {"qualname": 3, "fullname": 4, "doc": 24}, "tanjun.Component.add_listener": {"qualname": 3, "fullname": 4, "doc": 19}, "tanjun.Component.remove_listener": {"qualname": 3, "fullname": 4, "doc": 25}, "tanjun.Component.with_listener": {"qualname": 2, "fullname": 3, "doc": 23}, "tanjun.Component.add_on_close": {"qualname": 3, "fullname": 4, "doc": 43}, "tanjun.Component.with_on_close": {"qualname": 2, "fullname": 3, "doc": 44}, "tanjun.Component.add_on_open": {"qualname": 3, "fullname": 4, "doc": 43}, "tanjun.Component.with_on_open": {"qualname": 2, "fullname": 3, "doc": 44}, "tanjun.Component.bind_client": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.Component.unbind_client": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.Component.check_message_name": {"qualname": 4, "fullname": 5, "doc": 58}, "tanjun.Component.check_slash_name": {"qualname": 4, "fullname": 5, "doc": 35}, "tanjun.Component.execute_interaction": {"qualname": 3, "fullname": 4, "doc": 57}, "tanjun.Component.execute_message": {"qualname": 3, "fullname": 4, "doc": 57}, "tanjun.Component.add_schedule": {"qualname": 3, "fullname": 4, "doc": 15}, "tanjun.Component.remove_schedule": {"qualname": 3, "fullname": 4, "doc": 20}, "tanjun.Component.with_schedule": {"qualname": 2, "fullname": 3, "doc": 37}, "tanjun.Component.close": {"qualname": 2, "fullname": 3, "doc": 7}, "tanjun.Component.open": {"qualname": 2, "fullname": 3, "doc": 11}, "tanjun.Component.make_loader": {"qualname": 3, "fullname": 4, "doc": 41}, "tanjun.to_bool": {"qualname": 1, "fullname": 2, "doc": 19}, "tanjun.to_channel": {"qualname": 1, "fullname": 2, "doc": 0}, "tanjun.to_color": {"qualname": 1, "fullname": 2, "doc": 7}, "tanjun.to_colour": {"qualname": 1, "fullname": 2, "doc": 7}, "tanjun.to_datetime": {"qualname": 1, "fullname": 2, "doc": 28}, "tanjun.to_emoji": {"qualname": 1, "fullname": 2, "doc": 0}, "tanjun.to_guild": {"qualname": 1, "fullname": 2, "doc": 0}, "tanjun.to_invite": {"qualname": 1, "fullname": 2, "doc": 0}, "tanjun.to_invite_with_metadata": {"qualname": 2, "fullname": 3, "doc": 0}, "tanjun.to_member": {"qualname": 1, "fullname": 2, "doc": 0}, "tanjun.to_presence": {"qualname": 1, "fullname": 2, "doc": 0}, "tanjun.to_role": {"qualname": 1, "fullname": 2, "doc": 0}, "tanjun.to_snowflake": {"qualname": 1, "fullname": 2, "doc": 39}, "tanjun.to_user": {"qualname": 1, "fullname": 2, "doc": 0}, "tanjun.to_voice_state": {"qualname": 2, "fullname": 3, "doc": 0}, "tanjun.BucketResource": {"qualname": 1, "fullname": 2, "doc": 9}, "tanjun.BucketResource.USER": {"qualname": 2, "fullname": 3, "doc": 4}, "tanjun.BucketResource.MEMBER": {"qualname": 2, "fullname": 3, "doc": 10}, "tanjun.BucketResource.CHANNEL": {"qualname": 2, "fullname": 3, "doc": 4}, "tanjun.BucketResource.PARENT_CHANNEL": {"qualname": 3, "fullname": 4, "doc": 16}, "tanjun.BucketResource.TOP_ROLE": {"qualname": 3, "fullname": 4, "doc": 16}, "tanjun.BucketResource.GUILD": {"qualname": 2, "fullname": 3, "doc": 9}, "tanjun.BucketResource.GLOBAL": {"qualname": 2, "fullname": 3, "doc": 3}, "tanjun.cached_inject": {"qualname": 2, "fullname": 3, "doc": 93}, "tanjun.inject_lc": {"qualname": 2, "fullname": 3, "doc": 96}, "tanjun.InMemoryConcurrencyLimiter": {"qualname": 1, "fullname": 2, "doc": 70}, "tanjun.InMemoryConcurrencyLimiter.__init__": {"qualname": 2, "fullname": 3, "doc": 0}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"qualname": 3, "fullname": 4, "doc": 27}, "tanjun.InMemoryConcurrencyLimiter.close": {"qualname": 2, "fullname": 3, "doc": 8}, "tanjun.InMemoryConcurrencyLimiter.open": {"qualname": 2, "fullname": 3, "doc": 14}, "tanjun.InMemoryConcurrencyLimiter.try_acquire": {"qualname": 3, "fullname": 4, "doc": 25}, "tanjun.InMemoryConcurrencyLimiter.release": {"qualname": 2, "fullname": 3, "doc": 4}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"qualname": 3, "fullname": 4, "doc": 33}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"qualname": 3, "fullname": 4, "doc": 55}, "tanjun.InMemoryCooldownManager": {"qualname": 1, "fullname": 2, "doc": 78}, "tanjun.InMemoryCooldownManager.__init__": {"qualname": 2, "fullname": 3, "doc": 0}, "tanjun.InMemoryCooldownManager.add_to_client": {"qualname": 3, "fullname": 4, "doc": 27}, "tanjun.InMemoryCooldownManager.check_cooldown": {"qualname": 3, "fullname": 4, "doc": 40}, "tanjun.InMemoryCooldownManager.increment_cooldown": {"qualname": 3, "fullname": 4, "doc": 17}, "tanjun.InMemoryCooldownManager.close": {"qualname": 2, "fullname": 3, "doc": 8}, "tanjun.InMemoryCooldownManager.open": {"qualname": 2, "fullname": 3, "doc": 14}, "tanjun.InMemoryCooldownManager.disable_bucket": {"qualname": 3, "fullname": 4, "doc": 31}, "tanjun.InMemoryCooldownManager.set_bucket": {"qualname": 3, "fullname": 4, "doc": 64}, "tanjun.LazyConstant": {"qualname": 1, "fullname": 2, "doc": 14}, "tanjun.LazyConstant.__init__": {"qualname": 2, "fullname": 3, "doc": 23}, "tanjun.LazyConstant.callback": {"qualname": 2, "fullname": 3, "doc": 6}, "tanjun.LazyConstant.get_value": {"qualname": 2, "fullname": 3, "doc": 4}, "tanjun.LazyConstant.reset": {"qualname": 2, "fullname": 3, "doc": 4}, "tanjun.LazyConstant.set_value": {"qualname": 3, "fullname": 4, "doc": 13}, "tanjun.LazyConstant.acquire": {"qualname": 2, "fullname": 3, "doc": 25}, "tanjun.with_concurrency_limit": {"qualname": 2, "fullname": 3, "doc": 67}, "tanjun.with_cooldown": {"qualname": 1, "fullname": 2, "doc": 74}, "tanjun.CommandError": {"qualname": 1, "fullname": 2, "doc": 5}, "tanjun.CommandError.__init__": {"qualname": 2, "fullname": 3, "doc": 23}, "tanjun.CommandError.message": {"qualname": 2, "fullname": 3, "doc": 9}, "tanjun.ConversionError": {"qualname": 1, "fullname": 2, "doc": 7}, "tanjun.ConversionError.__init__": {"qualname": 2, "fullname": 3, "doc": 21}, "tanjun.ConversionError.errors": {"qualname": 2, "fullname": 3, "doc": 6}, "tanjun.ConversionError.parameter": {"qualname": 2, "fullname": 3, "doc": 4}, "tanjun.HaltExecution": {"qualname": 1, "fullname": 2, "doc": 17}, "tanjun.FailedCheck": {"qualname": 1, "fullname": 2, "doc": 6}, "tanjun.MissingDependencyError": {"qualname": 1, "fullname": 2, "doc": 5}, "tanjun.MissingDependencyError.__init__": {"qualname": 2, "fullname": 3, "doc": 9}, "tanjun.MissingDependencyError.message": {"qualname": 2, "fullname": 3, "doc": 2}, "tanjun.NotEnoughArgumentsError": {"qualname": 1, "fullname": 2, "doc": 7}, "tanjun.NotEnoughArgumentsError.__init__": {"qualname": 2, "fullname": 3, "doc": 16}, "tanjun.NotEnoughArgumentsError.parameter": {"qualname": 2, "fullname": 3, "doc": 4}, "tanjun.TooManyArgumentsError": {"qualname": 1, "fullname": 2, "doc": 7}, "tanjun.TooManyArgumentsError.__init__": {"qualname": 2, "fullname": 3, "doc": 16}, "tanjun.TooManyArgumentsError.parameter": {"qualname": 2, "fullname": 3, "doc": 4}, "tanjun.ParserError": {"qualname": 1, "fullname": 2, "doc": 14}, "tanjun.ParserError.__init__": {"qualname": 2, "fullname": 3, "doc": 18}, "tanjun.ParserError.message": {"qualname": 2, "fullname": 3, "doc": 8}, "tanjun.ParserError.parameter": {"qualname": 2, "fullname": 3, "doc": 10}, "tanjun.TanjunError": {"qualname": 1, "fullname": 2, "doc": 5}, "tanjun.AnyHooks": {"qualname": 1, "fullname": 2, "doc": 0}, "tanjun.Hooks": {"qualname": 1, "fullname": 2, "doc": 43}, "tanjun.Hooks.__init__": {"qualname": 2, "fullname": 3, "doc": 4}, "tanjun.Hooks.add_to_command": {"qualname": 3, "fullname": 4, "doc": 57}, "tanjun.Hooks.copy": {"qualname": 2, "fullname": 3, "doc": 3}, "tanjun.Hooks.add_on_error": {"qualname": 3, "fullname": 4, "doc": 58}, "tanjun.Hooks.set_on_error": {"qualname": 3, "fullname": 4, "doc": 73}, "tanjun.Hooks.with_on_error": {"qualname": 2, "fullname": 3, "doc": 104}, "tanjun.Hooks.add_on_parser_error": {"qualname": 4, "fullname": 5, "doc": 46}, "tanjun.Hooks.set_on_parser_error": {"qualname": 4, "fullname": 5, "doc": 53}, "tanjun.Hooks.with_on_parser_error": {"qualname": 3, "fullname": 4, "doc": 68}, "tanjun.Hooks.add_post_execution": {"qualname": 4, "fullname": 5, "doc": 33}, "tanjun.Hooks.set_post_execution": {"qualname": 4, "fullname": 5, "doc": 40}, "tanjun.Hooks.with_post_execution": {"qualname": 3, "fullname": 4, "doc": 59}, "tanjun.Hooks.add_pre_execution": {"qualname": 4, "fullname": 5, "doc": 33}, "tanjun.Hooks.set_pre_execution": {"qualname": 4, "fullname": 5, "doc": 40}, "tanjun.Hooks.with_pre_execution": {"qualname": 3, "fullname": 4, "doc": 59}, "tanjun.Hooks.add_on_success": {"qualname": 3, "fullname": 4, "doc": 32}, "tanjun.Hooks.set_on_success": {"qualname": 3, "fullname": 4, "doc": 39}, "tanjun.Hooks.with_on_success": {"qualname": 2, "fullname": 3, "doc": 54}, "tanjun.Hooks.trigger_error": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.Hooks.trigger_post_execution": {"qualname": 4, "fullname": 5, "doc": 0}, "tanjun.Hooks.trigger_pre_execution": {"qualname": 4, "fullname": 5, "doc": 0}, "tanjun.Hooks.trigger_success": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.MessageHooks": {"qualname": 1, "fullname": 2, "doc": 0}, "tanjun.SlashHooks": {"qualname": 1, "fullname": 2, "doc": 0}, "tanjun.as_self_injecting": {"qualname": 2, "fullname": 3, "doc": 65}, "tanjun.inject": {"qualname": 1, "fullname": 2, "doc": 152}, "tanjun.ShlexParser": {"qualname": 1, "fullname": 2, "doc": 4}, "tanjun.ShlexParser.__init__": {"qualname": 2, "fullname": 3, "doc": 3}, "tanjun.ShlexParser.needs_injector": {"qualname": 3, "fullname": 4, "doc": 5}, "tanjun.ShlexParser.parameters": {"qualname": 2, "fullname": 3, "doc": 4}, "tanjun.ShlexParser.copy": {"qualname": 2, "fullname": 3, "doc": 6}, "tanjun.ShlexParser.add_parameter": {"qualname": 3, "fullname": 4, "doc": 30}, "tanjun.ShlexParser.remove_parameter": {"qualname": 3, "fullname": 4, "doc": 24}, "tanjun.ShlexParser.add_argument": {"qualname": 3, "fullname": 4, "doc": 81}, "tanjun.ShlexParser.add_option": {"qualname": 3, "fullname": 4, "doc": 103}, "tanjun.ShlexParser.set_parameters": {"qualname": 3, "fullname": 4, "doc": 33}, "tanjun.ShlexParser.bind_client": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.ShlexParser.bind_component": {"qualname": 3, "fullname": 4, "doc": 0}, "tanjun.ShlexParser.parse": {"qualname": 2, "fullname": 3, "doc": 36}, "tanjun.with_argument": {"qualname": 1, "fullname": 2, "doc": 146}, "tanjun.with_greedy_argument": {"qualname": 2, "fullname": 3, "doc": 151}, "tanjun.with_multi_argument": {"qualname": 2, "fullname": 3, "doc": 159}, "tanjun.with_option": {"qualname": 1, "fullname": 2, "doc": 156}, "tanjun.with_multi_option": {"qualname": 2, "fullname": 3, "doc": 171}, "tanjun.with_parser": {"qualname": 1, "fullname": 2, "doc": 51}, "tanjun.as_interval": {"qualname": 1, "fullname": 2, "doc": 80}, "tanjun.abc": {"qualname": 0, "fullname": 2, "doc": 6}, "tanjun.abc.ClientLoader": {"qualname": 1, "fullname": 3, "doc": 8}, "tanjun.abc.ClientLoader.load": {"qualname": 2, "fullname": 4, "doc": 16}, "tanjun.abc.ClientLoader.unload": {"qualname": 2, "fullname": 4, "doc": 16}, "tanjun.abc.BaseSlashCommandT": {"qualname": 1, "fullname": 3, "doc": 0}, "tanjun.abc.CommandCallbackSig": {"qualname": 1, "fullname": 3, "doc": 28}, "tanjun.abc.CommandCallbackSigT": {"qualname": 1, "fullname": 3, "doc": 3}, "tanjun.abc.CheckSig": {"qualname": 1, "fullname": 3, "doc": 42}, "tanjun.abc.CheckSigT": {"qualname": 1, "fullname": 3, "doc": 3}, "tanjun.abc.Context": {"qualname": 1, "fullname": 3, "doc": 4}, "tanjun.abc.Context.author": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.abc.Context.channel_id": {"qualname": 3, "fullname": 5, "doc": 4}, "tanjun.abc.Context.cache": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.abc.Context.client": {"qualname": 2, "fullname": 4, "doc": 5}, "tanjun.abc.Context.component": {"qualname": 2, "fullname": 4, "doc": 15}, "tanjun.abc.Context.command": {"qualname": 2, "fullname": 4, "doc": 14}, "tanjun.abc.Context.created_at": {"qualname": 2, "fullname": 4, "doc": 8}, "tanjun.abc.Context.events": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.abc.Context.guild_id": {"qualname": 3, "fullname": 5, "doc": 8}, "tanjun.abc.Context.has_responded": {"qualname": 2, "fullname": 4, "doc": 5}, "tanjun.abc.Context.is_human": {"qualname": 2, "fullname": 4, "doc": 10}, "tanjun.abc.Context.member": {"qualname": 2, "fullname": 4, "doc": 9}, "tanjun.abc.Context.server": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.abc.Context.rest": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.abc.Context.shards": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.abc.Context.voice": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.abc.Context.triggering_name": {"qualname": 3, "fullname": 5, "doc": 4}, "tanjun.abc.Context.set_component": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.abc.Context.fetch_channel": {"qualname": 3, "fullname": 5, "doc": 123}, "tanjun.abc.Context.fetch_guild": {"qualname": 3, "fullname": 5, "doc": 113}, "tanjun.abc.Context.get_channel": {"qualname": 2, "fullname": 4, "doc": 30}, "tanjun.abc.Context.get_guild": {"qualname": 2, "fullname": 4, "doc": 26}, "tanjun.abc.Context.delete_initial_response": {"qualname": 4, "fullname": 6, "doc": 13}, "tanjun.abc.Context.delete_last_response": {"qualname": 4, "fullname": 6, "doc": 12}, "tanjun.abc.Context.edit_initial_response": {"qualname": 4, "fullname": 6, "doc": 485}, "tanjun.abc.Context.edit_last_response": {"qualname": 4, "fullname": 6, "doc": 485}, "tanjun.abc.Context.fetch_initial_response": {"qualname": 4, "fullname": 6, "doc": 10}, "tanjun.abc.Context.fetch_last_response": {"qualname": 4, "fullname": 6, "doc": 10}, "tanjun.abc.Context.respond": {"qualname": 2, "fullname": 4, "doc": 370}, "tanjun.abc.ClientCallbackNames": {"qualname": 1, "fullname": 3, "doc": 8}, "tanjun.abc.ClientCallbackNames.CLOSED": {"qualname": 2, "fullname": 4, "doc": 8}, "tanjun.abc.ClientCallbackNames.CLOSING": {"qualname": 2, "fullname": 4, "doc": 9}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"qualname": 3, "fullname": 5, "doc": 21}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"qualname": 3, "fullname": 5, "doc": 21}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"qualname": 4, "fullname": 6, "doc": 11}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"qualname": 4, "fullname": 6, "doc": 11}, "tanjun.abc.ClientCallbackNames.STARTED": {"qualname": 2, "fullname": 4, "doc": 8}, "tanjun.abc.ClientCallbackNames.STARTING": {"qualname": 2, "fullname": 4, "doc": 9}, "tanjun.abc.Hooks": {"qualname": 1, "fullname": 3, "doc": 9}, "tanjun.abc.Hooks.copy": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.abc.Hooks.add_on_error": {"qualname": 3, "fullname": 5, "doc": 58}, "tanjun.abc.Hooks.with_on_error": {"qualname": 2, "fullname": 4, "doc": 104}, "tanjun.abc.Hooks.add_on_parser_error": {"qualname": 4, "fullname": 6, "doc": 46}, "tanjun.abc.Hooks.with_on_parser_error": {"qualname": 3, "fullname": 5, "doc": 68}, "tanjun.abc.Hooks.add_post_execution": {"qualname": 4, "fullname": 6, "doc": 33}, "tanjun.abc.Hooks.with_post_execution": {"qualname": 3, "fullname": 5, "doc": 59}, "tanjun.abc.Hooks.add_pre_execution": {"qualname": 4, "fullname": 6, "doc": 33}, "tanjun.abc.Hooks.with_pre_execution": {"qualname": 3, "fullname": 5, "doc": 59}, "tanjun.abc.Hooks.add_on_success": {"qualname": 3, "fullname": 5, "doc": 32}, "tanjun.abc.Hooks.with_on_success": {"qualname": 2, "fullname": 4, "doc": 54}, "tanjun.abc.Hooks.trigger_error": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.abc.Hooks.trigger_post_execution": {"qualname": 4, "fullname": 6, "doc": 0}, "tanjun.abc.Hooks.trigger_pre_execution": {"qualname": 4, "fullname": 6, "doc": 0}, "tanjun.abc.Hooks.trigger_success": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.abc.MetaEventSig": {"qualname": 1, "fullname": 3, "doc": 0}, "tanjun.abc.MetaEventSigT": {"qualname": 1, "fullname": 3, "doc": 0}, "tanjun.abc.AnyHooks": {"qualname": 1, "fullname": 3, "doc": 3}, "tanjun.abc.MessageHooks": {"qualname": 1, "fullname": 3, "doc": 4}, "tanjun.abc.SlashHooks": {"qualname": 1, "fullname": 3, "doc": 4}, "tanjun.abc.ExecutableCommand": {"qualname": 1, "fullname": 3, "doc": 4}, "tanjun.abc.ExecutableCommand.checks": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.abc.ExecutableCommand.component": {"qualname": 2, "fullname": 4, "doc": 3}, "tanjun.abc.ExecutableCommand.hooks": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.abc.ExecutableCommand.metadata": {"qualname": 2, "fullname": 4, "doc": 12}, "tanjun.abc.ExecutableCommand.bind_client": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.abc.ExecutableCommand.bind_component": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.abc.ExecutableCommand.copy": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.abc.ExecutableCommand.set_hooks": {"qualname": 3, "fullname": 5, "doc": 20}, "tanjun.abc.ExecutableCommand.add_check": {"qualname": 3, "fullname": 5, "doc": 14}, "tanjun.abc.ExecutableCommand.remove_check": {"qualname": 3, "fullname": 5, "doc": 20}, "tanjun.abc.HookSig": {"qualname": 1, "fullname": 3, "doc": 24}, "tanjun.abc.HookSigT": {"qualname": 1, "fullname": 3, "doc": 3}, "tanjun.abc.ErrorHookSig": {"qualname": 1, "fullname": 3, "doc": 52}, "tanjun.abc.ErrorHookSigT": {"qualname": 1, "fullname": 3, "doc": 3}, "tanjun.abc.ListenerCallbackSig": {"qualname": 1, "fullname": 3, "doc": 19}, "tanjun.abc.ListenerCallbackSigT": {"qualname": 1, "fullname": 3, "doc": 3}, "tanjun.abc.MaybeAwaitableT": {"qualname": 1, "fullname": 3, "doc": 6}, "tanjun.abc.MessageCommand": {"qualname": 1, "fullname": 3, "doc": 4}, "tanjun.abc.MessageCommand.callback": {"qualname": 2, "fullname": 4, "doc": 13}, "tanjun.abc.MessageCommand.names": {"qualname": 2, "fullname": 4, "doc": 3}, "tanjun.abc.MessageCommand.parent": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.abc.MessageCommand.set_parent": {"qualname": 3, "fullname": 5, "doc": 16}, "tanjun.abc.MessageCommand.copy": {"qualname": 2, "fullname": 4, "doc": 12}, "tanjun.abc.MessageCommand.check_context": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.abc.MessageCommand.execute": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.abc.MessageCommandT": {"qualname": 1, "fullname": 3, "doc": 0}, "tanjun.abc.MessageCommandGroup": {"qualname": 1, "fullname": 3, "doc": 5}, "tanjun.abc.MessageCommandGroup.commands": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.abc.MessageCommandGroup.add_command": {"qualname": 3, "fullname": 5, "doc": 15}, "tanjun.abc.MessageCommandGroup.remove_command": {"qualname": 3, "fullname": 5, "doc": 21}, "tanjun.abc.MessageCommandGroup.with_command": {"qualname": 2, "fullname": 4, "doc": 15}, "tanjun.abc.MessageContext": {"qualname": 1, "fullname": 3, "doc": 4}, "tanjun.abc.MessageContext.command": {"qualname": 2, "fullname": 4, "doc": 20}, "tanjun.abc.MessageContext.content": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.abc.MessageContext.message": {"qualname": 2, "fullname": 4, "doc": 3}, "tanjun.abc.MessageContext.shard": {"qualname": 2, "fullname": 4, "doc": 8}, "tanjun.abc.MessageContext.triggering_prefix": {"qualname": 3, "fullname": 5, "doc": 3}, "tanjun.abc.MessageContext.triggering_name": {"qualname": 3, "fullname": 5, "doc": 4}, "tanjun.abc.MessageContext.set_command": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.abc.MessageContext.set_content": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.abc.MessageContext.set_triggering_name": {"qualname": 4, "fullname": 6, "doc": 0}, "tanjun.abc.MessageContext.respond": {"qualname": 2, "fullname": 4, "doc": 482}, "tanjun.abc.BaseSlashCommand": {"qualname": 1, "fullname": 3, "doc": 5}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"qualname": 3, "fullname": 5, "doc": 41}, "tanjun.abc.BaseSlashCommand.is_global": {"qualname": 2, "fullname": 4, "doc": 17}, "tanjun.abc.BaseSlashCommand.name": {"qualname": 2, "fullname": 4, "doc": 2}, "tanjun.abc.BaseSlashCommand.parent": {"qualname": 2, "fullname": 4, "doc": 3}, "tanjun.abc.BaseSlashCommand.tracked_command": {"qualname": 3, "fullname": 5, "doc": 6}, "tanjun.abc.BaseSlashCommand.tracked_command_id": {"qualname": 4, "fullname": 6, "doc": 6}, "tanjun.abc.BaseSlashCommand.build": {"qualname": 2, "fullname": 4, "doc": 16}, "tanjun.abc.BaseSlashCommand.check_context": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.abc.BaseSlashCommand.execute": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.abc.BaseSlashCommand.set_parent": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"qualname": 4, "fullname": 6, "doc": 19}, "tanjun.abc.SlashCommand": {"qualname": 1, "fullname": 3, "doc": 4}, "tanjun.abc.SlashCommand.callback": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.abc.SlashCommandGroup": {"qualname": 1, "fullname": 3, "doc": 12}, "tanjun.abc.SlashCommandGroup.commands": {"qualname": 2, "fullname": 4, "doc": 3}, "tanjun.abc.SlashCommandGroup.add_command": {"qualname": 3, "fullname": 5, "doc": 16}, "tanjun.abc.SlashCommandGroup.remove_command": {"qualname": 3, "fullname": 5, "doc": 22}, "tanjun.abc.SlashCommandGroup.with_command": {"qualname": 2, "fullname": 4, "doc": 15}, "tanjun.abc.SlashContext": {"qualname": 1, "fullname": 3, "doc": 5}, "tanjun.abc.SlashContext.command": {"qualname": 2, "fullname": 4, "doc": 19}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"qualname": 3, "fullname": 5, "doc": 25}, "tanjun.abc.SlashContext.expires_at": {"qualname": 2, "fullname": 4, "doc": 14}, "tanjun.abc.SlashContext.has_been_deferred": {"qualname": 2, "fullname": 4, "doc": 23}, "tanjun.abc.SlashContext.interaction": {"qualname": 2, "fullname": 4, "doc": 2}, "tanjun.abc.SlashContext.member": {"qualname": 2, "fullname": 4, "doc": 5}, "tanjun.abc.SlashContext.options": {"qualname": 2, "fullname": 4, "doc": 5}, "tanjun.abc.SlashContext.set_command": {"qualname": 3, "fullname": 5, "doc": 9}, "tanjun.abc.SlashContext.set_ephemeral_default": {"qualname": 4, "fullname": 6, "doc": 21}, "tanjun.abc.SlashContext.defer": {"qualname": 2, "fullname": 4, "doc": 25}, "tanjun.abc.SlashContext.mark_not_found": {"qualname": 3, "fullname": 5, "doc": 12}, "tanjun.abc.SlashContext.create_followup": {"qualname": 3, "fullname": 5, "doc": 316}, "tanjun.abc.SlashContext.create_initial_response": {"qualname": 4, "fullname": 6, "doc": 361}, "tanjun.abc.SlashOption": {"qualname": 1, "fullname": 3, "doc": 8}, "tanjun.abc.SlashOption.name": {"qualname": 2, "fullname": 4, "doc": 2}, "tanjun.abc.SlashOption.type": {"qualname": 2, "fullname": 4, "doc": 2}, "tanjun.abc.SlashOption.value": {"qualname": 2, "fullname": 4, "doc": 16}, "tanjun.abc.SlashOption.resolve_value": {"qualname": 3, "fullname": 5, "doc": 22}, "tanjun.abc.SlashOption.resolve_to_channel": {"qualname": 3, "fullname": 5, "doc": 16}, "tanjun.abc.SlashOption.resolve_to_member": {"qualname": 3, "fullname": 5, "doc": 72}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"qualname": 3, "fullname": 5, "doc": 21}, "tanjun.abc.SlashOption.resolve_to_role": {"qualname": 3, "fullname": 5, "doc": 19}, "tanjun.abc.SlashOption.resolve_to_user": {"qualname": 3, "fullname": 5, "doc": 55}, "tanjun.abc.Component": {"qualname": 1, "fullname": 3, "doc": 17}, "tanjun.abc.Component.client": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.abc.Component.defaults_to_ephemeral": {"qualname": 3, "fullname": 5, "doc": 41}, "tanjun.abc.Component.loop": {"qualname": 2, "fullname": 4, "doc": 5}, "tanjun.abc.Component.name": {"qualname": 2, "fullname": 4, "doc": 8}, "tanjun.abc.Component.slash_commands": {"qualname": 3, "fullname": 5, "doc": 4}, "tanjun.abc.Component.message_commands": {"qualname": 3, "fullname": 5, "doc": 4}, "tanjun.abc.Component.listeners": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.abc.Component.metadata": {"qualname": 2, "fullname": 4, "doc": 12}, "tanjun.abc.Component.add_slash_command": {"qualname": 4, "fullname": 6, "doc": 15}, "tanjun.abc.Component.remove_slash_command": {"qualname": 4, "fullname": 6, "doc": 21}, "tanjun.abc.Component.with_slash_command": {"qualname": 3, "fullname": 5, "doc": 24}, "tanjun.abc.Component.add_message_command": {"qualname": 4, "fullname": 6, "doc": 15}, "tanjun.abc.Component.remove_message_command": {"qualname": 4, "fullname": 6, "doc": 21}, "tanjun.abc.Component.with_message_command": {"qualname": 3, "fullname": 5, "doc": 24}, "tanjun.abc.Component.add_listener": {"qualname": 3, "fullname": 5, "doc": 19}, "tanjun.abc.Component.remove_listener": {"qualname": 3, "fullname": 5, "doc": 25}, "tanjun.abc.Component.with_listener": {"qualname": 2, "fullname": 4, "doc": 23}, "tanjun.abc.Component.bind_client": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.abc.Component.unbind_client": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.abc.Component.check_message_name": {"qualname": 4, "fullname": 6, "doc": 58}, "tanjun.abc.Component.check_slash_name": {"qualname": 4, "fullname": 6, "doc": 35}, "tanjun.abc.Component.execute_interaction": {"qualname": 3, "fullname": 5, "doc": 57}, "tanjun.abc.Component.execute_message": {"qualname": 3, "fullname": 5, "doc": 57}, "tanjun.abc.Component.close": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.abc.Component.open": {"qualname": 2, "fullname": 4, "doc": 11}, "tanjun.abc.Client": {"qualname": 1, "fullname": 3, "doc": 14}, "tanjun.abc.Client.cache": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.abc.Client.components": {"qualname": 2, "fullname": 4, "doc": 5}, "tanjun.abc.Client.defaults_to_ephemeral": {"qualname": 3, "fullname": 5, "doc": 41}, "tanjun.abc.Client.events": {"qualname": 2, "fullname": 4, "doc": 10}, "tanjun.abc.Client.is_alive": {"qualname": 2, "fullname": 4, "doc": 3}, "tanjun.abc.Client.listeners": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.abc.Client.loop": {"qualname": 2, "fullname": 4, "doc": 5}, "tanjun.abc.Client.metadata": {"qualname": 2, "fullname": 4, "doc": 12}, "tanjun.abc.Client.prefixes": {"qualname": 2, "fullname": 4, "doc": 13}, "tanjun.abc.Client.rest": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.abc.Client.server": {"qualname": 2, "fullname": 4, "doc": 11}, "tanjun.abc.Client.shards": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.abc.Client.voice": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.abc.Client.clear_application_commands": {"qualname": 4, "fullname": 6, "doc": 60}, "tanjun.abc.Client.declare_global_commands": {"qualname": 4, "fullname": 6, "doc": 159}, "tanjun.abc.Client.declare_application_command": {"qualname": 4, "fullname": 6, "doc": 78}, "tanjun.abc.Client.declare_application_commands": {"qualname": 4, "fullname": 6, "doc": 175}, "tanjun.abc.Client.add_component": {"qualname": 3, "fullname": 5, "doc": 16}, "tanjun.abc.Client.get_component_by_name": {"qualname": 3, "fullname": 5, "doc": 15}, "tanjun.abc.Client.remove_component": {"qualname": 3, "fullname": 5, "doc": 30}, "tanjun.abc.Client.remove_component_by_name": {"qualname": 4, "fullname": 6, "doc": 26}, "tanjun.abc.Client.add_client_callback": {"qualname": 4, "fullname": 6, "doc": 41}, "tanjun.abc.Client.dispatch_client_callback": {"qualname": 4, "fullname": 6, "doc": 24}, "tanjun.abc.Client.get_client_callbacks": {"qualname": 3, "fullname": 5, "doc": 23}, "tanjun.abc.Client.remove_client_callback": {"qualname": 4, "fullname": 6, "doc": 38}, "tanjun.abc.Client.with_client_callback": {"qualname": 3, "fullname": 5, "doc": 64}, "tanjun.abc.Client.add_listener": {"qualname": 3, "fullname": 5, "doc": 41}, "tanjun.abc.Client.remove_listener": {"qualname": 3, "fullname": 5, "doc": 35}, "tanjun.abc.Client.with_listener": {"qualname": 2, "fullname": 4, "doc": 65}, "tanjun.abc.Client.iter_commands": {"qualname": 3, "fullname": 5, "doc": 16}, "tanjun.abc.Client.iter_message_commands": {"qualname": 4, "fullname": 6, "doc": 15}, "tanjun.abc.Client.iter_slash_commands": {"qualname": 4, "fullname": 6, "doc": 24}, "tanjun.abc.Client.check_message_name": {"qualname": 4, "fullname": 6, "doc": 42}, "tanjun.abc.Client.check_slash_name": {"qualname": 4, "fullname": 6, "doc": 30}, "tanjun.abc.Client.load_modules": {"qualname": 3, "fullname": 5, "doc": 118}, "tanjun.abc.Client.unload_modules": {"qualname": 3, "fullname": 5, "doc": 94}, "tanjun.abc.Client.reload_modules": {"qualname": 3, "fullname": 5, "doc": 64}, "tanjun.checks": {"qualname": 0, "fullname": 2, "doc": 7}, "tanjun.checks.all_checks": {"qualname": 1, "fullname": 3, "doc": 48}, "tanjun.checks.any_checks": {"qualname": 1, "fullname": 3, "doc": 90}, "tanjun.checks.CallbackReturnT": {"qualname": 1, "fullname": 3, "doc": 63}, "tanjun.checks.CommandT": {"qualname": 1, "fullname": 3, "doc": 0}, "tanjun.checks.with_all_checks": {"qualname": 1, "fullname": 3, "doc": 49}, "tanjun.checks.with_any_checks": {"qualname": 1, "fullname": 3, "doc": 92}, "tanjun.checks.with_check": {"qualname": 1, "fullname": 3, "doc": 22}, "tanjun.checks.with_dm_check": {"qualname": 2, "fullname": 4, "doc": 74}, "tanjun.checks.with_guild_check": {"qualname": 2, "fullname": 4, "doc": 75}, "tanjun.checks.with_nsfw_check": {"qualname": 2, "fullname": 4, "doc": 77}, "tanjun.checks.with_sfw_check": {"qualname": 2, "fullname": 4, "doc": 77}, "tanjun.checks.with_owner_check": {"qualname": 2, "fullname": 4, "doc": 79}, "tanjun.checks.with_author_permission_check": {"qualname": 3, "fullname": 5, "doc": 94}, "tanjun.checks.with_own_permission_check": {"qualname": 2, "fullname": 4, "doc": 94}, "tanjun.checks.DmCheck": {"qualname": 1, "fullname": 3, "doc": 13}, "tanjun.checks.DmCheck.__init__": {"qualname": 2, "fullname": 4, "doc": 55}, "tanjun.checks.GuildCheck": {"qualname": 1, "fullname": 3, "doc": 12}, "tanjun.checks.GuildCheck.__init__": {"qualname": 2, "fullname": 4, "doc": 56}, "tanjun.checks.NsfwCheck": {"qualname": 1, "fullname": 3, "doc": 12}, "tanjun.checks.NsfwCheck.__init__": {"qualname": 2, "fullname": 4, "doc": 56}, "tanjun.checks.SfwCheck": {"qualname": 1, "fullname": 3, "doc": 12}, "tanjun.checks.SfwCheck.__init__": {"qualname": 2, "fullname": 4, "doc": 56}, "tanjun.checks.OwnerCheck": {"qualname": 1, "fullname": 3, "doc": 13}, "tanjun.checks.OwnerCheck.__init__": {"qualname": 2, "fullname": 4, "doc": 56}, "tanjun.checks.AuthorPermissionCheck": {"qualname": 1, "fullname": 3, "doc": 15}, "tanjun.checks.AuthorPermissionCheck.__init__": {"qualname": 2, "fullname": 4, "doc": 69}, "tanjun.checks.OwnPermissionCheck": {"qualname": 1, "fullname": 3, "doc": 14}, "tanjun.checks.OwnPermissionCheck.__init__": {"qualname": 2, "fullname": 4, "doc": 69}, "tanjun.clients": {"qualname": 0, "fullname": 2, "doc": 3}, "tanjun.clients.as_loader": {"qualname": 1, "fullname": 3, "doc": 75}, "tanjun.clients.as_unloader": {"qualname": 1, "fullname": 3, "doc": 78}, "tanjun.clients.Client": {"qualname": 1, "fullname": 3, "doc": 36}, "tanjun.clients.Client.__init__": {"qualname": 2, "fullname": 4, "doc": 316}, "tanjun.clients.Client.from_gateway_bot": {"qualname": 3, "fullname": 5, "doc": 211}, "tanjun.clients.Client.from_rest_bot": {"qualname": 3, "fullname": 5, "doc": 163}, "tanjun.clients.Client.defaults_to_ephemeral": {"qualname": 3, "fullname": 5, "doc": 41}, "tanjun.clients.Client.message_accepts": {"qualname": 3, "fullname": 5, "doc": 8}, "tanjun.clients.Client.is_human_only": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.clients.Client.cache": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.clients.Client.checks": {"qualname": 2, "fullname": 4, "doc": 14}, "tanjun.clients.Client.components": {"qualname": 2, "fullname": 4, "doc": 5}, "tanjun.clients.Client.events": {"qualname": 2, "fullname": 4, "doc": 10}, "tanjun.clients.Client.listeners": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.clients.Client.hooks": {"qualname": 2, "fullname": 4, "doc": 30}, "tanjun.clients.Client.slash_hooks": {"qualname": 3, "fullname": 5, "doc": 12}, "tanjun.clients.Client.is_alive": {"qualname": 2, "fullname": 4, "doc": 3}, "tanjun.clients.Client.loop": {"qualname": 2, "fullname": 4, "doc": 5}, "tanjun.clients.Client.message_hooks": {"qualname": 3, "fullname": 5, "doc": 13}, "tanjun.clients.Client.metadata": {"qualname": 2, "fullname": 4, "doc": 12}, "tanjun.clients.Client.prefix_getter": {"qualname": 3, "fullname": 5, "doc": 11}, "tanjun.clients.Client.prefixes": {"qualname": 2, "fullname": 4, "doc": 5}, "tanjun.clients.Client.rest": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.clients.Client.server": {"qualname": 2, "fullname": 4, "doc": 11}, "tanjun.clients.Client.shards": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.clients.Client.voice": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.clients.Client.clear_application_commands": {"qualname": 4, "fullname": 6, "doc": 60}, "tanjun.clients.Client.set_global_commands": {"qualname": 4, "fullname": 6, "doc": 16}, "tanjun.clients.Client.declare_global_commands": {"qualname": 4, "fullname": 6, "doc": 159}, "tanjun.clients.Client.declare_application_command": {"qualname": 4, "fullname": 6, "doc": 78}, "tanjun.clients.Client.declare_application_commands": {"qualname": 4, "fullname": 6, "doc": 175}, "tanjun.clients.Client.set_auto_defer_after": {"qualname": 4, "fullname": 6, "doc": 26}, "tanjun.clients.Client.set_ephemeral_default": {"qualname": 4, "fullname": 6, "doc": 32}, "tanjun.clients.Client.set_hikari_trait_injectors": {"qualname": 5, "fullname": 7, "doc": 33}, "tanjun.clients.Client.set_interaction_not_found": {"qualname": 4, "fullname": 6, "doc": 33}, "tanjun.clients.Client.set_message_accepts": {"qualname": 4, "fullname": 6, "doc": 14}, "tanjun.clients.Client.set_message_ctx_maker": {"qualname": 5, "fullname": 7, "doc": 49}, "tanjun.clients.Client.set_slash_ctx_maker": {"qualname": 5, "fullname": 7, "doc": 50}, "tanjun.clients.Client.set_human_only": {"qualname": 3, "fullname": 5, "doc": 40}, "tanjun.clients.Client.add_check": {"qualname": 3, "fullname": 5, "doc": 40}, "tanjun.clients.Client.remove_check": {"qualname": 3, "fullname": 5, "doc": 15}, "tanjun.clients.Client.with_check": {"qualname": 2, "fullname": 4, "doc": 35}, "tanjun.clients.Client.check": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.clients.Client.add_component": {"qualname": 3, "fullname": 5, "doc": 22}, "tanjun.clients.Client.get_component_by_name": {"qualname": 3, "fullname": 5, "doc": 15}, "tanjun.clients.Client.remove_component": {"qualname": 3, "fullname": 5, "doc": 30}, "tanjun.clients.Client.remove_component_by_name": {"qualname": 4, "fullname": 6, "doc": 26}, "tanjun.clients.Client.add_client_callback": {"qualname": 4, "fullname": 6, "doc": 41}, "tanjun.clients.Client.dispatch_client_callback": {"qualname": 4, "fullname": 6, "doc": 24}, "tanjun.clients.Client.get_client_callbacks": {"qualname": 3, "fullname": 5, "doc": 23}, "tanjun.clients.Client.remove_client_callback": {"qualname": 4, "fullname": 6, "doc": 38}, "tanjun.clients.Client.with_client_callback": {"qualname": 3, "fullname": 5, "doc": 64}, "tanjun.clients.Client.add_listener": {"qualname": 3, "fullname": 5, "doc": 41}, "tanjun.clients.Client.remove_listener": {"qualname": 3, "fullname": 5, "doc": 35}, "tanjun.clients.Client.with_listener": {"qualname": 2, "fullname": 4, "doc": 65}, "tanjun.clients.Client.add_prefix": {"qualname": 3, "fullname": 5, "doc": 41}, "tanjun.clients.Client.remove_prefix": {"qualname": 3, "fullname": 5, "doc": 22}, "tanjun.clients.Client.set_prefix_getter": {"qualname": 4, "fullname": 6, "doc": 51}, "tanjun.clients.Client.with_prefix_getter": {"qualname": 3, "fullname": 5, "doc": 65}, "tanjun.clients.Client.iter_commands": {"qualname": 3, "fullname": 5, "doc": 16}, "tanjun.clients.Client.iter_message_commands": {"qualname": 4, "fullname": 6, "doc": 15}, "tanjun.clients.Client.iter_slash_commands": {"qualname": 4, "fullname": 6, "doc": 24}, "tanjun.clients.Client.check_message_name": {"qualname": 4, "fullname": 6, "doc": 42}, "tanjun.clients.Client.check_slash_name": {"qualname": 4, "fullname": 6, "doc": 30}, "tanjun.clients.Client.close": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.clients.Client.open": {"qualname": 2, "fullname": 4, "doc": 23}, "tanjun.clients.Client.fetch_rest_application_id": {"qualname": 5, "fullname": 7, "doc": 14}, "tanjun.clients.Client.set_hooks": {"qualname": 3, "fullname": 5, "doc": 39}, "tanjun.clients.Client.set_slash_hooks": {"qualname": 4, "fullname": 6, "doc": 40}, "tanjun.clients.Client.set_message_hooks": {"qualname": 4, "fullname": 6, "doc": 40}, "tanjun.clients.Client.load_modules": {"qualname": 3, "fullname": 5, "doc": 118}, "tanjun.clients.Client.unload_modules": {"qualname": 3, "fullname": 5, "doc": 94}, "tanjun.clients.Client.reload_modules": {"qualname": 3, "fullname": 5, "doc": 64}, "tanjun.clients.Client.on_message_create_event": {"qualname": 4, "fullname": 6, "doc": 14}, "tanjun.clients.Client.on_interaction_create_event": {"qualname": 4, "fullname": 6, "doc": 24}, "tanjun.clients.Client.on_interaction_create_request": {"qualname": 4, "fullname": 6, "doc": 24}, "tanjun.clients.ClientCallbackNames": {"qualname": 1, "fullname": 3, "doc": 4}, "tanjun.clients.ClientCallbackNames.CLOSED": {"qualname": 2, "fullname": 4, "doc": 8}, "tanjun.clients.ClientCallbackNames.CLOSING": {"qualname": 2, "fullname": 4, "doc": 9}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"qualname": 3, "fullname": 5, "doc": 21}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"qualname": 3, "fullname": 5, "doc": 21}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"qualname": 4, "fullname": 6, "doc": 11}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"qualname": 4, "fullname": 6, "doc": 11}, "tanjun.clients.ClientCallbackNames.STARTED": {"qualname": 2, "fullname": 4, "doc": 8}, "tanjun.clients.ClientCallbackNames.STARTING": {"qualname": 2, "fullname": 4, "doc": 9}, "tanjun.clients.MessageAcceptsEnum": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.clients.MessageAcceptsEnum.ALL": {"qualname": 1, "fullname": 3, "doc": 11}, "tanjun.clients.MessageAcceptsEnum.DM_ONLY": {"qualname": 2, "fullname": 4, "doc": 9}, "tanjun.clients.MessageAcceptsEnum.GUILD_ONLY": {"qualname": 2, "fullname": 4, "doc": 9}, "tanjun.clients.MessageAcceptsEnum.NONE": {"qualname": 2, "fullname": 4, "doc": 8}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"qualname": 3, "fullname": 5, "doc": 25}, "tanjun.clients.PrefixGetterSig": {"qualname": 1, "fullname": 3, "doc": 23}, "tanjun.clients.PrefixGetterSigT": {"qualname": 1, "fullname": 3, "doc": 0}, "tanjun.commands": {"qualname": 0, "fullname": 2, "doc": 5}, "tanjun.commands.AnyMessageCommandT": {"qualname": 1, "fullname": 3, "doc": 0}, "tanjun.commands.ConverterSig": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.commands.as_message_command": {"qualname": 2, "fullname": 4, "doc": 51}, "tanjun.commands.as_message_command_group": {"qualname": 3, "fullname": 5, "doc": 77}, "tanjun.commands.as_slash_command": {"qualname": 2, "fullname": 4, "doc": 267}, "tanjun.commands.slash_command_group": {"qualname": 3, "fullname": 5, "doc": 221}, "tanjun.commands.MessageCommand": {"qualname": 1, "fullname": 3, "doc": 4}, "tanjun.commands.MessageCommand.__init__": {"qualname": 2, "fullname": 4, "doc": 46}, "tanjun.commands.MessageCommand.callback": {"qualname": 2, "fullname": 4, "doc": 13}, "tanjun.commands.MessageCommand.names": {"qualname": 2, "fullname": 4, "doc": 3}, "tanjun.commands.MessageCommand.needs_injector": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.commands.MessageCommand.parent": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.commands.MessageCommand.parser": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.commands.MessageCommand.bind_client": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.commands.MessageCommand.bind_component": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.commands.MessageCommand.copy": {"qualname": 2, "fullname": 4, "doc": 12}, "tanjun.commands.MessageCommand.set_parent": {"qualname": 3, "fullname": 5, "doc": 16}, "tanjun.commands.MessageCommand.set_parser": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.commands.MessageCommand.check_context": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.commands.MessageCommand.execute": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.commands.MessageCommand.load_into_component": {"qualname": 3, "fullname": 5, "doc": 11}, "tanjun.commands.MessageCommandGroup": {"qualname": 1, "fullname": 3, "doc": 5}, "tanjun.commands.MessageCommandGroup.__init__": {"qualname": 2, "fullname": 4, "doc": 42}, "tanjun.commands.MessageCommandGroup.commands": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.commands.MessageCommandGroup.is_strict": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.commands.MessageCommandGroup.copy": {"qualname": 2, "fullname": 4, "doc": 12}, "tanjun.commands.MessageCommandGroup.add_command": {"qualname": 3, "fullname": 5, "doc": 25}, "tanjun.commands.MessageCommandGroup.remove_command": {"qualname": 3, "fullname": 5, "doc": 21}, "tanjun.commands.MessageCommandGroup.with_command": {"qualname": 2, "fullname": 4, "doc": 15}, "tanjun.commands.MessageCommandGroup.bind_client": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.commands.MessageCommandGroup.bind_component": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.commands.MessageCommandGroup.find_command": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.commands.MessageCommandGroup.execute": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.commands.PartialCommand": {"qualname": 1, "fullname": 3, "doc": 5}, "tanjun.commands.PartialCommand.checks": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.commands.PartialCommand.component": {"qualname": 2, "fullname": 4, "doc": 3}, "tanjun.commands.PartialCommand.hooks": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.commands.PartialCommand.metadata": {"qualname": 2, "fullname": 4, "doc": 12}, "tanjun.commands.PartialCommand.needs_injector": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.commands.PartialCommand.copy": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.commands.PartialCommand.set_hooks": {"qualname": 3, "fullname": 5, "doc": 20}, "tanjun.commands.PartialCommand.add_check": {"qualname": 3, "fullname": 5, "doc": 14}, "tanjun.commands.PartialCommand.remove_check": {"qualname": 3, "fullname": 5, "doc": 20}, "tanjun.commands.PartialCommand.with_check": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.commands.PartialCommand.bind_client": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.commands.PartialCommand.bind_component": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.commands.BaseSlashCommand": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"qualname": 3, "fullname": 5, "doc": 41}, "tanjun.commands.BaseSlashCommand.description": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.commands.BaseSlashCommand.is_global": {"qualname": 2, "fullname": 4, "doc": 17}, "tanjun.commands.BaseSlashCommand.name": {"qualname": 2, "fullname": 4, "doc": 2}, "tanjun.commands.BaseSlashCommand.parent": {"qualname": 2, "fullname": 4, "doc": 3}, "tanjun.commands.BaseSlashCommand.tracked_command": {"qualname": 3, "fullname": 5, "doc": 6}, "tanjun.commands.BaseSlashCommand.tracked_command_id": {"qualname": 4, "fullname": 6, "doc": 6}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"qualname": 4, "fullname": 6, "doc": 17}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"qualname": 4, "fullname": 6, "doc": 39}, "tanjun.commands.BaseSlashCommand.set_parent": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.commands.BaseSlashCommand.check_context": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.commands.BaseSlashCommand.copy": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.commands.BaseSlashCommand.load_into_component": {"qualname": 3, "fullname": 5, "doc": 11}, "tanjun.commands.SlashCommand": {"qualname": 1, "fullname": 3, "doc": 4}, "tanjun.commands.SlashCommand.__init__": {"qualname": 2, "fullname": 4, "doc": 208}, "tanjun.commands.SlashCommand.callback": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.commands.SlashCommand.needs_injector": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.commands.SlashCommand.bind_client": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.commands.SlashCommand.build": {"qualname": 2, "fullname": 4, "doc": 16}, "tanjun.commands.SlashCommand.load_into_component": {"qualname": 3, "fullname": 5, "doc": 11}, "tanjun.commands.SlashCommand.add_str_option": {"qualname": 4, "fullname": 6, "doc": 185}, "tanjun.commands.SlashCommand.add_int_option": {"qualname": 4, "fullname": 6, "doc": 181}, "tanjun.commands.SlashCommand.add_float_option": {"qualname": 4, "fullname": 6, "doc": 208}, "tanjun.commands.SlashCommand.add_bool_option": {"qualname": 4, "fullname": 6, "doc": 97}, "tanjun.commands.SlashCommand.add_user_option": {"qualname": 4, "fullname": 6, "doc": 116}, "tanjun.commands.SlashCommand.add_member_option": {"qualname": 4, "fullname": 6, "doc": 100}, "tanjun.commands.SlashCommand.add_channel_option": {"qualname": 4, "fullname": 6, "doc": 124}, "tanjun.commands.SlashCommand.add_role_option": {"qualname": 4, "fullname": 6, "doc": 97}, "tanjun.commands.SlashCommand.add_mentionable_option": {"qualname": 4, "fullname": 6, "doc": 110}, "tanjun.commands.SlashCommand.execute": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.commands.SlashCommand.copy": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.commands.SlashCommandGroup": {"qualname": 1, "fullname": 3, "doc": 16}, "tanjun.commands.SlashCommandGroup.__init__": {"qualname": 2, "fullname": 4, "doc": 114}, "tanjun.commands.SlashCommandGroup.commands": {"qualname": 2, "fullname": 4, "doc": 3}, "tanjun.commands.SlashCommandGroup.build": {"qualname": 2, "fullname": 4, "doc": 16}, "tanjun.commands.SlashCommandGroup.copy": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.commands.SlashCommandGroup.add_command": {"qualname": 3, "fullname": 5, "doc": 27}, "tanjun.commands.SlashCommandGroup.remove_command": {"qualname": 3, "fullname": 5, "doc": 18}, "tanjun.commands.SlashCommandGroup.with_command": {"qualname": 2, "fullname": 4, "doc": 22}, "tanjun.commands.SlashCommandGroup.execute": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.commands.with_str_slash_option": {"qualname": 3, "fullname": 5, "doc": 55}, "tanjun.commands.with_int_slash_option": {"qualname": 3, "fullname": 5, "doc": 57}, "tanjun.commands.with_float_slash_option": {"qualname": 3, "fullname": 5, "doc": 57}, "tanjun.commands.with_bool_slash_option": {"qualname": 3, "fullname": 5, "doc": 58}, "tanjun.commands.with_role_slash_option": {"qualname": 3, "fullname": 5, "doc": 56}, "tanjun.commands.with_user_slash_option": {"qualname": 3, "fullname": 5, "doc": 72}, "tanjun.commands.with_member_slash_option": {"qualname": 3, "fullname": 5, "doc": 61}, "tanjun.commands.with_channel_slash_option": {"qualname": 3, "fullname": 5, "doc": 61}, "tanjun.commands.with_mentionable_slash_option": {"qualname": 3, "fullname": 5, "doc": 71}, "tanjun.components": {"qualname": 0, "fullname": 2, "doc": 10}, "tanjun.components.CommandT": {"qualname": 1, "fullname": 3, "doc": 0}, "tanjun.components.Component": {"qualname": 1, "fullname": 3, "doc": 30}, "tanjun.components.Component.__init__": {"qualname": 2, "fullname": 4, "doc": 85}, "tanjun.components.Component.checks": {"qualname": 2, "fullname": 4, "doc": 8}, "tanjun.components.Component.client": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.components.Component.defaults_to_ephemeral": {"qualname": 3, "fullname": 5, "doc": 41}, "tanjun.components.Component.hooks": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.components.Component.loop": {"qualname": 2, "fullname": 4, "doc": 5}, "tanjun.components.Component.name": {"qualname": 2, "fullname": 4, "doc": 8}, "tanjun.components.Component.schedules": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.components.Component.slash_commands": {"qualname": 3, "fullname": 5, "doc": 4}, "tanjun.components.Component.slash_hooks": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.components.Component.message_commands": {"qualname": 3, "fullname": 5, "doc": 4}, "tanjun.components.Component.message_hooks": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.components.Component.needs_injector": {"qualname": 3, "fullname": 5, "doc": 6}, "tanjun.components.Component.listeners": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.components.Component.metadata": {"qualname": 2, "fullname": 4, "doc": 12}, "tanjun.components.Component.copy": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.components.Component.load_from_scope": {"qualname": 3, "fullname": 5, "doc": 109}, "tanjun.components.Component.set_ephemeral_default": {"qualname": 4, "fullname": 6, "doc": 42}, "tanjun.components.Component.set_slash_hooks": {"qualname": 4, "fullname": 6, "doc": 0}, "tanjun.components.Component.set_message_hooks": {"qualname": 4, "fullname": 6, "doc": 0}, "tanjun.components.Component.set_hooks": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.components.Component.add_check": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.components.Component.remove_check": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.components.Component.with_check": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.components.Component.add_client_callback": {"qualname": 4, "fullname": 6, "doc": 0}, "tanjun.components.Component.get_client_callbacks": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.components.Component.remove_client_callback": {"qualname": 4, "fullname": 6, "doc": 0}, "tanjun.components.Component.with_client_callback": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.components.Component.add_command": {"qualname": 3, "fullname": 5, "doc": 16}, "tanjun.components.Component.remove_command": {"qualname": 3, "fullname": 5, "doc": 16}, "tanjun.components.Component.with_command": {"qualname": 2, "fullname": 4, "doc": 114}, "tanjun.components.Component.add_slash_command": {"qualname": 4, "fullname": 6, "doc": 15}, "tanjun.components.Component.remove_slash_command": {"qualname": 4, "fullname": 6, "doc": 21}, "tanjun.components.Component.with_slash_command": {"qualname": 3, "fullname": 5, "doc": 24}, "tanjun.components.Component.add_message_command": {"qualname": 4, "fullname": 6, "doc": 26}, "tanjun.components.Component.remove_message_command": {"qualname": 4, "fullname": 6, "doc": 21}, "tanjun.components.Component.with_message_command": {"qualname": 3, "fullname": 5, "doc": 24}, "tanjun.components.Component.add_listener": {"qualname": 3, "fullname": 5, "doc": 19}, "tanjun.components.Component.remove_listener": {"qualname": 3, "fullname": 5, "doc": 25}, "tanjun.components.Component.with_listener": {"qualname": 2, "fullname": 4, "doc": 23}, "tanjun.components.Component.add_on_close": {"qualname": 3, "fullname": 5, "doc": 43}, "tanjun.components.Component.with_on_close": {"qualname": 2, "fullname": 4, "doc": 44}, "tanjun.components.Component.add_on_open": {"qualname": 3, "fullname": 5, "doc": 43}, "tanjun.components.Component.with_on_open": {"qualname": 2, "fullname": 4, "doc": 44}, "tanjun.components.Component.bind_client": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.components.Component.unbind_client": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.components.Component.check_message_name": {"qualname": 4, "fullname": 6, "doc": 58}, "tanjun.components.Component.check_slash_name": {"qualname": 4, "fullname": 6, "doc": 35}, "tanjun.components.Component.execute_interaction": {"qualname": 3, "fullname": 5, "doc": 57}, "tanjun.components.Component.execute_message": {"qualname": 3, "fullname": 5, "doc": 57}, "tanjun.components.Component.add_schedule": {"qualname": 3, "fullname": 5, "doc": 15}, "tanjun.components.Component.remove_schedule": {"qualname": 3, "fullname": 5, "doc": 20}, "tanjun.components.Component.with_schedule": {"qualname": 2, "fullname": 4, "doc": 37}, "tanjun.components.Component.close": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.components.Component.open": {"qualname": 2, "fullname": 4, "doc": 11}, "tanjun.components.Component.make_loader": {"qualname": 3, "fullname": 5, "doc": 41}, "tanjun.components.AbstractComponentLoader": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.components.AbstractComponentLoader.load_into_component": {"qualname": 3, "fullname": 5, "doc": 11}, "tanjun.components.OnCallbackSig": {"qualname": 1, "fullname": 3, "doc": 14}, "tanjun.components.OnCallbackSigT": {"qualname": 1, "fullname": 3, "doc": 3}, "tanjun.components.WithCommandReturnSig": {"qualname": 1, "fullname": 3, "doc": 0}, "tanjun.context": {"qualname": 0, "fullname": 2, "doc": 5}, "tanjun.context.MessageContext": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.context.MessageContext.__init__": {"qualname": 2, "fullname": 4, "doc": 11}, "tanjun.context.MessageContext.author": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.context.MessageContext.channel_id": {"qualname": 3, "fullname": 5, "doc": 4}, "tanjun.context.MessageContext.command": {"qualname": 2, "fullname": 4, "doc": 14}, "tanjun.context.MessageContext.content": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.context.MessageContext.created_at": {"qualname": 2, "fullname": 4, "doc": 8}, "tanjun.context.MessageContext.guild_id": {"qualname": 3, "fullname": 5, "doc": 8}, "tanjun.context.MessageContext.has_responded": {"qualname": 2, "fullname": 4, "doc": 5}, "tanjun.context.MessageContext.is_human": {"qualname": 2, "fullname": 4, "doc": 10}, "tanjun.context.MessageContext.member": {"qualname": 2, "fullname": 4, "doc": 9}, "tanjun.context.MessageContext.message": {"qualname": 2, "fullname": 4, "doc": 3}, "tanjun.context.MessageContext.triggering_name": {"qualname": 3, "fullname": 5, "doc": 4}, "tanjun.context.MessageContext.triggering_prefix": {"qualname": 3, "fullname": 5, "doc": 3}, "tanjun.context.MessageContext.shard": {"qualname": 2, "fullname": 4, "doc": 8}, "tanjun.context.MessageContext.set_command": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.context.MessageContext.set_content": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.context.MessageContext.set_triggering_name": {"qualname": 4, "fullname": 6, "doc": 0}, "tanjun.context.MessageContext.set_triggering_prefix": {"qualname": 4, "fullname": 6, "doc": 16}, "tanjun.context.MessageContext.delete_initial_response": {"qualname": 4, "fullname": 6, "doc": 13}, "tanjun.context.MessageContext.delete_last_response": {"qualname": 4, "fullname": 6, "doc": 12}, "tanjun.context.MessageContext.edit_initial_response": {"qualname": 4, "fullname": 6, "doc": 485}, "tanjun.context.MessageContext.edit_last_response": {"qualname": 4, "fullname": 6, "doc": 485}, "tanjun.context.MessageContext.fetch_initial_response": {"qualname": 4, "fullname": 6, "doc": 10}, "tanjun.context.MessageContext.fetch_last_response": {"qualname": 4, "fullname": 6, "doc": 10}, "tanjun.context.MessageContext.respond": {"qualname": 2, "fullname": 4, "doc": 370}, "tanjun.context.ResponseTypeT": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.context.SlashContext": {"qualname": 1, "fullname": 3, "doc": 5}, "tanjun.context.SlashContext.__init__": {"qualname": 2, "fullname": 4, "doc": 11}, "tanjun.context.SlashContext.author": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.context.SlashContext.channel_id": {"qualname": 3, "fullname": 5, "doc": 4}, "tanjun.context.SlashContext.client": {"qualname": 2, "fullname": 4, "doc": 5}, "tanjun.context.SlashContext.command": {"qualname": 2, "fullname": 4, "doc": 14}, "tanjun.context.SlashContext.created_at": {"qualname": 2, "fullname": 4, "doc": 8}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"qualname": 3, "fullname": 5, "doc": 25}, "tanjun.context.SlashContext.expires_at": {"qualname": 2, "fullname": 4, "doc": 14}, "tanjun.context.SlashContext.guild_id": {"qualname": 3, "fullname": 5, "doc": 8}, "tanjun.context.SlashContext.has_been_deferred": {"qualname": 2, "fullname": 4, "doc": 23}, "tanjun.context.SlashContext.has_responded": {"qualname": 2, "fullname": 4, "doc": 5}, "tanjun.context.SlashContext.is_human": {"qualname": 2, "fullname": 4, "doc": 10}, "tanjun.context.SlashContext.member": {"qualname": 2, "fullname": 4, "doc": 9}, "tanjun.context.SlashContext.triggering_name": {"qualname": 3, "fullname": 5, "doc": 4}, "tanjun.context.SlashContext.interaction": {"qualname": 2, "fullname": 4, "doc": 2}, "tanjun.context.SlashContext.options": {"qualname": 2, "fullname": 4, "doc": 5}, "tanjun.context.SlashContext.cancel_defer": {"qualname": 3, "fullname": 5, "doc": 4}, "tanjun.context.SlashContext.get_response_future": {"qualname": 3, "fullname": 5, "doc": 21}, "tanjun.context.SlashContext.mark_not_found": {"qualname": 3, "fullname": 5, "doc": 12}, "tanjun.context.SlashContext.start_defer_timer": {"qualname": 4, "fullname": 6, "doc": 22}, "tanjun.context.SlashContext.set_command": {"qualname": 3, "fullname": 5, "doc": 9}, "tanjun.context.SlashContext.set_ephemeral_default": {"qualname": 4, "fullname": 6, "doc": 21}, "tanjun.context.SlashContext.defer": {"qualname": 2, "fullname": 4, "doc": 25}, "tanjun.context.SlashContext.create_followup": {"qualname": 3, "fullname": 5, "doc": 316}, "tanjun.context.SlashContext.create_initial_response": {"qualname": 4, "fullname": 6, "doc": 361}, "tanjun.context.SlashContext.delete_initial_response": {"qualname": 4, "fullname": 6, "doc": 13}, "tanjun.context.SlashContext.delete_last_response": {"qualname": 4, "fullname": 6, "doc": 12}, "tanjun.context.SlashContext.edit_initial_response": {"qualname": 4, "fullname": 6, "doc": 485}, "tanjun.context.SlashContext.edit_last_response": {"qualname": 4, "fullname": 6, "doc": 485}, "tanjun.context.SlashContext.fetch_initial_response": {"qualname": 4, "fullname": 6, "doc": 10}, "tanjun.context.SlashContext.fetch_last_response": {"qualname": 4, "fullname": 6, "doc": 10}, "tanjun.context.SlashContext.respond": {"qualname": 2, "fullname": 4, "doc": 370}, "tanjun.context.SlashOption": {"qualname": 1, "fullname": 3, "doc": 8}, "tanjun.context.SlashOption.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.context.SlashOption.name": {"qualname": 2, "fullname": 4, "doc": 2}, "tanjun.context.SlashOption.type": {"qualname": 2, "fullname": 4, "doc": 2}, "tanjun.context.SlashOption.value": {"qualname": 2, "fullname": 4, "doc": 16}, "tanjun.context.SlashOption.resolve_value": {"qualname": 3, "fullname": 5, "doc": 22}, "tanjun.context.SlashOption.resolve_to_channel": {"qualname": 3, "fullname": 5, "doc": 16}, "tanjun.context.SlashOption.resolve_to_member": {"qualname": 3, "fullname": 5, "doc": 72}, "tanjun.context.SlashOption.resolve_to_mentionable": {"qualname": 3, "fullname": 5, "doc": 21}, "tanjun.context.SlashOption.resolve_to_role": {"qualname": 3, "fullname": 5, "doc": 19}, "tanjun.context.SlashOption.resolve_to_user": {"qualname": 3, "fullname": 5, "doc": 55}, "tanjun.conversion": {"qualname": 0, "fullname": 2, "doc": 9}, "tanjun.conversion.ArgumentT": {"qualname": 1, "fullname": 3, "doc": 0}, "tanjun.conversion.from_datetime": {"qualname": 1, "fullname": 3, "doc": 47}, "tanjun.conversion.parse_snowflake": {"qualname": 2, "fullname": 4, "doc": 32}, "tanjun.conversion.parse_channel_id": {"qualname": 3, "fullname": 5, "doc": 34}, "tanjun.conversion.parse_emoji_id": {"qualname": 3, "fullname": 5, "doc": 34}, "tanjun.conversion.parse_role_id": {"qualname": 3, "fullname": 5, "doc": 34}, "tanjun.conversion.parse_user_id": {"qualname": 3, "fullname": 5, "doc": 34}, "tanjun.conversion.search_snowflakes": {"qualname": 2, "fullname": 4, "doc": 23}, "tanjun.conversion.search_channel_ids": {"qualname": 3, "fullname": 5, "doc": 25}, "tanjun.conversion.search_emoji_ids": {"qualname": 3, "fullname": 5, "doc": 25}, "tanjun.conversion.search_role_ids": {"qualname": 3, "fullname": 5, "doc": 25}, "tanjun.conversion.search_user_ids": {"qualname": 3, "fullname": 5, "doc": 25}, "tanjun.conversion.to_bool": {"qualname": 1, "fullname": 3, "doc": 19}, "tanjun.conversion.to_channel": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.conversion.to_color": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.conversion.to_colour": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.conversion.to_datetime": {"qualname": 1, "fullname": 3, "doc": 28}, "tanjun.conversion.to_emoji": {"qualname": 1, "fullname": 3, "doc": 35}, "tanjun.conversion.to_guild": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.conversion.to_invite": {"qualname": 1, "fullname": 3, "doc": 8}, "tanjun.conversion.to_invite_with_metadata": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.conversion.to_member": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.conversion.to_presence": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.conversion.to_role": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.conversion.to_snowflake": {"qualname": 1, "fullname": 3, "doc": 10}, "tanjun.conversion.to_user": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.conversion.to_voice_state": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.conversion.ToChannel": {"qualname": 1, "fullname": 3, "doc": 8}, "tanjun.conversion.ToChannel.__init__": {"qualname": 2, "fullname": 4, "doc": 26}, "tanjun.conversion.ToChannel.async_caches": {"qualname": 3, "fullname": 5, "doc": 15}, "tanjun.conversion.ToChannel.cache_components": {"qualname": 3, "fullname": 5, "doc": 30}, "tanjun.conversion.ToChannel.intents": {"qualname": 2, "fullname": 4, "doc": 41}, "tanjun.conversion.ToChannel.requires_cache": {"qualname": 3, "fullname": 5, "doc": 23}, "tanjun.conversion.ToEmoji": {"qualname": 1, "fullname": 3, "doc": 35}, "tanjun.conversion.ToEmoji.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.conversion.ToEmoji.async_caches": {"qualname": 3, "fullname": 5, "doc": 15}, "tanjun.conversion.ToEmoji.cache_components": {"qualname": 3, "fullname": 5, "doc": 30}, "tanjun.conversion.ToEmoji.intents": {"qualname": 2, "fullname": 4, "doc": 41}, "tanjun.conversion.ToEmoji.requires_cache": {"qualname": 3, "fullname": 5, "doc": 23}, "tanjun.conversion.ToGuild": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.conversion.ToGuild.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.conversion.ToGuild.async_caches": {"qualname": 3, "fullname": 5, "doc": 15}, "tanjun.conversion.ToGuild.cache_components": {"qualname": 3, "fullname": 5, "doc": 30}, "tanjun.conversion.ToGuild.intents": {"qualname": 2, "fullname": 4, "doc": 41}, "tanjun.conversion.ToGuild.requires_cache": {"qualname": 3, "fullname": 5, "doc": 23}, "tanjun.conversion.ToInvite": {"qualname": 1, "fullname": 3, "doc": 3}, "tanjun.conversion.ToInvite.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.conversion.ToInvite.async_caches": {"qualname": 3, "fullname": 5, "doc": 15}, "tanjun.conversion.ToInvite.cache_components": {"qualname": 3, "fullname": 5, "doc": 30}, "tanjun.conversion.ToInvite.intents": {"qualname": 2, "fullname": 4, "doc": 41}, "tanjun.conversion.ToInvite.requires_cache": {"qualname": 3, "fullname": 5, "doc": 23}, "tanjun.conversion.ToInviteWithMetadata": {"qualname": 1, "fullname": 3, "doc": 15}, "tanjun.conversion.ToInviteWithMetadata.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"qualname": 3, "fullname": 5, "doc": 15}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"qualname": 3, "fullname": 5, "doc": 30}, "tanjun.conversion.ToInviteWithMetadata.intents": {"qualname": 2, "fullname": 4, "doc": 41}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"qualname": 3, "fullname": 5, "doc": 23}, "tanjun.conversion.ToMember": {"qualname": 1, "fullname": 3, "doc": 20}, "tanjun.conversion.ToMember.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.conversion.ToMember.async_caches": {"qualname": 3, "fullname": 5, "doc": 15}, "tanjun.conversion.ToMember.cache_components": {"qualname": 3, "fullname": 5, "doc": 30}, "tanjun.conversion.ToMember.intents": {"qualname": 2, "fullname": 4, "doc": 41}, "tanjun.conversion.ToMember.requires_cache": {"qualname": 3, "fullname": 5, "doc": 23}, "tanjun.conversion.ToPresence": {"qualname": 1, "fullname": 3, "doc": 13}, "tanjun.conversion.ToPresence.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.conversion.ToPresence.async_caches": {"qualname": 3, "fullname": 5, "doc": 15}, "tanjun.conversion.ToPresence.cache_components": {"qualname": 3, "fullname": 5, "doc": 30}, "tanjun.conversion.ToPresence.intents": {"qualname": 2, "fullname": 4, "doc": 41}, "tanjun.conversion.ToPresence.requires_cache": {"qualname": 3, "fullname": 5, "doc": 23}, "tanjun.conversion.ToRole": {"qualname": 1, "fullname": 3, "doc": 8}, "tanjun.conversion.ToRole.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.conversion.ToRole.async_caches": {"qualname": 3, "fullname": 5, "doc": 15}, "tanjun.conversion.ToRole.cache_components": {"qualname": 3, "fullname": 5, "doc": 30}, "tanjun.conversion.ToRole.intents": {"qualname": 2, "fullname": 4, "doc": 41}, "tanjun.conversion.ToRole.requires_cache": {"qualname": 3, "fullname": 5, "doc": 23}, "tanjun.conversion.ToUser": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.conversion.ToUser.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.conversion.ToUser.async_caches": {"qualname": 3, "fullname": 5, "doc": 15}, "tanjun.conversion.ToUser.cache_components": {"qualname": 3, "fullname": 5, "doc": 30}, "tanjun.conversion.ToUser.intents": {"qualname": 2, "fullname": 4, "doc": 41}, "tanjun.conversion.ToUser.requires_cache": {"qualname": 3, "fullname": 5, "doc": 23}, "tanjun.conversion.ToVoiceState": {"qualname": 1, "fullname": 3, "doc": 16}, "tanjun.conversion.ToVoiceState.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.conversion.ToVoiceState.async_caches": {"qualname": 3, "fullname": 5, "doc": 15}, "tanjun.conversion.ToVoiceState.cache_components": {"qualname": 3, "fullname": 5, "doc": 30}, "tanjun.conversion.ToVoiceState.intents": {"qualname": 2, "fullname": 4, "doc": 41}, "tanjun.conversion.ToVoiceState.requires_cache": {"qualname": 3, "fullname": 5, "doc": 23}, "tanjun.dependencies": {"qualname": 0, "fullname": 2, "doc": 8}, "tanjun.dependencies.set_standard_dependencies": {"qualname": 3, "fullname": 5, "doc": 14}, "tanjun.dependencies.AsyncCache": {"qualname": 1, "fullname": 3, "doc": 21}, "tanjun.dependencies.AsyncCache.get": {"qualname": 1, "fullname": 3, "doc": 41}, "tanjun.dependencies.AsyncCache.iter_all": {"qualname": 2, "fullname": 4, "doc": 24}, "tanjun.dependencies.ChannelBoundCache": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"qualname": 2, "fullname": 4, "doc": 52}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"qualname": 3, "fullname": 5, "doc": 27}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"qualname": 2, "fullname": 4, "doc": 24}, "tanjun.dependencies.CacheIterator": {"qualname": 1, "fullname": 3, "doc": 13}, "tanjun.dependencies.CacheIterator.len": {"qualname": 2, "fullname": 4, "doc": 15}, "tanjun.dependencies.CacheMissError": {"qualname": 1, "fullname": 3, "doc": 15}, "tanjun.dependencies.EntryNotFound": {"qualname": 1, "fullname": 3, "doc": 12}, "tanjun.dependencies.GuildBoundCache": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"qualname": 2, "fullname": 4, "doc": 51}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"qualname": 3, "fullname": 5, "doc": 35}, "tanjun.dependencies.GuildBoundCache.iter_all": {"qualname": 2, "fullname": 4, "doc": 24}, "tanjun.dependencies.SingleStoreCache": {"qualname": 1, "fullname": 3, "doc": 12}, "tanjun.dependencies.SingleStoreCache.get": {"qualname": 1, "fullname": 3, "doc": 32}, "tanjun.dependencies.SfCache": {"qualname": 1, "fullname": 3, "doc": 0}, "tanjun.dependencies.SfChannelBound": {"qualname": 1, "fullname": 3, "doc": 0}, "tanjun.dependencies.SfGuildBound": {"qualname": 1, "fullname": 3, "doc": 0}, "tanjun.dependencies.fetch_my_user": {"qualname": 2, "fullname": 4, "doc": 39}, "tanjun.dependencies.cache_callback": {"qualname": 2, "fullname": 4, "doc": 58}, "tanjun.dependencies.cached_inject": {"qualname": 2, "fullname": 4, "doc": 93}, "tanjun.dependencies.LazyConstant": {"qualname": 1, "fullname": 3, "doc": 14}, "tanjun.dependencies.LazyConstant.__init__": {"qualname": 2, "fullname": 4, "doc": 23}, "tanjun.dependencies.LazyConstant.callback": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.dependencies.LazyConstant.get_value": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.dependencies.LazyConstant.reset": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.dependencies.LazyConstant.set_value": {"qualname": 3, "fullname": 5, "doc": 13}, "tanjun.dependencies.LazyConstant.acquire": {"qualname": 2, "fullname": 4, "doc": 25}, "tanjun.dependencies.inject_lc": {"qualname": 2, "fullname": 4, "doc": 96}, "tanjun.dependencies.make_lc_resolver": {"qualname": 3, "fullname": 5, "doc": 38}, "tanjun.dependencies.AbstractConcurrencyLimiter": {"qualname": 1, "fullname": 3, "doc": 6}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"qualname": 3, "fullname": 5, "doc": 25}, "tanjun.dependencies.AbstractConcurrencyLimiter.release": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.dependencies.AbstractCooldownManager": {"qualname": 1, "fullname": 3, "doc": 5}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"qualname": 3, "fullname": 5, "doc": 40}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"qualname": 3, "fullname": 5, "doc": 17}, "tanjun.dependencies.BucketResource": {"qualname": 1, "fullname": 3, "doc": 9}, "tanjun.dependencies.BucketResource.USER": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.dependencies.BucketResource.MEMBER": {"qualname": 2, "fullname": 4, "doc": 10}, "tanjun.dependencies.BucketResource.CHANNEL": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"qualname": 3, "fullname": 5, "doc": 16}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"qualname": 3, "fullname": 5, "doc": 16}, "tanjun.dependencies.BucketResource.GUILD": {"qualname": 2, "fullname": 4, "doc": 9}, "tanjun.dependencies.BucketResource.GLOBAL": {"qualname": 2, "fullname": 4, "doc": 3}, "tanjun.dependencies.ConcurrencyPreExecution": {"qualname": 1, "fullname": 3, "doc": 20}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"qualname": 2, "fullname": 4, "doc": 35}, "tanjun.dependencies.ConcurrencyPostExecution": {"qualname": 1, "fullname": 3, "doc": 20}, "tanjun.dependencies.ConcurrencyPostExecution.__init__": {"qualname": 2, "fullname": 4, "doc": 13}, "tanjun.dependencies.CooldownPreExecution": {"qualname": 1, "fullname": 3, "doc": 20}, "tanjun.dependencies.CooldownPreExecution.__init__": {"qualname": 2, "fullname": 4, "doc": 44}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"qualname": 1, "fullname": 3, "doc": 70}, "tanjun.dependencies.InMemoryConcurrencyLimiter.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"qualname": 3, "fullname": 5, "doc": 27}, "tanjun.dependencies.InMemoryConcurrencyLimiter.close": {"qualname": 2, "fullname": 4, "doc": 8}, "tanjun.dependencies.InMemoryConcurrencyLimiter.open": {"qualname": 2, "fullname": 4, "doc": 14}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"qualname": 3, "fullname": 5, "doc": 25}, "tanjun.dependencies.InMemoryConcurrencyLimiter.release": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"qualname": 3, "fullname": 5, "doc": 33}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"qualname": 3, "fullname": 5, "doc": 55}, "tanjun.dependencies.InMemoryCooldownManager": {"qualname": 1, "fullname": 3, "doc": 78}, "tanjun.dependencies.InMemoryCooldownManager.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"qualname": 3, "fullname": 5, "doc": 27}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"qualname": 3, "fullname": 5, "doc": 40}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"qualname": 3, "fullname": 5, "doc": 17}, "tanjun.dependencies.InMemoryCooldownManager.close": {"qualname": 2, "fullname": 4, "doc": 8}, "tanjun.dependencies.InMemoryCooldownManager.open": {"qualname": 2, "fullname": 4, "doc": 14}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"qualname": 3, "fullname": 5, "doc": 31}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"qualname": 3, "fullname": 5, "doc": 64}, "tanjun.dependencies.with_concurrency_limit": {"qualname": 2, "fullname": 4, "doc": 67}, "tanjun.dependencies.with_cooldown": {"qualname": 1, "fullname": 3, "doc": 74}, "tanjun.dependencies.AbstractOwners": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.dependencies.AbstractOwners.check_ownership": {"qualname": 3, "fullname": 5, "doc": 29}, "tanjun.dependencies.Owners": {"qualname": 1, "fullname": 3, "doc": 21}, "tanjun.dependencies.Owners.__init__": {"qualname": 2, "fullname": 4, "doc": 63}, "tanjun.dependencies.Owners.check_ownership": {"qualname": 3, "fullname": 5, "doc": 29}, "tanjun.dependencies.async_cache": {"qualname": 0, "fullname": 4, "doc": 80}, "tanjun.dependencies.async_cache.AsyncCache": {"qualname": 1, "fullname": 5, "doc": 21}, "tanjun.dependencies.async_cache.AsyncCache.get": {"qualname": 1, "fullname": 5, "doc": 41}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"qualname": 2, "fullname": 6, "doc": 24}, "tanjun.dependencies.async_cache.ChannelBoundCache": {"qualname": 1, "fullname": 5, "doc": 7}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"qualname": 2, "fullname": 6, "doc": 52}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"qualname": 3, "fullname": 7, "doc": 27}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"qualname": 2, "fullname": 6, "doc": 24}, "tanjun.dependencies.async_cache.CacheIterator": {"qualname": 1, "fullname": 5, "doc": 13}, "tanjun.dependencies.async_cache.CacheIterator.len": {"qualname": 2, "fullname": 6, "doc": 15}, "tanjun.dependencies.async_cache.CacheMissError": {"qualname": 1, "fullname": 5, "doc": 15}, "tanjun.dependencies.async_cache.EntryNotFound": {"qualname": 1, "fullname": 5, "doc": 12}, "tanjun.dependencies.async_cache.GuildBoundCache": {"qualname": 1, "fullname": 5, "doc": 7}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"qualname": 2, "fullname": 6, "doc": 51}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"qualname": 3, "fullname": 7, "doc": 35}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"qualname": 2, "fullname": 6, "doc": 24}, "tanjun.dependencies.async_cache.SingleStoreCache": {"qualname": 1, "fullname": 5, "doc": 12}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"qualname": 1, "fullname": 5, "doc": 32}, "tanjun.dependencies.async_cache.SfCache": {"qualname": 1, "fullname": 5, "doc": 4}, "tanjun.dependencies.async_cache.SfChannelBound": {"qualname": 1, "fullname": 5, "doc": 4}, "tanjun.dependencies.async_cache.SfGuildBound": {"qualname": 1, "fullname": 5, "doc": 4}, "tanjun.dependencies.callbacks": {"qualname": 0, "fullname": 3, "doc": 8}, "tanjun.dependencies.callbacks.fetch_my_user": {"qualname": 2, "fullname": 5, "doc": 39}, "tanjun.dependencies.data": {"qualname": 0, "fullname": 3, "doc": 5}, "tanjun.dependencies.data.cache_callback": {"qualname": 2, "fullname": 5, "doc": 58}, "tanjun.dependencies.data.cached_inject": {"qualname": 2, "fullname": 5, "doc": 93}, "tanjun.dependencies.data.LazyConstant": {"qualname": 1, "fullname": 4, "doc": 14}, "tanjun.dependencies.data.LazyConstant.__init__": {"qualname": 2, "fullname": 5, "doc": 23}, "tanjun.dependencies.data.LazyConstant.callback": {"qualname": 2, "fullname": 5, "doc": 6}, "tanjun.dependencies.data.LazyConstant.get_value": {"qualname": 2, "fullname": 5, "doc": 4}, "tanjun.dependencies.data.LazyConstant.reset": {"qualname": 2, "fullname": 5, "doc": 4}, "tanjun.dependencies.data.LazyConstant.set_value": {"qualname": 3, "fullname": 6, "doc": 13}, "tanjun.dependencies.data.LazyConstant.acquire": {"qualname": 2, "fullname": 5, "doc": 25}, "tanjun.dependencies.data.inject_lc": {"qualname": 2, "fullname": 5, "doc": 96}, "tanjun.dependencies.data.make_lc_resolver": {"qualname": 3, "fullname": 6, "doc": 38}, "tanjun.dependencies.limiters": {"qualname": 0, "fullname": 3, "doc": 4}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter": {"qualname": 1, "fullname": 4, "doc": 6}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"qualname": 3, "fullname": 6, "doc": 25}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.release": {"qualname": 2, "fullname": 5, "doc": 4}, "tanjun.dependencies.limiters.AbstractCooldownManager": {"qualname": 1, "fullname": 4, "doc": 5}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"qualname": 3, "fullname": 6, "doc": 40}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"qualname": 3, "fullname": 6, "doc": 17}, "tanjun.dependencies.limiters.BucketResource": {"qualname": 1, "fullname": 4, "doc": 9}, "tanjun.dependencies.limiters.BucketResource.USER": {"qualname": 2, "fullname": 5, "doc": 4}, "tanjun.dependencies.limiters.BucketResource.MEMBER": {"qualname": 2, "fullname": 5, "doc": 10}, "tanjun.dependencies.limiters.BucketResource.CHANNEL": {"qualname": 2, "fullname": 5, "doc": 4}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"qualname": 3, "fullname": 6, "doc": 16}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"qualname": 3, "fullname": 6, "doc": 16}, "tanjun.dependencies.limiters.BucketResource.GUILD": {"qualname": 2, "fullname": 5, "doc": 9}, "tanjun.dependencies.limiters.BucketResource.GLOBAL": {"qualname": 2, "fullname": 5, "doc": 3}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"qualname": 1, "fullname": 4, "doc": 20}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"qualname": 2, "fullname": 5, "doc": 35}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"qualname": 1, "fullname": 4, "doc": 20}, "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__": {"qualname": 2, "fullname": 5, "doc": 13}, "tanjun.dependencies.limiters.CooldownPreExecution": {"qualname": 1, "fullname": 4, "doc": 20}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"qualname": 2, "fullname": 5, "doc": 44}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"qualname": 1, "fullname": 4, "doc": 70}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"qualname": 3, "fullname": 6, "doc": 27}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.close": {"qualname": 2, "fullname": 5, "doc": 8}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open": {"qualname": 2, "fullname": 5, "doc": 14}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"qualname": 3, "fullname": 6, "doc": 25}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.release": {"qualname": 2, "fullname": 5, "doc": 4}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"qualname": 3, "fullname": 6, "doc": 33}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"qualname": 3, "fullname": 6, "doc": 55}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"qualname": 1, "fullname": 4, "doc": 78}, "tanjun.dependencies.limiters.InMemoryCooldownManager.__init__": {"qualname": 2, "fullname": 5, "doc": 0}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"qualname": 3, "fullname": 6, "doc": 27}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"qualname": 3, "fullname": 6, "doc": 40}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"qualname": 3, "fullname": 6, "doc": 17}, "tanjun.dependencies.limiters.InMemoryCooldownManager.close": {"qualname": 2, "fullname": 5, "doc": 8}, "tanjun.dependencies.limiters.InMemoryCooldownManager.open": {"qualname": 2, "fullname": 5, "doc": 14}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"qualname": 3, "fullname": 6, "doc": 31}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"qualname": 3, "fullname": 6, "doc": 64}, "tanjun.dependencies.limiters.with_concurrency_limit": {"qualname": 2, "fullname": 5, "doc": 67}, "tanjun.dependencies.limiters.with_cooldown": {"qualname": 1, "fullname": 4, "doc": 74}, "tanjun.dependencies.owners": {"qualname": 0, "fullname": 3, "doc": 5}, "tanjun.dependencies.owners.AbstractOwners": {"qualname": 1, "fullname": 4, "doc": 7}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"qualname": 3, "fullname": 6, "doc": 29}, "tanjun.dependencies.owners.Owners": {"qualname": 1, "fullname": 4, "doc": 21}, "tanjun.dependencies.owners.Owners.__init__": {"qualname": 2, "fullname": 5, "doc": 63}, "tanjun.dependencies.owners.Owners.check_ownership": {"qualname": 3, "fullname": 6, "doc": 29}, "tanjun.errors": {"qualname": 0, "fullname": 2, "doc": 5}, "tanjun.errors.CommandError": {"qualname": 1, "fullname": 3, "doc": 5}, "tanjun.errors.CommandError.__init__": {"qualname": 2, "fullname": 4, "doc": 23}, "tanjun.errors.CommandError.message": {"qualname": 2, "fullname": 4, "doc": 9}, "tanjun.errors.ConversionError": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.errors.ConversionError.__init__": {"qualname": 2, "fullname": 4, "doc": 21}, "tanjun.errors.ConversionError.errors": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.errors.ConversionError.parameter": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.errors.HaltExecution": {"qualname": 1, "fullname": 3, "doc": 17}, "tanjun.errors.FailedCheck": {"qualname": 1, "fullname": 3, "doc": 6}, "tanjun.errors.MissingDependencyError": {"qualname": 1, "fullname": 3, "doc": 5}, "tanjun.errors.MissingDependencyError.__init__": {"qualname": 2, "fullname": 4, "doc": 9}, "tanjun.errors.MissingDependencyError.message": {"qualname": 2, "fullname": 4, "doc": 2}, "tanjun.errors.NotEnoughArgumentsError": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.errors.NotEnoughArgumentsError.__init__": {"qualname": 2, "fullname": 4, "doc": 16}, "tanjun.errors.NotEnoughArgumentsError.parameter": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.errors.TooManyArgumentsError": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.errors.TooManyArgumentsError.__init__": {"qualname": 2, "fullname": 4, "doc": 16}, "tanjun.errors.TooManyArgumentsError.parameter": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.errors.ParserError": {"qualname": 1, "fullname": 3, "doc": 14}, "tanjun.errors.ParserError.__init__": {"qualname": 2, "fullname": 4, "doc": 18}, "tanjun.errors.ParserError.message": {"qualname": 2, "fullname": 4, "doc": 8}, "tanjun.errors.ParserError.parameter": {"qualname": 2, "fullname": 4, "doc": 10}, "tanjun.errors.TanjunError": {"qualname": 1, "fullname": 3, "doc": 5}, "tanjun.hooks": {"qualname": 0, "fullname": 2, "doc": 7}, "tanjun.hooks.AnyHooks": {"qualname": 1, "fullname": 3, "doc": 8}, "tanjun.hooks.Hooks": {"qualname": 1, "fullname": 3, "doc": 43}, "tanjun.hooks.Hooks.__init__": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.hooks.Hooks.add_to_command": {"qualname": 3, "fullname": 5, "doc": 57}, "tanjun.hooks.Hooks.copy": {"qualname": 2, "fullname": 4, "doc": 3}, "tanjun.hooks.Hooks.add_on_error": {"qualname": 3, "fullname": 5, "doc": 58}, "tanjun.hooks.Hooks.set_on_error": {"qualname": 3, "fullname": 5, "doc": 73}, "tanjun.hooks.Hooks.with_on_error": {"qualname": 2, "fullname": 4, "doc": 104}, "tanjun.hooks.Hooks.add_on_parser_error": {"qualname": 4, "fullname": 6, "doc": 46}, "tanjun.hooks.Hooks.set_on_parser_error": {"qualname": 4, "fullname": 6, "doc": 53}, "tanjun.hooks.Hooks.with_on_parser_error": {"qualname": 3, "fullname": 5, "doc": 68}, "tanjun.hooks.Hooks.add_post_execution": {"qualname": 4, "fullname": 6, "doc": 33}, "tanjun.hooks.Hooks.set_post_execution": {"qualname": 4, "fullname": 6, "doc": 40}, "tanjun.hooks.Hooks.with_post_execution": {"qualname": 3, "fullname": 5, "doc": 59}, "tanjun.hooks.Hooks.add_pre_execution": {"qualname": 4, "fullname": 6, "doc": 33}, "tanjun.hooks.Hooks.set_pre_execution": {"qualname": 4, "fullname": 6, "doc": 40}, "tanjun.hooks.Hooks.with_pre_execution": {"qualname": 3, "fullname": 5, "doc": 59}, "tanjun.hooks.Hooks.add_on_success": {"qualname": 3, "fullname": 5, "doc": 32}, "tanjun.hooks.Hooks.set_on_success": {"qualname": 3, "fullname": 5, "doc": 39}, "tanjun.hooks.Hooks.with_on_success": {"qualname": 2, "fullname": 4, "doc": 54}, "tanjun.hooks.Hooks.trigger_error": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.hooks.Hooks.trigger_post_execution": {"qualname": 4, "fullname": 6, "doc": 0}, "tanjun.hooks.Hooks.trigger_pre_execution": {"qualname": 4, "fullname": 6, "doc": 0}, "tanjun.hooks.Hooks.trigger_success": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.hooks.MessageHooks": {"qualname": 1, "fullname": 3, "doc": 9}, "tanjun.hooks.SlashHooks": {"qualname": 1, "fullname": 3, "doc": 9}, "tanjun.injecting": {"qualname": 0, "fullname": 2, "doc": 11}, "tanjun.injecting.AbstractDescriptor": {"qualname": 1, "fullname": 3, "doc": 5}, "tanjun.injecting.AbstractDescriptor.needs_injector": {"qualname": 3, "fullname": 5, "doc": 7}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"qualname": 4, "fullname": 6, "doc": 38}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"qualname": 4, "fullname": 6, "doc": 28}, "tanjun.injecting.AbstractDescriptor.resolve": {"qualname": 2, "fullname": 4, "doc": 31}, "tanjun.injecting.AbstractInjectionContext": {"qualname": 1, "fullname": 3, "doc": 4}, "tanjun.injecting.AbstractInjectionContext.injection_client": {"qualname": 3, "fullname": 5, "doc": 4}, "tanjun.injecting.AbstractInjectionContext.cache_result": {"qualname": 3, "fullname": 5, "doc": 17}, "tanjun.injecting.AbstractInjectionContext.get_cached_result": {"qualname": 3, "fullname": 5, "doc": 21}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"qualname": 3, "fullname": 5, "doc": 31}, "tanjun.injecting.as_self_injecting": {"qualname": 2, "fullname": 4, "doc": 65}, "tanjun.injecting.BasicInjectionContext": {"qualname": 1, "fullname": 3, "doc": 3}, "tanjun.injecting.BasicInjectionContext.__init__": {"qualname": 2, "fullname": 4, "doc": 11}, "tanjun.injecting.BasicInjectionContext.injection_client": {"qualname": 3, "fullname": 5, "doc": 4}, "tanjun.injecting.BasicInjectionContext.cache_result": {"qualname": 3, "fullname": 5, "doc": 17}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"qualname": 3, "fullname": 5, "doc": 21}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"qualname": 3, "fullname": 5, "doc": 31}, "tanjun.injecting.CallbackDescriptor": {"qualname": 1, "fullname": 3, "doc": 12}, "tanjun.injecting.CallbackDescriptor.__init__": {"qualname": 2, "fullname": 4, "doc": 19}, "tanjun.injecting.CallbackDescriptor.callback": {"qualname": 2, "fullname": 4, "doc": 2}, "tanjun.injecting.CallbackDescriptor.needs_injector": {"qualname": 3, "fullname": 5, "doc": 7}, "tanjun.injecting.CallbackDescriptor.copy": {"qualname": 2, "fullname": 4, "doc": 8}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"qualname": 3, "fullname": 5, "doc": 17}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"qualname": 4, "fullname": 6, "doc": 53}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"qualname": 4, "fullname": 6, "doc": 32}, "tanjun.injecting.CallbackDescriptor.resolve": {"qualname": 2, "fullname": 4, "doc": 43}, "tanjun.injecting.CallbackSig": {"qualname": 1, "fullname": 3, "doc": 40}, "tanjun.injecting.Undefined": {"qualname": 1, "fullname": 3, "doc": 2}, "tanjun.injecting.Undefined.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.injecting.UNDEFINED": {"qualname": 1, "fullname": 3, "doc": 9}, "tanjun.injecting.UndefinedOr": {"qualname": 1, "fullname": 3, "doc": 9}, "tanjun.injecting.inject": {"qualname": 1, "fullname": 3, "doc": 152}, "tanjun.injecting.injected": {"qualname": 1, "fullname": 3, "doc": 2}, "tanjun.injecting.Injected": {"qualname": 1, "fullname": 3, "doc": 9}, "tanjun.injecting.Injected.__init__": {"qualname": 2, "fullname": 4, "doc": 84}, "tanjun.injecting.Injected.callback": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.injecting.Injected.type": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.injecting.InjectorClient": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.injecting.InjectorClient.__init__": {"qualname": 2, "fullname": 4, "doc": 3}, "tanjun.injecting.InjectorClient.set_type_dependency": {"qualname": 4, "fullname": 6, "doc": 40}, "tanjun.injecting.InjectorClient.get_type_dependency": {"qualname": 3, "fullname": 5, "doc": 16}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"qualname": 4, "fullname": 6, "doc": 19}, "tanjun.injecting.InjectorClient.set_callback_override": {"qualname": 4, "fullname": 6, "doc": 29}, "tanjun.injecting.InjectorClient.get_callback_override": {"qualname": 3, "fullname": 5, "doc": 19}, "tanjun.injecting.InjectorClient.remove_callback_override": {"qualname": 4, "fullname": 6, "doc": 22}, "tanjun.injecting.SelfInjectingCallback": {"qualname": 1, "fullname": 3, "doc": 38}, "tanjun.injecting.SelfInjectingCallback.__init__": {"qualname": 2, "fullname": 4, "doc": 26}, "tanjun.injecting.TypeDescriptor": {"qualname": 1, "fullname": 3, "doc": 10}, "tanjun.injecting.TypeDescriptor.__init__": {"qualname": 2, "fullname": 4, "doc": 10}, "tanjun.injecting.TypeDescriptor.needs_injector": {"qualname": 3, "fullname": 5, "doc": 7}, "tanjun.injecting.TypeDescriptor.type": {"qualname": 2, "fullname": 4, "doc": 3}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"qualname": 4, "fullname": 6, "doc": 38}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"qualname": 4, "fullname": 6, "doc": 28}, "tanjun.injecting.TypeDescriptor.resolve": {"qualname": 2, "fullname": 4, "doc": 31}, "tanjun.parsing": {"qualname": 0, "fullname": 2, "doc": 6}, "tanjun.parsing.AbstractParser": {"qualname": 1, "fullname": 3, "doc": 5}, "tanjun.parsing.AbstractParser.parameters": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.parsing.AbstractParser.add_parameter": {"qualname": 3, "fullname": 5, "doc": 30}, "tanjun.parsing.AbstractParser.remove_parameter": {"qualname": 3, "fullname": 5, "doc": 24}, "tanjun.parsing.AbstractParser.set_parameters": {"qualname": 3, "fullname": 5, "doc": 33}, "tanjun.parsing.AbstractParser.bind_client": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.parsing.AbstractParser.bind_component": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.parsing.AbstractParser.copy": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.parsing.AbstractParser.parse": {"qualname": 2, "fullname": 4, "doc": 36}, "tanjun.parsing.Argument": {"qualname": 1, "fullname": 3, "doc": 6}, "tanjun.parsing.Argument.__init__": {"qualname": 2, "fullname": 4, "doc": 68}, "tanjun.parsing.ConverterSig": {"qualname": 1, "fullname": 3, "doc": 18}, "tanjun.parsing.Option": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.parsing.Option.__init__": {"qualname": 2, "fullname": 4, "doc": 96}, "tanjun.parsing.Option.empty_value": {"qualname": 3, "fullname": 5, "doc": 8}, "tanjun.parsing.Option.names": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.parsing.Parameter": {"qualname": 1, "fullname": 3, "doc": 5}, "tanjun.parsing.Parameter.__init__": {"qualname": 2, "fullname": 4, "doc": 2}, "tanjun.parsing.Parameter.converters": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.parsing.Parameter.default": {"qualname": 2, "fullname": 4, "doc": 5}, "tanjun.parsing.Parameter.is_greedy": {"qualname": 2, "fullname": 4, "doc": 22}, "tanjun.parsing.Parameter.is_multi": {"qualname": 2, "fullname": 4, "doc": 15}, "tanjun.parsing.Parameter.key": {"qualname": 2, "fullname": 4, "doc": 7}, "tanjun.parsing.Parameter.needs_injector": {"qualname": 3, "fullname": 5, "doc": 5}, "tanjun.parsing.Parameter.bind_client": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.parsing.Parameter.bind_component": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.parsing.Parameter.convert": {"qualname": 2, "fullname": 4, "doc": 5}, "tanjun.parsing.Parameter.copy": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.parsing.ParseableProto": {"qualname": 1, "fullname": 3, "doc": 5}, "tanjun.parsing.ParseableProto.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.parsing.ParseableProto.callback": {"qualname": 2, "fullname": 4, "doc": 3}, "tanjun.parsing.ParseableProto.parser": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.parsing.ParseableProto.set_parser": {"qualname": 3, "fullname": 5, "doc": 17}, "tanjun.parsing.ParseableProtoT": {"qualname": 1, "fullname": 3, "doc": 4}, "tanjun.parsing.ShlexParser": {"qualname": 1, "fullname": 3, "doc": 4}, "tanjun.parsing.ShlexParser.__init__": {"qualname": 2, "fullname": 4, "doc": 3}, "tanjun.parsing.ShlexParser.needs_injector": {"qualname": 3, "fullname": 5, "doc": 5}, "tanjun.parsing.ShlexParser.parameters": {"qualname": 2, "fullname": 4, "doc": 4}, "tanjun.parsing.ShlexParser.copy": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.parsing.ShlexParser.add_parameter": {"qualname": 3, "fullname": 5, "doc": 30}, "tanjun.parsing.ShlexParser.remove_parameter": {"qualname": 3, "fullname": 5, "doc": 24}, "tanjun.parsing.ShlexParser.add_argument": {"qualname": 3, "fullname": 5, "doc": 81}, "tanjun.parsing.ShlexParser.add_option": {"qualname": 3, "fullname": 5, "doc": 103}, "tanjun.parsing.ShlexParser.set_parameters": {"qualname": 3, "fullname": 5, "doc": 33}, "tanjun.parsing.ShlexParser.bind_client": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.parsing.ShlexParser.bind_component": {"qualname": 3, "fullname": 5, "doc": 0}, "tanjun.parsing.ShlexParser.parse": {"qualname": 2, "fullname": 4, "doc": 36}, "tanjun.parsing.UndefinedDefaultT": {"qualname": 1, "fullname": 3, "doc": 7}, "tanjun.parsing.UndefinedDefaultT.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.parsing.UNDEFINED_DEFAULT": {"qualname": 2, "fullname": 4, "doc": 5}, "tanjun.parsing.with_argument": {"qualname": 1, "fullname": 3, "doc": 146}, "tanjun.parsing.with_greedy_argument": {"qualname": 2, "fullname": 4, "doc": 151}, "tanjun.parsing.with_multi_argument": {"qualname": 2, "fullname": 4, "doc": 159}, "tanjun.parsing.with_option": {"qualname": 1, "fullname": 3, "doc": 156}, "tanjun.parsing.with_multi_option": {"qualname": 2, "fullname": 4, "doc": 171}, "tanjun.parsing.with_parser": {"qualname": 1, "fullname": 3, "doc": 51}, "tanjun.schedules": {"qualname": 0, "fullname": 2, "doc": 7}, "tanjun.schedules.AbstractSchedule": {"qualname": 1, "fullname": 3, "doc": 4}, "tanjun.schedules.AbstractSchedule.callback": {"qualname": 2, "fullname": 4, "doc": 15}, "tanjun.schedules.AbstractSchedule.is_alive": {"qualname": 2, "fullname": 4, "doc": 3}, "tanjun.schedules.AbstractSchedule.iteration_count": {"qualname": 3, "fullname": 5, "doc": 9}, "tanjun.schedules.AbstractSchedule.copy": {"qualname": 2, "fullname": 4, "doc": 10}, "tanjun.schedules.AbstractSchedule.start": {"qualname": 2, "fullname": 4, "doc": 35}, "tanjun.schedules.AbstractSchedule.stop": {"qualname": 2, "fullname": 4, "doc": 8}, "tanjun.schedules.as_interval": {"qualname": 1, "fullname": 3, "doc": 80}, "tanjun.schedules.IntervalSchedule": {"qualname": 1, "fullname": 3, "doc": 5}, "tanjun.schedules.IntervalSchedule.__init__": {"qualname": 2, "fullname": 4, "doc": 82}, "tanjun.schedules.IntervalSchedule.callback": {"qualname": 2, "fullname": 4, "doc": 15}, "tanjun.schedules.IntervalSchedule.interval": {"qualname": 2, "fullname": 4, "doc": 5}, "tanjun.schedules.IntervalSchedule.is_alive": {"qualname": 2, "fullname": 4, "doc": 3}, "tanjun.schedules.IntervalSchedule.iteration_count": {"qualname": 3, "fullname": 5, "doc": 9}, "tanjun.schedules.IntervalSchedule.copy": {"qualname": 2, "fullname": 4, "doc": 10}, "tanjun.schedules.IntervalSchedule.load_into_component": {"qualname": 3, "fullname": 5, "doc": 11}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"qualname": 4, "fullname": 6, "doc": 19}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"qualname": 4, "fullname": 6, "doc": 22}, "tanjun.schedules.IntervalSchedule.start": {"qualname": 2, "fullname": 4, "doc": 35}, "tanjun.schedules.IntervalSchedule.stop": {"qualname": 2, "fullname": 4, "doc": 8}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"qualname": 3, "fullname": 5, "doc": 58}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"qualname": 3, "fullname": 5, "doc": 57}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"qualname": 4, "fullname": 6, "doc": 22}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"qualname": 4, "fullname": 6, "doc": 22}, "tanjun.utilities": {"qualname": 0, "fullname": 2, "doc": 6}, "tanjun.utilities.gather_checks": {"qualname": 2, "fullname": 4, "doc": 24}, "tanjun.utilities.ALL_PERMISSIONS": {"qualname": 1, "fullname": 3, "doc": 6}, "tanjun.utilities.CastedView": {"qualname": 1, "fullname": 3, "doc": 51}, "tanjun.utilities.CastedView.__init__": {"qualname": 2, "fullname": 4, "doc": 0}, "tanjun.utilities.DM_PERMISSIONS": {"qualname": 2, "fullname": 4, "doc": 6}, "tanjun.utilities.calculate_everyone_permissions": {"qualname": 3, "fullname": 5, "doc": 40}, "tanjun.utilities.calculate_permissions": {"qualname": 2, "fullname": 4, "doc": 69}, "tanjun.utilities.fetch_everyone_permissions": {"qualname": 3, "fullname": 5, "doc": 62}, "tanjun.utilities.fetch_permissions": {"qualname": 2, "fullname": 4, "doc": 55}, "tanjun.utilities.match_prefix_names": {"qualname": 3, "fullname": 5, "doc": 25}}, "length": 1372, "save": true}, "index": {"qualname": {"root": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.message_accepts": {"tf": 1}, "tanjun.Client.is_human_only": {"tf": 1}, "tanjun.Client.cache": {"tf": 1}, "tanjun.Client.checks": {"tf": 1}, "tanjun.Client.components": {"tf": 1}, "tanjun.Client.events": {"tf": 1}, "tanjun.Client.listeners": {"tf": 1}, "tanjun.Client.hooks": {"tf": 1}, "tanjun.Client.slash_hooks": {"tf": 1}, "tanjun.Client.is_alive": {"tf": 1}, "tanjun.Client.loop": {"tf": 1}, "tanjun.Client.message_hooks": {"tf": 1}, "tanjun.Client.metadata": {"tf": 1}, "tanjun.Client.prefix_getter": {"tf": 1}, "tanjun.Client.prefixes": {"tf": 1}, "tanjun.Client.rest": {"tf": 1}, "tanjun.Client.server": {"tf": 1}, "tanjun.Client.shards": {"tf": 1}, "tanjun.Client.voice": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.set_global_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.Client.set_message_accepts": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.remove_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.check": {"tf": 1}, "tanjun.Client.add_component": {"tf": 1}, "tanjun.Client.get_component_by_name": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.remove_component_by_name": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.dispatch_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.get_client_callbacks": {"tf": 1.4142135623730951}, "tanjun.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.remove_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.remove_prefix": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.Client.iter_commands": {"tf": 1}, "tanjun.Client.iter_message_commands": {"tf": 1}, "tanjun.Client.iter_slash_commands": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Client.close": {"tf": 1}, "tanjun.Client.open": {"tf": 1}, "tanjun.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.Client.on_message_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.MessageCommand.bind_client": {"tf": 1}, "tanjun.MessageCommandGroup.bind_client": {"tf": 1}, "tanjun.SlashCommand.bind_client": {"tf": 1}, "tanjun.Component.client": {"tf": 1}, "tanjun.Component.add_client_callback": {"tf": 1}, "tanjun.Component.get_client_callbacks": {"tf": 1}, "tanjun.Component.remove_client_callback": {"tf": 1}, "tanjun.Component.with_client_callback": {"tf": 1}, "tanjun.Component.bind_client": {"tf": 1}, "tanjun.Component.unbind_client": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.ShlexParser.bind_client": {"tf": 1}, "tanjun.abc.Context.client": {"tf": 1}, "tanjun.abc.ExecutableCommand.bind_client": {"tf": 1}, "tanjun.abc.Component.client": {"tf": 1}, "tanjun.abc.Component.bind_client": {"tf": 1}, "tanjun.abc.Component.unbind_client": {"tf": 1}, "tanjun.abc.Client": {"tf": 1}, "tanjun.abc.Client.cache": {"tf": 1}, "tanjun.abc.Client.components": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.events": {"tf": 1}, "tanjun.abc.Client.is_alive": {"tf": 1}, "tanjun.abc.Client.listeners": {"tf": 1}, "tanjun.abc.Client.loop": {"tf": 1}, "tanjun.abc.Client.metadata": {"tf": 1}, "tanjun.abc.Client.prefixes": {"tf": 1}, "tanjun.abc.Client.rest": {"tf": 1}, "tanjun.abc.Client.server": {"tf": 1}, "tanjun.abc.Client.shards": {"tf": 1}, "tanjun.abc.Client.voice": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.add_component": {"tf": 1}, "tanjun.abc.Client.get_component_by_name": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1.4142135623730951}, "tanjun.abc.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.remove_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.abc.Client.iter_commands": {"tf": 1}, "tanjun.abc.Client.iter_message_commands": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.message_accepts": {"tf": 1}, "tanjun.clients.Client.is_human_only": {"tf": 1}, "tanjun.clients.Client.cache": {"tf": 1}, "tanjun.clients.Client.checks": {"tf": 1}, "tanjun.clients.Client.components": {"tf": 1}, "tanjun.clients.Client.events": {"tf": 1}, "tanjun.clients.Client.listeners": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.clients.Client.slash_hooks": {"tf": 1}, "tanjun.clients.Client.is_alive": {"tf": 1}, "tanjun.clients.Client.loop": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.clients.Client.metadata": {"tf": 1}, "tanjun.clients.Client.prefix_getter": {"tf": 1}, "tanjun.clients.Client.prefixes": {"tf": 1}, "tanjun.clients.Client.rest": {"tf": 1}, "tanjun.clients.Client.server": {"tf": 1}, "tanjun.clients.Client.shards": {"tf": 1}, "tanjun.clients.Client.voice": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.set_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.set_message_accepts": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.remove_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.check": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.get_component_by_name": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1.4142135623730951}, "tanjun.clients.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.Client.iter_commands": {"tf": 1}, "tanjun.clients.Client.iter_message_commands": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.close": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.clients.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.on_message_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.commands.MessageCommand.bind_client": {"tf": 1}, "tanjun.commands.MessageCommandGroup.bind_client": {"tf": 1}, "tanjun.commands.PartialCommand.bind_client": {"tf": 1}, "tanjun.commands.SlashCommand.bind_client": {"tf": 1}, "tanjun.components.Component.client": {"tf": 1}, "tanjun.components.Component.add_client_callback": {"tf": 1}, "tanjun.components.Component.get_client_callbacks": {"tf": 1}, "tanjun.components.Component.remove_client_callback": {"tf": 1}, "tanjun.components.Component.with_client_callback": {"tf": 1}, "tanjun.components.Component.bind_client": {"tf": 1}, "tanjun.components.Component.unbind_client": {"tf": 1}, "tanjun.context.SlashContext.client": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.injection_client": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.injection_client": {"tf": 1}, "tanjun.parsing.AbstractParser.bind_client": {"tf": 1}, "tanjun.parsing.Parameter.bind_client": {"tf": 1}, "tanjun.parsing.ShlexParser.bind_client": {"tf": 1}}, "df": 225, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.ClientCallbackNames": {"tf": 1}, "tanjun.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.abc.ClientCallbackNames": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.clients.ClientCallbackNames": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTING": {"tf": 1}}, "df": 27}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.ClientLoader": {"tf": 1}, "tanjun.abc.ClientLoader.load": {"tf": 1}, "tanjun.abc.ClientLoader.unload": {"tf": 1}}, "df": 3}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.close": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.close": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.abc.Component.close": {"tf": 1}, "tanjun.clients.Client.close": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.close": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.close": {"tf": 1}}, "df": 15, "d": {"docs": {"tanjun.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSED": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSING": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.Client.add_component": {"tf": 1}, "tanjun.Client.get_component_by_name": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.remove_component_by_name": {"tf": 1}, "tanjun.MessageCommand.bind_component": {"tf": 1}, "tanjun.MessageCommand.load_into_component": {"tf": 1}, "tanjun.MessageCommandGroup.bind_component": {"tf": 1}, "tanjun.SlashCommand.load_into_component": {"tf": 1}, "tanjun.Component": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.checks": {"tf": 1}, "tanjun.Component.client": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.hooks": {"tf": 1}, "tanjun.Component.loop": {"tf": 1}, "tanjun.Component.name": {"tf": 1}, "tanjun.Component.schedules": {"tf": 1}, "tanjun.Component.slash_commands": {"tf": 1}, "tanjun.Component.slash_hooks": {"tf": 1}, "tanjun.Component.message_commands": {"tf": 1}, "tanjun.Component.message_hooks": {"tf": 1}, "tanjun.Component.needs_injector": {"tf": 1}, "tanjun.Component.listeners": {"tf": 1}, "tanjun.Component.metadata": {"tf": 1}, "tanjun.Component.copy": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.Component.set_slash_hooks": {"tf": 1}, "tanjun.Component.set_message_hooks": {"tf": 1}, "tanjun.Component.set_hooks": {"tf": 1}, "tanjun.Component.add_check": {"tf": 1}, "tanjun.Component.remove_check": {"tf": 1}, "tanjun.Component.with_check": {"tf": 1}, "tanjun.Component.add_client_callback": {"tf": 1}, "tanjun.Component.get_client_callbacks": {"tf": 1}, "tanjun.Component.remove_client_callback": {"tf": 1}, "tanjun.Component.with_client_callback": {"tf": 1}, "tanjun.Component.add_command": {"tf": 1}, "tanjun.Component.remove_command": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1}, "tanjun.Component.add_slash_command": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.with_slash_command": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.with_message_command": {"tf": 1}, "tanjun.Component.add_listener": {"tf": 1}, "tanjun.Component.remove_listener": {"tf": 1}, "tanjun.Component.with_listener": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.Component.bind_client": {"tf": 1}, "tanjun.Component.unbind_client": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.Component.add_schedule": {"tf": 1}, "tanjun.Component.remove_schedule": {"tf": 1}, "tanjun.Component.with_schedule": {"tf": 1}, "tanjun.Component.close": {"tf": 1}, "tanjun.Component.open": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.ShlexParser.bind_component": {"tf": 1}, "tanjun.abc.Context.component": {"tf": 1}, "tanjun.abc.Context.set_component": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.ExecutableCommand.component": {"tf": 1}, "tanjun.abc.ExecutableCommand.bind_component": {"tf": 1}, "tanjun.abc.Component": {"tf": 1}, "tanjun.abc.Component.client": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.loop": {"tf": 1}, "tanjun.abc.Component.name": {"tf": 1}, "tanjun.abc.Component.slash_commands": {"tf": 1}, "tanjun.abc.Component.message_commands": {"tf": 1}, "tanjun.abc.Component.listeners": {"tf": 1}, "tanjun.abc.Component.metadata": {"tf": 1}, "tanjun.abc.Component.add_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.with_slash_command": {"tf": 1}, "tanjun.abc.Component.add_message_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.with_message_command": {"tf": 1}, "tanjun.abc.Component.add_listener": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Component.with_listener": {"tf": 1}, "tanjun.abc.Component.bind_client": {"tf": 1}, "tanjun.abc.Component.unbind_client": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Component.close": {"tf": 1}, "tanjun.abc.Component.open": {"tf": 1}, "tanjun.abc.Client.add_component": {"tf": 1}, "tanjun.abc.Client.get_component_by_name": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.get_component_by_name": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.commands.MessageCommand.bind_component": {"tf": 1}, "tanjun.commands.MessageCommand.load_into_component": {"tf": 1}, "tanjun.commands.MessageCommandGroup.bind_component": {"tf": 1}, "tanjun.commands.PartialCommand.component": {"tf": 1}, "tanjun.commands.PartialCommand.bind_component": {"tf": 1}, "tanjun.commands.BaseSlashCommand.load_into_component": {"tf": 1}, "tanjun.commands.SlashCommand.load_into_component": {"tf": 1}, "tanjun.components.Component": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.checks": {"tf": 1}, "tanjun.components.Component.client": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.hooks": {"tf": 1}, "tanjun.components.Component.loop": {"tf": 1}, "tanjun.components.Component.name": {"tf": 1}, "tanjun.components.Component.schedules": {"tf": 1}, "tanjun.components.Component.slash_commands": {"tf": 1}, "tanjun.components.Component.slash_hooks": {"tf": 1}, "tanjun.components.Component.message_commands": {"tf": 1}, "tanjun.components.Component.message_hooks": {"tf": 1}, "tanjun.components.Component.needs_injector": {"tf": 1}, "tanjun.components.Component.listeners": {"tf": 1}, "tanjun.components.Component.metadata": {"tf": 1}, "tanjun.components.Component.copy": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.set_slash_hooks": {"tf": 1}, "tanjun.components.Component.set_message_hooks": {"tf": 1}, "tanjun.components.Component.set_hooks": {"tf": 1}, "tanjun.components.Component.add_check": {"tf": 1}, "tanjun.components.Component.remove_check": {"tf": 1}, "tanjun.components.Component.with_check": {"tf": 1}, "tanjun.components.Component.add_client_callback": {"tf": 1}, "tanjun.components.Component.get_client_callbacks": {"tf": 1}, "tanjun.components.Component.remove_client_callback": {"tf": 1}, "tanjun.components.Component.with_client_callback": {"tf": 1}, "tanjun.components.Component.add_command": {"tf": 1}, "tanjun.components.Component.remove_command": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1}, "tanjun.components.Component.add_slash_command": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.with_slash_command": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.with_message_command": {"tf": 1}, "tanjun.components.Component.add_listener": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}, "tanjun.components.Component.with_listener": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.components.Component.bind_client": {"tf": 1}, "tanjun.components.Component.unbind_client": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.components.Component.add_schedule": {"tf": 1}, "tanjun.components.Component.remove_schedule": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1}, "tanjun.components.Component.close": {"tf": 1}, "tanjun.components.Component.open": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}, "tanjun.components.AbstractComponentLoader.load_into_component": {"tf": 1}, "tanjun.parsing.AbstractParser.bind_component": {"tf": 1}, "tanjun.parsing.Parameter.bind_component": {"tf": 1}, "tanjun.parsing.ShlexParser.bind_component": {"tf": 1}, "tanjun.schedules.IntervalSchedule.load_into_component": {"tf": 1}}, "df": 179, "s": {"docs": {"tanjun.Client.components": {"tf": 1}, "tanjun.abc.Client.components": {"tf": 1}, "tanjun.clients.Client.components": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}}, "df": 13}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.MessageCommandGroup.find_command": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.Component.add_command": {"tf": 1}, "tanjun.Component.remove_command": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1}, "tanjun.Component.add_slash_command": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.with_slash_command": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.with_message_command": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.abc.Context.command": {"tf": 1}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.abc.MessageContext.command": {"tf": 1}, "tanjun.abc.MessageContext.set_command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.abc.SlashContext.command": {"tf": 1}, "tanjun.abc.SlashContext.set_command": {"tf": 1}, "tanjun.abc.Component.add_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.with_slash_command": {"tf": 1}, "tanjun.abc.Component.add_message_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.with_message_command": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.find_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.components.Component.add_command": {"tf": 1}, "tanjun.components.Component.remove_command": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1}, "tanjun.components.Component.add_slash_command": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.with_slash_command": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.with_message_command": {"tf": 1}, "tanjun.context.MessageContext.command": {"tf": 1}, "tanjun.context.MessageContext.set_command": {"tf": 1}, "tanjun.context.SlashContext.command": {"tf": 1}, "tanjun.context.SlashContext.set_command": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}}, "df": 81, "s": {"docs": {"tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.set_global_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.iter_commands": {"tf": 1}, "tanjun.Client.iter_message_commands": {"tf": 1}, "tanjun.Client.iter_slash_commands": {"tf": 1}, "tanjun.MessageCommandGroup.commands": {"tf": 1}, "tanjun.SlashCommandGroup.commands": {"tf": 1}, "tanjun.Component.slash_commands": {"tf": 1}, "tanjun.Component.message_commands": {"tf": 1}, "tanjun.abc.MessageCommandGroup.commands": {"tf": 1}, "tanjun.abc.SlashCommandGroup.commands": {"tf": 1}, "tanjun.abc.Component.slash_commands": {"tf": 1}, "tanjun.abc.Component.message_commands": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.iter_commands": {"tf": 1}, "tanjun.abc.Client.iter_message_commands": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.set_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.iter_commands": {"tf": 1}, "tanjun.clients.Client.iter_message_commands": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1}, "tanjun.commands.MessageCommandGroup.commands": {"tf": 1}, "tanjun.commands.SlashCommandGroup.commands": {"tf": 1}, "tanjun.components.Component.slash_commands": {"tf": 1}, "tanjun.components.Component.message_commands": {"tf": 1}}, "df": 32}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.CommandError": {"tf": 1}, "tanjun.CommandError.__init__": {"tf": 1}, "tanjun.CommandError.message": {"tf": 1}, "tanjun.errors.CommandError": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}, "tanjun.errors.CommandError.message": {"tf": 1}}, "df": 6}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.CommandCallbackSig": {"tf": 1}}, "df": 1, "t": {"docs": {"tanjun.abc.CommandCallbackSigT": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {"tanjun.checks.CommandT": {"tf": 1}, "tanjun.components.CommandT": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.MessageCommand.copy": {"tf": 1}, "tanjun.MessageCommandGroup.copy": {"tf": 1}, "tanjun.SlashCommand.copy": {"tf": 1}, "tanjun.SlashCommandGroup.copy": {"tf": 1}, "tanjun.Component.copy": {"tf": 1}, "tanjun.Hooks.copy": {"tf": 1}, "tanjun.ShlexParser.copy": {"tf": 1}, "tanjun.abc.Hooks.copy": {"tf": 1}, "tanjun.abc.ExecutableCommand.copy": {"tf": 1}, "tanjun.abc.MessageCommand.copy": {"tf": 1}, "tanjun.commands.MessageCommand.copy": {"tf": 1}, "tanjun.commands.MessageCommandGroup.copy": {"tf": 1}, "tanjun.commands.PartialCommand.copy": {"tf": 1}, "tanjun.commands.BaseSlashCommand.copy": {"tf": 1}, "tanjun.commands.SlashCommand.copy": {"tf": 1}, "tanjun.commands.SlashCommandGroup.copy": {"tf": 1}, "tanjun.components.Component.copy": {"tf": 1}, "tanjun.hooks.Hooks.copy": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.copy": {"tf": 1}, "tanjun.parsing.AbstractParser.copy": {"tf": 1}, "tanjun.parsing.Parameter.copy": {"tf": 1}, "tanjun.parsing.ShlexParser.copy": {"tf": 1}, "tanjun.schedules.AbstractSchedule.copy": {"tf": 1}, "tanjun.schedules.IntervalSchedule.copy": {"tf": 1}}, "df": 24}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.MessageCommand.check_context": {"tf": 1}, "tanjun.abc.Context": {"tf": 1}, "tanjun.abc.Context.author": {"tf": 1}, "tanjun.abc.Context.channel_id": {"tf": 1}, "tanjun.abc.Context.cache": {"tf": 1}, "tanjun.abc.Context.client": {"tf": 1}, "tanjun.abc.Context.component": {"tf": 1}, "tanjun.abc.Context.command": {"tf": 1}, "tanjun.abc.Context.created_at": {"tf": 1}, "tanjun.abc.Context.events": {"tf": 1}, "tanjun.abc.Context.guild_id": {"tf": 1}, "tanjun.abc.Context.has_responded": {"tf": 1}, "tanjun.abc.Context.is_human": {"tf": 1}, "tanjun.abc.Context.member": {"tf": 1}, "tanjun.abc.Context.server": {"tf": 1}, "tanjun.abc.Context.rest": {"tf": 1}, "tanjun.abc.Context.shards": {"tf": 1}, "tanjun.abc.Context.voice": {"tf": 1}, "tanjun.abc.Context.triggering_name": {"tf": 1}, "tanjun.abc.Context.set_component": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.abc.Context.delete_initial_response": {"tf": 1}, "tanjun.abc.Context.delete_last_response": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.fetch_initial_response": {"tf": 1}, "tanjun.abc.Context.fetch_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageCommand.check_context": {"tf": 1}, "tanjun.abc.BaseSlashCommand.check_context": {"tf": 1}, "tanjun.commands.MessageCommand.check_context": {"tf": 1}, "tanjun.commands.BaseSlashCommand.check_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}}, "df": 38}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.MessageContext.content": {"tf": 1}, "tanjun.abc.MessageContext.set_content": {"tf": 1}, "tanjun.context.MessageContext.content": {"tf": 1}, "tanjun.context.MessageContext.set_content": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}}, "df": 4}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.ConversionError": {"tf": 1}, "tanjun.ConversionError.__init__": {"tf": 1}, "tanjun.ConversionError.errors": {"tf": 1}, "tanjun.ConversionError.parameter": {"tf": 1}, "tanjun.errors.ConversionError": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1}, "tanjun.errors.ConversionError.errors": {"tf": 1}, "tanjun.errors.ConversionError.parameter": {"tf": 1}}, "df": 8}}}}}}}}}, "t": {"docs": {"tanjun.parsing.Parameter.convert": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.parsing.Parameter.converters": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.commands.ConverterSig": {"tf": 1}, "tanjun.parsing.ConverterSig": {"tf": 1}}, "df": 2}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.to_color": {"tf": 1}, "tanjun.conversion.to_color": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.to_colour": {"tf": 1}, "tanjun.conversion.to_colour": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 13, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.schedules.AbstractSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.IntervalSchedule.iteration_count": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.with_check": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.remove_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.check": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.MessageCommand.check_context": {"tf": 1}, "tanjun.Component.add_check": {"tf": 1}, "tanjun.Component.remove_check": {"tf": 1}, "tanjun.Component.with_check": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.abc.ExecutableCommand.add_check": {"tf": 1}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1}, "tanjun.abc.MessageCommand.check_context": {"tf": 1}, "tanjun.abc.BaseSlashCommand.check_context": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.checks.with_check": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.remove_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.check": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.commands.MessageCommand.check_context": {"tf": 1}, "tanjun.commands.PartialCommand.add_check": {"tf": 1}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1}, "tanjun.commands.PartialCommand.with_check": {"tf": 1}, "tanjun.commands.BaseSlashCommand.check_context": {"tf": 1}, "tanjun.components.Component.add_check": {"tf": 1}, "tanjun.components.Component.remove_check": {"tf": 1}, "tanjun.components.Component.with_check": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1}}, "df": 61, "s": {"docs": {"tanjun.with_all_checks": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1}, "tanjun.Client.checks": {"tf": 1}, "tanjun.Component.checks": {"tf": 1}, "tanjun.abc.ExecutableCommand.checks": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.clients.Client.checks": {"tf": 1}, "tanjun.commands.PartialCommand.checks": {"tf": 1}, "tanjun.components.Component.checks": {"tf": 1}, "tanjun.utilities.gather_checks": {"tf": 1}}, "df": 13, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.CheckSig": {"tf": 1}}, "df": 1, "t": {"docs": {"tanjun.abc.CheckSigT": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.to_channel": {"tf": 1}, "tanjun.BucketResource.CHANNEL": {"tf": 1}, "tanjun.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.abc.Context.channel_id": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.context.MessageContext.channel_id": {"tf": 1}, "tanjun.context.SlashContext.channel_id": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.to_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"tf": 1}}, "df": 25, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.cache": {"tf": 1}, "tanjun.abc.Context.cache": {"tf": 1}, "tanjun.abc.Client.cache": {"tf": 1}, "tanjun.clients.Client.cache": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.cache_result": {"tf": 1}}, "df": 28, "d": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"tf": 1}}, "df": 5}, "s": {"docs": {"tanjun.conversion.ToChannel.async_caches": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1}, "tanjun.conversion.ToMember.async_caches": {"tf": 1}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1}, "tanjun.conversion.ToRole.async_caches": {"tf": 1}, "tanjun.conversion.ToUser.async_caches": {"tf": 1}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1}}, "df": 10}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.dependencies.CacheIterator": {"tf": 1}, "tanjun.dependencies.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1}}, "df": 4}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.dependencies.CacheMissError": {"tf": 1}, "tanjun.dependencies.async_cache.CacheMissError": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.dispatch_client_callback": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.MessageCommand.callback": {"tf": 1}, "tanjun.SlashCommand.callback": {"tf": 1}, "tanjun.Component.add_client_callback": {"tf": 1}, "tanjun.Component.remove_client_callback": {"tf": 1}, "tanjun.Component.with_client_callback": {"tf": 1}, "tanjun.LazyConstant.callback": {"tf": 1}, "tanjun.abc.MessageCommand.callback": {"tf": 1}, "tanjun.abc.SlashCommand.callback": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.commands.MessageCommand.callback": {"tf": 1}, "tanjun.commands.SlashCommand.callback": {"tf": 1}, "tanjun.components.Component.add_client_callback": {"tf": 1}, "tanjun.components.Component.remove_client_callback": {"tf": 1}, "tanjun.components.Component.with_client_callback": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.callback": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.callback": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 1}, "tanjun.injecting.Injected.callback": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}, "tanjun.parsing.ParseableProto.callback": {"tf": 1}, "tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}}, "df": 42, "s": {"docs": {"tanjun.Client.get_client_callbacks": {"tf": 1}, "tanjun.Component.get_client_callbacks": {"tf": 1}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1}, "tanjun.components.Component.get_client_callbacks": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.injecting.CallbackSig": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.checks.CallbackReturnT": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.injecting.CallbackDescriptor": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.callback": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.copy": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.utilities.calculate_everyone_permissions": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.context.SlashContext.cancel_defer": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"tanjun.utilities.CastedView": {"tf": 1}, "tanjun.utilities.CastedView.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {}, "df": 0, "x": {"docs": {"tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.on_message_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.clients.Client.on_message_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}}, "df": 10, "d": {"docs": {"tanjun.abc.Context.created_at": {"tf": 1}, "tanjun.context.MessageContext.created_at": {"tf": 1}, "tanjun.context.SlashContext.created_at": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.add_component": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.Component.add_check": {"tf": 1}, "tanjun.Component.add_client_callback": {"tf": 1}, "tanjun.Component.add_command": {"tf": 1}, "tanjun.Component.add_slash_command": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.add_listener": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.add_schedule": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.ExecutableCommand.add_check": {"tf": 1}, "tanjun.abc.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.abc.Component.add_slash_command": {"tf": 1}, "tanjun.abc.Component.add_message_command": {"tf": 1}, "tanjun.abc.Component.add_listener": {"tf": 1}, "tanjun.abc.Client.add_component": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.PartialCommand.add_check": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.components.Component.add_check": {"tf": 1}, "tanjun.components.Component.add_client_callback": {"tf": 1}, "tanjun.components.Component.add_command": {"tf": 1}, "tanjun.components.Component.add_slash_command": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.add_listener": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.add_schedule": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}}, "df": 90, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.with_author_permission_check": {"tf": 1}, "tanjun.abc.Context.author": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.context.MessageContext.author": {"tf": 1}, "tanjun.context.SlashContext.author": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.checks.AuthorPermissionCheck": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}, "o": {"docs": {"tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.message_accepts": {"tf": 1}, "tanjun.Client.set_message_accepts": {"tf": 1}, "tanjun.clients.Client.message_accepts": {"tf": 1}, "tanjun.clients.Client.set_message_accepts": {"tf": 1}}, "df": 4}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}}, "df": 8}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.is_alive": {"tf": 1}, "tanjun.abc.Client.is_alive": {"tf": 1}, "tanjun.clients.Client.is_alive": {"tf": 1}, "tanjun.schedules.AbstractSchedule.is_alive": {"tf": 1}, "tanjun.schedules.IntervalSchedule.is_alive": {"tf": 1}}, "df": 5}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.fetch_rest_application_id": {"tf": 1}}, "df": 11}}}}}}}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.AnyHooks": {"tf": 1}, "tanjun.abc.AnyHooks": {"tf": 1}, "tanjun.hooks.AnyHooks": {"tf": 1}}, "df": 3}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.commands.AnyMessageCommandT": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.parsing.Argument": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}}, "df": 10, "t": {"docs": {"tanjun.conversion.ArgumentT": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.components.AbstractComponentLoader": {"tf": 1}, "tanjun.components.AbstractComponentLoader.load_into_component": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.dependencies.AbstractConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.release": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.dependencies.AbstractCooldownManager": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.dependencies.AbstractOwners": {"tf": 1}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1}}, "df": 4}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.injecting.AbstractDescriptor": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}}, "df": 5}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.injecting.AbstractInjectionContext": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.injection_client": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.parsing.AbstractParser": {"tf": 1}, "tanjun.parsing.AbstractParser.parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.bind_client": {"tf": 1}, "tanjun.parsing.AbstractParser.bind_component": {"tf": 1}, "tanjun.parsing.AbstractParser.copy": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}}, "df": 9}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.schedules.AbstractSchedule": {"tf": 1}, "tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.AbstractSchedule.is_alive": {"tf": 1}, "tanjun.schedules.AbstractSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.AbstractSchedule.copy": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.AbstractSchedule.stop": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"tanjun.conversion.ToChannel.async_caches": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1}, "tanjun.conversion.ToMember.async_caches": {"tf": 1}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1}, "tanjun.conversion.ToRole.async_caches": {"tf": 1}, "tanjun.conversion.ToUser.async_caches": {"tf": 1}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1}}, "df": 10, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}}, "df": 6}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.remove_check": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.remove_component_by_name": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.remove_listener": {"tf": 1}, "tanjun.Client.remove_prefix": {"tf": 1}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.Component.remove_check": {"tf": 1}, "tanjun.Component.remove_client_callback": {"tf": 1}, "tanjun.Component.remove_command": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.remove_listener": {"tf": 1}, "tanjun.Component.remove_schedule": {"tf": 1}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.remove_check": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.components.Component.remove_check": {"tf": 1}, "tanjun.components.Component.remove_client_callback": {"tf": 1}, "tanjun.components.Component.remove_command": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}, "tanjun.components.Component.remove_schedule": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}}, "df": 46, "d": {"docs": {"tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.rest": {"tf": 1}, "tanjun.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.abc.Context.rest": {"tf": 1}, "tanjun.abc.Client.rest": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.rest": {"tf": 1}, "tanjun.clients.Client.fetch_rest_application_id": {"tf": 1}}, "df": 8}, "e": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.LazyConstant.reset": {"tf": 1}, "tanjun.dependencies.LazyConstant.reset": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.reset": {"tf": 1}}, "df": 3}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.Context.has_responded": {"tf": 1}, "tanjun.context.MessageContext.has_responded": {"tf": 1}, "tanjun.context.SlashContext.has_responded": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.delete_initial_response": {"tf": 1}, "tanjun.abc.Context.delete_last_response": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.fetch_initial_response": {"tf": 1}, "tanjun.abc.Context.fetch_last_response": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.delete_initial_response": {"tf": 1}, "tanjun.context.MessageContext.delete_last_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_initial_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_last_response": {"tf": 1}, "tanjun.context.SlashContext.get_response_future": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_initial_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_last_response": {"tf": 1}}, "df": 21, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.context.ResponseTypeT": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.SlashOption.resolve_value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.context.SlashOption.resolve_value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}}, "df": 21, "r": {"docs": {"tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.injecting.AbstractInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.reload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.release": {"tf": 1}}, "df": 5}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}}, "df": 10}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.to_role": {"tf": 1}, "tanjun.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.to_role": {"tf": 1}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1}}, "df": 13}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.Client.message_accepts": {"tf": 1}, "tanjun.Client.message_hooks": {"tf": 1}, "tanjun.Client.set_message_accepts": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.iter_message_commands": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Client.on_message_create_event": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.Component.message_commands": {"tf": 1}, "tanjun.Component.message_hooks": {"tf": 1}, "tanjun.Component.set_message_hooks": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.with_message_command": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.CommandError.message": {"tf": 1}, "tanjun.MissingDependencyError.message": {"tf": 1}, "tanjun.ParserError.message": {"tf": 1}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.MessageContext.message": {"tf": 1}, "tanjun.abc.Component.message_commands": {"tf": 1}, "tanjun.abc.Component.add_message_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.with_message_command": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Client.iter_message_commands": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.message_accepts": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_accepts": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.iter_message_commands": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.clients.Client.on_message_create_event": {"tf": 1}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.components.Component.message_commands": {"tf": 1}, "tanjun.components.Component.message_hooks": {"tf": 1}, "tanjun.components.Component.set_message_hooks": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.with_message_command": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.context.MessageContext.message": {"tf": 1}, "tanjun.errors.CommandError.message": {"tf": 1}, "tanjun.errors.MissingDependencyError.message": {"tf": 1}, "tanjun.errors.ParserError.message": {"tf": 1}}, "df": 55, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"tanjun.MessageAcceptsEnum": {"tf": 1}, "tanjun.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}}, "df": 12}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.MessageCommand": {"tf": 1}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.MessageCommand.callback": {"tf": 1}, "tanjun.MessageCommand.names": {"tf": 1}, "tanjun.MessageCommand.needs_injector": {"tf": 1}, "tanjun.MessageCommand.parent": {"tf": 1}, "tanjun.MessageCommand.parser": {"tf": 1}, "tanjun.MessageCommand.bind_client": {"tf": 1}, "tanjun.MessageCommand.bind_component": {"tf": 1}, "tanjun.MessageCommand.copy": {"tf": 1}, "tanjun.MessageCommand.set_parent": {"tf": 1}, "tanjun.MessageCommand.set_parser": {"tf": 1}, "tanjun.MessageCommand.check_context": {"tf": 1}, "tanjun.MessageCommand.execute": {"tf": 1}, "tanjun.MessageCommand.load_into_component": {"tf": 1}, "tanjun.abc.MessageCommand": {"tf": 1}, "tanjun.abc.MessageCommand.callback": {"tf": 1}, "tanjun.abc.MessageCommand.names": {"tf": 1}, "tanjun.abc.MessageCommand.parent": {"tf": 1}, "tanjun.abc.MessageCommand.set_parent": {"tf": 1}, "tanjun.abc.MessageCommand.copy": {"tf": 1}, "tanjun.abc.MessageCommand.check_context": {"tf": 1}, "tanjun.abc.MessageCommand.execute": {"tf": 1}, "tanjun.commands.MessageCommand": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.MessageCommand.callback": {"tf": 1}, "tanjun.commands.MessageCommand.names": {"tf": 1}, "tanjun.commands.MessageCommand.needs_injector": {"tf": 1}, "tanjun.commands.MessageCommand.parent": {"tf": 1}, "tanjun.commands.MessageCommand.parser": {"tf": 1}, "tanjun.commands.MessageCommand.bind_client": {"tf": 1}, "tanjun.commands.MessageCommand.bind_component": {"tf": 1}, "tanjun.commands.MessageCommand.copy": {"tf": 1}, "tanjun.commands.MessageCommand.set_parent": {"tf": 1}, "tanjun.commands.MessageCommand.set_parser": {"tf": 1}, "tanjun.commands.MessageCommand.check_context": {"tf": 1}, "tanjun.commands.MessageCommand.execute": {"tf": 1}, "tanjun.commands.MessageCommand.load_into_component": {"tf": 1}}, "df": 38, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.MessageCommandGroup": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.MessageCommandGroup.commands": {"tf": 1}, "tanjun.MessageCommandGroup.is_strict": {"tf": 1}, "tanjun.MessageCommandGroup.copy": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.MessageCommandGroup.bind_client": {"tf": 1}, "tanjun.MessageCommandGroup.bind_component": {"tf": 1}, "tanjun.MessageCommandGroup.find_command": {"tf": 1}, "tanjun.MessageCommandGroup.execute": {"tf": 1}, "tanjun.abc.MessageCommandGroup": {"tf": 1}, "tanjun.abc.MessageCommandGroup.commands": {"tf": 1}, "tanjun.abc.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.MessageCommandGroup.commands": {"tf": 1}, "tanjun.commands.MessageCommandGroup.is_strict": {"tf": 1}, "tanjun.commands.MessageCommandGroup.copy": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.bind_client": {"tf": 1}, "tanjun.commands.MessageCommandGroup.bind_component": {"tf": 1}, "tanjun.commands.MessageCommandGroup.find_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.execute": {"tf": 1}}, "df": 29}}}}}, "t": {"docs": {"tanjun.abc.MessageCommandT": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.MessageContext": {"tf": 1}, "tanjun.abc.MessageContext.command": {"tf": 1}, "tanjun.abc.MessageContext.content": {"tf": 1}, "tanjun.abc.MessageContext.message": {"tf": 1}, "tanjun.abc.MessageContext.shard": {"tf": 1}, "tanjun.abc.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.abc.MessageContext.triggering_name": {"tf": 1}, "tanjun.abc.MessageContext.set_command": {"tf": 1}, "tanjun.abc.MessageContext.set_content": {"tf": 1}, "tanjun.abc.MessageContext.set_triggering_name": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext": {"tf": 1}, "tanjun.context.MessageContext.__init__": {"tf": 1}, "tanjun.context.MessageContext.author": {"tf": 1}, "tanjun.context.MessageContext.channel_id": {"tf": 1}, "tanjun.context.MessageContext.command": {"tf": 1}, "tanjun.context.MessageContext.content": {"tf": 1}, "tanjun.context.MessageContext.created_at": {"tf": 1}, "tanjun.context.MessageContext.guild_id": {"tf": 1}, "tanjun.context.MessageContext.has_responded": {"tf": 1}, "tanjun.context.MessageContext.is_human": {"tf": 1}, "tanjun.context.MessageContext.member": {"tf": 1}, "tanjun.context.MessageContext.message": {"tf": 1}, "tanjun.context.MessageContext.triggering_name": {"tf": 1}, "tanjun.context.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.context.MessageContext.shard": {"tf": 1}, "tanjun.context.MessageContext.set_command": {"tf": 1}, "tanjun.context.MessageContext.set_content": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_name": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_prefix": {"tf": 1}, "tanjun.context.MessageContext.delete_initial_response": {"tf": 1}, "tanjun.context.MessageContext.delete_last_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_initial_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}}, "df": 37}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.MessageHooks": {"tf": 1}, "tanjun.abc.MessageHooks": {"tf": 1}, "tanjun.hooks.MessageHooks": {"tf": 1}}, "df": 3}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"tanjun.Client.metadata": {"tf": 1}, "tanjun.Component.metadata": {"tf": 1}, "tanjun.to_invite_with_metadata": {"tf": 1}, "tanjun.abc.ExecutableCommand.metadata": {"tf": 1}, "tanjun.abc.Component.metadata": {"tf": 1}, "tanjun.abc.Client.metadata": {"tf": 1}, "tanjun.clients.Client.metadata": {"tf": 1}, "tanjun.commands.PartialCommand.metadata": {"tf": 1}, "tanjun.components.Component.metadata": {"tf": 1}, "tanjun.conversion.to_invite_with_metadata": {"tf": 1}}, "df": 10}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.MetaEventSig": {"tf": 1}}, "df": 1, "t": {"docs": {"tanjun.abc.MetaEventSigT": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.to_member": {"tf": 1}, "tanjun.BucketResource.MEMBER": {"tf": 1}, "tanjun.abc.Context.member": {"tf": 1}, "tanjun.abc.SlashContext.member": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.context.MessageContext.member": {"tf": 1}, "tanjun.context.SlashContext.member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.conversion.to_member": {"tf": 1}, "tanjun.dependencies.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.MEMBER": {"tf": 1}}, "df": 15}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1}}, "df": 6}}}}}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Component.make_loader": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}}, "df": 4, "r": {"docs": {"tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}}, "df": 4}}}, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.MaybeAwaitableT": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.abc.SlashContext.mark_not_found": {"tf": 1}, "tanjun.context.SlashContext.mark_not_found": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}}, "df": 9}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.MissingDependencyError": {"tf": 1}, "tanjun.MissingDependencyError.__init__": {"tf": 1}, "tanjun.MissingDependencyError.message": {"tf": 1}, "tanjun.errors.MissingDependencyError": {"tf": 1}, "tanjun.errors.MissingDependencyError.__init__": {"tf": 1}, "tanjun.errors.MissingDependencyError.message": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.parsing.Parameter.is_multi": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 5}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.SlashContext.mark_not_found": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.context.SlashContext.mark_not_found": {"tf": 1}}, "df": 10}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.fetch_initial_response": {"tf": 1}, "tanjun.abc.Context.fetch_last_response": {"tf": 1}, "tanjun.clients.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.context.MessageContext.fetch_initial_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_last_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_initial_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_last_response": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 14}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.MessageCommandGroup.find_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.find_command": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.FailedCheck": {"tf": 1}, "tanjun.errors.FailedCheck": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.context.SlashContext.get_response_future": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.Client.slash_hooks": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.Client.iter_slash_commands": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.Component.slash_commands": {"tf": 1}, "tanjun.Component.slash_hooks": {"tf": 1}, "tanjun.Component.set_slash_hooks": {"tf": 1}, "tanjun.Component.add_slash_command": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.with_slash_command": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.Component.slash_commands": {"tf": 1}, "tanjun.abc.Component.add_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.with_slash_command": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.components.Component.slash_commands": {"tf": 1}, "tanjun.components.Component.slash_hooks": {"tf": 1}, "tanjun.components.Component.set_slash_hooks": {"tf": 1}, "tanjun.components.Component.add_slash_command": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.with_slash_command": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}}, "df": 56, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.SlashCommand": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.callback": {"tf": 1}, "tanjun.SlashCommand.needs_injector": {"tf": 1}, "tanjun.SlashCommand.bind_client": {"tf": 1}, "tanjun.SlashCommand.build": {"tf": 1}, "tanjun.SlashCommand.load_into_component": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommand.execute": {"tf": 1}, "tanjun.SlashCommand.copy": {"tf": 1}, "tanjun.abc.SlashCommand": {"tf": 1}, "tanjun.abc.SlashCommand.callback": {"tf": 1}, "tanjun.commands.SlashCommand": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.callback": {"tf": 1}, "tanjun.commands.SlashCommand.needs_injector": {"tf": 1}, "tanjun.commands.SlashCommand.bind_client": {"tf": 1}, "tanjun.commands.SlashCommand.build": {"tf": 1}, "tanjun.commands.SlashCommand.load_into_component": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommand.execute": {"tf": 1}, "tanjun.commands.SlashCommand.copy": {"tf": 1}}, "df": 38, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.SlashCommandGroup": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.commands": {"tf": 1}, "tanjun.SlashCommandGroup.build": {"tf": 1}, "tanjun.SlashCommandGroup.copy": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.SlashCommandGroup.execute": {"tf": 1}, "tanjun.abc.SlashCommandGroup": {"tf": 1}, "tanjun.abc.SlashCommandGroup.commands": {"tf": 1}, "tanjun.abc.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.commands": {"tf": 1}, "tanjun.commands.SlashCommandGroup.build": {"tf": 1}, "tanjun.commands.SlashCommandGroup.copy": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.execute": {"tf": 1}}, "df": 23}}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.SlashContext": {"tf": 1}, "tanjun.abc.SlashContext.command": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.expires_at": {"tf": 1}, "tanjun.abc.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.abc.SlashContext.interaction": {"tf": 1}, "tanjun.abc.SlashContext.member": {"tf": 1}, "tanjun.abc.SlashContext.options": {"tf": 1}, "tanjun.abc.SlashContext.set_command": {"tf": 1}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.abc.SlashContext.mark_not_found": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext": {"tf": 1}, "tanjun.context.SlashContext.__init__": {"tf": 1}, "tanjun.context.SlashContext.author": {"tf": 1}, "tanjun.context.SlashContext.channel_id": {"tf": 1}, "tanjun.context.SlashContext.client": {"tf": 1}, "tanjun.context.SlashContext.command": {"tf": 1}, "tanjun.context.SlashContext.created_at": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.expires_at": {"tf": 1}, "tanjun.context.SlashContext.guild_id": {"tf": 1}, "tanjun.context.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.context.SlashContext.has_responded": {"tf": 1}, "tanjun.context.SlashContext.is_human": {"tf": 1}, "tanjun.context.SlashContext.member": {"tf": 1}, "tanjun.context.SlashContext.triggering_name": {"tf": 1}, "tanjun.context.SlashContext.interaction": {"tf": 1}, "tanjun.context.SlashContext.options": {"tf": 1}, "tanjun.context.SlashContext.cancel_defer": {"tf": 1}, "tanjun.context.SlashContext.get_response_future": {"tf": 1}, "tanjun.context.SlashContext.mark_not_found": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.context.SlashContext.set_command": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.context.SlashContext.defer": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_initial_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 47}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.SlashHooks": {"tf": 1}, "tanjun.abc.SlashHooks": {"tf": 1}, "tanjun.hooks.SlashHooks": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.abc.SlashOption": {"tf": 1}, "tanjun.abc.SlashOption.name": {"tf": 1}, "tanjun.abc.SlashOption.type": {"tf": 1}, "tanjun.abc.SlashOption.value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.context.SlashOption": {"tf": 1}, "tanjun.context.SlashOption.__init__": {"tf": 1}, "tanjun.context.SlashOption.name": {"tf": 1}, "tanjun.context.SlashOption.type": {"tf": 1}, "tanjun.context.SlashOption.value": {"tf": 1}, "tanjun.context.SlashOption.resolve_value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}}, "df": 21}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTED": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTING": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.to_voice_state": {"tf": 1}, "tanjun.conversion.to_voice_state": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.dependencies.set_standard_dependencies": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.MessageCommandGroup.is_strict": {"tf": 1}, "tanjun.commands.MessageCommandGroup.is_strict": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.schedules.AbstractSchedule.stop": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.stop": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}}, "df": 4}}}, "f": {"docs": {}, "df": 0, "w": {"docs": {"tanjun.with_sfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.checks.SfwCheck": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.SfCache": {"tf": 1}, "tanjun.dependencies.async_cache.SfCache": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.dependencies.SfChannelBound": {"tf": 1}, "tanjun.dependencies.async_cache.SfChannelBound": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.dependencies.SfGuildBound": {"tf": 1}, "tanjun.dependencies.async_cache.SfGuildBound": {"tf": 1}}, "df": 2}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.server": {"tf": 1}, "tanjun.abc.Context.server": {"tf": 1}, "tanjun.abc.Client.server": {"tf": 1}, "tanjun.clients.Client.server": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {"tanjun.Client.set_global_commands": {"tf": 1}, "tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.Client.set_message_accepts": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.MessageCommand.set_parent": {"tf": 1}, "tanjun.MessageCommand.set_parser": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.Component.set_slash_hooks": {"tf": 1}, "tanjun.Component.set_message_hooks": {"tf": 1}, "tanjun.Component.set_hooks": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.LazyConstant.set_value": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.abc.Context.set_component": {"tf": 1}, "tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1}, "tanjun.abc.MessageCommand.set_parent": {"tf": 1}, "tanjun.abc.MessageContext.set_command": {"tf": 1}, "tanjun.abc.MessageContext.set_content": {"tf": 1}, "tanjun.abc.MessageContext.set_triggering_name": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_parent": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.abc.SlashContext.set_command": {"tf": 1}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.set_global_commands": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.set_message_accepts": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.commands.MessageCommand.set_parent": {"tf": 1}, "tanjun.commands.MessageCommand.set_parser": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_parent": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.set_slash_hooks": {"tf": 1}, "tanjun.components.Component.set_message_hooks": {"tf": 1}, "tanjun.components.Component.set_hooks": {"tf": 1}, "tanjun.context.MessageContext.set_command": {"tf": 1}, "tanjun.context.MessageContext.set_content": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_name": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_prefix": {"tf": 1}, "tanjun.context.SlashContext.set_command": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.dependencies.set_standard_dependencies": {"tf": 1}, "tanjun.dependencies.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.ParseableProto.set_parser": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}}, "df": 88}, "l": {"docs": {}, "df": 0, "f": {"docs": {"tanjun.as_self_injecting": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.injecting.SelfInjectingCallback": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.conversion.search_snowflakes": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}}, "df": 5}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.MessageContext.shard": {"tf": 1}, "tanjun.context.MessageContext.shard": {"tf": 1}}, "df": 2, "s": {"docs": {"tanjun.Client.shards": {"tf": 1}, "tanjun.abc.Context.shards": {"tf": 1}, "tanjun.abc.Client.shards": {"tf": 1}, "tanjun.clients.Client.shards": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.ShlexParser": {"tf": 1}, "tanjun.ShlexParser.__init__": {"tf": 1}, "tanjun.ShlexParser.needs_injector": {"tf": 1}, "tanjun.ShlexParser.parameters": {"tf": 1}, "tanjun.ShlexParser.copy": {"tf": 1}, "tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.ShlexParser.bind_client": {"tf": 1}, "tanjun.ShlexParser.bind_component": {"tf": 1}, "tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.parsing.ShlexParser": {"tf": 1}, "tanjun.parsing.ShlexParser.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.needs_injector": {"tf": 1}, "tanjun.parsing.ShlexParser.parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.copy": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.bind_client": {"tf": 1}, "tanjun.parsing.ShlexParser.bind_component": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}}, "df": 26}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Component.add_schedule": {"tf": 1}, "tanjun.Component.remove_schedule": {"tf": 1}, "tanjun.Component.with_schedule": {"tf": 1}, "tanjun.components.Component.add_schedule": {"tf": 1}, "tanjun.components.Component.remove_schedule": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1}}, "df": 6, "s": {"docs": {"tanjun.Component.schedules": {"tf": 1}, "tanjun.components.Component.schedules": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.to_snowflake": {"tf": 1}, "tanjun.conversion.parse_snowflake": {"tf": 1}, "tanjun.conversion.to_snowflake": {"tf": 1}}, "df": 3, "s": {"docs": {"tanjun.conversion.search_snowflakes": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.Hooks.trigger_success": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.Hooks.trigger_success": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.hooks.Hooks.trigger_success": {"tf": 1}}, "df": 11}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "m": {"docs": {"tanjun.with_dm_check": {"tf": 1}, "tanjun.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.utilities.DM_PERMISSIONS": {"tf": 1}}, "df": 5, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.checks.DmCheck": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.parsing.Parameter.default": {"tf": 1}, "tanjun.parsing.UNDEFINED_DEFAULT": {"tf": 1}}, "df": 9, "s": {"docs": {"tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}}, "df": 10}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.context.SlashContext.cancel_defer": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.context.SlashContext.defer": {"tf": 1}}, "df": 6, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.context.SlashContext.has_been_deferred": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 9}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.delete_initial_response": {"tf": 1}, "tanjun.abc.Context.delete_last_response": {"tf": 1}, "tanjun.context.MessageContext.delete_initial_response": {"tf": 1}, "tanjun.context.MessageContext.delete_last_response": {"tf": 1}, "tanjun.context.SlashContext.delete_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_last_response": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.commands.BaseSlashCommand.description": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.dependencies.set_standard_dependencies": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}}, "df": 5}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.Client.dispatch_client_callback": {"tf": 1}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}}, "df": 6}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.to_datetime": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1}, "tanjun.conversion.to_datetime": {"tf": 1}}, "df": 3}}}}}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.with_guild_check": {"tf": 1}, "tanjun.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.to_guild": {"tf": 1}, "tanjun.BucketResource.GUILD": {"tf": 1}, "tanjun.abc.Context.guild_id": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.context.MessageContext.guild_id": {"tf": 1}, "tanjun.context.SlashContext.guild_id": {"tf": 1}, "tanjun.conversion.to_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.BucketResource.GUILD": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GUILD": {"tf": 1}}, "df": 18, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.checks.GuildCheck": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.utilities.gather_checks": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.prefix_getter": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.Client.prefix_getter": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}}, "df": 6}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.Client.set_global_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.BucketResource.GLOBAL": {"tf": 1}, "tanjun.abc.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.set_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.dependencies.BucketResource.GLOBAL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GLOBAL": {"tf": 1}}, "df": 10}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.as_message_command_group": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.with_greedy_argument": {"tf": 1}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "w": {"docs": {"tanjun.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.checks.NsfwCheck": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.get_component_by_name": {"tf": 1}, "tanjun.Client.remove_component_by_name": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Component.name": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Context.triggering_name": {"tf": 1}, "tanjun.abc.MessageContext.triggering_name": {"tf": 1}, "tanjun.abc.MessageContext.set_triggering_name": {"tf": 1}, "tanjun.abc.BaseSlashCommand.name": {"tf": 1}, "tanjun.abc.SlashOption.name": {"tf": 1}, "tanjun.abc.Component.name": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Client.get_component_by_name": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.get_component_by_name": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.commands.BaseSlashCommand.name": {"tf": 1}, "tanjun.components.Component.name": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.context.MessageContext.triggering_name": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_name": {"tf": 1}, "tanjun.context.SlashContext.triggering_name": {"tf": 1}, "tanjun.context.SlashOption.name": {"tf": 1}}, "df": 31, "s": {"docs": {"tanjun.MessageCommand.names": {"tf": 1}, "tanjun.abc.MessageCommand.names": {"tf": 1}, "tanjun.commands.MessageCommand.names": {"tf": 1}, "tanjun.parsing.Option.names": {"tf": 1}, "tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 5}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.NONE": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.NotEnoughArgumentsError": {"tf": 1}, "tanjun.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.NotEnoughArgumentsError.parameter": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.parameter": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.MessageCommand.needs_injector": {"tf": 1}, "tanjun.SlashCommand.needs_injector": {"tf": 1}, "tanjun.Component.needs_injector": {"tf": 1}, "tanjun.ShlexParser.needs_injector": {"tf": 1}, "tanjun.commands.MessageCommand.needs_injector": {"tf": 1}, "tanjun.commands.PartialCommand.needs_injector": {"tf": 1}, "tanjun.commands.SlashCommand.needs_injector": {"tf": 1}, "tanjun.components.Component.needs_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.needs_injector": {"tf": 1}, "tanjun.parsing.Parameter.needs_injector": {"tf": 1}, "tanjun.parsing.ShlexParser.needs_injector": {"tf": 1}}, "df": 13}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.with_owner_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.checks.OwnerCheck": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1}}, "df": 6, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1}}, "df": 4}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.checks.OwnPermissionCheck": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.open": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.Component.open": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.abc.Component.open": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.components.Component.open": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.open": {"tf": 1}}, "df": 15}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.parsing.Option": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.Option.empty_value": {"tf": 1}, "tanjun.parsing.Option.names": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 46, "s": {"docs": {"tanjun.abc.SlashContext.options": {"tf": 1}, "tanjun.context.SlashContext.options": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.components.OnCallbackSig": {"tf": 1}}, "df": 1, "t": {"docs": {"tanjun.components.OnCallbackSigT": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}}, "df": 3}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}}, "df": 4, "s": {"docs": {"tanjun.utilities.ALL_PERMISSIONS": {"tf": 1}, "tanjun.utilities.DM_PERMISSIONS": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 6}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.trigger_pre_execution": {"tf": 1}}, "df": 11, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"tanjun.Client.prefix_getter": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.remove_prefix": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.abc.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.clients.Client.prefix_getter": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.context.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_prefix": {"tf": 1}, "tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.prefixes": {"tf": 1}, "tanjun.abc.Client.prefixes": {"tf": 1}, "tanjun.clients.Client.prefixes": {"tf": 1}}, "df": 3}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.clients.PrefixGetterSig": {"tf": 1}}, "df": 1, "t": {"docs": {"tanjun.clients.PrefixGetterSigT": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.to_presence": {"tf": 1}, "tanjun.conversion.to_presence": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.MessageCommand.parent": {"tf": 1}, "tanjun.MessageCommand.set_parent": {"tf": 1}, "tanjun.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.abc.MessageCommand.parent": {"tf": 1}, "tanjun.abc.MessageCommand.set_parent": {"tf": 1}, "tanjun.abc.BaseSlashCommand.parent": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_parent": {"tf": 1}, "tanjun.commands.MessageCommand.parent": {"tf": 1}, "tanjun.commands.MessageCommand.set_parent": {"tf": 1}, "tanjun.commands.BaseSlashCommand.parent": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_parent": {"tf": 1}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"tf": 1}}, "df": 13}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.conversion.parse_snowflake": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}}, "df": 8, "r": {"docs": {"tanjun.MessageCommand.parser": {"tf": 1}, "tanjun.MessageCommand.set_parser": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.with_parser": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.commands.MessageCommand.parser": {"tf": 1}, "tanjun.commands.MessageCommand.set_parser": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.parsing.ParseableProto.parser": {"tf": 1}, "tanjun.parsing.ParseableProto.set_parser": {"tf": 1}, "tanjun.parsing.with_parser": {"tf": 1}}, "df": 16, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.ParserError": {"tf": 1}, "tanjun.ParserError.__init__": {"tf": 1}, "tanjun.ParserError.message": {"tf": 1}, "tanjun.ParserError.parameter": {"tf": 1}, "tanjun.errors.ParserError": {"tf": 1}, "tanjun.errors.ParserError.__init__": {"tf": 1}, "tanjun.errors.ParserError.message": {"tf": 1}, "tanjun.errors.ParserError.parameter": {"tf": 1}}, "df": 8}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"tanjun.parsing.ParseableProto": {"tf": 1}, "tanjun.parsing.ParseableProto.__init__": {"tf": 1}, "tanjun.parsing.ParseableProto.callback": {"tf": 1}, "tanjun.parsing.ParseableProto.parser": {"tf": 1}, "tanjun.parsing.ParseableProto.set_parser": {"tf": 1}}, "df": 5, "t": {"docs": {"tanjun.parsing.ParseableProtoT": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.ConversionError.parameter": {"tf": 1}, "tanjun.NotEnoughArgumentsError.parameter": {"tf": 1}, "tanjun.TooManyArgumentsError.parameter": {"tf": 1}, "tanjun.ParserError.parameter": {"tf": 1}, "tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.errors.ConversionError.parameter": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.parameter": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.parameter": {"tf": 1}, "tanjun.errors.ParserError.parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.Parameter": {"tf": 1}, "tanjun.parsing.Parameter.__init__": {"tf": 1}, "tanjun.parsing.Parameter.converters": {"tf": 1}, "tanjun.parsing.Parameter.default": {"tf": 1}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1}, "tanjun.parsing.Parameter.is_multi": {"tf": 1}, "tanjun.parsing.Parameter.key": {"tf": 1}, "tanjun.parsing.Parameter.needs_injector": {"tf": 1}, "tanjun.parsing.Parameter.bind_client": {"tf": 1}, "tanjun.parsing.Parameter.bind_component": {"tf": 1}, "tanjun.parsing.Parameter.convert": {"tf": 1}, "tanjun.parsing.Parameter.copy": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}}, "df": 26, "s": {"docs": {"tanjun.ShlexParser.parameters": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}}, "df": 6}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.commands.PartialCommand": {"tf": 1}, "tanjun.commands.PartialCommand.checks": {"tf": 1}, "tanjun.commands.PartialCommand.component": {"tf": 1}, "tanjun.commands.PartialCommand.hooks": {"tf": 1}, "tanjun.commands.PartialCommand.metadata": {"tf": 1}, "tanjun.commands.PartialCommand.needs_injector": {"tf": 1}, "tanjun.commands.PartialCommand.copy": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1}, "tanjun.commands.PartialCommand.add_check": {"tf": 1}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1}, "tanjun.commands.PartialCommand.with_check": {"tf": 1}, "tanjun.commands.PartialCommand.bind_client": {"tf": 1}, "tanjun.commands.PartialCommand.bind_component": {"tf": 1}}, "df": 13}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.trigger_post_execution": {"tf": 1}}, "df": 11}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.MessageCommand.load_into_component": {"tf": 1}, "tanjun.SlashCommand.load_into_component": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.abc.ClientLoader.load": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.commands.MessageCommand.load_into_component": {"tf": 1}, "tanjun.commands.BaseSlashCommand.load_into_component": {"tf": 1}, "tanjun.commands.SlashCommand.load_into_component": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.AbstractComponentLoader.load_into_component": {"tf": 1}, "tanjun.schedules.IntervalSchedule.load_into_component": {"tf": 1}}, "df": 13, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.as_loader": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.Client.loop": {"tf": 1}, "tanjun.Component.loop": {"tf": 1}, "tanjun.abc.Component.loop": {"tf": 1}, "tanjun.abc.Client.loop": {"tf": 1}, "tanjun.clients.Client.loop": {"tf": 1}, "tanjun.components.Component.loop": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.remove_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Component.add_listener": {"tf": 1}, "tanjun.Component.remove_listener": {"tf": 1}, "tanjun.Component.with_listener": {"tf": 1}, "tanjun.abc.Component.add_listener": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Component.with_listener": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.remove_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.components.Component.add_listener": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}, "tanjun.components.Component.with_listener": {"tf": 1}}, "df": 18, "s": {"docs": {"tanjun.Client.listeners": {"tf": 1}, "tanjun.Component.listeners": {"tf": 1}, "tanjun.abc.Component.listeners": {"tf": 1}, "tanjun.abc.Client.listeners": {"tf": 1}, "tanjun.clients.Client.listeners": {"tf": 1}, "tanjun.components.Component.listeners": {"tf": 1}}, "df": 6}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.ListenerCallbackSig": {"tf": 1}}, "df": 1, "t": {"docs": {"tanjun.abc.ListenerCallbackSigT": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {"tanjun.inject_lc": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}}, "df": 5}, "a": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.LazyConstant": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.LazyConstant.callback": {"tf": 1}, "tanjun.LazyConstant.get_value": {"tf": 1}, "tanjun.LazyConstant.reset": {"tf": 1}, "tanjun.LazyConstant.set_value": {"tf": 1}, "tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.LazyConstant": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.LazyConstant.reset": {"tf": 1}, "tanjun.dependencies.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.data.LazyConstant": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.reset": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}}, "df": 21}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.Context.delete_last_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.fetch_last_response": {"tf": 1}, "tanjun.context.MessageContext.delete_last_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_last_response": {"tf": 1}, "tanjun.context.SlashContext.delete_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_last_response": {"tf": 1}}, "df": 9}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.dependencies.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.unload_modules": {"tf": 1}, "tanjun.abc.ClientLoader.unload": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.as_unloader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}}, "df": 2}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Component.unbind_client": {"tf": 1}, "tanjun.abc.Component.unbind_client": {"tf": 1}, "tanjun.components.Component.unbind_client": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.injecting.Undefined": {"tf": 1}, "tanjun.injecting.Undefined.__init__": {"tf": 1}, "tanjun.injecting.UNDEFINED": {"tf": 1}, "tanjun.parsing.UNDEFINED_DEFAULT": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.injecting.UndefinedOr": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.parsing.UndefinedDefaultT": {"tf": 1}, "tanjun.parsing.UndefinedDefaultT.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.to_user": {"tf": 1}, "tanjun.BucketResource.USER": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}, "tanjun.conversion.to_user": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.BucketResource.USER": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.USER": {"tf": 1}}, "df": 15}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.__init__": {"tf": 1}, "tanjun.InMemoryCooldownManager.__init__": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.CommandError.__init__": {"tf": 1}, "tanjun.ConversionError.__init__": {"tf": 1}, "tanjun.MissingDependencyError.__init__": {"tf": 1}, "tanjun.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.ParserError.__init__": {"tf": 1}, "tanjun.Hooks.__init__": {"tf": 1}, "tanjun.ShlexParser.__init__": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.context.MessageContext.__init__": {"tf": 1}, "tanjun.context.SlashContext.__init__": {"tf": 1}, "tanjun.context.SlashOption.__init__": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.conversion.ToEmoji.__init__": {"tf": 1}, "tanjun.conversion.ToGuild.__init__": {"tf": 1}, "tanjun.conversion.ToInvite.__init__": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.__init__": {"tf": 1}, "tanjun.conversion.ToMember.__init__": {"tf": 1}, "tanjun.conversion.ToPresence.__init__": {"tf": 1}, "tanjun.conversion.ToRole.__init__": {"tf": 1}, "tanjun.conversion.ToUser.__init__": {"tf": 1}, "tanjun.conversion.ToVoiceState.__init__": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.__init__": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1}, "tanjun.errors.MissingDependencyError.__init__": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.errors.ParserError.__init__": {"tf": 1}, "tanjun.hooks.Hooks.__init__": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 1}, "tanjun.injecting.Undefined.__init__": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.__init__": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor.__init__": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.Parameter.__init__": {"tf": 1}, "tanjun.parsing.ParseableProto.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.__init__": {"tf": 1}, "tanjun.parsing.UndefinedDefaultT.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.utilities.CastedView.__init__": {"tf": 1}}, "df": 79, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.abc.Context.delete_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.fetch_initial_response": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.delete_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_initial_response": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_initial_response": {"tf": 1}}, "df": 11}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.inject_lc": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}}, "df": 8, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.MessageCommand.needs_injector": {"tf": 1}, "tanjun.SlashCommand.needs_injector": {"tf": 1}, "tanjun.Component.needs_injector": {"tf": 1}, "tanjun.ShlexParser.needs_injector": {"tf": 1}, "tanjun.commands.MessageCommand.needs_injector": {"tf": 1}, "tanjun.commands.PartialCommand.needs_injector": {"tf": 1}, "tanjun.commands.SlashCommand.needs_injector": {"tf": 1}, "tanjun.components.Component.needs_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.parsing.Parameter.needs_injector": {"tf": 1}, "tanjun.parsing.ShlexParser.needs_injector": {"tf": 1}}, "df": 16, "s": {"docs": {"tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.injecting.InjectorClient": {"tf": 1}, "tanjun.injecting.InjectorClient.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}}, "df": 8}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.as_self_injecting": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.injecting.AbstractInjectionContext.injection_client": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.injection_client": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.injecting.injected": {"tf": 1}, "tanjun.injecting.Injected": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.Injected.callback": {"tf": 1}, "tanjun.injecting.Injected.type": {"tf": 1}}, "df": 5}}}}}}, "t": {"docs": {"tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.Client.on_interaction_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.abc.SlashContext.interaction": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.context.SlashContext.interaction": {"tf": 1}}, "df": 11}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.as_interval": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.interval": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.schedules.IntervalSchedule": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.is_alive": {"tf": 1}, "tanjun.schedules.IntervalSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.IntervalSchedule.copy": {"tf": 1}, "tanjun.schedules.IntervalSchedule.load_into_component": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.stop": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}}, "df": 16}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}}, "df": 10}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.to_invite": {"tf": 1}, "tanjun.to_invite_with_metadata": {"tf": 1}, "tanjun.conversion.to_invite": {"tf": 1}, "tanjun.conversion.to_invite_with_metadata": {"tf": 1}}, "df": 4}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.__init__": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}}, "df": 27}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.InMemoryCooldownManager.__init__": {"tf": 1}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}}, "df": 27}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1}}, "df": 5}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.iter_commands": {"tf": 1}, "tanjun.Client.iter_message_commands": {"tf": 1}, "tanjun.Client.iter_slash_commands": {"tf": 1}, "tanjun.abc.Client.iter_commands": {"tf": 1}, "tanjun.abc.Client.iter_message_commands": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1}, "tanjun.clients.Client.iter_commands": {"tf": 1}, "tanjun.clients.Client.iter_message_commands": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}}, "df": 19, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.schedules.AbstractSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.IntervalSchedule.iteration_count": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {"tanjun.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.abc.Context.channel_id": {"tf": 1}, "tanjun.abc.Context.guild_id": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.clients.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.context.MessageContext.channel_id": {"tf": 1}, "tanjun.context.MessageContext.guild_id": {"tf": 1}, "tanjun.context.SlashContext.channel_id": {"tf": 1}, "tanjun.context.SlashContext.guild_id": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}}, "df": 14, "s": {"docs": {"tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}}, "df": 4}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}}, "df": 4}, "o": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.to_bool": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.conversion.to_bool": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.MessageCommand.bind_client": {"tf": 1}, "tanjun.MessageCommand.bind_component": {"tf": 1}, "tanjun.MessageCommandGroup.bind_client": {"tf": 1}, "tanjun.MessageCommandGroup.bind_component": {"tf": 1}, "tanjun.SlashCommand.bind_client": {"tf": 1}, "tanjun.Component.bind_client": {"tf": 1}, "tanjun.ShlexParser.bind_client": {"tf": 1}, "tanjun.ShlexParser.bind_component": {"tf": 1}, "tanjun.abc.ExecutableCommand.bind_client": {"tf": 1}, "tanjun.abc.ExecutableCommand.bind_component": {"tf": 1}, "tanjun.abc.Component.bind_client": {"tf": 1}, "tanjun.commands.MessageCommand.bind_client": {"tf": 1}, "tanjun.commands.MessageCommand.bind_component": {"tf": 1}, "tanjun.commands.MessageCommandGroup.bind_client": {"tf": 1}, "tanjun.commands.MessageCommandGroup.bind_component": {"tf": 1}, "tanjun.commands.PartialCommand.bind_client": {"tf": 1}, "tanjun.commands.PartialCommand.bind_component": {"tf": 1}, "tanjun.commands.SlashCommand.bind_client": {"tf": 1}, "tanjun.components.Component.bind_client": {"tf": 1}, "tanjun.parsing.AbstractParser.bind_client": {"tf": 1}, "tanjun.parsing.AbstractParser.bind_component": {"tf": 1}, "tanjun.parsing.Parameter.bind_client": {"tf": 1}, "tanjun.parsing.Parameter.bind_component": {"tf": 1}, "tanjun.parsing.ShlexParser.bind_client": {"tf": 1}, "tanjun.parsing.ShlexParser.bind_component": {"tf": 1}}, "df": 25}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.SlashCommand.build": {"tf": 1}, "tanjun.SlashCommandGroup.build": {"tf": 1}, "tanjun.abc.BaseSlashCommand.build": {"tf": 1}, "tanjun.commands.SlashCommand.build": {"tf": 1}, "tanjun.commands.SlashCommandGroup.build": {"tf": 1}}, "df": 5}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}}, "df": 12, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.BucketResource": {"tf": 1}, "tanjun.BucketResource.USER": {"tf": 1}, "tanjun.BucketResource.MEMBER": {"tf": 1}, "tanjun.BucketResource.CHANNEL": {"tf": 1}, "tanjun.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.BucketResource.GUILD": {"tf": 1}, "tanjun.BucketResource.GLOBAL": {"tf": 1}, "tanjun.dependencies.BucketResource": {"tf": 1}, "tanjun.dependencies.BucketResource.USER": {"tf": 1}, "tanjun.dependencies.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.BucketResource.GUILD": {"tf": 1}, "tanjun.dependencies.BucketResource.GLOBAL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.USER": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GUILD": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GLOBAL": {"tf": 1}}, "df": 24}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.BaseSlashCommand": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.abc.BaseSlashCommand.name": {"tf": 1}, "tanjun.abc.BaseSlashCommand.parent": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.abc.BaseSlashCommand.build": {"tf": 1}, "tanjun.abc.BaseSlashCommand.check_context": {"tf": 1}, "tanjun.abc.BaseSlashCommand.execute": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_parent": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.description": {"tf": 1}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.commands.BaseSlashCommand.name": {"tf": 1}, "tanjun.commands.BaseSlashCommand.parent": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_parent": {"tf": 1}, "tanjun.commands.BaseSlashCommand.check_context": {"tf": 1}, "tanjun.commands.BaseSlashCommand.copy": {"tf": 1}, "tanjun.commands.BaseSlashCommand.load_into_component": {"tf": 1}}, "df": 26, "t": {"docs": {"tanjun.abc.BaseSlashCommandT": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.injecting.BasicInjectionContext": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.__init__": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.injection_client": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1}}, "df": 17}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.on_message_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_event": {"tf": 1}, "tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.clients.Client.on_message_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}}, "df": 6, "s": {"docs": {"tanjun.Client.events": {"tf": 1}, "tanjun.abc.Context.events": {"tf": 1}, "tanjun.abc.Client.events": {"tf": 1}, "tanjun.clients.Client.events": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.utilities.calculate_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}}, "df": 2}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.MessageCommand.execute": {"tf": 1}, "tanjun.MessageCommandGroup.execute": {"tf": 1}, "tanjun.SlashCommand.execute": {"tf": 1}, "tanjun.SlashCommandGroup.execute": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.abc.MessageCommand.execute": {"tf": 1}, "tanjun.abc.BaseSlashCommand.execute": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.commands.MessageCommand.execute": {"tf": 1}, "tanjun.commands.MessageCommandGroup.execute": {"tf": 1}, "tanjun.commands.SlashCommand.execute": {"tf": 1}, "tanjun.commands.SlashCommandGroup.execute": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}}, "df": 16}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.abc.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.trigger_pre_execution": {"tf": 1}}, "df": 22}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.ExecutableCommand": {"tf": 1}, "tanjun.abc.ExecutableCommand.checks": {"tf": 1}, "tanjun.abc.ExecutableCommand.component": {"tf": 1}, "tanjun.abc.ExecutableCommand.hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.metadata": {"tf": 1}, "tanjun.abc.ExecutableCommand.bind_client": {"tf": 1}, "tanjun.abc.ExecutableCommand.bind_component": {"tf": 1}, "tanjun.abc.ExecutableCommand.copy": {"tf": 1}, "tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.add_check": {"tf": 1}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1}}, "df": 11}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.SlashContext.expires_at": {"tf": 1}, "tanjun.context.SlashContext.expires_at": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}}, "df": 2}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.to_emoji": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.to_emoji": {"tf": 1}}, "df": 4}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.parsing.Option.empty_value": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.trigger_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.trigger_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.trigger_error": {"tf": 1}}, "df": 19, "s": {"docs": {"tanjun.ConversionError.errors": {"tf": 1}, "tanjun.errors.ConversionError.errors": {"tf": 1}}, "df": 2}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.ErrorHookSig": {"tf": 1}}, "df": 1, "t": {"docs": {"tanjun.abc.ErrorHookSigT": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 6}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.dependencies.EntryNotFound": {"tf": 1}, "tanjun.dependencies.async_cache.EntryNotFound": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.is_human_only": {"tf": 1}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.abc.Context.is_human": {"tf": 1}, "tanjun.clients.Client.is_human_only": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.context.MessageContext.is_human": {"tf": 1}, "tanjun.context.SlashContext.is_human": {"tf": 1}}, "df": 7}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.hooks": {"tf": 1}, "tanjun.Client.slash_hooks": {"tf": 1}, "tanjun.Client.message_hooks": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Component.hooks": {"tf": 1}, "tanjun.Component.slash_hooks": {"tf": 1}, "tanjun.Component.message_hooks": {"tf": 1}, "tanjun.Component.set_slash_hooks": {"tf": 1}, "tanjun.Component.set_message_hooks": {"tf": 1}, "tanjun.Component.set_hooks": {"tf": 1}, "tanjun.Hooks": {"tf": 1}, "tanjun.Hooks.__init__": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.copy": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.Hooks.trigger_error": {"tf": 1}, "tanjun.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.Hooks.trigger_success": {"tf": 1}, "tanjun.abc.Hooks": {"tf": 1}, "tanjun.abc.Hooks.copy": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.Hooks.trigger_error": {"tf": 1}, "tanjun.abc.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.abc.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.trigger_success": {"tf": 1}, "tanjun.abc.ExecutableCommand.hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.clients.Client.slash_hooks": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.commands.PartialCommand.hooks": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1}, "tanjun.components.Component.hooks": {"tf": 1}, "tanjun.components.Component.slash_hooks": {"tf": 1}, "tanjun.components.Component.message_hooks": {"tf": 1}, "tanjun.components.Component.set_slash_hooks": {"tf": 1}, "tanjun.components.Component.set_message_hooks": {"tf": 1}, "tanjun.components.Component.set_hooks": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}, "tanjun.hooks.Hooks.__init__": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.copy": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.hooks.Hooks.trigger_error": {"tf": 1}, "tanjun.hooks.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.trigger_success": {"tf": 1}}, "df": 90, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.HookSig": {"tf": 1}}, "df": 1, "t": {"docs": {"tanjun.abc.HookSigT": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.HaltExecution": {"tf": 1}, "tanjun.errors.HaltExecution": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.voice": {"tf": 1}, "tanjun.to_voice_state": {"tf": 1}, "tanjun.abc.Context.voice": {"tf": 1}, "tanjun.abc.Client.voice": {"tf": 1}, "tanjun.clients.Client.voice": {"tf": 1}, "tanjun.conversion.to_voice_state": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.LazyConstant.get_value": {"tf": 1}, "tanjun.LazyConstant.set_value": {"tf": 1}, "tanjun.abc.SlashOption.value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1}, "tanjun.context.SlashOption.value": {"tf": 1}, "tanjun.context.SlashOption.resolve_value": {"tf": 1}, "tanjun.dependencies.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.set_value": {"tf": 1}, "tanjun.parsing.Option.empty_value": {"tf": 1}}, "df": 11}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 1}}, "df": 6}}}}}, "y": {"docs": {"tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Hooks.trigger_error": {"tf": 1}, "tanjun.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.Hooks.trigger_success": {"tf": 1}, "tanjun.abc.Hooks.trigger_error": {"tf": 1}, "tanjun.abc.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.abc.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.trigger_success": {"tf": 1}, "tanjun.hooks.Hooks.trigger_error": {"tf": 1}, "tanjun.hooks.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.trigger_success": {"tf": 1}}, "df": 12, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.Context.triggering_name": {"tf": 1}, "tanjun.abc.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.abc.MessageContext.triggering_name": {"tf": 1}, "tanjun.abc.MessageContext.set_triggering_name": {"tf": 1}, "tanjun.context.MessageContext.triggering_name": {"tf": 1}, "tanjun.context.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_name": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_prefix": {"tf": 1}, "tanjun.context.SlashContext.triggering_name": {"tf": 1}}, "df": 9}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.abc.SlashOption.type": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.context.SlashOption.type": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.Injected.type": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.injecting.TypeDescriptor.type": {"tf": 1}}, "df": 11, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.injecting.TypeDescriptor": {"tf": 1}, "tanjun.injecting.TypeDescriptor.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.type": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}}, "df": 7}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.conversion.ToPresence": {"tf": 1}, "tanjun.conversion.ToPresence.__init__": {"tf": 1}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}}, "df": 6}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.TooManyArgumentsError": {"tf": 1}, "tanjun.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.TooManyArgumentsError.parameter": {"tf": 1}, "tanjun.errors.TooManyArgumentsError": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.parameter": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.conversion.ToChannel": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.conversion.ToChannel.async_caches": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1}}, "df": 6}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.conversion.ToEmoji": {"tf": 1}, "tanjun.conversion.ToEmoji.__init__": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}}, "df": 6}}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.conversion.ToGuild": {"tf": 1}, "tanjun.conversion.ToGuild.__init__": {"tf": 1}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}}, "df": 6}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.conversion.ToInvite": {"tf": 1}, "tanjun.conversion.ToInvite.__init__": {"tf": 1}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}}, "df": 6, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"tanjun.conversion.ToInviteWithMetadata": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.__init__": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.conversion.ToMember": {"tf": 1}, "tanjun.conversion.ToMember.__init__": {"tf": 1}, "tanjun.conversion.ToMember.async_caches": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}}, "df": 6}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.conversion.ToRole": {"tf": 1}, "tanjun.conversion.ToRole.__init__": {"tf": 1}, "tanjun.conversion.ToRole.async_caches": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}}, "df": 6}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.conversion.ToUser": {"tf": 1}, "tanjun.conversion.ToUser.__init__": {"tf": 1}, "tanjun.conversion.ToUser.async_caches": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}}, "df": 6}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.conversion.ToVoiceState": {"tf": 1}, "tanjun.conversion.ToVoiceState.__init__": {"tf": 1}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}}, "df": 6}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.TanjunError": {"tf": 1}, "tanjun.errors.TanjunError": {"tf": 1}}, "df": 2}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.context.SlashContext.start_defer_timer": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.components.WithCommandReturnSig": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}}, "df": 3}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.parsing.Parameter.key": {"tf": 1}}, "df": 1}}}}}, "fullname": {"root": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"tanjun": {"tf": 1}, "tanjun.ClientCallbackNames": {"tf": 1}, "tanjun.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.with_all_checks": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1}, "tanjun.with_check": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.message_accepts": {"tf": 1}, "tanjun.Client.is_human_only": {"tf": 1}, "tanjun.Client.cache": {"tf": 1}, "tanjun.Client.checks": {"tf": 1}, "tanjun.Client.components": {"tf": 1}, "tanjun.Client.events": {"tf": 1}, "tanjun.Client.listeners": {"tf": 1}, "tanjun.Client.hooks": {"tf": 1}, "tanjun.Client.slash_hooks": {"tf": 1}, "tanjun.Client.is_alive": {"tf": 1}, "tanjun.Client.loop": {"tf": 1}, "tanjun.Client.message_hooks": {"tf": 1}, "tanjun.Client.metadata": {"tf": 1}, "tanjun.Client.prefix_getter": {"tf": 1}, "tanjun.Client.prefixes": {"tf": 1}, "tanjun.Client.rest": {"tf": 1}, "tanjun.Client.server": {"tf": 1}, "tanjun.Client.shards": {"tf": 1}, "tanjun.Client.voice": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.set_global_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.Client.set_message_accepts": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.remove_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.check": {"tf": 1}, "tanjun.Client.add_component": {"tf": 1}, "tanjun.Client.get_component_by_name": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.remove_component_by_name": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.dispatch_client_callback": {"tf": 1}, "tanjun.Client.get_client_callbacks": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.remove_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.remove_prefix": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.Client.iter_commands": {"tf": 1}, "tanjun.Client.iter_message_commands": {"tf": 1}, "tanjun.Client.iter_slash_commands": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Client.close": {"tf": 1}, "tanjun.Client.open": {"tf": 1}, "tanjun.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.Client.on_message_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.MessageAcceptsEnum": {"tf": 1}, "tanjun.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommand": {"tf": 1}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.MessageCommand.callback": {"tf": 1}, "tanjun.MessageCommand.names": {"tf": 1}, "tanjun.MessageCommand.needs_injector": {"tf": 1}, "tanjun.MessageCommand.parent": {"tf": 1}, "tanjun.MessageCommand.parser": {"tf": 1}, "tanjun.MessageCommand.bind_client": {"tf": 1}, "tanjun.MessageCommand.bind_component": {"tf": 1}, "tanjun.MessageCommand.copy": {"tf": 1}, "tanjun.MessageCommand.set_parent": {"tf": 1}, "tanjun.MessageCommand.set_parser": {"tf": 1}, "tanjun.MessageCommand.check_context": {"tf": 1}, "tanjun.MessageCommand.execute": {"tf": 1}, "tanjun.MessageCommand.load_into_component": {"tf": 1}, "tanjun.MessageCommandGroup": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.MessageCommandGroup.commands": {"tf": 1}, "tanjun.MessageCommandGroup.is_strict": {"tf": 1}, "tanjun.MessageCommandGroup.copy": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.MessageCommandGroup.bind_client": {"tf": 1}, "tanjun.MessageCommandGroup.bind_component": {"tf": 1}, "tanjun.MessageCommandGroup.find_command": {"tf": 1}, "tanjun.MessageCommandGroup.execute": {"tf": 1}, "tanjun.SlashCommand": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.callback": {"tf": 1}, "tanjun.SlashCommand.needs_injector": {"tf": 1}, "tanjun.SlashCommand.bind_client": {"tf": 1}, "tanjun.SlashCommand.build": {"tf": 1}, "tanjun.SlashCommand.load_into_component": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommand.execute": {"tf": 1}, "tanjun.SlashCommand.copy": {"tf": 1}, "tanjun.SlashCommandGroup": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.commands": {"tf": 1}, "tanjun.SlashCommandGroup.build": {"tf": 1}, "tanjun.SlashCommandGroup.copy": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.SlashCommandGroup.execute": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.Component": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.checks": {"tf": 1}, "tanjun.Component.client": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.hooks": {"tf": 1}, "tanjun.Component.loop": {"tf": 1}, "tanjun.Component.name": {"tf": 1}, "tanjun.Component.schedules": {"tf": 1}, "tanjun.Component.slash_commands": {"tf": 1}, "tanjun.Component.slash_hooks": {"tf": 1}, "tanjun.Component.message_commands": {"tf": 1}, "tanjun.Component.message_hooks": {"tf": 1}, "tanjun.Component.needs_injector": {"tf": 1}, "tanjun.Component.listeners": {"tf": 1}, "tanjun.Component.metadata": {"tf": 1}, "tanjun.Component.copy": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.Component.set_slash_hooks": {"tf": 1}, "tanjun.Component.set_message_hooks": {"tf": 1}, "tanjun.Component.set_hooks": {"tf": 1}, "tanjun.Component.add_check": {"tf": 1}, "tanjun.Component.remove_check": {"tf": 1}, "tanjun.Component.with_check": {"tf": 1}, "tanjun.Component.add_client_callback": {"tf": 1}, "tanjun.Component.get_client_callbacks": {"tf": 1}, "tanjun.Component.remove_client_callback": {"tf": 1}, "tanjun.Component.with_client_callback": {"tf": 1}, "tanjun.Component.add_command": {"tf": 1}, "tanjun.Component.remove_command": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1}, "tanjun.Component.add_slash_command": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.with_slash_command": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.with_message_command": {"tf": 1}, "tanjun.Component.add_listener": {"tf": 1}, "tanjun.Component.remove_listener": {"tf": 1}, "tanjun.Component.with_listener": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.Component.bind_client": {"tf": 1}, "tanjun.Component.unbind_client": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.Component.add_schedule": {"tf": 1}, "tanjun.Component.remove_schedule": {"tf": 1}, "tanjun.Component.with_schedule": {"tf": 1}, "tanjun.Component.close": {"tf": 1}, "tanjun.Component.open": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.to_bool": {"tf": 1}, "tanjun.to_channel": {"tf": 1}, "tanjun.to_color": {"tf": 1}, "tanjun.to_colour": {"tf": 1}, "tanjun.to_datetime": {"tf": 1}, "tanjun.to_emoji": {"tf": 1}, "tanjun.to_guild": {"tf": 1}, "tanjun.to_invite": {"tf": 1}, "tanjun.to_invite_with_metadata": {"tf": 1}, "tanjun.to_member": {"tf": 1}, "tanjun.to_presence": {"tf": 1}, "tanjun.to_role": {"tf": 1}, "tanjun.to_snowflake": {"tf": 1}, "tanjun.to_user": {"tf": 1}, "tanjun.to_voice_state": {"tf": 1}, "tanjun.BucketResource": {"tf": 1}, "tanjun.BucketResource.USER": {"tf": 1}, "tanjun.BucketResource.MEMBER": {"tf": 1}, "tanjun.BucketResource.CHANNEL": {"tf": 1}, "tanjun.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.BucketResource.GUILD": {"tf": 1}, "tanjun.BucketResource.GLOBAL": {"tf": 1}, "tanjun.cached_inject": {"tf": 1}, "tanjun.inject_lc": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.__init__": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.InMemoryCooldownManager.__init__": {"tf": 1}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.LazyConstant": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.LazyConstant.callback": {"tf": 1}, "tanjun.LazyConstant.get_value": {"tf": 1}, "tanjun.LazyConstant.reset": {"tf": 1}, "tanjun.LazyConstant.set_value": {"tf": 1}, "tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.CommandError": {"tf": 1}, "tanjun.CommandError.__init__": {"tf": 1}, "tanjun.CommandError.message": {"tf": 1}, "tanjun.ConversionError": {"tf": 1}, "tanjun.ConversionError.__init__": {"tf": 1}, "tanjun.ConversionError.errors": {"tf": 1}, "tanjun.ConversionError.parameter": {"tf": 1}, "tanjun.HaltExecution": {"tf": 1}, "tanjun.FailedCheck": {"tf": 1}, "tanjun.MissingDependencyError": {"tf": 1}, "tanjun.MissingDependencyError.__init__": {"tf": 1}, "tanjun.MissingDependencyError.message": {"tf": 1}, "tanjun.NotEnoughArgumentsError": {"tf": 1}, "tanjun.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.NotEnoughArgumentsError.parameter": {"tf": 1}, "tanjun.TooManyArgumentsError": {"tf": 1}, "tanjun.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.TooManyArgumentsError.parameter": {"tf": 1}, "tanjun.ParserError": {"tf": 1}, "tanjun.ParserError.__init__": {"tf": 1}, "tanjun.ParserError.message": {"tf": 1}, "tanjun.ParserError.parameter": {"tf": 1}, "tanjun.TanjunError": {"tf": 1}, "tanjun.AnyHooks": {"tf": 1}, "tanjun.Hooks": {"tf": 1}, "tanjun.Hooks.__init__": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.copy": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.Hooks.trigger_error": {"tf": 1}, "tanjun.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.Hooks.trigger_success": {"tf": 1}, "tanjun.MessageHooks": {"tf": 1}, "tanjun.SlashHooks": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.ShlexParser": {"tf": 1}, "tanjun.ShlexParser.__init__": {"tf": 1}, "tanjun.ShlexParser.needs_injector": {"tf": 1}, "tanjun.ShlexParser.parameters": {"tf": 1}, "tanjun.ShlexParser.copy": {"tf": 1}, "tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.ShlexParser.bind_client": {"tf": 1}, "tanjun.ShlexParser.bind_component": {"tf": 1}, "tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.with_parser": {"tf": 1}, "tanjun.as_interval": {"tf": 1}, "tanjun.abc": {"tf": 1}, "tanjun.abc.ClientLoader": {"tf": 1}, "tanjun.abc.ClientLoader.load": {"tf": 1}, "tanjun.abc.ClientLoader.unload": {"tf": 1}, "tanjun.abc.BaseSlashCommandT": {"tf": 1}, "tanjun.abc.CommandCallbackSig": {"tf": 1}, "tanjun.abc.CommandCallbackSigT": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.CheckSigT": {"tf": 1}, "tanjun.abc.Context": {"tf": 1}, "tanjun.abc.Context.author": {"tf": 1}, "tanjun.abc.Context.channel_id": {"tf": 1}, "tanjun.abc.Context.cache": {"tf": 1}, "tanjun.abc.Context.client": {"tf": 1}, "tanjun.abc.Context.component": {"tf": 1}, "tanjun.abc.Context.command": {"tf": 1}, "tanjun.abc.Context.created_at": {"tf": 1}, "tanjun.abc.Context.events": {"tf": 1}, "tanjun.abc.Context.guild_id": {"tf": 1}, "tanjun.abc.Context.has_responded": {"tf": 1}, "tanjun.abc.Context.is_human": {"tf": 1}, "tanjun.abc.Context.member": {"tf": 1}, "tanjun.abc.Context.server": {"tf": 1}, "tanjun.abc.Context.rest": {"tf": 1}, "tanjun.abc.Context.shards": {"tf": 1}, "tanjun.abc.Context.voice": {"tf": 1}, "tanjun.abc.Context.triggering_name": {"tf": 1}, "tanjun.abc.Context.set_component": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.abc.Context.delete_initial_response": {"tf": 1}, "tanjun.abc.Context.delete_last_response": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.fetch_initial_response": {"tf": 1}, "tanjun.abc.Context.fetch_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.ClientCallbackNames": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.abc.Hooks": {"tf": 1}, "tanjun.abc.Hooks.copy": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.Hooks.trigger_error": {"tf": 1}, "tanjun.abc.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.abc.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.trigger_success": {"tf": 1}, "tanjun.abc.MetaEventSig": {"tf": 1}, "tanjun.abc.MetaEventSigT": {"tf": 1}, "tanjun.abc.AnyHooks": {"tf": 1}, "tanjun.abc.MessageHooks": {"tf": 1}, "tanjun.abc.SlashHooks": {"tf": 1}, "tanjun.abc.ExecutableCommand": {"tf": 1}, "tanjun.abc.ExecutableCommand.checks": {"tf": 1}, "tanjun.abc.ExecutableCommand.component": {"tf": 1}, "tanjun.abc.ExecutableCommand.hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.metadata": {"tf": 1}, "tanjun.abc.ExecutableCommand.bind_client": {"tf": 1}, "tanjun.abc.ExecutableCommand.bind_component": {"tf": 1}, "tanjun.abc.ExecutableCommand.copy": {"tf": 1}, "tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.add_check": {"tf": 1}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1}, "tanjun.abc.HookSig": {"tf": 1}, "tanjun.abc.HookSigT": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.abc.ErrorHookSigT": {"tf": 1}, "tanjun.abc.ListenerCallbackSig": {"tf": 1}, "tanjun.abc.ListenerCallbackSigT": {"tf": 1}, "tanjun.abc.MaybeAwaitableT": {"tf": 1}, "tanjun.abc.MessageCommand": {"tf": 1}, "tanjun.abc.MessageCommand.callback": {"tf": 1}, "tanjun.abc.MessageCommand.names": {"tf": 1}, "tanjun.abc.MessageCommand.parent": {"tf": 1}, "tanjun.abc.MessageCommand.set_parent": {"tf": 1}, "tanjun.abc.MessageCommand.copy": {"tf": 1}, "tanjun.abc.MessageCommand.check_context": {"tf": 1}, "tanjun.abc.MessageCommand.execute": {"tf": 1}, "tanjun.abc.MessageCommandT": {"tf": 1}, "tanjun.abc.MessageCommandGroup": {"tf": 1}, "tanjun.abc.MessageCommandGroup.commands": {"tf": 1}, "tanjun.abc.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.abc.MessageContext": {"tf": 1}, "tanjun.abc.MessageContext.command": {"tf": 1}, "tanjun.abc.MessageContext.content": {"tf": 1}, "tanjun.abc.MessageContext.message": {"tf": 1}, "tanjun.abc.MessageContext.shard": {"tf": 1}, "tanjun.abc.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.abc.MessageContext.triggering_name": {"tf": 1}, "tanjun.abc.MessageContext.set_command": {"tf": 1}, "tanjun.abc.MessageContext.set_content": {"tf": 1}, "tanjun.abc.MessageContext.set_triggering_name": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.BaseSlashCommand": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.abc.BaseSlashCommand.name": {"tf": 1}, "tanjun.abc.BaseSlashCommand.parent": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.abc.BaseSlashCommand.build": {"tf": 1}, "tanjun.abc.BaseSlashCommand.check_context": {"tf": 1}, "tanjun.abc.BaseSlashCommand.execute": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_parent": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.abc.SlashCommand": {"tf": 1}, "tanjun.abc.SlashCommand.callback": {"tf": 1}, "tanjun.abc.SlashCommandGroup": {"tf": 1}, "tanjun.abc.SlashCommandGroup.commands": {"tf": 1}, "tanjun.abc.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.abc.SlashContext": {"tf": 1}, "tanjun.abc.SlashContext.command": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.expires_at": {"tf": 1}, "tanjun.abc.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.abc.SlashContext.interaction": {"tf": 1}, "tanjun.abc.SlashContext.member": {"tf": 1}, "tanjun.abc.SlashContext.options": {"tf": 1}, "tanjun.abc.SlashContext.set_command": {"tf": 1}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.abc.SlashContext.mark_not_found": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.SlashOption": {"tf": 1}, "tanjun.abc.SlashOption.name": {"tf": 1}, "tanjun.abc.SlashOption.type": {"tf": 1}, "tanjun.abc.SlashOption.value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.abc.Component": {"tf": 1}, "tanjun.abc.Component.client": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.loop": {"tf": 1}, "tanjun.abc.Component.name": {"tf": 1}, "tanjun.abc.Component.slash_commands": {"tf": 1}, "tanjun.abc.Component.message_commands": {"tf": 1}, "tanjun.abc.Component.listeners": {"tf": 1}, "tanjun.abc.Component.metadata": {"tf": 1}, "tanjun.abc.Component.add_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.with_slash_command": {"tf": 1}, "tanjun.abc.Component.add_message_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.with_message_command": {"tf": 1}, "tanjun.abc.Component.add_listener": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Component.with_listener": {"tf": 1}, "tanjun.abc.Component.bind_client": {"tf": 1}, "tanjun.abc.Component.unbind_client": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Component.close": {"tf": 1}, "tanjun.abc.Component.open": {"tf": 1}, "tanjun.abc.Client": {"tf": 1}, "tanjun.abc.Client.cache": {"tf": 1}, "tanjun.abc.Client.components": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.events": {"tf": 1}, "tanjun.abc.Client.is_alive": {"tf": 1}, "tanjun.abc.Client.listeners": {"tf": 1}, "tanjun.abc.Client.loop": {"tf": 1}, "tanjun.abc.Client.metadata": {"tf": 1}, "tanjun.abc.Client.prefixes": {"tf": 1}, "tanjun.abc.Client.rest": {"tf": 1}, "tanjun.abc.Client.server": {"tf": 1}, "tanjun.abc.Client.shards": {"tf": 1}, "tanjun.abc.Client.voice": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.add_component": {"tf": 1}, "tanjun.abc.Client.get_component_by_name": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.remove_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.abc.Client.iter_commands": {"tf": 1}, "tanjun.abc.Client.iter_message_commands": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.checks": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1}, "tanjun.checks.CommandT": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_check": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.message_accepts": {"tf": 1}, "tanjun.clients.Client.is_human_only": {"tf": 1}, "tanjun.clients.Client.cache": {"tf": 1}, "tanjun.clients.Client.checks": {"tf": 1}, "tanjun.clients.Client.components": {"tf": 1}, "tanjun.clients.Client.events": {"tf": 1}, "tanjun.clients.Client.listeners": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.clients.Client.slash_hooks": {"tf": 1}, "tanjun.clients.Client.is_alive": {"tf": 1}, "tanjun.clients.Client.loop": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.clients.Client.metadata": {"tf": 1}, "tanjun.clients.Client.prefix_getter": {"tf": 1}, "tanjun.clients.Client.prefixes": {"tf": 1}, "tanjun.clients.Client.rest": {"tf": 1}, "tanjun.clients.Client.server": {"tf": 1}, "tanjun.clients.Client.shards": {"tf": 1}, "tanjun.clients.Client.voice": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.set_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.set_message_accepts": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.remove_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.check": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.get_component_by_name": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.Client.iter_commands": {"tf": 1}, "tanjun.clients.Client.iter_message_commands": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.close": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.clients.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.on_message_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.clients.ClientCallbackNames": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.clients.PrefixGetterSigT": {"tf": 1}, "tanjun.commands": {"tf": 1}, "tanjun.commands.AnyMessageCommandT": {"tf": 1}, "tanjun.commands.ConverterSig": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommand": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.MessageCommand.callback": {"tf": 1}, "tanjun.commands.MessageCommand.names": {"tf": 1}, "tanjun.commands.MessageCommand.needs_injector": {"tf": 1}, "tanjun.commands.MessageCommand.parent": {"tf": 1}, "tanjun.commands.MessageCommand.parser": {"tf": 1}, "tanjun.commands.MessageCommand.bind_client": {"tf": 1}, "tanjun.commands.MessageCommand.bind_component": {"tf": 1}, "tanjun.commands.MessageCommand.copy": {"tf": 1}, "tanjun.commands.MessageCommand.set_parent": {"tf": 1}, "tanjun.commands.MessageCommand.set_parser": {"tf": 1}, "tanjun.commands.MessageCommand.check_context": {"tf": 1}, "tanjun.commands.MessageCommand.execute": {"tf": 1}, "tanjun.commands.MessageCommand.load_into_component": {"tf": 1}, "tanjun.commands.MessageCommandGroup": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.MessageCommandGroup.commands": {"tf": 1}, "tanjun.commands.MessageCommandGroup.is_strict": {"tf": 1}, "tanjun.commands.MessageCommandGroup.copy": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.bind_client": {"tf": 1}, "tanjun.commands.MessageCommandGroup.bind_component": {"tf": 1}, "tanjun.commands.MessageCommandGroup.find_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.execute": {"tf": 1}, "tanjun.commands.PartialCommand": {"tf": 1}, "tanjun.commands.PartialCommand.checks": {"tf": 1}, "tanjun.commands.PartialCommand.component": {"tf": 1}, "tanjun.commands.PartialCommand.hooks": {"tf": 1}, "tanjun.commands.PartialCommand.metadata": {"tf": 1}, "tanjun.commands.PartialCommand.needs_injector": {"tf": 1}, "tanjun.commands.PartialCommand.copy": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1}, "tanjun.commands.PartialCommand.add_check": {"tf": 1}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1}, "tanjun.commands.PartialCommand.with_check": {"tf": 1}, "tanjun.commands.PartialCommand.bind_client": {"tf": 1}, "tanjun.commands.PartialCommand.bind_component": {"tf": 1}, "tanjun.commands.BaseSlashCommand": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.description": {"tf": 1}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.commands.BaseSlashCommand.name": {"tf": 1}, "tanjun.commands.BaseSlashCommand.parent": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_parent": {"tf": 1}, "tanjun.commands.BaseSlashCommand.check_context": {"tf": 1}, "tanjun.commands.BaseSlashCommand.copy": {"tf": 1}, "tanjun.commands.BaseSlashCommand.load_into_component": {"tf": 1}, "tanjun.commands.SlashCommand": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.callback": {"tf": 1}, "tanjun.commands.SlashCommand.needs_injector": {"tf": 1}, "tanjun.commands.SlashCommand.bind_client": {"tf": 1}, "tanjun.commands.SlashCommand.build": {"tf": 1}, "tanjun.commands.SlashCommand.load_into_component": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommand.execute": {"tf": 1}, "tanjun.commands.SlashCommand.copy": {"tf": 1}, "tanjun.commands.SlashCommandGroup": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.commands": {"tf": 1}, "tanjun.commands.SlashCommandGroup.build": {"tf": 1}, "tanjun.commands.SlashCommandGroup.copy": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.execute": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.components": {"tf": 1}, "tanjun.components.CommandT": {"tf": 1}, "tanjun.components.Component": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.checks": {"tf": 1}, "tanjun.components.Component.client": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.hooks": {"tf": 1}, "tanjun.components.Component.loop": {"tf": 1}, "tanjun.components.Component.name": {"tf": 1}, "tanjun.components.Component.schedules": {"tf": 1}, "tanjun.components.Component.slash_commands": {"tf": 1}, "tanjun.components.Component.slash_hooks": {"tf": 1}, "tanjun.components.Component.message_commands": {"tf": 1}, "tanjun.components.Component.message_hooks": {"tf": 1}, "tanjun.components.Component.needs_injector": {"tf": 1}, "tanjun.components.Component.listeners": {"tf": 1}, "tanjun.components.Component.metadata": {"tf": 1}, "tanjun.components.Component.copy": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.set_slash_hooks": {"tf": 1}, "tanjun.components.Component.set_message_hooks": {"tf": 1}, "tanjun.components.Component.set_hooks": {"tf": 1}, "tanjun.components.Component.add_check": {"tf": 1}, "tanjun.components.Component.remove_check": {"tf": 1}, "tanjun.components.Component.with_check": {"tf": 1}, "tanjun.components.Component.add_client_callback": {"tf": 1}, "tanjun.components.Component.get_client_callbacks": {"tf": 1}, "tanjun.components.Component.remove_client_callback": {"tf": 1}, "tanjun.components.Component.with_client_callback": {"tf": 1}, "tanjun.components.Component.add_command": {"tf": 1}, "tanjun.components.Component.remove_command": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1}, "tanjun.components.Component.add_slash_command": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.with_slash_command": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.with_message_command": {"tf": 1}, "tanjun.components.Component.add_listener": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}, "tanjun.components.Component.with_listener": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.components.Component.bind_client": {"tf": 1}, "tanjun.components.Component.unbind_client": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.components.Component.add_schedule": {"tf": 1}, "tanjun.components.Component.remove_schedule": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1}, "tanjun.components.Component.close": {"tf": 1}, "tanjun.components.Component.open": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}, "tanjun.components.AbstractComponentLoader": {"tf": 1}, "tanjun.components.AbstractComponentLoader.load_into_component": {"tf": 1}, "tanjun.components.OnCallbackSig": {"tf": 1}, "tanjun.components.OnCallbackSigT": {"tf": 1}, "tanjun.components.WithCommandReturnSig": {"tf": 1}, "tanjun.context": {"tf": 1}, "tanjun.context.MessageContext": {"tf": 1}, "tanjun.context.MessageContext.__init__": {"tf": 1}, "tanjun.context.MessageContext.author": {"tf": 1}, "tanjun.context.MessageContext.channel_id": {"tf": 1}, "tanjun.context.MessageContext.command": {"tf": 1}, "tanjun.context.MessageContext.content": {"tf": 1}, "tanjun.context.MessageContext.created_at": {"tf": 1}, "tanjun.context.MessageContext.guild_id": {"tf": 1}, "tanjun.context.MessageContext.has_responded": {"tf": 1}, "tanjun.context.MessageContext.is_human": {"tf": 1}, "tanjun.context.MessageContext.member": {"tf": 1}, "tanjun.context.MessageContext.message": {"tf": 1}, "tanjun.context.MessageContext.triggering_name": {"tf": 1}, "tanjun.context.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.context.MessageContext.shard": {"tf": 1}, "tanjun.context.MessageContext.set_command": {"tf": 1}, "tanjun.context.MessageContext.set_content": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_name": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_prefix": {"tf": 1}, "tanjun.context.MessageContext.delete_initial_response": {"tf": 1}, "tanjun.context.MessageContext.delete_last_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_initial_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.ResponseTypeT": {"tf": 1}, "tanjun.context.SlashContext": {"tf": 1}, "tanjun.context.SlashContext.__init__": {"tf": 1}, "tanjun.context.SlashContext.author": {"tf": 1}, "tanjun.context.SlashContext.channel_id": {"tf": 1}, "tanjun.context.SlashContext.client": {"tf": 1}, "tanjun.context.SlashContext.command": {"tf": 1}, "tanjun.context.SlashContext.created_at": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.expires_at": {"tf": 1}, "tanjun.context.SlashContext.guild_id": {"tf": 1}, "tanjun.context.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.context.SlashContext.has_responded": {"tf": 1}, "tanjun.context.SlashContext.is_human": {"tf": 1}, "tanjun.context.SlashContext.member": {"tf": 1}, "tanjun.context.SlashContext.triggering_name": {"tf": 1}, "tanjun.context.SlashContext.interaction": {"tf": 1}, "tanjun.context.SlashContext.options": {"tf": 1}, "tanjun.context.SlashContext.cancel_defer": {"tf": 1}, "tanjun.context.SlashContext.get_response_future": {"tf": 1}, "tanjun.context.SlashContext.mark_not_found": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.context.SlashContext.set_command": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.context.SlashContext.defer": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_initial_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.context.SlashOption": {"tf": 1}, "tanjun.context.SlashOption.__init__": {"tf": 1}, "tanjun.context.SlashOption.name": {"tf": 1}, "tanjun.context.SlashOption.type": {"tf": 1}, "tanjun.context.SlashOption.value": {"tf": 1}, "tanjun.context.SlashOption.resolve_value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.conversion": {"tf": 1}, "tanjun.conversion.ArgumentT": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1}, "tanjun.conversion.parse_snowflake": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}, "tanjun.conversion.search_snowflakes": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}, "tanjun.conversion.to_bool": {"tf": 1}, "tanjun.conversion.to_channel": {"tf": 1}, "tanjun.conversion.to_color": {"tf": 1}, "tanjun.conversion.to_colour": {"tf": 1}, "tanjun.conversion.to_datetime": {"tf": 1}, "tanjun.conversion.to_emoji": {"tf": 1}, "tanjun.conversion.to_guild": {"tf": 1}, "tanjun.conversion.to_invite": {"tf": 1}, "tanjun.conversion.to_invite_with_metadata": {"tf": 1}, "tanjun.conversion.to_member": {"tf": 1}, "tanjun.conversion.to_presence": {"tf": 1}, "tanjun.conversion.to_role": {"tf": 1}, "tanjun.conversion.to_snowflake": {"tf": 1}, "tanjun.conversion.to_user": {"tf": 1}, "tanjun.conversion.to_voice_state": {"tf": 1}, "tanjun.conversion.ToChannel": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.conversion.ToChannel.async_caches": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji": {"tf": 1}, "tanjun.conversion.ToEmoji.__init__": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild": {"tf": 1}, "tanjun.conversion.ToGuild.__init__": {"tf": 1}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite": {"tf": 1}, "tanjun.conversion.ToInvite.__init__": {"tf": 1}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.__init__": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember": {"tf": 1}, "tanjun.conversion.ToMember.__init__": {"tf": 1}, "tanjun.conversion.ToMember.async_caches": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence": {"tf": 1}, "tanjun.conversion.ToPresence.__init__": {"tf": 1}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole": {"tf": 1}, "tanjun.conversion.ToRole.__init__": {"tf": 1}, "tanjun.conversion.ToRole.async_caches": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser": {"tf": 1}, "tanjun.conversion.ToUser.__init__": {"tf": 1}, "tanjun.conversion.ToUser.async_caches": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState": {"tf": 1}, "tanjun.conversion.ToVoiceState.__init__": {"tf": 1}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}, "tanjun.dependencies": {"tf": 1}, "tanjun.dependencies.set_standard_dependencies": {"tf": 1}, "tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.CacheIterator": {"tf": 1}, "tanjun.dependencies.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.CacheMissError": {"tf": 1}, "tanjun.dependencies.EntryNotFound": {"tf": 1}, "tanjun.dependencies.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.SfCache": {"tf": 1}, "tanjun.dependencies.SfChannelBound": {"tf": 1}, "tanjun.dependencies.SfGuildBound": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.LazyConstant": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.LazyConstant.reset": {"tf": 1}, "tanjun.dependencies.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.BucketResource": {"tf": 1}, "tanjun.dependencies.BucketResource.USER": {"tf": 1}, "tanjun.dependencies.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.BucketResource.GUILD": {"tf": 1}, "tanjun.dependencies.BucketResource.GLOBAL": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractOwners": {"tf": 1}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.async_cache.CacheMissError": {"tf": 1}, "tanjun.dependencies.async_cache.EntryNotFound": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.SfCache": {"tf": 1}, "tanjun.dependencies.async_cache.SfChannelBound": {"tf": 1}, "tanjun.dependencies.async_cache.SfGuildBound": {"tf": 1}, "tanjun.dependencies.callbacks": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.dependencies.data": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.data.LazyConstant": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.reset": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.limiters": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.USER": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GUILD": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GLOBAL": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.dependencies.owners": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1}, "tanjun.errors": {"tf": 1}, "tanjun.errors.CommandError": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}, "tanjun.errors.CommandError.message": {"tf": 1}, "tanjun.errors.ConversionError": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1}, "tanjun.errors.ConversionError.errors": {"tf": 1}, "tanjun.errors.ConversionError.parameter": {"tf": 1}, "tanjun.errors.HaltExecution": {"tf": 1}, "tanjun.errors.FailedCheck": {"tf": 1}, "tanjun.errors.MissingDependencyError": {"tf": 1}, "tanjun.errors.MissingDependencyError.__init__": {"tf": 1}, "tanjun.errors.MissingDependencyError.message": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.parameter": {"tf": 1}, "tanjun.errors.TooManyArgumentsError": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.parameter": {"tf": 1}, "tanjun.errors.ParserError": {"tf": 1}, "tanjun.errors.ParserError.__init__": {"tf": 1}, "tanjun.errors.ParserError.message": {"tf": 1}, "tanjun.errors.ParserError.parameter": {"tf": 1}, "tanjun.errors.TanjunError": {"tf": 1}, "tanjun.hooks": {"tf": 1}, "tanjun.hooks.AnyHooks": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}, "tanjun.hooks.Hooks.__init__": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.copy": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.hooks.Hooks.trigger_error": {"tf": 1}, "tanjun.hooks.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.trigger_success": {"tf": 1}, "tanjun.hooks.MessageHooks": {"tf": 1}, "tanjun.hooks.SlashHooks": {"tf": 1}, "tanjun.injecting": {"tf": 1}, "tanjun.injecting.AbstractDescriptor": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.injection_client": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.injecting.BasicInjectionContext": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.__init__": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.injection_client": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.CallbackDescriptor": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.callback": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.copy": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}, "tanjun.injecting.Undefined": {"tf": 1}, "tanjun.injecting.Undefined.__init__": {"tf": 1}, "tanjun.injecting.UNDEFINED": {"tf": 1}, "tanjun.injecting.UndefinedOr": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.injected": {"tf": 1}, "tanjun.injecting.Injected": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.Injected.callback": {"tf": 1}, "tanjun.injecting.Injected.type": {"tf": 1}, "tanjun.injecting.InjectorClient": {"tf": 1}, "tanjun.injecting.InjectorClient.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor": {"tf": 1}, "tanjun.injecting.TypeDescriptor.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.type": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}, "tanjun.parsing": {"tf": 1}, "tanjun.parsing.AbstractParser": {"tf": 1}, "tanjun.parsing.AbstractParser.parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.bind_client": {"tf": 1}, "tanjun.parsing.AbstractParser.bind_component": {"tf": 1}, "tanjun.parsing.AbstractParser.copy": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.Argument": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.ConverterSig": {"tf": 1}, "tanjun.parsing.Option": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.Option.empty_value": {"tf": 1}, "tanjun.parsing.Option.names": {"tf": 1}, "tanjun.parsing.Parameter": {"tf": 1}, "tanjun.parsing.Parameter.__init__": {"tf": 1}, "tanjun.parsing.Parameter.converters": {"tf": 1}, "tanjun.parsing.Parameter.default": {"tf": 1}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1}, "tanjun.parsing.Parameter.is_multi": {"tf": 1}, "tanjun.parsing.Parameter.key": {"tf": 1}, "tanjun.parsing.Parameter.needs_injector": {"tf": 1}, "tanjun.parsing.Parameter.bind_client": {"tf": 1}, "tanjun.parsing.Parameter.bind_component": {"tf": 1}, "tanjun.parsing.Parameter.convert": {"tf": 1}, "tanjun.parsing.Parameter.copy": {"tf": 1}, "tanjun.parsing.ParseableProto": {"tf": 1}, "tanjun.parsing.ParseableProto.__init__": {"tf": 1}, "tanjun.parsing.ParseableProto.callback": {"tf": 1}, "tanjun.parsing.ParseableProto.parser": {"tf": 1}, "tanjun.parsing.ParseableProto.set_parser": {"tf": 1}, "tanjun.parsing.ParseableProtoT": {"tf": 1}, "tanjun.parsing.ShlexParser": {"tf": 1}, "tanjun.parsing.ShlexParser.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.needs_injector": {"tf": 1}, "tanjun.parsing.ShlexParser.parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.copy": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.bind_client": {"tf": 1}, "tanjun.parsing.ShlexParser.bind_component": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}, "tanjun.parsing.UndefinedDefaultT": {"tf": 1}, "tanjun.parsing.UndefinedDefaultT.__init__": {"tf": 1}, "tanjun.parsing.UNDEFINED_DEFAULT": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.parsing.with_parser": {"tf": 1}, "tanjun.schedules": {"tf": 1}, "tanjun.schedules.AbstractSchedule": {"tf": 1}, "tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.AbstractSchedule.is_alive": {"tf": 1}, "tanjun.schedules.AbstractSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.AbstractSchedule.copy": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.AbstractSchedule.stop": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.is_alive": {"tf": 1}, "tanjun.schedules.IntervalSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.IntervalSchedule.copy": {"tf": 1}, "tanjun.schedules.IntervalSchedule.load_into_component": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.stop": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}, "tanjun.utilities": {"tf": 1}, "tanjun.utilities.gather_checks": {"tf": 1}, "tanjun.utilities.ALL_PERMISSIONS": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1}, "tanjun.utilities.CastedView.__init__": {"tf": 1}, "tanjun.utilities.DM_PERMISSIONS": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}, "tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 1372, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.TanjunError": {"tf": 1}, "tanjun.errors.TanjunError": {"tf": 1}}, "df": 2}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 1}}, "df": 6}}}}}, "y": {"docs": {"tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Hooks.trigger_error": {"tf": 1}, "tanjun.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.Hooks.trigger_success": {"tf": 1}, "tanjun.abc.Hooks.trigger_error": {"tf": 1}, "tanjun.abc.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.abc.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.trigger_success": {"tf": 1}, "tanjun.hooks.Hooks.trigger_error": {"tf": 1}, "tanjun.hooks.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.trigger_success": {"tf": 1}}, "df": 12, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.Context.triggering_name": {"tf": 1}, "tanjun.abc.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.abc.MessageContext.triggering_name": {"tf": 1}, "tanjun.abc.MessageContext.set_triggering_name": {"tf": 1}, "tanjun.context.MessageContext.triggering_name": {"tf": 1}, "tanjun.context.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_name": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_prefix": {"tf": 1}, "tanjun.context.SlashContext.triggering_name": {"tf": 1}}, "df": 9}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.abc.SlashOption.type": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.context.SlashOption.type": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.Injected.type": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.injecting.TypeDescriptor.type": {"tf": 1}}, "df": 11, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.injecting.TypeDescriptor": {"tf": 1}, "tanjun.injecting.TypeDescriptor.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.type": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}}, "df": 7}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.conversion.ToPresence": {"tf": 1}, "tanjun.conversion.ToPresence.__init__": {"tf": 1}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}}, "df": 6}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.TooManyArgumentsError": {"tf": 1}, "tanjun.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.TooManyArgumentsError.parameter": {"tf": 1}, "tanjun.errors.TooManyArgumentsError": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.parameter": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.conversion.ToChannel": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.conversion.ToChannel.async_caches": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1}}, "df": 6}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.conversion.ToEmoji": {"tf": 1}, "tanjun.conversion.ToEmoji.__init__": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}}, "df": 6}}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.conversion.ToGuild": {"tf": 1}, "tanjun.conversion.ToGuild.__init__": {"tf": 1}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}}, "df": 6}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.conversion.ToInvite": {"tf": 1}, "tanjun.conversion.ToInvite.__init__": {"tf": 1}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}}, "df": 6, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"tanjun.conversion.ToInviteWithMetadata": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.__init__": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.conversion.ToMember": {"tf": 1}, "tanjun.conversion.ToMember.__init__": {"tf": 1}, "tanjun.conversion.ToMember.async_caches": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}}, "df": 6}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.conversion.ToRole": {"tf": 1}, "tanjun.conversion.ToRole.__init__": {"tf": 1}, "tanjun.conversion.ToRole.async_caches": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}}, "df": 6}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.conversion.ToUser": {"tf": 1}, "tanjun.conversion.ToUser.__init__": {"tf": 1}, "tanjun.conversion.ToUser.async_caches": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}}, "df": 6}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.conversion.ToVoiceState": {"tf": 1}, "tanjun.conversion.ToVoiceState.__init__": {"tf": 1}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}}, "df": 6}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.context.SlashContext.start_defer_timer": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.message_accepts": {"tf": 1}, "tanjun.Client.is_human_only": {"tf": 1}, "tanjun.Client.cache": {"tf": 1}, "tanjun.Client.checks": {"tf": 1}, "tanjun.Client.components": {"tf": 1}, "tanjun.Client.events": {"tf": 1}, "tanjun.Client.listeners": {"tf": 1}, "tanjun.Client.hooks": {"tf": 1}, "tanjun.Client.slash_hooks": {"tf": 1}, "tanjun.Client.is_alive": {"tf": 1}, "tanjun.Client.loop": {"tf": 1}, "tanjun.Client.message_hooks": {"tf": 1}, "tanjun.Client.metadata": {"tf": 1}, "tanjun.Client.prefix_getter": {"tf": 1}, "tanjun.Client.prefixes": {"tf": 1}, "tanjun.Client.rest": {"tf": 1}, "tanjun.Client.server": {"tf": 1}, "tanjun.Client.shards": {"tf": 1}, "tanjun.Client.voice": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.set_global_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.Client.set_message_accepts": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.remove_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.check": {"tf": 1}, "tanjun.Client.add_component": {"tf": 1}, "tanjun.Client.get_component_by_name": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.remove_component_by_name": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.dispatch_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.get_client_callbacks": {"tf": 1.4142135623730951}, "tanjun.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.remove_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.remove_prefix": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.Client.iter_commands": {"tf": 1}, "tanjun.Client.iter_message_commands": {"tf": 1}, "tanjun.Client.iter_slash_commands": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Client.close": {"tf": 1}, "tanjun.Client.open": {"tf": 1}, "tanjun.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.Client.on_message_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.MessageCommand.bind_client": {"tf": 1}, "tanjun.MessageCommandGroup.bind_client": {"tf": 1}, "tanjun.SlashCommand.bind_client": {"tf": 1}, "tanjun.Component.client": {"tf": 1}, "tanjun.Component.add_client_callback": {"tf": 1}, "tanjun.Component.get_client_callbacks": {"tf": 1}, "tanjun.Component.remove_client_callback": {"tf": 1}, "tanjun.Component.with_client_callback": {"tf": 1}, "tanjun.Component.bind_client": {"tf": 1}, "tanjun.Component.unbind_client": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.ShlexParser.bind_client": {"tf": 1}, "tanjun.abc.Context.client": {"tf": 1}, "tanjun.abc.ExecutableCommand.bind_client": {"tf": 1}, "tanjun.abc.Component.client": {"tf": 1}, "tanjun.abc.Component.bind_client": {"tf": 1}, "tanjun.abc.Component.unbind_client": {"tf": 1}, "tanjun.abc.Client": {"tf": 1}, "tanjun.abc.Client.cache": {"tf": 1}, "tanjun.abc.Client.components": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.events": {"tf": 1}, "tanjun.abc.Client.is_alive": {"tf": 1}, "tanjun.abc.Client.listeners": {"tf": 1}, "tanjun.abc.Client.loop": {"tf": 1}, "tanjun.abc.Client.metadata": {"tf": 1}, "tanjun.abc.Client.prefixes": {"tf": 1}, "tanjun.abc.Client.rest": {"tf": 1}, "tanjun.abc.Client.server": {"tf": 1}, "tanjun.abc.Client.shards": {"tf": 1}, "tanjun.abc.Client.voice": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.add_component": {"tf": 1}, "tanjun.abc.Client.get_component_by_name": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1.4142135623730951}, "tanjun.abc.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.remove_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.abc.Client.iter_commands": {"tf": 1}, "tanjun.abc.Client.iter_message_commands": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.message_accepts": {"tf": 1}, "tanjun.clients.Client.is_human_only": {"tf": 1}, "tanjun.clients.Client.cache": {"tf": 1}, "tanjun.clients.Client.checks": {"tf": 1}, "tanjun.clients.Client.components": {"tf": 1}, "tanjun.clients.Client.events": {"tf": 1}, "tanjun.clients.Client.listeners": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.clients.Client.slash_hooks": {"tf": 1}, "tanjun.clients.Client.is_alive": {"tf": 1}, "tanjun.clients.Client.loop": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.clients.Client.metadata": {"tf": 1}, "tanjun.clients.Client.prefix_getter": {"tf": 1}, "tanjun.clients.Client.prefixes": {"tf": 1}, "tanjun.clients.Client.rest": {"tf": 1}, "tanjun.clients.Client.server": {"tf": 1}, "tanjun.clients.Client.shards": {"tf": 1}, "tanjun.clients.Client.voice": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.set_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.set_message_accepts": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.remove_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.check": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.get_component_by_name": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1.4142135623730951}, "tanjun.clients.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.Client.iter_commands": {"tf": 1}, "tanjun.clients.Client.iter_message_commands": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.close": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.clients.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.on_message_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.commands.MessageCommand.bind_client": {"tf": 1}, "tanjun.commands.MessageCommandGroup.bind_client": {"tf": 1}, "tanjun.commands.PartialCommand.bind_client": {"tf": 1}, "tanjun.commands.SlashCommand.bind_client": {"tf": 1}, "tanjun.components.Component.client": {"tf": 1}, "tanjun.components.Component.add_client_callback": {"tf": 1}, "tanjun.components.Component.get_client_callbacks": {"tf": 1}, "tanjun.components.Component.remove_client_callback": {"tf": 1}, "tanjun.components.Component.with_client_callback": {"tf": 1}, "tanjun.components.Component.bind_client": {"tf": 1}, "tanjun.components.Component.unbind_client": {"tf": 1}, "tanjun.context.SlashContext.client": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.injection_client": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.injection_client": {"tf": 1}, "tanjun.parsing.AbstractParser.bind_client": {"tf": 1}, "tanjun.parsing.Parameter.bind_client": {"tf": 1}, "tanjun.parsing.ShlexParser.bind_client": {"tf": 1}}, "df": 225, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.ClientCallbackNames": {"tf": 1}, "tanjun.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.abc.ClientCallbackNames": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.clients.ClientCallbackNames": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTING": {"tf": 1}}, "df": 27}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.ClientLoader": {"tf": 1}, "tanjun.abc.ClientLoader.load": {"tf": 1}, "tanjun.abc.ClientLoader.unload": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {"tanjun.clients": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.message_accepts": {"tf": 1}, "tanjun.clients.Client.is_human_only": {"tf": 1}, "tanjun.clients.Client.cache": {"tf": 1}, "tanjun.clients.Client.checks": {"tf": 1}, "tanjun.clients.Client.components": {"tf": 1}, "tanjun.clients.Client.events": {"tf": 1}, "tanjun.clients.Client.listeners": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.clients.Client.slash_hooks": {"tf": 1}, "tanjun.clients.Client.is_alive": {"tf": 1}, "tanjun.clients.Client.loop": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.clients.Client.metadata": {"tf": 1}, "tanjun.clients.Client.prefix_getter": {"tf": 1}, "tanjun.clients.Client.prefixes": {"tf": 1}, "tanjun.clients.Client.rest": {"tf": 1}, "tanjun.clients.Client.server": {"tf": 1}, "tanjun.clients.Client.shards": {"tf": 1}, "tanjun.clients.Client.voice": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.set_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.set_message_accepts": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.remove_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.check": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.get_component_by_name": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.Client.iter_commands": {"tf": 1}, "tanjun.clients.Client.iter_message_commands": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.close": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.clients.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.on_message_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.clients.ClientCallbackNames": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.clients.PrefixGetterSigT": {"tf": 1}}, "df": 94}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.close": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.close": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.abc.Component.close": {"tf": 1}, "tanjun.clients.Client.close": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.close": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.close": {"tf": 1}}, "df": 15, "d": {"docs": {"tanjun.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSED": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSING": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.Client.add_component": {"tf": 1}, "tanjun.Client.get_component_by_name": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.remove_component_by_name": {"tf": 1}, "tanjun.MessageCommand.bind_component": {"tf": 1}, "tanjun.MessageCommand.load_into_component": {"tf": 1}, "tanjun.MessageCommandGroup.bind_component": {"tf": 1}, "tanjun.SlashCommand.load_into_component": {"tf": 1}, "tanjun.Component": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.checks": {"tf": 1}, "tanjun.Component.client": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.hooks": {"tf": 1}, "tanjun.Component.loop": {"tf": 1}, "tanjun.Component.name": {"tf": 1}, "tanjun.Component.schedules": {"tf": 1}, "tanjun.Component.slash_commands": {"tf": 1}, "tanjun.Component.slash_hooks": {"tf": 1}, "tanjun.Component.message_commands": {"tf": 1}, "tanjun.Component.message_hooks": {"tf": 1}, "tanjun.Component.needs_injector": {"tf": 1}, "tanjun.Component.listeners": {"tf": 1}, "tanjun.Component.metadata": {"tf": 1}, "tanjun.Component.copy": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.Component.set_slash_hooks": {"tf": 1}, "tanjun.Component.set_message_hooks": {"tf": 1}, "tanjun.Component.set_hooks": {"tf": 1}, "tanjun.Component.add_check": {"tf": 1}, "tanjun.Component.remove_check": {"tf": 1}, "tanjun.Component.with_check": {"tf": 1}, "tanjun.Component.add_client_callback": {"tf": 1}, "tanjun.Component.get_client_callbacks": {"tf": 1}, "tanjun.Component.remove_client_callback": {"tf": 1}, "tanjun.Component.with_client_callback": {"tf": 1}, "tanjun.Component.add_command": {"tf": 1}, "tanjun.Component.remove_command": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1}, "tanjun.Component.add_slash_command": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.with_slash_command": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.with_message_command": {"tf": 1}, "tanjun.Component.add_listener": {"tf": 1}, "tanjun.Component.remove_listener": {"tf": 1}, "tanjun.Component.with_listener": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.Component.bind_client": {"tf": 1}, "tanjun.Component.unbind_client": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.Component.add_schedule": {"tf": 1}, "tanjun.Component.remove_schedule": {"tf": 1}, "tanjun.Component.with_schedule": {"tf": 1}, "tanjun.Component.close": {"tf": 1}, "tanjun.Component.open": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.ShlexParser.bind_component": {"tf": 1}, "tanjun.abc.Context.component": {"tf": 1}, "tanjun.abc.Context.set_component": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.ExecutableCommand.component": {"tf": 1}, "tanjun.abc.ExecutableCommand.bind_component": {"tf": 1}, "tanjun.abc.Component": {"tf": 1}, "tanjun.abc.Component.client": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.loop": {"tf": 1}, "tanjun.abc.Component.name": {"tf": 1}, "tanjun.abc.Component.slash_commands": {"tf": 1}, "tanjun.abc.Component.message_commands": {"tf": 1}, "tanjun.abc.Component.listeners": {"tf": 1}, "tanjun.abc.Component.metadata": {"tf": 1}, "tanjun.abc.Component.add_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.with_slash_command": {"tf": 1}, "tanjun.abc.Component.add_message_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.with_message_command": {"tf": 1}, "tanjun.abc.Component.add_listener": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Component.with_listener": {"tf": 1}, "tanjun.abc.Component.bind_client": {"tf": 1}, "tanjun.abc.Component.unbind_client": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Component.close": {"tf": 1}, "tanjun.abc.Component.open": {"tf": 1}, "tanjun.abc.Client.add_component": {"tf": 1}, "tanjun.abc.Client.get_component_by_name": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.get_component_by_name": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.commands.MessageCommand.bind_component": {"tf": 1}, "tanjun.commands.MessageCommand.load_into_component": {"tf": 1}, "tanjun.commands.MessageCommandGroup.bind_component": {"tf": 1}, "tanjun.commands.PartialCommand.component": {"tf": 1}, "tanjun.commands.PartialCommand.bind_component": {"tf": 1}, "tanjun.commands.BaseSlashCommand.load_into_component": {"tf": 1}, "tanjun.commands.SlashCommand.load_into_component": {"tf": 1}, "tanjun.components.Component": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.checks": {"tf": 1}, "tanjun.components.Component.client": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.hooks": {"tf": 1}, "tanjun.components.Component.loop": {"tf": 1}, "tanjun.components.Component.name": {"tf": 1}, "tanjun.components.Component.schedules": {"tf": 1}, "tanjun.components.Component.slash_commands": {"tf": 1}, "tanjun.components.Component.slash_hooks": {"tf": 1}, "tanjun.components.Component.message_commands": {"tf": 1}, "tanjun.components.Component.message_hooks": {"tf": 1}, "tanjun.components.Component.needs_injector": {"tf": 1}, "tanjun.components.Component.listeners": {"tf": 1}, "tanjun.components.Component.metadata": {"tf": 1}, "tanjun.components.Component.copy": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.set_slash_hooks": {"tf": 1}, "tanjun.components.Component.set_message_hooks": {"tf": 1}, "tanjun.components.Component.set_hooks": {"tf": 1}, "tanjun.components.Component.add_check": {"tf": 1}, "tanjun.components.Component.remove_check": {"tf": 1}, "tanjun.components.Component.with_check": {"tf": 1}, "tanjun.components.Component.add_client_callback": {"tf": 1}, "tanjun.components.Component.get_client_callbacks": {"tf": 1}, "tanjun.components.Component.remove_client_callback": {"tf": 1}, "tanjun.components.Component.with_client_callback": {"tf": 1}, "tanjun.components.Component.add_command": {"tf": 1}, "tanjun.components.Component.remove_command": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1}, "tanjun.components.Component.add_slash_command": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.with_slash_command": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.with_message_command": {"tf": 1}, "tanjun.components.Component.add_listener": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}, "tanjun.components.Component.with_listener": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.components.Component.bind_client": {"tf": 1}, "tanjun.components.Component.unbind_client": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.components.Component.add_schedule": {"tf": 1}, "tanjun.components.Component.remove_schedule": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1}, "tanjun.components.Component.close": {"tf": 1}, "tanjun.components.Component.open": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}, "tanjun.components.AbstractComponentLoader.load_into_component": {"tf": 1}, "tanjun.parsing.AbstractParser.bind_component": {"tf": 1}, "tanjun.parsing.Parameter.bind_component": {"tf": 1}, "tanjun.parsing.ShlexParser.bind_component": {"tf": 1}, "tanjun.schedules.IntervalSchedule.load_into_component": {"tf": 1}}, "df": 179, "s": {"docs": {"tanjun.Client.components": {"tf": 1}, "tanjun.abc.Client.components": {"tf": 1}, "tanjun.clients.Client.components": {"tf": 1}, "tanjun.components": {"tf": 1}, "tanjun.components.CommandT": {"tf": 1}, "tanjun.components.Component": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.checks": {"tf": 1}, "tanjun.components.Component.client": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.hooks": {"tf": 1}, "tanjun.components.Component.loop": {"tf": 1}, "tanjun.components.Component.name": {"tf": 1}, "tanjun.components.Component.schedules": {"tf": 1}, "tanjun.components.Component.slash_commands": {"tf": 1}, "tanjun.components.Component.slash_hooks": {"tf": 1}, "tanjun.components.Component.message_commands": {"tf": 1}, "tanjun.components.Component.message_hooks": {"tf": 1}, "tanjun.components.Component.needs_injector": {"tf": 1}, "tanjun.components.Component.listeners": {"tf": 1}, "tanjun.components.Component.metadata": {"tf": 1}, "tanjun.components.Component.copy": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.set_slash_hooks": {"tf": 1}, "tanjun.components.Component.set_message_hooks": {"tf": 1}, "tanjun.components.Component.set_hooks": {"tf": 1}, "tanjun.components.Component.add_check": {"tf": 1}, "tanjun.components.Component.remove_check": {"tf": 1}, "tanjun.components.Component.with_check": {"tf": 1}, "tanjun.components.Component.add_client_callback": {"tf": 1}, "tanjun.components.Component.get_client_callbacks": {"tf": 1}, "tanjun.components.Component.remove_client_callback": {"tf": 1}, "tanjun.components.Component.with_client_callback": {"tf": 1}, "tanjun.components.Component.add_command": {"tf": 1}, "tanjun.components.Component.remove_command": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1}, "tanjun.components.Component.add_slash_command": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.with_slash_command": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.with_message_command": {"tf": 1}, "tanjun.components.Component.add_listener": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}, "tanjun.components.Component.with_listener": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.components.Component.bind_client": {"tf": 1}, "tanjun.components.Component.unbind_client": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.components.Component.add_schedule": {"tf": 1}, "tanjun.components.Component.remove_schedule": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1}, "tanjun.components.Component.close": {"tf": 1}, "tanjun.components.Component.open": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}, "tanjun.components.AbstractComponentLoader": {"tf": 1}, "tanjun.components.AbstractComponentLoader.load_into_component": {"tf": 1}, "tanjun.components.OnCallbackSig": {"tf": 1}, "tanjun.components.OnCallbackSigT": {"tf": 1}, "tanjun.components.WithCommandReturnSig": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}}, "df": 77}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.MessageCommandGroup.find_command": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.Component.add_command": {"tf": 1}, "tanjun.Component.remove_command": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1}, "tanjun.Component.add_slash_command": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.with_slash_command": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.with_message_command": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.abc.Context.command": {"tf": 1}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.abc.MessageContext.command": {"tf": 1}, "tanjun.abc.MessageContext.set_command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.abc.SlashContext.command": {"tf": 1}, "tanjun.abc.SlashContext.set_command": {"tf": 1}, "tanjun.abc.Component.add_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.with_slash_command": {"tf": 1}, "tanjun.abc.Component.add_message_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.with_message_command": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.find_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.components.Component.add_command": {"tf": 1}, "tanjun.components.Component.remove_command": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1}, "tanjun.components.Component.add_slash_command": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.with_slash_command": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.with_message_command": {"tf": 1}, "tanjun.context.MessageContext.command": {"tf": 1}, "tanjun.context.MessageContext.set_command": {"tf": 1}, "tanjun.context.SlashContext.command": {"tf": 1}, "tanjun.context.SlashContext.set_command": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}}, "df": 81, "s": {"docs": {"tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.set_global_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.iter_commands": {"tf": 1}, "tanjun.Client.iter_message_commands": {"tf": 1}, "tanjun.Client.iter_slash_commands": {"tf": 1}, "tanjun.MessageCommandGroup.commands": {"tf": 1}, "tanjun.SlashCommandGroup.commands": {"tf": 1}, "tanjun.Component.slash_commands": {"tf": 1}, "tanjun.Component.message_commands": {"tf": 1}, "tanjun.abc.MessageCommandGroup.commands": {"tf": 1}, "tanjun.abc.SlashCommandGroup.commands": {"tf": 1}, "tanjun.abc.Component.slash_commands": {"tf": 1}, "tanjun.abc.Component.message_commands": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.iter_commands": {"tf": 1}, "tanjun.abc.Client.iter_message_commands": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.set_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.iter_commands": {"tf": 1}, "tanjun.clients.Client.iter_message_commands": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1}, "tanjun.commands": {"tf": 1}, "tanjun.commands.AnyMessageCommandT": {"tf": 1}, "tanjun.commands.ConverterSig": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommand": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.MessageCommand.callback": {"tf": 1}, "tanjun.commands.MessageCommand.names": {"tf": 1}, "tanjun.commands.MessageCommand.needs_injector": {"tf": 1}, "tanjun.commands.MessageCommand.parent": {"tf": 1}, "tanjun.commands.MessageCommand.parser": {"tf": 1}, "tanjun.commands.MessageCommand.bind_client": {"tf": 1}, "tanjun.commands.MessageCommand.bind_component": {"tf": 1}, "tanjun.commands.MessageCommand.copy": {"tf": 1}, "tanjun.commands.MessageCommand.set_parent": {"tf": 1}, "tanjun.commands.MessageCommand.set_parser": {"tf": 1}, "tanjun.commands.MessageCommand.check_context": {"tf": 1}, "tanjun.commands.MessageCommand.execute": {"tf": 1}, "tanjun.commands.MessageCommand.load_into_component": {"tf": 1}, "tanjun.commands.MessageCommandGroup": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.MessageCommandGroup.commands": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommandGroup.is_strict": {"tf": 1}, "tanjun.commands.MessageCommandGroup.copy": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.bind_client": {"tf": 1}, "tanjun.commands.MessageCommandGroup.bind_component": {"tf": 1}, "tanjun.commands.MessageCommandGroup.find_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.execute": {"tf": 1}, "tanjun.commands.PartialCommand": {"tf": 1}, "tanjun.commands.PartialCommand.checks": {"tf": 1}, "tanjun.commands.PartialCommand.component": {"tf": 1}, "tanjun.commands.PartialCommand.hooks": {"tf": 1}, "tanjun.commands.PartialCommand.metadata": {"tf": 1}, "tanjun.commands.PartialCommand.needs_injector": {"tf": 1}, "tanjun.commands.PartialCommand.copy": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1}, "tanjun.commands.PartialCommand.add_check": {"tf": 1}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1}, "tanjun.commands.PartialCommand.with_check": {"tf": 1}, "tanjun.commands.PartialCommand.bind_client": {"tf": 1}, "tanjun.commands.PartialCommand.bind_component": {"tf": 1}, "tanjun.commands.BaseSlashCommand": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.description": {"tf": 1}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.commands.BaseSlashCommand.name": {"tf": 1}, "tanjun.commands.BaseSlashCommand.parent": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_parent": {"tf": 1}, "tanjun.commands.BaseSlashCommand.check_context": {"tf": 1}, "tanjun.commands.BaseSlashCommand.copy": {"tf": 1}, "tanjun.commands.BaseSlashCommand.load_into_component": {"tf": 1}, "tanjun.commands.SlashCommand": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.callback": {"tf": 1}, "tanjun.commands.SlashCommand.needs_injector": {"tf": 1}, "tanjun.commands.SlashCommand.bind_client": {"tf": 1}, "tanjun.commands.SlashCommand.build": {"tf": 1}, "tanjun.commands.SlashCommand.load_into_component": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommand.execute": {"tf": 1}, "tanjun.commands.SlashCommand.copy": {"tf": 1}, "tanjun.commands.SlashCommandGroup": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.commands": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.build": {"tf": 1}, "tanjun.commands.SlashCommandGroup.copy": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.execute": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.components.Component.slash_commands": {"tf": 1}, "tanjun.components.Component.message_commands": {"tf": 1}}, "df": 127}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.CommandError": {"tf": 1}, "tanjun.CommandError.__init__": {"tf": 1}, "tanjun.CommandError.message": {"tf": 1}, "tanjun.errors.CommandError": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}, "tanjun.errors.CommandError.message": {"tf": 1}}, "df": 6}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.CommandCallbackSig": {"tf": 1}}, "df": 1, "t": {"docs": {"tanjun.abc.CommandCallbackSigT": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {"tanjun.checks.CommandT": {"tf": 1}, "tanjun.components.CommandT": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.MessageCommand.copy": {"tf": 1}, "tanjun.MessageCommandGroup.copy": {"tf": 1}, "tanjun.SlashCommand.copy": {"tf": 1}, "tanjun.SlashCommandGroup.copy": {"tf": 1}, "tanjun.Component.copy": {"tf": 1}, "tanjun.Hooks.copy": {"tf": 1}, "tanjun.ShlexParser.copy": {"tf": 1}, "tanjun.abc.Hooks.copy": {"tf": 1}, "tanjun.abc.ExecutableCommand.copy": {"tf": 1}, "tanjun.abc.MessageCommand.copy": {"tf": 1}, "tanjun.commands.MessageCommand.copy": {"tf": 1}, "tanjun.commands.MessageCommandGroup.copy": {"tf": 1}, "tanjun.commands.PartialCommand.copy": {"tf": 1}, "tanjun.commands.BaseSlashCommand.copy": {"tf": 1}, "tanjun.commands.SlashCommand.copy": {"tf": 1}, "tanjun.commands.SlashCommandGroup.copy": {"tf": 1}, "tanjun.components.Component.copy": {"tf": 1}, "tanjun.hooks.Hooks.copy": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.copy": {"tf": 1}, "tanjun.parsing.AbstractParser.copy": {"tf": 1}, "tanjun.parsing.Parameter.copy": {"tf": 1}, "tanjun.parsing.ShlexParser.copy": {"tf": 1}, "tanjun.schedules.AbstractSchedule.copy": {"tf": 1}, "tanjun.schedules.IntervalSchedule.copy": {"tf": 1}}, "df": 24}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.MessageCommand.check_context": {"tf": 1}, "tanjun.abc.Context": {"tf": 1}, "tanjun.abc.Context.author": {"tf": 1}, "tanjun.abc.Context.channel_id": {"tf": 1}, "tanjun.abc.Context.cache": {"tf": 1}, "tanjun.abc.Context.client": {"tf": 1}, "tanjun.abc.Context.component": {"tf": 1}, "tanjun.abc.Context.command": {"tf": 1}, "tanjun.abc.Context.created_at": {"tf": 1}, "tanjun.abc.Context.events": {"tf": 1}, "tanjun.abc.Context.guild_id": {"tf": 1}, "tanjun.abc.Context.has_responded": {"tf": 1}, "tanjun.abc.Context.is_human": {"tf": 1}, "tanjun.abc.Context.member": {"tf": 1}, "tanjun.abc.Context.server": {"tf": 1}, "tanjun.abc.Context.rest": {"tf": 1}, "tanjun.abc.Context.shards": {"tf": 1}, "tanjun.abc.Context.voice": {"tf": 1}, "tanjun.abc.Context.triggering_name": {"tf": 1}, "tanjun.abc.Context.set_component": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.abc.Context.delete_initial_response": {"tf": 1}, "tanjun.abc.Context.delete_last_response": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.fetch_initial_response": {"tf": 1}, "tanjun.abc.Context.fetch_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageCommand.check_context": {"tf": 1}, "tanjun.abc.BaseSlashCommand.check_context": {"tf": 1}, "tanjun.commands.MessageCommand.check_context": {"tf": 1}, "tanjun.commands.BaseSlashCommand.check_context": {"tf": 1}, "tanjun.context": {"tf": 1}, "tanjun.context.MessageContext": {"tf": 1}, "tanjun.context.MessageContext.__init__": {"tf": 1}, "tanjun.context.MessageContext.author": {"tf": 1}, "tanjun.context.MessageContext.channel_id": {"tf": 1}, "tanjun.context.MessageContext.command": {"tf": 1}, "tanjun.context.MessageContext.content": {"tf": 1}, "tanjun.context.MessageContext.created_at": {"tf": 1}, "tanjun.context.MessageContext.guild_id": {"tf": 1}, "tanjun.context.MessageContext.has_responded": {"tf": 1}, "tanjun.context.MessageContext.is_human": {"tf": 1}, "tanjun.context.MessageContext.member": {"tf": 1}, "tanjun.context.MessageContext.message": {"tf": 1}, "tanjun.context.MessageContext.triggering_name": {"tf": 1}, "tanjun.context.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.context.MessageContext.shard": {"tf": 1}, "tanjun.context.MessageContext.set_command": {"tf": 1}, "tanjun.context.MessageContext.set_content": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_name": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_prefix": {"tf": 1}, "tanjun.context.MessageContext.delete_initial_response": {"tf": 1}, "tanjun.context.MessageContext.delete_last_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_initial_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.ResponseTypeT": {"tf": 1}, "tanjun.context.SlashContext": {"tf": 1}, "tanjun.context.SlashContext.__init__": {"tf": 1}, "tanjun.context.SlashContext.author": {"tf": 1}, "tanjun.context.SlashContext.channel_id": {"tf": 1}, "tanjun.context.SlashContext.client": {"tf": 1}, "tanjun.context.SlashContext.command": {"tf": 1}, "tanjun.context.SlashContext.created_at": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.expires_at": {"tf": 1}, "tanjun.context.SlashContext.guild_id": {"tf": 1}, "tanjun.context.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.context.SlashContext.has_responded": {"tf": 1}, "tanjun.context.SlashContext.is_human": {"tf": 1}, "tanjun.context.SlashContext.member": {"tf": 1}, "tanjun.context.SlashContext.triggering_name": {"tf": 1}, "tanjun.context.SlashContext.interaction": {"tf": 1}, "tanjun.context.SlashContext.options": {"tf": 1}, "tanjun.context.SlashContext.cancel_defer": {"tf": 1}, "tanjun.context.SlashContext.get_response_future": {"tf": 1}, "tanjun.context.SlashContext.mark_not_found": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.context.SlashContext.set_command": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.context.SlashContext.defer": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_initial_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.context.SlashOption": {"tf": 1}, "tanjun.context.SlashOption.__init__": {"tf": 1}, "tanjun.context.SlashOption.name": {"tf": 1}, "tanjun.context.SlashOption.type": {"tf": 1}, "tanjun.context.SlashOption.value": {"tf": 1}, "tanjun.context.SlashOption.resolve_value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}}, "df": 110}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.MessageContext.content": {"tf": 1}, "tanjun.abc.MessageContext.set_content": {"tf": 1}, "tanjun.context.MessageContext.content": {"tf": 1}, "tanjun.context.MessageContext.set_content": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}}, "df": 4}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.conversion": {"tf": 1}, "tanjun.conversion.ArgumentT": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1}, "tanjun.conversion.parse_snowflake": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}, "tanjun.conversion.search_snowflakes": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}, "tanjun.conversion.to_bool": {"tf": 1}, "tanjun.conversion.to_channel": {"tf": 1}, "tanjun.conversion.to_color": {"tf": 1}, "tanjun.conversion.to_colour": {"tf": 1}, "tanjun.conversion.to_datetime": {"tf": 1}, "tanjun.conversion.to_emoji": {"tf": 1}, "tanjun.conversion.to_guild": {"tf": 1}, "tanjun.conversion.to_invite": {"tf": 1}, "tanjun.conversion.to_invite_with_metadata": {"tf": 1}, "tanjun.conversion.to_member": {"tf": 1}, "tanjun.conversion.to_presence": {"tf": 1}, "tanjun.conversion.to_role": {"tf": 1}, "tanjun.conversion.to_snowflake": {"tf": 1}, "tanjun.conversion.to_user": {"tf": 1}, "tanjun.conversion.to_voice_state": {"tf": 1}, "tanjun.conversion.ToChannel": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.conversion.ToChannel.async_caches": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji": {"tf": 1}, "tanjun.conversion.ToEmoji.__init__": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild": {"tf": 1}, "tanjun.conversion.ToGuild.__init__": {"tf": 1}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite": {"tf": 1}, "tanjun.conversion.ToInvite.__init__": {"tf": 1}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.__init__": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember": {"tf": 1}, "tanjun.conversion.ToMember.__init__": {"tf": 1}, "tanjun.conversion.ToMember.async_caches": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence": {"tf": 1}, "tanjun.conversion.ToPresence.__init__": {"tf": 1}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole": {"tf": 1}, "tanjun.conversion.ToRole.__init__": {"tf": 1}, "tanjun.conversion.ToRole.async_caches": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser": {"tf": 1}, "tanjun.conversion.ToUser.__init__": {"tf": 1}, "tanjun.conversion.ToUser.async_caches": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState": {"tf": 1}, "tanjun.conversion.ToVoiceState.__init__": {"tf": 1}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}}, "df": 88, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.ConversionError": {"tf": 1}, "tanjun.ConversionError.__init__": {"tf": 1}, "tanjun.ConversionError.errors": {"tf": 1}, "tanjun.ConversionError.parameter": {"tf": 1}, "tanjun.errors.ConversionError": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1}, "tanjun.errors.ConversionError.errors": {"tf": 1}, "tanjun.errors.ConversionError.parameter": {"tf": 1}}, "df": 8}}}}}}}}}, "t": {"docs": {"tanjun.parsing.Parameter.convert": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.parsing.Parameter.converters": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.commands.ConverterSig": {"tf": 1}, "tanjun.parsing.ConverterSig": {"tf": 1}}, "df": 2}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.to_color": {"tf": 1}, "tanjun.conversion.to_color": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.to_colour": {"tf": 1}, "tanjun.conversion.to_colour": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 13, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.schedules.AbstractSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.IntervalSchedule.iteration_count": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.with_check": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.remove_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.check": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.MessageCommand.check_context": {"tf": 1}, "tanjun.Component.add_check": {"tf": 1}, "tanjun.Component.remove_check": {"tf": 1}, "tanjun.Component.with_check": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.abc.ExecutableCommand.add_check": {"tf": 1}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1}, "tanjun.abc.MessageCommand.check_context": {"tf": 1}, "tanjun.abc.BaseSlashCommand.check_context": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.checks.with_check": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.remove_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.check": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.commands.MessageCommand.check_context": {"tf": 1}, "tanjun.commands.PartialCommand.add_check": {"tf": 1}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1}, "tanjun.commands.PartialCommand.with_check": {"tf": 1}, "tanjun.commands.BaseSlashCommand.check_context": {"tf": 1}, "tanjun.components.Component.add_check": {"tf": 1}, "tanjun.components.Component.remove_check": {"tf": 1}, "tanjun.components.Component.with_check": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1}}, "df": 61, "s": {"docs": {"tanjun.with_all_checks": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1}, "tanjun.Client.checks": {"tf": 1}, "tanjun.Component.checks": {"tf": 1}, "tanjun.abc.ExecutableCommand.checks": {"tf": 1}, "tanjun.checks": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 1.4142135623730951}, "tanjun.checks.any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.CallbackReturnT": {"tf": 1}, "tanjun.checks.CommandT": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_check": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients.Client.checks": {"tf": 1}, "tanjun.commands.PartialCommand.checks": {"tf": 1}, "tanjun.components.Component.checks": {"tf": 1}, "tanjun.utilities.gather_checks": {"tf": 1}}, "df": 38, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.CheckSig": {"tf": 1}}, "df": 1, "t": {"docs": {"tanjun.abc.CheckSigT": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.to_channel": {"tf": 1}, "tanjun.BucketResource.CHANNEL": {"tf": 1}, "tanjun.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.abc.Context.channel_id": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.context.MessageContext.channel_id": {"tf": 1}, "tanjun.context.SlashContext.channel_id": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.to_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"tf": 1}}, "df": 25, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.cache": {"tf": 1}, "tanjun.abc.Context.cache": {"tf": 1}, "tanjun.abc.Client.cache": {"tf": 1}, "tanjun.clients.Client.cache": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.async_cache.CacheMissError": {"tf": 1}, "tanjun.dependencies.async_cache.EntryNotFound": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.SfCache": {"tf": 1}, "tanjun.dependencies.async_cache.SfChannelBound": {"tf": 1}, "tanjun.dependencies.async_cache.SfGuildBound": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.cache_result": {"tf": 1}}, "df": 49, "d": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"tf": 1}}, "df": 5}, "s": {"docs": {"tanjun.conversion.ToChannel.async_caches": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1}, "tanjun.conversion.ToMember.async_caches": {"tf": 1}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1}, "tanjun.conversion.ToRole.async_caches": {"tf": 1}, "tanjun.conversion.ToUser.async_caches": {"tf": 1}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1}}, "df": 10}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.dependencies.CacheIterator": {"tf": 1}, "tanjun.dependencies.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1}}, "df": 4}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.dependencies.CacheMissError": {"tf": 1}, "tanjun.dependencies.async_cache.CacheMissError": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.dispatch_client_callback": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.MessageCommand.callback": {"tf": 1}, "tanjun.SlashCommand.callback": {"tf": 1}, "tanjun.Component.add_client_callback": {"tf": 1}, "tanjun.Component.remove_client_callback": {"tf": 1}, "tanjun.Component.with_client_callback": {"tf": 1}, "tanjun.LazyConstant.callback": {"tf": 1}, "tanjun.abc.MessageCommand.callback": {"tf": 1}, "tanjun.abc.SlashCommand.callback": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.commands.MessageCommand.callback": {"tf": 1}, "tanjun.commands.SlashCommand.callback": {"tf": 1}, "tanjun.components.Component.add_client_callback": {"tf": 1}, "tanjun.components.Component.remove_client_callback": {"tf": 1}, "tanjun.components.Component.with_client_callback": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.callback": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.callback": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 1}, "tanjun.injecting.Injected.callback": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}, "tanjun.parsing.ParseableProto.callback": {"tf": 1}, "tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}}, "df": 42, "s": {"docs": {"tanjun.Client.get_client_callbacks": {"tf": 1}, "tanjun.Component.get_client_callbacks": {"tf": 1}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1}, "tanjun.components.Component.get_client_callbacks": {"tf": 1}, "tanjun.dependencies.callbacks": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.injecting.CallbackSig": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.checks.CallbackReturnT": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.injecting.CallbackDescriptor": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.callback": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.copy": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.utilities.calculate_everyone_permissions": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.context.SlashContext.cancel_defer": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"tanjun.utilities.CastedView": {"tf": 1}, "tanjun.utilities.CastedView.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {}, "df": 0, "x": {"docs": {"tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.on_message_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.clients.Client.on_message_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}}, "df": 10, "d": {"docs": {"tanjun.abc.Context.created_at": {"tf": 1}, "tanjun.context.MessageContext.created_at": {"tf": 1}, "tanjun.context.SlashContext.created_at": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.add_component": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.Component.add_check": {"tf": 1}, "tanjun.Component.add_client_callback": {"tf": 1}, "tanjun.Component.add_command": {"tf": 1}, "tanjun.Component.add_slash_command": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.add_listener": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.add_schedule": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.ExecutableCommand.add_check": {"tf": 1}, "tanjun.abc.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.abc.Component.add_slash_command": {"tf": 1}, "tanjun.abc.Component.add_message_command": {"tf": 1}, "tanjun.abc.Component.add_listener": {"tf": 1}, "tanjun.abc.Client.add_component": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.PartialCommand.add_check": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.components.Component.add_check": {"tf": 1}, "tanjun.components.Component.add_client_callback": {"tf": 1}, "tanjun.components.Component.add_command": {"tf": 1}, "tanjun.components.Component.add_slash_command": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.add_listener": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.add_schedule": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}}, "df": 90, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.with_author_permission_check": {"tf": 1}, "tanjun.abc.Context.author": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.context.MessageContext.author": {"tf": 1}, "tanjun.context.SlashContext.author": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.checks.AuthorPermissionCheck": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}, "o": {"docs": {"tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.message_accepts": {"tf": 1}, "tanjun.Client.set_message_accepts": {"tf": 1}, "tanjun.clients.Client.message_accepts": {"tf": 1}, "tanjun.clients.Client.set_message_accepts": {"tf": 1}}, "df": 4}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}}, "df": 8}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.is_alive": {"tf": 1}, "tanjun.abc.Client.is_alive": {"tf": 1}, "tanjun.clients.Client.is_alive": {"tf": 1}, "tanjun.schedules.AbstractSchedule.is_alive": {"tf": 1}, "tanjun.schedules.IntervalSchedule.is_alive": {"tf": 1}}, "df": 5}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.fetch_rest_application_id": {"tf": 1}}, "df": 11}}}}}}}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.AnyHooks": {"tf": 1}, "tanjun.abc.AnyHooks": {"tf": 1}, "tanjun.hooks.AnyHooks": {"tf": 1}}, "df": 3}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.commands.AnyMessageCommandT": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.parsing.Argument": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}}, "df": 10, "t": {"docs": {"tanjun.conversion.ArgumentT": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "c": {"docs": {"tanjun.abc": {"tf": 1}, "tanjun.abc.ClientLoader": {"tf": 1}, "tanjun.abc.ClientLoader.load": {"tf": 1}, "tanjun.abc.ClientLoader.unload": {"tf": 1}, "tanjun.abc.BaseSlashCommandT": {"tf": 1}, "tanjun.abc.CommandCallbackSig": {"tf": 1}, "tanjun.abc.CommandCallbackSigT": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.CheckSigT": {"tf": 1}, "tanjun.abc.Context": {"tf": 1}, "tanjun.abc.Context.author": {"tf": 1}, "tanjun.abc.Context.channel_id": {"tf": 1}, "tanjun.abc.Context.cache": {"tf": 1}, "tanjun.abc.Context.client": {"tf": 1}, "tanjun.abc.Context.component": {"tf": 1}, "tanjun.abc.Context.command": {"tf": 1}, "tanjun.abc.Context.created_at": {"tf": 1}, "tanjun.abc.Context.events": {"tf": 1}, "tanjun.abc.Context.guild_id": {"tf": 1}, "tanjun.abc.Context.has_responded": {"tf": 1}, "tanjun.abc.Context.is_human": {"tf": 1}, "tanjun.abc.Context.member": {"tf": 1}, "tanjun.abc.Context.server": {"tf": 1}, "tanjun.abc.Context.rest": {"tf": 1}, "tanjun.abc.Context.shards": {"tf": 1}, "tanjun.abc.Context.voice": {"tf": 1}, "tanjun.abc.Context.triggering_name": {"tf": 1}, "tanjun.abc.Context.set_component": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.abc.Context.delete_initial_response": {"tf": 1}, "tanjun.abc.Context.delete_last_response": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.fetch_initial_response": {"tf": 1}, "tanjun.abc.Context.fetch_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.ClientCallbackNames": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.abc.Hooks": {"tf": 1}, "tanjun.abc.Hooks.copy": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.Hooks.trigger_error": {"tf": 1}, "tanjun.abc.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.abc.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.trigger_success": {"tf": 1}, "tanjun.abc.MetaEventSig": {"tf": 1}, "tanjun.abc.MetaEventSigT": {"tf": 1}, "tanjun.abc.AnyHooks": {"tf": 1}, "tanjun.abc.MessageHooks": {"tf": 1}, "tanjun.abc.SlashHooks": {"tf": 1}, "tanjun.abc.ExecutableCommand": {"tf": 1}, "tanjun.abc.ExecutableCommand.checks": {"tf": 1}, "tanjun.abc.ExecutableCommand.component": {"tf": 1}, "tanjun.abc.ExecutableCommand.hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.metadata": {"tf": 1}, "tanjun.abc.ExecutableCommand.bind_client": {"tf": 1}, "tanjun.abc.ExecutableCommand.bind_component": {"tf": 1}, "tanjun.abc.ExecutableCommand.copy": {"tf": 1}, "tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.add_check": {"tf": 1}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1}, "tanjun.abc.HookSig": {"tf": 1}, "tanjun.abc.HookSigT": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.abc.ErrorHookSigT": {"tf": 1}, "tanjun.abc.ListenerCallbackSig": {"tf": 1}, "tanjun.abc.ListenerCallbackSigT": {"tf": 1}, "tanjun.abc.MaybeAwaitableT": {"tf": 1}, "tanjun.abc.MessageCommand": {"tf": 1}, "tanjun.abc.MessageCommand.callback": {"tf": 1}, "tanjun.abc.MessageCommand.names": {"tf": 1}, "tanjun.abc.MessageCommand.parent": {"tf": 1}, "tanjun.abc.MessageCommand.set_parent": {"tf": 1}, "tanjun.abc.MessageCommand.copy": {"tf": 1}, "tanjun.abc.MessageCommand.check_context": {"tf": 1}, "tanjun.abc.MessageCommand.execute": {"tf": 1}, "tanjun.abc.MessageCommandT": {"tf": 1}, "tanjun.abc.MessageCommandGroup": {"tf": 1}, "tanjun.abc.MessageCommandGroup.commands": {"tf": 1}, "tanjun.abc.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.abc.MessageContext": {"tf": 1}, "tanjun.abc.MessageContext.command": {"tf": 1}, "tanjun.abc.MessageContext.content": {"tf": 1}, "tanjun.abc.MessageContext.message": {"tf": 1}, "tanjun.abc.MessageContext.shard": {"tf": 1}, "tanjun.abc.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.abc.MessageContext.triggering_name": {"tf": 1}, "tanjun.abc.MessageContext.set_command": {"tf": 1}, "tanjun.abc.MessageContext.set_content": {"tf": 1}, "tanjun.abc.MessageContext.set_triggering_name": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.BaseSlashCommand": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.abc.BaseSlashCommand.name": {"tf": 1}, "tanjun.abc.BaseSlashCommand.parent": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.abc.BaseSlashCommand.build": {"tf": 1}, "tanjun.abc.BaseSlashCommand.check_context": {"tf": 1}, "tanjun.abc.BaseSlashCommand.execute": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_parent": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.abc.SlashCommand": {"tf": 1}, "tanjun.abc.SlashCommand.callback": {"tf": 1}, "tanjun.abc.SlashCommandGroup": {"tf": 1}, "tanjun.abc.SlashCommandGroup.commands": {"tf": 1}, "tanjun.abc.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.abc.SlashContext": {"tf": 1}, "tanjun.abc.SlashContext.command": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.expires_at": {"tf": 1}, "tanjun.abc.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.abc.SlashContext.interaction": {"tf": 1}, "tanjun.abc.SlashContext.member": {"tf": 1}, "tanjun.abc.SlashContext.options": {"tf": 1}, "tanjun.abc.SlashContext.set_command": {"tf": 1}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.abc.SlashContext.mark_not_found": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.SlashOption": {"tf": 1}, "tanjun.abc.SlashOption.name": {"tf": 1}, "tanjun.abc.SlashOption.type": {"tf": 1}, "tanjun.abc.SlashOption.value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.abc.Component": {"tf": 1}, "tanjun.abc.Component.client": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.loop": {"tf": 1}, "tanjun.abc.Component.name": {"tf": 1}, "tanjun.abc.Component.slash_commands": {"tf": 1}, "tanjun.abc.Component.message_commands": {"tf": 1}, "tanjun.abc.Component.listeners": {"tf": 1}, "tanjun.abc.Component.metadata": {"tf": 1}, "tanjun.abc.Component.add_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.with_slash_command": {"tf": 1}, "tanjun.abc.Component.add_message_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.with_message_command": {"tf": 1}, "tanjun.abc.Component.add_listener": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Component.with_listener": {"tf": 1}, "tanjun.abc.Component.bind_client": {"tf": 1}, "tanjun.abc.Component.unbind_client": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Component.close": {"tf": 1}, "tanjun.abc.Component.open": {"tf": 1}, "tanjun.abc.Client": {"tf": 1}, "tanjun.abc.Client.cache": {"tf": 1}, "tanjun.abc.Client.components": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.events": {"tf": 1}, "tanjun.abc.Client.is_alive": {"tf": 1}, "tanjun.abc.Client.listeners": {"tf": 1}, "tanjun.abc.Client.loop": {"tf": 1}, "tanjun.abc.Client.metadata": {"tf": 1}, "tanjun.abc.Client.prefixes": {"tf": 1}, "tanjun.abc.Client.rest": {"tf": 1}, "tanjun.abc.Client.server": {"tf": 1}, "tanjun.abc.Client.shards": {"tf": 1}, "tanjun.abc.Client.voice": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.add_component": {"tf": 1}, "tanjun.abc.Client.get_component_by_name": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.remove_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.abc.Client.iter_commands": {"tf": 1}, "tanjun.abc.Client.iter_message_commands": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}}, "df": 219}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.components.AbstractComponentLoader": {"tf": 1}, "tanjun.components.AbstractComponentLoader.load_into_component": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.dependencies.AbstractConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.release": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.dependencies.AbstractCooldownManager": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.dependencies.AbstractOwners": {"tf": 1}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1}}, "df": 4}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.injecting.AbstractDescriptor": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}}, "df": 5}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.injecting.AbstractInjectionContext": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.injection_client": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.parsing.AbstractParser": {"tf": 1}, "tanjun.parsing.AbstractParser.parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.bind_client": {"tf": 1}, "tanjun.parsing.AbstractParser.bind_component": {"tf": 1}, "tanjun.parsing.AbstractParser.copy": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}}, "df": 9}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.schedules.AbstractSchedule": {"tf": 1}, "tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.AbstractSchedule.is_alive": {"tf": 1}, "tanjun.schedules.AbstractSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.AbstractSchedule.copy": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.AbstractSchedule.stop": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"tanjun.conversion.ToChannel.async_caches": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1}, "tanjun.conversion.ToMember.async_caches": {"tf": 1}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1}, "tanjun.conversion.ToRole.async_caches": {"tf": 1}, "tanjun.conversion.ToUser.async_caches": {"tf": 1}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.async_cache.CacheMissError": {"tf": 1}, "tanjun.dependencies.async_cache.EntryNotFound": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.SfCache": {"tf": 1}, "tanjun.dependencies.async_cache.SfChannelBound": {"tf": 1}, "tanjun.dependencies.async_cache.SfGuildBound": {"tf": 1}}, "df": 31, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}}, "df": 6}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.remove_check": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.remove_component_by_name": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.remove_listener": {"tf": 1}, "tanjun.Client.remove_prefix": {"tf": 1}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.Component.remove_check": {"tf": 1}, "tanjun.Component.remove_client_callback": {"tf": 1}, "tanjun.Component.remove_command": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.remove_listener": {"tf": 1}, "tanjun.Component.remove_schedule": {"tf": 1}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.remove_check": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.components.Component.remove_check": {"tf": 1}, "tanjun.components.Component.remove_client_callback": {"tf": 1}, "tanjun.components.Component.remove_command": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}, "tanjun.components.Component.remove_schedule": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}}, "df": 46, "d": {"docs": {"tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.rest": {"tf": 1}, "tanjun.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.abc.Context.rest": {"tf": 1}, "tanjun.abc.Client.rest": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.rest": {"tf": 1}, "tanjun.clients.Client.fetch_rest_application_id": {"tf": 1}}, "df": 8}, "e": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.LazyConstant.reset": {"tf": 1}, "tanjun.dependencies.LazyConstant.reset": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.reset": {"tf": 1}}, "df": 3}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.Context.has_responded": {"tf": 1}, "tanjun.context.MessageContext.has_responded": {"tf": 1}, "tanjun.context.SlashContext.has_responded": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.delete_initial_response": {"tf": 1}, "tanjun.abc.Context.delete_last_response": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.fetch_initial_response": {"tf": 1}, "tanjun.abc.Context.fetch_last_response": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.delete_initial_response": {"tf": 1}, "tanjun.context.MessageContext.delete_last_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_initial_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_last_response": {"tf": 1}, "tanjun.context.SlashContext.get_response_future": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_initial_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_last_response": {"tf": 1}}, "df": 21, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.context.ResponseTypeT": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.SlashOption.resolve_value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.context.SlashOption.resolve_value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}}, "df": 21, "r": {"docs": {"tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.injecting.AbstractInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.reload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.release": {"tf": 1}}, "df": 5}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}}, "df": 10}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.to_role": {"tf": 1}, "tanjun.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.to_role": {"tf": 1}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1}}, "df": 13}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.Client.message_accepts": {"tf": 1}, "tanjun.Client.message_hooks": {"tf": 1}, "tanjun.Client.set_message_accepts": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.iter_message_commands": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Client.on_message_create_event": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.Component.message_commands": {"tf": 1}, "tanjun.Component.message_hooks": {"tf": 1}, "tanjun.Component.set_message_hooks": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.with_message_command": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.CommandError.message": {"tf": 1}, "tanjun.MissingDependencyError.message": {"tf": 1}, "tanjun.ParserError.message": {"tf": 1}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.MessageContext.message": {"tf": 1}, "tanjun.abc.Component.message_commands": {"tf": 1}, "tanjun.abc.Component.add_message_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.with_message_command": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Client.iter_message_commands": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.message_accepts": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_accepts": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.iter_message_commands": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.clients.Client.on_message_create_event": {"tf": 1}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.components.Component.message_commands": {"tf": 1}, "tanjun.components.Component.message_hooks": {"tf": 1}, "tanjun.components.Component.set_message_hooks": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.with_message_command": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.context.MessageContext.message": {"tf": 1}, "tanjun.errors.CommandError.message": {"tf": 1}, "tanjun.errors.MissingDependencyError.message": {"tf": 1}, "tanjun.errors.ParserError.message": {"tf": 1}}, "df": 55, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"tanjun.MessageAcceptsEnum": {"tf": 1}, "tanjun.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}}, "df": 12}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.MessageCommand": {"tf": 1}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.MessageCommand.callback": {"tf": 1}, "tanjun.MessageCommand.names": {"tf": 1}, "tanjun.MessageCommand.needs_injector": {"tf": 1}, "tanjun.MessageCommand.parent": {"tf": 1}, "tanjun.MessageCommand.parser": {"tf": 1}, "tanjun.MessageCommand.bind_client": {"tf": 1}, "tanjun.MessageCommand.bind_component": {"tf": 1}, "tanjun.MessageCommand.copy": {"tf": 1}, "tanjun.MessageCommand.set_parent": {"tf": 1}, "tanjun.MessageCommand.set_parser": {"tf": 1}, "tanjun.MessageCommand.check_context": {"tf": 1}, "tanjun.MessageCommand.execute": {"tf": 1}, "tanjun.MessageCommand.load_into_component": {"tf": 1}, "tanjun.abc.MessageCommand": {"tf": 1}, "tanjun.abc.MessageCommand.callback": {"tf": 1}, "tanjun.abc.MessageCommand.names": {"tf": 1}, "tanjun.abc.MessageCommand.parent": {"tf": 1}, "tanjun.abc.MessageCommand.set_parent": {"tf": 1}, "tanjun.abc.MessageCommand.copy": {"tf": 1}, "tanjun.abc.MessageCommand.check_context": {"tf": 1}, "tanjun.abc.MessageCommand.execute": {"tf": 1}, "tanjun.commands.MessageCommand": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.MessageCommand.callback": {"tf": 1}, "tanjun.commands.MessageCommand.names": {"tf": 1}, "tanjun.commands.MessageCommand.needs_injector": {"tf": 1}, "tanjun.commands.MessageCommand.parent": {"tf": 1}, "tanjun.commands.MessageCommand.parser": {"tf": 1}, "tanjun.commands.MessageCommand.bind_client": {"tf": 1}, "tanjun.commands.MessageCommand.bind_component": {"tf": 1}, "tanjun.commands.MessageCommand.copy": {"tf": 1}, "tanjun.commands.MessageCommand.set_parent": {"tf": 1}, "tanjun.commands.MessageCommand.set_parser": {"tf": 1}, "tanjun.commands.MessageCommand.check_context": {"tf": 1}, "tanjun.commands.MessageCommand.execute": {"tf": 1}, "tanjun.commands.MessageCommand.load_into_component": {"tf": 1}}, "df": 38, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.MessageCommandGroup": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.MessageCommandGroup.commands": {"tf": 1}, "tanjun.MessageCommandGroup.is_strict": {"tf": 1}, "tanjun.MessageCommandGroup.copy": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.MessageCommandGroup.bind_client": {"tf": 1}, "tanjun.MessageCommandGroup.bind_component": {"tf": 1}, "tanjun.MessageCommandGroup.find_command": {"tf": 1}, "tanjun.MessageCommandGroup.execute": {"tf": 1}, "tanjun.abc.MessageCommandGroup": {"tf": 1}, "tanjun.abc.MessageCommandGroup.commands": {"tf": 1}, "tanjun.abc.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.MessageCommandGroup.commands": {"tf": 1}, "tanjun.commands.MessageCommandGroup.is_strict": {"tf": 1}, "tanjun.commands.MessageCommandGroup.copy": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.bind_client": {"tf": 1}, "tanjun.commands.MessageCommandGroup.bind_component": {"tf": 1}, "tanjun.commands.MessageCommandGroup.find_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.execute": {"tf": 1}}, "df": 29}}}}}, "t": {"docs": {"tanjun.abc.MessageCommandT": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.MessageContext": {"tf": 1}, "tanjun.abc.MessageContext.command": {"tf": 1}, "tanjun.abc.MessageContext.content": {"tf": 1}, "tanjun.abc.MessageContext.message": {"tf": 1}, "tanjun.abc.MessageContext.shard": {"tf": 1}, "tanjun.abc.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.abc.MessageContext.triggering_name": {"tf": 1}, "tanjun.abc.MessageContext.set_command": {"tf": 1}, "tanjun.abc.MessageContext.set_content": {"tf": 1}, "tanjun.abc.MessageContext.set_triggering_name": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext": {"tf": 1}, "tanjun.context.MessageContext.__init__": {"tf": 1}, "tanjun.context.MessageContext.author": {"tf": 1}, "tanjun.context.MessageContext.channel_id": {"tf": 1}, "tanjun.context.MessageContext.command": {"tf": 1}, "tanjun.context.MessageContext.content": {"tf": 1}, "tanjun.context.MessageContext.created_at": {"tf": 1}, "tanjun.context.MessageContext.guild_id": {"tf": 1}, "tanjun.context.MessageContext.has_responded": {"tf": 1}, "tanjun.context.MessageContext.is_human": {"tf": 1}, "tanjun.context.MessageContext.member": {"tf": 1}, "tanjun.context.MessageContext.message": {"tf": 1}, "tanjun.context.MessageContext.triggering_name": {"tf": 1}, "tanjun.context.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.context.MessageContext.shard": {"tf": 1}, "tanjun.context.MessageContext.set_command": {"tf": 1}, "tanjun.context.MessageContext.set_content": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_name": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_prefix": {"tf": 1}, "tanjun.context.MessageContext.delete_initial_response": {"tf": 1}, "tanjun.context.MessageContext.delete_last_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_initial_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}}, "df": 37}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.MessageHooks": {"tf": 1}, "tanjun.abc.MessageHooks": {"tf": 1}, "tanjun.hooks.MessageHooks": {"tf": 1}}, "df": 3}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"tanjun.Client.metadata": {"tf": 1}, "tanjun.Component.metadata": {"tf": 1}, "tanjun.to_invite_with_metadata": {"tf": 1}, "tanjun.abc.ExecutableCommand.metadata": {"tf": 1}, "tanjun.abc.Component.metadata": {"tf": 1}, "tanjun.abc.Client.metadata": {"tf": 1}, "tanjun.clients.Client.metadata": {"tf": 1}, "tanjun.commands.PartialCommand.metadata": {"tf": 1}, "tanjun.components.Component.metadata": {"tf": 1}, "tanjun.conversion.to_invite_with_metadata": {"tf": 1}}, "df": 10}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.MetaEventSig": {"tf": 1}}, "df": 1, "t": {"docs": {"tanjun.abc.MetaEventSigT": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.to_member": {"tf": 1}, "tanjun.BucketResource.MEMBER": {"tf": 1}, "tanjun.abc.Context.member": {"tf": 1}, "tanjun.abc.SlashContext.member": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.context.MessageContext.member": {"tf": 1}, "tanjun.context.SlashContext.member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.conversion.to_member": {"tf": 1}, "tanjun.dependencies.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.MEMBER": {"tf": 1}}, "df": 15}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1}}, "df": 6}}}}}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Component.make_loader": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}}, "df": 4, "r": {"docs": {"tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}}, "df": 4}}}, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.MaybeAwaitableT": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.abc.SlashContext.mark_not_found": {"tf": 1}, "tanjun.context.SlashContext.mark_not_found": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}}, "df": 9}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.MissingDependencyError": {"tf": 1}, "tanjun.MissingDependencyError.__init__": {"tf": 1}, "tanjun.MissingDependencyError.message": {"tf": 1}, "tanjun.errors.MissingDependencyError": {"tf": 1}, "tanjun.errors.MissingDependencyError.__init__": {"tf": 1}, "tanjun.errors.MissingDependencyError.message": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.parsing.Parameter.is_multi": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 5}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.SlashContext.mark_not_found": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.context.SlashContext.mark_not_found": {"tf": 1}}, "df": 10}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.fetch_initial_response": {"tf": 1}, "tanjun.abc.Context.fetch_last_response": {"tf": 1}, "tanjun.clients.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.context.MessageContext.fetch_initial_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_last_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_initial_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_last_response": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 14}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.MessageCommandGroup.find_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.find_command": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.FailedCheck": {"tf": 1}, "tanjun.errors.FailedCheck": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.context.SlashContext.get_response_future": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.Client.slash_hooks": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.Client.iter_slash_commands": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.Component.slash_commands": {"tf": 1}, "tanjun.Component.slash_hooks": {"tf": 1}, "tanjun.Component.set_slash_hooks": {"tf": 1}, "tanjun.Component.add_slash_command": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.with_slash_command": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.Component.slash_commands": {"tf": 1}, "tanjun.abc.Component.add_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.with_slash_command": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.components.Component.slash_commands": {"tf": 1}, "tanjun.components.Component.slash_hooks": {"tf": 1}, "tanjun.components.Component.set_slash_hooks": {"tf": 1}, "tanjun.components.Component.add_slash_command": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.with_slash_command": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}}, "df": 56, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.SlashCommand": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.callback": {"tf": 1}, "tanjun.SlashCommand.needs_injector": {"tf": 1}, "tanjun.SlashCommand.bind_client": {"tf": 1}, "tanjun.SlashCommand.build": {"tf": 1}, "tanjun.SlashCommand.load_into_component": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommand.execute": {"tf": 1}, "tanjun.SlashCommand.copy": {"tf": 1}, "tanjun.abc.SlashCommand": {"tf": 1}, "tanjun.abc.SlashCommand.callback": {"tf": 1}, "tanjun.commands.SlashCommand": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.callback": {"tf": 1}, "tanjun.commands.SlashCommand.needs_injector": {"tf": 1}, "tanjun.commands.SlashCommand.bind_client": {"tf": 1}, "tanjun.commands.SlashCommand.build": {"tf": 1}, "tanjun.commands.SlashCommand.load_into_component": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommand.execute": {"tf": 1}, "tanjun.commands.SlashCommand.copy": {"tf": 1}}, "df": 38, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.SlashCommandGroup": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.commands": {"tf": 1}, "tanjun.SlashCommandGroup.build": {"tf": 1}, "tanjun.SlashCommandGroup.copy": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.SlashCommandGroup.execute": {"tf": 1}, "tanjun.abc.SlashCommandGroup": {"tf": 1}, "tanjun.abc.SlashCommandGroup.commands": {"tf": 1}, "tanjun.abc.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.commands": {"tf": 1}, "tanjun.commands.SlashCommandGroup.build": {"tf": 1}, "tanjun.commands.SlashCommandGroup.copy": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.execute": {"tf": 1}}, "df": 23}}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.SlashContext": {"tf": 1}, "tanjun.abc.SlashContext.command": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.expires_at": {"tf": 1}, "tanjun.abc.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.abc.SlashContext.interaction": {"tf": 1}, "tanjun.abc.SlashContext.member": {"tf": 1}, "tanjun.abc.SlashContext.options": {"tf": 1}, "tanjun.abc.SlashContext.set_command": {"tf": 1}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.abc.SlashContext.mark_not_found": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext": {"tf": 1}, "tanjun.context.SlashContext.__init__": {"tf": 1}, "tanjun.context.SlashContext.author": {"tf": 1}, "tanjun.context.SlashContext.channel_id": {"tf": 1}, "tanjun.context.SlashContext.client": {"tf": 1}, "tanjun.context.SlashContext.command": {"tf": 1}, "tanjun.context.SlashContext.created_at": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.expires_at": {"tf": 1}, "tanjun.context.SlashContext.guild_id": {"tf": 1}, "tanjun.context.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.context.SlashContext.has_responded": {"tf": 1}, "tanjun.context.SlashContext.is_human": {"tf": 1}, "tanjun.context.SlashContext.member": {"tf": 1}, "tanjun.context.SlashContext.triggering_name": {"tf": 1}, "tanjun.context.SlashContext.interaction": {"tf": 1}, "tanjun.context.SlashContext.options": {"tf": 1}, "tanjun.context.SlashContext.cancel_defer": {"tf": 1}, "tanjun.context.SlashContext.get_response_future": {"tf": 1}, "tanjun.context.SlashContext.mark_not_found": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.context.SlashContext.set_command": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.context.SlashContext.defer": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_initial_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 47}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.SlashHooks": {"tf": 1}, "tanjun.abc.SlashHooks": {"tf": 1}, "tanjun.hooks.SlashHooks": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.abc.SlashOption": {"tf": 1}, "tanjun.abc.SlashOption.name": {"tf": 1}, "tanjun.abc.SlashOption.type": {"tf": 1}, "tanjun.abc.SlashOption.value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.context.SlashOption": {"tf": 1}, "tanjun.context.SlashOption.__init__": {"tf": 1}, "tanjun.context.SlashOption.name": {"tf": 1}, "tanjun.context.SlashOption.type": {"tf": 1}, "tanjun.context.SlashOption.value": {"tf": 1}, "tanjun.context.SlashOption.resolve_value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}}, "df": 21}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTED": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTING": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.to_voice_state": {"tf": 1}, "tanjun.conversion.to_voice_state": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.dependencies.set_standard_dependencies": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.MessageCommandGroup.is_strict": {"tf": 1}, "tanjun.commands.MessageCommandGroup.is_strict": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.schedules.AbstractSchedule.stop": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.stop": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}}, "df": 4}}}, "f": {"docs": {}, "df": 0, "w": {"docs": {"tanjun.with_sfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.checks.SfwCheck": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.SfCache": {"tf": 1}, "tanjun.dependencies.async_cache.SfCache": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.dependencies.SfChannelBound": {"tf": 1}, "tanjun.dependencies.async_cache.SfChannelBound": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.dependencies.SfGuildBound": {"tf": 1}, "tanjun.dependencies.async_cache.SfGuildBound": {"tf": 1}}, "df": 2}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.server": {"tf": 1}, "tanjun.abc.Context.server": {"tf": 1}, "tanjun.abc.Client.server": {"tf": 1}, "tanjun.clients.Client.server": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {"tanjun.Client.set_global_commands": {"tf": 1}, "tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.Client.set_message_accepts": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.MessageCommand.set_parent": {"tf": 1}, "tanjun.MessageCommand.set_parser": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.Component.set_slash_hooks": {"tf": 1}, "tanjun.Component.set_message_hooks": {"tf": 1}, "tanjun.Component.set_hooks": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.LazyConstant.set_value": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.abc.Context.set_component": {"tf": 1}, "tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1}, "tanjun.abc.MessageCommand.set_parent": {"tf": 1}, "tanjun.abc.MessageContext.set_command": {"tf": 1}, "tanjun.abc.MessageContext.set_content": {"tf": 1}, "tanjun.abc.MessageContext.set_triggering_name": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_parent": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.abc.SlashContext.set_command": {"tf": 1}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.set_global_commands": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.set_message_accepts": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.commands.MessageCommand.set_parent": {"tf": 1}, "tanjun.commands.MessageCommand.set_parser": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_parent": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.set_slash_hooks": {"tf": 1}, "tanjun.components.Component.set_message_hooks": {"tf": 1}, "tanjun.components.Component.set_hooks": {"tf": 1}, "tanjun.context.MessageContext.set_command": {"tf": 1}, "tanjun.context.MessageContext.set_content": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_name": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_prefix": {"tf": 1}, "tanjun.context.SlashContext.set_command": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.dependencies.set_standard_dependencies": {"tf": 1}, "tanjun.dependencies.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.ParseableProto.set_parser": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}}, "df": 88}, "l": {"docs": {}, "df": 0, "f": {"docs": {"tanjun.as_self_injecting": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.injecting.SelfInjectingCallback": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.conversion.search_snowflakes": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}}, "df": 5}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.MessageContext.shard": {"tf": 1}, "tanjun.context.MessageContext.shard": {"tf": 1}}, "df": 2, "s": {"docs": {"tanjun.Client.shards": {"tf": 1}, "tanjun.abc.Context.shards": {"tf": 1}, "tanjun.abc.Client.shards": {"tf": 1}, "tanjun.clients.Client.shards": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.ShlexParser": {"tf": 1}, "tanjun.ShlexParser.__init__": {"tf": 1}, "tanjun.ShlexParser.needs_injector": {"tf": 1}, "tanjun.ShlexParser.parameters": {"tf": 1}, "tanjun.ShlexParser.copy": {"tf": 1}, "tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.ShlexParser.bind_client": {"tf": 1}, "tanjun.ShlexParser.bind_component": {"tf": 1}, "tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.parsing.ShlexParser": {"tf": 1}, "tanjun.parsing.ShlexParser.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.needs_injector": {"tf": 1}, "tanjun.parsing.ShlexParser.parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.copy": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.bind_client": {"tf": 1}, "tanjun.parsing.ShlexParser.bind_component": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}}, "df": 26}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Component.add_schedule": {"tf": 1}, "tanjun.Component.remove_schedule": {"tf": 1}, "tanjun.Component.with_schedule": {"tf": 1}, "tanjun.components.Component.add_schedule": {"tf": 1}, "tanjun.components.Component.remove_schedule": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1}}, "df": 6, "s": {"docs": {"tanjun.Component.schedules": {"tf": 1}, "tanjun.components.Component.schedules": {"tf": 1}, "tanjun.schedules": {"tf": 1}, "tanjun.schedules.AbstractSchedule": {"tf": 1}, "tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.AbstractSchedule.is_alive": {"tf": 1}, "tanjun.schedules.AbstractSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.AbstractSchedule.copy": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.AbstractSchedule.stop": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.is_alive": {"tf": 1}, "tanjun.schedules.IntervalSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.IntervalSchedule.copy": {"tf": 1}, "tanjun.schedules.IntervalSchedule.load_into_component": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.stop": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}}, "df": 27}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.to_snowflake": {"tf": 1}, "tanjun.conversion.parse_snowflake": {"tf": 1}, "tanjun.conversion.to_snowflake": {"tf": 1}}, "df": 3, "s": {"docs": {"tanjun.conversion.search_snowflakes": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.Hooks.trigger_success": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.Hooks.trigger_success": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.hooks.Hooks.trigger_success": {"tf": 1}}, "df": 11}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "m": {"docs": {"tanjun.with_dm_check": {"tf": 1}, "tanjun.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.utilities.DM_PERMISSIONS": {"tf": 1}}, "df": 5, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.checks.DmCheck": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.parsing.Parameter.default": {"tf": 1}, "tanjun.parsing.UNDEFINED_DEFAULT": {"tf": 1}}, "df": 9, "s": {"docs": {"tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}}, "df": 10}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.context.SlashContext.cancel_defer": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.context.SlashContext.defer": {"tf": 1}}, "df": 6, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.context.SlashContext.has_been_deferred": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 9}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.delete_initial_response": {"tf": 1}, "tanjun.abc.Context.delete_last_response": {"tf": 1}, "tanjun.context.MessageContext.delete_initial_response": {"tf": 1}, "tanjun.context.MessageContext.delete_last_response": {"tf": 1}, "tanjun.context.SlashContext.delete_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_last_response": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.commands.BaseSlashCommand.description": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.dependencies": {"tf": 1}, "tanjun.dependencies.set_standard_dependencies": {"tf": 1.4142135623730951}, "tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.CacheIterator": {"tf": 1}, "tanjun.dependencies.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.CacheMissError": {"tf": 1}, "tanjun.dependencies.EntryNotFound": {"tf": 1}, "tanjun.dependencies.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.SfCache": {"tf": 1}, "tanjun.dependencies.SfChannelBound": {"tf": 1}, "tanjun.dependencies.SfGuildBound": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.LazyConstant": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.LazyConstant.reset": {"tf": 1}, "tanjun.dependencies.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.BucketResource": {"tf": 1}, "tanjun.dependencies.BucketResource.USER": {"tf": 1}, "tanjun.dependencies.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.BucketResource.GUILD": {"tf": 1}, "tanjun.dependencies.BucketResource.GLOBAL": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractOwners": {"tf": 1}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.async_cache.CacheMissError": {"tf": 1}, "tanjun.dependencies.async_cache.EntryNotFound": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.SfCache": {"tf": 1}, "tanjun.dependencies.async_cache.SfChannelBound": {"tf": 1}, "tanjun.dependencies.async_cache.SfGuildBound": {"tf": 1}, "tanjun.dependencies.callbacks": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.dependencies.data": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.data.LazyConstant": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.reset": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.limiters": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.USER": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GUILD": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GLOBAL": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.dependencies.owners": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1}}, "df": 161}}}, "y": {"docs": {"tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}}, "df": 5}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.Client.dispatch_client_callback": {"tf": 1}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}}, "df": 6}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.to_datetime": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1}, "tanjun.conversion.to_datetime": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {"tanjun.dependencies.data": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.data.LazyConstant": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.reset": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}}, "df": 12}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.with_guild_check": {"tf": 1}, "tanjun.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.to_guild": {"tf": 1}, "tanjun.BucketResource.GUILD": {"tf": 1}, "tanjun.abc.Context.guild_id": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.context.MessageContext.guild_id": {"tf": 1}, "tanjun.context.SlashContext.guild_id": {"tf": 1}, "tanjun.conversion.to_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.BucketResource.GUILD": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GUILD": {"tf": 1}}, "df": 18, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.checks.GuildCheck": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.utilities.gather_checks": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.prefix_getter": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.Client.prefix_getter": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}}, "df": 6}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.Client.set_global_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.BucketResource.GLOBAL": {"tf": 1}, "tanjun.abc.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.set_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.dependencies.BucketResource.GLOBAL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GLOBAL": {"tf": 1}}, "df": 10}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.as_message_command_group": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.with_greedy_argument": {"tf": 1}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "w": {"docs": {"tanjun.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.checks.NsfwCheck": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.get_component_by_name": {"tf": 1}, "tanjun.Client.remove_component_by_name": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Component.name": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Context.triggering_name": {"tf": 1}, "tanjun.abc.MessageContext.triggering_name": {"tf": 1}, "tanjun.abc.MessageContext.set_triggering_name": {"tf": 1}, "tanjun.abc.BaseSlashCommand.name": {"tf": 1}, "tanjun.abc.SlashOption.name": {"tf": 1}, "tanjun.abc.Component.name": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Client.get_component_by_name": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.get_component_by_name": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.commands.BaseSlashCommand.name": {"tf": 1}, "tanjun.components.Component.name": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.context.MessageContext.triggering_name": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_name": {"tf": 1}, "tanjun.context.SlashContext.triggering_name": {"tf": 1}, "tanjun.context.SlashOption.name": {"tf": 1}}, "df": 31, "s": {"docs": {"tanjun.MessageCommand.names": {"tf": 1}, "tanjun.abc.MessageCommand.names": {"tf": 1}, "tanjun.commands.MessageCommand.names": {"tf": 1}, "tanjun.parsing.Option.names": {"tf": 1}, "tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 5}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.NONE": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.NotEnoughArgumentsError": {"tf": 1}, "tanjun.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.NotEnoughArgumentsError.parameter": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.parameter": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.MessageCommand.needs_injector": {"tf": 1}, "tanjun.SlashCommand.needs_injector": {"tf": 1}, "tanjun.Component.needs_injector": {"tf": 1}, "tanjun.ShlexParser.needs_injector": {"tf": 1}, "tanjun.commands.MessageCommand.needs_injector": {"tf": 1}, "tanjun.commands.PartialCommand.needs_injector": {"tf": 1}, "tanjun.commands.SlashCommand.needs_injector": {"tf": 1}, "tanjun.components.Component.needs_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.needs_injector": {"tf": 1}, "tanjun.parsing.Parameter.needs_injector": {"tf": 1}, "tanjun.parsing.ShlexParser.needs_injector": {"tf": 1}}, "df": 13}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.with_owner_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.checks.OwnerCheck": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.Owners": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1.4142135623730951}}, "df": 9, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1}}, "df": 4}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.checks.OwnPermissionCheck": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.open": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.Component.open": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.abc.Component.open": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.components.Component.open": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.open": {"tf": 1}}, "df": 15}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.parsing.Option": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.Option.empty_value": {"tf": 1}, "tanjun.parsing.Option.names": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 46, "s": {"docs": {"tanjun.abc.SlashContext.options": {"tf": 1}, "tanjun.context.SlashContext.options": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.components.OnCallbackSig": {"tf": 1}}, "df": 1, "t": {"docs": {"tanjun.components.OnCallbackSigT": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}}, "df": 3}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}}, "df": 4, "s": {"docs": {"tanjun.utilities.ALL_PERMISSIONS": {"tf": 1}, "tanjun.utilities.DM_PERMISSIONS": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 6}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.trigger_pre_execution": {"tf": 1}}, "df": 11, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"tanjun.Client.prefix_getter": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.remove_prefix": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.abc.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.clients.Client.prefix_getter": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.context.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_prefix": {"tf": 1}, "tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.prefixes": {"tf": 1}, "tanjun.abc.Client.prefixes": {"tf": 1}, "tanjun.clients.Client.prefixes": {"tf": 1}}, "df": 3}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.clients.PrefixGetterSig": {"tf": 1}}, "df": 1, "t": {"docs": {"tanjun.clients.PrefixGetterSigT": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.to_presence": {"tf": 1}, "tanjun.conversion.to_presence": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.MessageCommand.parent": {"tf": 1}, "tanjun.MessageCommand.set_parent": {"tf": 1}, "tanjun.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.abc.MessageCommand.parent": {"tf": 1}, "tanjun.abc.MessageCommand.set_parent": {"tf": 1}, "tanjun.abc.BaseSlashCommand.parent": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_parent": {"tf": 1}, "tanjun.commands.MessageCommand.parent": {"tf": 1}, "tanjun.commands.MessageCommand.set_parent": {"tf": 1}, "tanjun.commands.BaseSlashCommand.parent": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_parent": {"tf": 1}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"tf": 1}}, "df": 13}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.conversion.parse_snowflake": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}}, "df": 8, "r": {"docs": {"tanjun.MessageCommand.parser": {"tf": 1}, "tanjun.MessageCommand.set_parser": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.with_parser": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.commands.MessageCommand.parser": {"tf": 1}, "tanjun.commands.MessageCommand.set_parser": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.parsing.ParseableProto.parser": {"tf": 1}, "tanjun.parsing.ParseableProto.set_parser": {"tf": 1}, "tanjun.parsing.with_parser": {"tf": 1}}, "df": 16, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.ParserError": {"tf": 1}, "tanjun.ParserError.__init__": {"tf": 1}, "tanjun.ParserError.message": {"tf": 1}, "tanjun.ParserError.parameter": {"tf": 1}, "tanjun.errors.ParserError": {"tf": 1}, "tanjun.errors.ParserError.__init__": {"tf": 1}, "tanjun.errors.ParserError.message": {"tf": 1}, "tanjun.errors.ParserError.parameter": {"tf": 1}}, "df": 8}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"tanjun.parsing.ParseableProto": {"tf": 1}, "tanjun.parsing.ParseableProto.__init__": {"tf": 1}, "tanjun.parsing.ParseableProto.callback": {"tf": 1}, "tanjun.parsing.ParseableProto.parser": {"tf": 1}, "tanjun.parsing.ParseableProto.set_parser": {"tf": 1}}, "df": 5, "t": {"docs": {"tanjun.parsing.ParseableProtoT": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.parsing": {"tf": 1}, "tanjun.parsing.AbstractParser": {"tf": 1}, "tanjun.parsing.AbstractParser.parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.bind_client": {"tf": 1}, "tanjun.parsing.AbstractParser.bind_component": {"tf": 1}, "tanjun.parsing.AbstractParser.copy": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.Argument": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.ConverterSig": {"tf": 1}, "tanjun.parsing.Option": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.Option.empty_value": {"tf": 1}, "tanjun.parsing.Option.names": {"tf": 1}, "tanjun.parsing.Parameter": {"tf": 1}, "tanjun.parsing.Parameter.__init__": {"tf": 1}, "tanjun.parsing.Parameter.converters": {"tf": 1}, "tanjun.parsing.Parameter.default": {"tf": 1}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1}, "tanjun.parsing.Parameter.is_multi": {"tf": 1}, "tanjun.parsing.Parameter.key": {"tf": 1}, "tanjun.parsing.Parameter.needs_injector": {"tf": 1}, "tanjun.parsing.Parameter.bind_client": {"tf": 1}, "tanjun.parsing.Parameter.bind_component": {"tf": 1}, "tanjun.parsing.Parameter.convert": {"tf": 1}, "tanjun.parsing.Parameter.copy": {"tf": 1}, "tanjun.parsing.ParseableProto": {"tf": 1}, "tanjun.parsing.ParseableProto.__init__": {"tf": 1}, "tanjun.parsing.ParseableProto.callback": {"tf": 1}, "tanjun.parsing.ParseableProto.parser": {"tf": 1}, "tanjun.parsing.ParseableProto.set_parser": {"tf": 1}, "tanjun.parsing.ParseableProtoT": {"tf": 1}, "tanjun.parsing.ShlexParser": {"tf": 1}, "tanjun.parsing.ShlexParser.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.needs_injector": {"tf": 1}, "tanjun.parsing.ShlexParser.parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.copy": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.bind_client": {"tf": 1}, "tanjun.parsing.ShlexParser.bind_component": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}, "tanjun.parsing.UndefinedDefaultT": {"tf": 1}, "tanjun.parsing.UndefinedDefaultT.__init__": {"tf": 1}, "tanjun.parsing.UNDEFINED_DEFAULT": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.parsing.with_parser": {"tf": 1}}, "df": 57}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.ConversionError.parameter": {"tf": 1}, "tanjun.NotEnoughArgumentsError.parameter": {"tf": 1}, "tanjun.TooManyArgumentsError.parameter": {"tf": 1}, "tanjun.ParserError.parameter": {"tf": 1}, "tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.errors.ConversionError.parameter": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.parameter": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.parameter": {"tf": 1}, "tanjun.errors.ParserError.parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.Parameter": {"tf": 1}, "tanjun.parsing.Parameter.__init__": {"tf": 1}, "tanjun.parsing.Parameter.converters": {"tf": 1}, "tanjun.parsing.Parameter.default": {"tf": 1}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1}, "tanjun.parsing.Parameter.is_multi": {"tf": 1}, "tanjun.parsing.Parameter.key": {"tf": 1}, "tanjun.parsing.Parameter.needs_injector": {"tf": 1}, "tanjun.parsing.Parameter.bind_client": {"tf": 1}, "tanjun.parsing.Parameter.bind_component": {"tf": 1}, "tanjun.parsing.Parameter.convert": {"tf": 1}, "tanjun.parsing.Parameter.copy": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}}, "df": 26, "s": {"docs": {"tanjun.ShlexParser.parameters": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}}, "df": 6}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.commands.PartialCommand": {"tf": 1}, "tanjun.commands.PartialCommand.checks": {"tf": 1}, "tanjun.commands.PartialCommand.component": {"tf": 1}, "tanjun.commands.PartialCommand.hooks": {"tf": 1}, "tanjun.commands.PartialCommand.metadata": {"tf": 1}, "tanjun.commands.PartialCommand.needs_injector": {"tf": 1}, "tanjun.commands.PartialCommand.copy": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1}, "tanjun.commands.PartialCommand.add_check": {"tf": 1}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1}, "tanjun.commands.PartialCommand.with_check": {"tf": 1}, "tanjun.commands.PartialCommand.bind_client": {"tf": 1}, "tanjun.commands.PartialCommand.bind_component": {"tf": 1}}, "df": 13}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.trigger_post_execution": {"tf": 1}}, "df": 11}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.MessageCommand.load_into_component": {"tf": 1}, "tanjun.SlashCommand.load_into_component": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.abc.ClientLoader.load": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.commands.MessageCommand.load_into_component": {"tf": 1}, "tanjun.commands.BaseSlashCommand.load_into_component": {"tf": 1}, "tanjun.commands.SlashCommand.load_into_component": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.AbstractComponentLoader.load_into_component": {"tf": 1}, "tanjun.schedules.IntervalSchedule.load_into_component": {"tf": 1}}, "df": 13, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.as_loader": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.Client.loop": {"tf": 1}, "tanjun.Component.loop": {"tf": 1}, "tanjun.abc.Component.loop": {"tf": 1}, "tanjun.abc.Client.loop": {"tf": 1}, "tanjun.clients.Client.loop": {"tf": 1}, "tanjun.components.Component.loop": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.remove_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Component.add_listener": {"tf": 1}, "tanjun.Component.remove_listener": {"tf": 1}, "tanjun.Component.with_listener": {"tf": 1}, "tanjun.abc.Component.add_listener": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Component.with_listener": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.remove_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.components.Component.add_listener": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}, "tanjun.components.Component.with_listener": {"tf": 1}}, "df": 18, "s": {"docs": {"tanjun.Client.listeners": {"tf": 1}, "tanjun.Component.listeners": {"tf": 1}, "tanjun.abc.Component.listeners": {"tf": 1}, "tanjun.abc.Client.listeners": {"tf": 1}, "tanjun.clients.Client.listeners": {"tf": 1}, "tanjun.components.Component.listeners": {"tf": 1}}, "df": 6}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.ListenerCallbackSig": {"tf": 1}}, "df": 1, "t": {"docs": {"tanjun.abc.ListenerCallbackSigT": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.dependencies.limiters": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.USER": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GUILD": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GLOBAL": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 41}}}}}}}, "c": {"docs": {"tanjun.inject_lc": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}}, "df": 5}, "a": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.LazyConstant": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.LazyConstant.callback": {"tf": 1}, "tanjun.LazyConstant.get_value": {"tf": 1}, "tanjun.LazyConstant.reset": {"tf": 1}, "tanjun.LazyConstant.set_value": {"tf": 1}, "tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.LazyConstant": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.LazyConstant.reset": {"tf": 1}, "tanjun.dependencies.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.data.LazyConstant": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.reset": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}}, "df": 21}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.Context.delete_last_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.fetch_last_response": {"tf": 1}, "tanjun.context.MessageContext.delete_last_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_last_response": {"tf": 1}, "tanjun.context.SlashContext.delete_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_last_response": {"tf": 1}}, "df": 9}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.dependencies.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.unload_modules": {"tf": 1}, "tanjun.abc.ClientLoader.unload": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.as_unloader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}}, "df": 2}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Component.unbind_client": {"tf": 1}, "tanjun.abc.Component.unbind_client": {"tf": 1}, "tanjun.components.Component.unbind_client": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.injecting.Undefined": {"tf": 1}, "tanjun.injecting.Undefined.__init__": {"tf": 1}, "tanjun.injecting.UNDEFINED": {"tf": 1}, "tanjun.parsing.UNDEFINED_DEFAULT": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.injecting.UndefinedOr": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.parsing.UndefinedDefaultT": {"tf": 1}, "tanjun.parsing.UndefinedDefaultT.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.to_user": {"tf": 1}, "tanjun.BucketResource.USER": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}, "tanjun.conversion.to_user": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.BucketResource.USER": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.USER": {"tf": 1}}, "df": 15}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.utilities": {"tf": 1}, "tanjun.utilities.gather_checks": {"tf": 1}, "tanjun.utilities.ALL_PERMISSIONS": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1}, "tanjun.utilities.CastedView.__init__": {"tf": 1}, "tanjun.utilities.DM_PERMISSIONS": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}, "tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 11}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.__init__": {"tf": 1}, "tanjun.InMemoryCooldownManager.__init__": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.CommandError.__init__": {"tf": 1}, "tanjun.ConversionError.__init__": {"tf": 1}, "tanjun.MissingDependencyError.__init__": {"tf": 1}, "tanjun.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.ParserError.__init__": {"tf": 1}, "tanjun.Hooks.__init__": {"tf": 1}, "tanjun.ShlexParser.__init__": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.context.MessageContext.__init__": {"tf": 1}, "tanjun.context.SlashContext.__init__": {"tf": 1}, "tanjun.context.SlashOption.__init__": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.conversion.ToEmoji.__init__": {"tf": 1}, "tanjun.conversion.ToGuild.__init__": {"tf": 1}, "tanjun.conversion.ToInvite.__init__": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.__init__": {"tf": 1}, "tanjun.conversion.ToMember.__init__": {"tf": 1}, "tanjun.conversion.ToPresence.__init__": {"tf": 1}, "tanjun.conversion.ToRole.__init__": {"tf": 1}, "tanjun.conversion.ToUser.__init__": {"tf": 1}, "tanjun.conversion.ToVoiceState.__init__": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.__init__": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1}, "tanjun.errors.MissingDependencyError.__init__": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.errors.ParserError.__init__": {"tf": 1}, "tanjun.hooks.Hooks.__init__": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 1}, "tanjun.injecting.Undefined.__init__": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.__init__": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor.__init__": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.Parameter.__init__": {"tf": 1}, "tanjun.parsing.ParseableProto.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.__init__": {"tf": 1}, "tanjun.parsing.UndefinedDefaultT.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.utilities.CastedView.__init__": {"tf": 1}}, "df": 79, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.abc.Context.delete_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.fetch_initial_response": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.delete_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_initial_response": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_initial_response": {"tf": 1}}, "df": 11}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.inject_lc": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}}, "df": 8, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.MessageCommand.needs_injector": {"tf": 1}, "tanjun.SlashCommand.needs_injector": {"tf": 1}, "tanjun.Component.needs_injector": {"tf": 1}, "tanjun.ShlexParser.needs_injector": {"tf": 1}, "tanjun.commands.MessageCommand.needs_injector": {"tf": 1}, "tanjun.commands.PartialCommand.needs_injector": {"tf": 1}, "tanjun.commands.SlashCommand.needs_injector": {"tf": 1}, "tanjun.components.Component.needs_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.parsing.Parameter.needs_injector": {"tf": 1}, "tanjun.parsing.ShlexParser.needs_injector": {"tf": 1}}, "df": 16, "s": {"docs": {"tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.injecting.InjectorClient": {"tf": 1}, "tanjun.injecting.InjectorClient.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}}, "df": 8}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.as_self_injecting": {"tf": 1}, "tanjun.injecting": {"tf": 1}, "tanjun.injecting.AbstractDescriptor": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.injection_client": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.injecting.BasicInjectionContext": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.__init__": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.injection_client": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.CallbackDescriptor": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.callback": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.copy": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}, "tanjun.injecting.Undefined": {"tf": 1}, "tanjun.injecting.Undefined.__init__": {"tf": 1}, "tanjun.injecting.UNDEFINED": {"tf": 1}, "tanjun.injecting.UndefinedOr": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.injected": {"tf": 1}, "tanjun.injecting.Injected": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.Injected.callback": {"tf": 1}, "tanjun.injecting.Injected.type": {"tf": 1}, "tanjun.injecting.InjectorClient": {"tf": 1}, "tanjun.injecting.InjectorClient.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor": {"tf": 1}, "tanjun.injecting.TypeDescriptor.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.type": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}}, "df": 56}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.injecting.AbstractInjectionContext.injection_client": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.injection_client": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.injecting.injected": {"tf": 1}, "tanjun.injecting.Injected": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.Injected.callback": {"tf": 1}, "tanjun.injecting.Injected.type": {"tf": 1}}, "df": 5}}}}}}, "t": {"docs": {"tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.Client.on_interaction_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.abc.SlashContext.interaction": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.context.SlashContext.interaction": {"tf": 1}}, "df": 11}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.as_interval": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.interval": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.schedules.IntervalSchedule": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.is_alive": {"tf": 1}, "tanjun.schedules.IntervalSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.IntervalSchedule.copy": {"tf": 1}, "tanjun.schedules.IntervalSchedule.load_into_component": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.stop": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}}, "df": 16}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}}, "df": 10}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.to_invite": {"tf": 1}, "tanjun.to_invite_with_metadata": {"tf": 1}, "tanjun.conversion.to_invite": {"tf": 1}, "tanjun.conversion.to_invite_with_metadata": {"tf": 1}}, "df": 4}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.__init__": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}}, "df": 27}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.InMemoryCooldownManager.__init__": {"tf": 1}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}}, "df": 27}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1}}, "df": 5}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.iter_commands": {"tf": 1}, "tanjun.Client.iter_message_commands": {"tf": 1}, "tanjun.Client.iter_slash_commands": {"tf": 1}, "tanjun.abc.Client.iter_commands": {"tf": 1}, "tanjun.abc.Client.iter_message_commands": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1}, "tanjun.clients.Client.iter_commands": {"tf": 1}, "tanjun.clients.Client.iter_message_commands": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}}, "df": 19, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.schedules.AbstractSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.IntervalSchedule.iteration_count": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {"tanjun.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.abc.Context.channel_id": {"tf": 1}, "tanjun.abc.Context.guild_id": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.clients.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.context.MessageContext.channel_id": {"tf": 1}, "tanjun.context.MessageContext.guild_id": {"tf": 1}, "tanjun.context.SlashContext.channel_id": {"tf": 1}, "tanjun.context.SlashContext.guild_id": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}}, "df": 14, "s": {"docs": {"tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}}, "df": 4}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}}, "df": 4}, "o": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.to_bool": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.conversion.to_bool": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.MessageCommand.bind_client": {"tf": 1}, "tanjun.MessageCommand.bind_component": {"tf": 1}, "tanjun.MessageCommandGroup.bind_client": {"tf": 1}, "tanjun.MessageCommandGroup.bind_component": {"tf": 1}, "tanjun.SlashCommand.bind_client": {"tf": 1}, "tanjun.Component.bind_client": {"tf": 1}, "tanjun.ShlexParser.bind_client": {"tf": 1}, "tanjun.ShlexParser.bind_component": {"tf": 1}, "tanjun.abc.ExecutableCommand.bind_client": {"tf": 1}, "tanjun.abc.ExecutableCommand.bind_component": {"tf": 1}, "tanjun.abc.Component.bind_client": {"tf": 1}, "tanjun.commands.MessageCommand.bind_client": {"tf": 1}, "tanjun.commands.MessageCommand.bind_component": {"tf": 1}, "tanjun.commands.MessageCommandGroup.bind_client": {"tf": 1}, "tanjun.commands.MessageCommandGroup.bind_component": {"tf": 1}, "tanjun.commands.PartialCommand.bind_client": {"tf": 1}, "tanjun.commands.PartialCommand.bind_component": {"tf": 1}, "tanjun.commands.SlashCommand.bind_client": {"tf": 1}, "tanjun.components.Component.bind_client": {"tf": 1}, "tanjun.parsing.AbstractParser.bind_client": {"tf": 1}, "tanjun.parsing.AbstractParser.bind_component": {"tf": 1}, "tanjun.parsing.Parameter.bind_client": {"tf": 1}, "tanjun.parsing.Parameter.bind_component": {"tf": 1}, "tanjun.parsing.ShlexParser.bind_client": {"tf": 1}, "tanjun.parsing.ShlexParser.bind_component": {"tf": 1}}, "df": 25}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.SlashCommand.build": {"tf": 1}, "tanjun.SlashCommandGroup.build": {"tf": 1}, "tanjun.abc.BaseSlashCommand.build": {"tf": 1}, "tanjun.commands.SlashCommand.build": {"tf": 1}, "tanjun.commands.SlashCommandGroup.build": {"tf": 1}}, "df": 5}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}}, "df": 12, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.BucketResource": {"tf": 1}, "tanjun.BucketResource.USER": {"tf": 1}, "tanjun.BucketResource.MEMBER": {"tf": 1}, "tanjun.BucketResource.CHANNEL": {"tf": 1}, "tanjun.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.BucketResource.GUILD": {"tf": 1}, "tanjun.BucketResource.GLOBAL": {"tf": 1}, "tanjun.dependencies.BucketResource": {"tf": 1}, "tanjun.dependencies.BucketResource.USER": {"tf": 1}, "tanjun.dependencies.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.BucketResource.GUILD": {"tf": 1}, "tanjun.dependencies.BucketResource.GLOBAL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.USER": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GUILD": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GLOBAL": {"tf": 1}}, "df": 24}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.BaseSlashCommand": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.abc.BaseSlashCommand.name": {"tf": 1}, "tanjun.abc.BaseSlashCommand.parent": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.abc.BaseSlashCommand.build": {"tf": 1}, "tanjun.abc.BaseSlashCommand.check_context": {"tf": 1}, "tanjun.abc.BaseSlashCommand.execute": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_parent": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.description": {"tf": 1}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.commands.BaseSlashCommand.name": {"tf": 1}, "tanjun.commands.BaseSlashCommand.parent": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_parent": {"tf": 1}, "tanjun.commands.BaseSlashCommand.check_context": {"tf": 1}, "tanjun.commands.BaseSlashCommand.copy": {"tf": 1}, "tanjun.commands.BaseSlashCommand.load_into_component": {"tf": 1}}, "df": 26, "t": {"docs": {"tanjun.abc.BaseSlashCommandT": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.injecting.BasicInjectionContext": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.__init__": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.injection_client": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1}}, "df": 17}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.on_message_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_event": {"tf": 1}, "tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.clients.Client.on_message_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}}, "df": 6, "s": {"docs": {"tanjun.Client.events": {"tf": 1}, "tanjun.abc.Context.events": {"tf": 1}, "tanjun.abc.Client.events": {"tf": 1}, "tanjun.clients.Client.events": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.utilities.calculate_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}}, "df": 2}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.MessageCommand.execute": {"tf": 1}, "tanjun.MessageCommandGroup.execute": {"tf": 1}, "tanjun.SlashCommand.execute": {"tf": 1}, "tanjun.SlashCommandGroup.execute": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.abc.MessageCommand.execute": {"tf": 1}, "tanjun.abc.BaseSlashCommand.execute": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.commands.MessageCommand.execute": {"tf": 1}, "tanjun.commands.MessageCommandGroup.execute": {"tf": 1}, "tanjun.commands.SlashCommand.execute": {"tf": 1}, "tanjun.commands.SlashCommandGroup.execute": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}}, "df": 16}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.abc.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.trigger_pre_execution": {"tf": 1}}, "df": 22}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.ExecutableCommand": {"tf": 1}, "tanjun.abc.ExecutableCommand.checks": {"tf": 1}, "tanjun.abc.ExecutableCommand.component": {"tf": 1}, "tanjun.abc.ExecutableCommand.hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.metadata": {"tf": 1}, "tanjun.abc.ExecutableCommand.bind_client": {"tf": 1}, "tanjun.abc.ExecutableCommand.bind_component": {"tf": 1}, "tanjun.abc.ExecutableCommand.copy": {"tf": 1}, "tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.add_check": {"tf": 1}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1}}, "df": 11}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.SlashContext.expires_at": {"tf": 1}, "tanjun.context.SlashContext.expires_at": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}}, "df": 2}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.to_emoji": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.to_emoji": {"tf": 1}}, "df": 4}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.parsing.Option.empty_value": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.trigger_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.trigger_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.trigger_error": {"tf": 1}}, "df": 19, "s": {"docs": {"tanjun.ConversionError.errors": {"tf": 1}, "tanjun.errors": {"tf": 1}, "tanjun.errors.CommandError": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}, "tanjun.errors.CommandError.message": {"tf": 1}, "tanjun.errors.ConversionError": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1}, "tanjun.errors.ConversionError.errors": {"tf": 1.4142135623730951}, "tanjun.errors.ConversionError.parameter": {"tf": 1}, "tanjun.errors.HaltExecution": {"tf": 1}, "tanjun.errors.FailedCheck": {"tf": 1}, "tanjun.errors.MissingDependencyError": {"tf": 1}, "tanjun.errors.MissingDependencyError.__init__": {"tf": 1}, "tanjun.errors.MissingDependencyError.message": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.parameter": {"tf": 1}, "tanjun.errors.TooManyArgumentsError": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.parameter": {"tf": 1}, "tanjun.errors.ParserError": {"tf": 1}, "tanjun.errors.ParserError.__init__": {"tf": 1}, "tanjun.errors.ParserError.message": {"tf": 1}, "tanjun.errors.ParserError.parameter": {"tf": 1}, "tanjun.errors.TanjunError": {"tf": 1}}, "df": 25}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.ErrorHookSig": {"tf": 1}}, "df": 1, "t": {"docs": {"tanjun.abc.ErrorHookSigT": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 6}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.dependencies.EntryNotFound": {"tf": 1}, "tanjun.dependencies.async_cache.EntryNotFound": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.is_human_only": {"tf": 1}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.abc.Context.is_human": {"tf": 1}, "tanjun.clients.Client.is_human_only": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.context.MessageContext.is_human": {"tf": 1}, "tanjun.context.SlashContext.is_human": {"tf": 1}}, "df": 7}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.hooks": {"tf": 1}, "tanjun.Client.slash_hooks": {"tf": 1}, "tanjun.Client.message_hooks": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Component.hooks": {"tf": 1}, "tanjun.Component.slash_hooks": {"tf": 1}, "tanjun.Component.message_hooks": {"tf": 1}, "tanjun.Component.set_slash_hooks": {"tf": 1}, "tanjun.Component.set_message_hooks": {"tf": 1}, "tanjun.Component.set_hooks": {"tf": 1}, "tanjun.Hooks": {"tf": 1}, "tanjun.Hooks.__init__": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.copy": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.Hooks.trigger_error": {"tf": 1}, "tanjun.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.Hooks.trigger_success": {"tf": 1}, "tanjun.abc.Hooks": {"tf": 1}, "tanjun.abc.Hooks.copy": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.Hooks.trigger_error": {"tf": 1}, "tanjun.abc.Hooks.trigger_post_execution": {"tf": 1}, "tanjun.abc.Hooks.trigger_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.trigger_success": {"tf": 1}, "tanjun.abc.ExecutableCommand.hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.clients.Client.slash_hooks": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.commands.PartialCommand.hooks": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1}, "tanjun.components.Component.hooks": {"tf": 1}, "tanjun.components.Component.slash_hooks": {"tf": 1}, "tanjun.components.Component.message_hooks": {"tf": 1}, "tanjun.components.Component.set_slash_hooks": {"tf": 1}, "tanjun.components.Component.set_message_hooks": {"tf": 1}, "tanjun.components.Component.set_hooks": {"tf": 1}, "tanjun.hooks": {"tf": 1}, "tanjun.hooks.AnyHooks": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.__init__": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.copy": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.trigger_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.trigger_post_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.trigger_pre_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.trigger_success": {"tf": 1.4142135623730951}, "tanjun.hooks.MessageHooks": {"tf": 1}, "tanjun.hooks.SlashHooks": {"tf": 1}}, "df": 94, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.HookSig": {"tf": 1}}, "df": 1, "t": {"docs": {"tanjun.abc.HookSigT": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.HaltExecution": {"tf": 1}, "tanjun.errors.HaltExecution": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.voice": {"tf": 1}, "tanjun.to_voice_state": {"tf": 1}, "tanjun.abc.Context.voice": {"tf": 1}, "tanjun.abc.Client.voice": {"tf": 1}, "tanjun.clients.Client.voice": {"tf": 1}, "tanjun.conversion.to_voice_state": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.LazyConstant.get_value": {"tf": 1}, "tanjun.LazyConstant.set_value": {"tf": 1}, "tanjun.abc.SlashOption.value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1}, "tanjun.context.SlashOption.value": {"tf": 1}, "tanjun.context.SlashOption.resolve_value": {"tf": 1}, "tanjun.dependencies.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.set_value": {"tf": 1}, "tanjun.parsing.Option.empty_value": {"tf": 1}}, "df": 11}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.components.WithCommandReturnSig": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}}, "df": 3}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.parsing.Parameter.key": {"tf": 1}}, "df": 1}}}}}, "doc": {"root": {"0": {"0": {"0": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}}, "df": 12, "f": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}}, "df": 2}}, "1": {"0": {"0": {"docs": {"tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_int_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1.4142135623730951}}, "df": 46}, "docs": {"tanjun.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1.4142135623730951}}, "df": 6}, "4": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}}, "df": 13}, "docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.set_global_commands": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.set_global_commands": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1.4142135623730951}}, "df": 32, "a": {"1": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.set_global_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.set_global_commands": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}}, "df": 9}, "docs": {}, "df": 0}, ",": {"3": {"2": {"docs": {"tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}}, "df": 26}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "2": {"0": {"0": {"0": {"docs": {"tanjun.CommandError.__init__": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}}, "df": 16}, "docs": {"tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 6}, "docs": {"tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}}, "df": 2}, "5": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}}, "df": 18}, "docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.4142135623730951}}, "df": 15, "f": {"docs": {"tanjun.with_cooldown": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 5}}, "3": {"9": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.Component.with_schedule": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1.4142135623730951}}, "df": 12}, "docs": {}, "df": 0}, "4": {"2": {"docs": {"tanjun.with_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "5": {"docs": {"tanjun.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}}, "df": 8}, "6": {"0": {"docs": {"tanjun.Component.with_schedule": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_schedule": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1.4142135623730951}}, "df": 5}, "4": {"docs": {"tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "f": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.conversion.from_datetime": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}}, "df": 14, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.with_bool_slash_option": {"tf": 1.7320508075688772}, "tanjun.abc.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}}, "df": 8, "s": {"docs": {"tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.defer": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.defer": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}}, "df": 29}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.SlashCommand.add_float_option": {"tf": 2.6457513110645907}, "tanjun.with_float_slash_option": {"tf": 2.6457513110645907}, "tanjun.cached_inject": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.as_interval": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 2.6457513110645907}, "tanjun.commands.with_float_slash_option": {"tf": 2.6457513110645907}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}}, "df": 32}}, "w": {"docs": {"tanjun.abc.Context.respond": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.get_response_future": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"tanjun": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.with_all_checks": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.context.SlashContext.defer": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 60}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}}, "df": 8, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "d": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}}, "df": 9}, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}}, "df": 30, "s": {"docs": {"tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 2}, "tanjun.abc.Context.edit_last_response": {"tf": 2}, "tanjun.abc.MessageContext.respond": {"tf": 2}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 2}, "tanjun.context.MessageContext.edit_last_response": {"tf": 2}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 2}, "tanjun.context.SlashContext.edit_last_response": {"tf": 2}}, "df": 12}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}}, "df": 10}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 5, "s": {"docs": {"tanjun.with_any_checks": {"tf": 1.7320508075688772}, "tanjun.with_dm_check": {"tf": 1.4142135623730951}, "tanjun.with_guild_check": {"tf": 1.4142135623730951}, "tanjun.with_nsfw_check": {"tf": 1.4142135623730951}, "tanjun.with_sfw_check": {"tf": 1.4142135623730951}, "tanjun.with_owner_check": {"tf": 1.4142135623730951}, "tanjun.with_author_permission_check": {"tf": 1.4142135623730951}, "tanjun.with_own_permission_check": {"tf": 1.4142135623730951}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1.7320508075688772}, "tanjun.checks.with_any_checks": {"tf": 1.7320508075688772}, "tanjun.checks.with_dm_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_guild_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_nsfw_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_sfw_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_owner_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_author_permission_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_own_permission_check": {"tf": 1.4142135623730951}, "tanjun.checks.DmCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.GuildCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.SfwCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 34}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.ConversionError": {"tf": 1}, "tanjun.errors.ConversionError": {"tf": 1}, "tanjun.schedules.AbstractSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.IntervalSchedule.iteration_count": {"tf": 1}}, "df": 4, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.abc.CheckSig": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.with_dm_check": {"tf": 1.4142135623730951}, "tanjun.with_guild_check": {"tf": 1.4142135623730951}, "tanjun.with_nsfw_check": {"tf": 1.4142135623730951}, "tanjun.with_sfw_check": {"tf": 1.4142135623730951}, "tanjun.with_owner_check": {"tf": 1.4142135623730951}, "tanjun.with_author_permission_check": {"tf": 1.4142135623730951}, "tanjun.with_own_permission_check": {"tf": 1.4142135623730951}, "tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client.__init__": {"tf": 2}, "tanjun.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.FailedCheck": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.Context.is_human": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_dm_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_guild_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_nsfw_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_sfw_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_owner_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_author_permission_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_own_permission_check": {"tf": 1.4142135623730951}, "tanjun.checks.DmCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.GuildCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.SfwCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 2}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.context.MessageContext.is_human": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.context.SlashContext.is_human": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.errors.FailedCheck": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}}, "df": 110}}, "l": {"docs": {"tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}}, "df": 10, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}, "tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1.4142135623730951}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 16, "s": {"docs": {"tanjun.conversion.ToChannel.__init__": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}}, "df": 10}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Hooks": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.as_interval": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.open": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.as_interval": {"tf": 1}, "tanjun.abc.ListenerCallbackSig": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}}, "df": 38, "s": {"docs": {"tanjun": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommandGroup": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommandGroup": {"tf": 1}, "tanjun.conversion": {"tf": 1}, "tanjun.utilities": {"tf": 1}}, "df": 8}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}}, "df": 18}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.context.SlashContext.get_response_future": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7}, "[": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.context.SlashContext.get_response_future": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1.4142135623730951}, "tanjun.Client.get_component_by_name": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.remove_component_by_name": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.remove_listener": {"tf": 1.4142135623730951}, "tanjun.Client.load_modules": {"tf": 1.4142135623730951}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.to_datetime": {"tf": 1}, "tanjun.MissingDependencyError": {"tf": 1}, "tanjun.NotEnoughArgumentsError": {"tf": 1}, "tanjun.TooManyArgumentsError": {"tf": 1}, "tanjun.Hooks": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1.4142135623730951}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.fetch_initial_response": {"tf": 1}, "tanjun.abc.Context.fetch_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.SlashContext.mark_not_found": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.get_component_by_name": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.remove_listener": {"tf": 1.4142135623730951}, "tanjun.abc.Client.load_modules": {"tf": 1.4142135623730951}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1.4142135623730951}, "tanjun.clients.Client.get_component_by_name": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.remove_listener": {"tf": 1.4142135623730951}, "tanjun.clients.Client.load_modules": {"tf": 1.4142135623730951}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_initial_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.mark_not_found": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_initial_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1.4142135623730951}, "tanjun.conversion.to_datetime": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1.7320508075688772}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1.7320508075688772}, "tanjun.dependencies.CacheMissError": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1.7320508075688772}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1.7320508075688772}, "tanjun.dependencies.async_cache": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1.7320508075688772}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1.7320508075688772}, "tanjun.dependencies.async_cache.CacheMissError": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1.7320508075688772}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1.7320508075688772}, "tanjun.errors.MissingDependencyError": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError": {"tf": 1}, "tanjun.errors.TooManyArgumentsError": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}}, "df": 104}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}}, "df": 32}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}}, "df": 12}}, "s": {"docs": {"tanjun.utilities.CastedView": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.4142135623730951}}, "df": 6}}, "m": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}}, "df": 6, "a": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.to_datetime": {"tf": 1.4142135623730951}, "tanjun.to_snowflake": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 2}, "tanjun.conversion.to_datetime": {"tf": 1.4142135623730951}}, "df": 4, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.to_datetime": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1.4142135623730951}, "tanjun.conversion.to_datetime": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.conversion.from_datetime": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"tanjun.conversion.from_datetime": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 12}}}}}}}}}}}}, "o": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 2}, "tanjun.clients.Client.load_modules": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.Client.open": {"tf": 1}, "tanjun.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.abc.Context.fetch_initial_response": {"tf": 1}, "tanjun.abc.Context.fetch_last_response": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.clients.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.context.MessageContext.fetch_initial_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_last_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_initial_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_last_response": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1.4142135623730951}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1.4142135623730951}}, "df": 17}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.components": {"tf": 1}}, "df": 1}}}}}}}, "\"": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.with_cooldown": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 5}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {"tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun": {"tf": 3.4641016151377544}, "tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.with_check": {"tf": 1.7320508075688772}, "tanjun.with_dm_check": {"tf": 2.6457513110645907}, "tanjun.with_guild_check": {"tf": 2.6457513110645907}, "tanjun.with_nsfw_check": {"tf": 2.6457513110645907}, "tanjun.with_sfw_check": {"tf": 2.6457513110645907}, "tanjun.with_owner_check": {"tf": 2.6457513110645907}, "tanjun.with_author_permission_check": {"tf": 2.449489742783178}, "tanjun.with_own_permission_check": {"tf": 2.449489742783178}, "tanjun.Client": {"tf": 1}, "tanjun.Client.__init__": {"tf": 3}, "tanjun.Client.from_gateway_bot": {"tf": 2}, "tanjun.Client.from_rest_bot": {"tf": 2}, "tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.message_accepts": {"tf": 1}, "tanjun.Client.cache": {"tf": 1}, "tanjun.Client.components": {"tf": 1}, "tanjun.Client.hooks": {"tf": 1}, "tanjun.Client.slash_hooks": {"tf": 1}, "tanjun.Client.message_hooks": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 2.23606797749979}, "tanjun.Client.declare_application_command": {"tf": 3.605551275463989}, "tanjun.Client.declare_application_commands": {"tf": 2.449489742783178}, "tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1.4142135623730951}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1.4142135623730951}, "tanjun.Client.check_message_name": {"tf": 2}, "tanjun.Client.check_slash_name": {"tf": 1.7320508075688772}, "tanjun.Client.set_hooks": {"tf": 1.7320508075688772}, "tanjun.Client.set_slash_hooks": {"tf": 1.7320508075688772}, "tanjun.Client.set_message_hooks": {"tf": 1.7320508075688772}, "tanjun.Client.on_message_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_request": {"tf": 1.4142135623730951}, "tanjun.as_message_command": {"tf": 2.449489742783178}, "tanjun.as_message_command_group": {"tf": 3.1622776601683795}, "tanjun.as_slash_command": {"tf": 4}, "tanjun.slash_command_group": {"tf": 5.291502622129181}, "tanjun.MessageCommand": {"tf": 1}, "tanjun.MessageCommand.__init__": {"tf": 2}, "tanjun.MessageCommand.callback": {"tf": 1}, "tanjun.MessageCommand.parent": {"tf": 1}, "tanjun.MessageCommand.copy": {"tf": 1}, "tanjun.MessageCommand.set_parent": {"tf": 1.7320508075688772}, "tanjun.MessageCommandGroup": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 2.6457513110645907}, "tanjun.MessageCommandGroup.commands": {"tf": 1}, "tanjun.MessageCommandGroup.copy": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 2}, "tanjun.MessageCommandGroup.remove_command": {"tf": 2}, "tanjun.MessageCommandGroup.with_command": {"tf": 2}, "tanjun.SlashCommand": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 3.605551275463989}, "tanjun.SlashCommand.build": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_str_option": {"tf": 2}, "tanjun.SlashCommand.add_int_option": {"tf": 2}, "tanjun.SlashCommand.add_float_option": {"tf": 2}, "tanjun.SlashCommand.add_bool_option": {"tf": 2}, "tanjun.SlashCommand.add_user_option": {"tf": 2.23606797749979}, "tanjun.SlashCommand.add_member_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_channel_option": {"tf": 2}, "tanjun.SlashCommand.add_role_option": {"tf": 2}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 2}, "tanjun.SlashCommand.copy": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup": {"tf": 1.7320508075688772}, "tanjun.SlashCommandGroup.__init__": {"tf": 3.1622776601683795}, "tanjun.SlashCommandGroup.build": {"tf": 1.7320508075688772}, "tanjun.SlashCommandGroup.copy": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.add_command": {"tf": 2}, "tanjun.SlashCommandGroup.remove_command": {"tf": 1.7320508075688772}, "tanjun.SlashCommandGroup.with_command": {"tf": 2}, "tanjun.with_str_slash_option": {"tf": 2.449489742783178}, "tanjun.with_int_slash_option": {"tf": 2.449489742783178}, "tanjun.with_float_slash_option": {"tf": 2.449489742783178}, "tanjun.with_bool_slash_option": {"tf": 2.449489742783178}, "tanjun.with_role_slash_option": {"tf": 2.449489742783178}, "tanjun.with_user_slash_option": {"tf": 2.6457513110645907}, "tanjun.with_member_slash_option": {"tf": 2.449489742783178}, "tanjun.with_channel_slash_option": {"tf": 2.449489742783178}, "tanjun.with_mentionable_slash_option": {"tf": 2.449489742783178}, "tanjun.Component": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1.7320508075688772}, "tanjun.Component.checks": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.Component.add_command": {"tf": 1.7320508075688772}, "tanjun.Component.remove_command": {"tf": 1.7320508075688772}, "tanjun.Component.with_command": {"tf": 4}, "tanjun.Component.add_slash_command": {"tf": 1.7320508075688772}, "tanjun.Component.remove_slash_command": {"tf": 2}, "tanjun.Component.with_slash_command": {"tf": 2.23606797749979}, "tanjun.Component.add_message_command": {"tf": 1.7320508075688772}, "tanjun.Component.remove_message_command": {"tf": 2}, "tanjun.Component.with_message_command": {"tf": 2.23606797749979}, "tanjun.Component.check_message_name": {"tf": 2.449489742783178}, "tanjun.Component.check_slash_name": {"tf": 1.4142135623730951}, "tanjun.Component.execute_interaction": {"tf": 1.7320508075688772}, "tanjun.Component.execute_message": {"tf": 1.7320508075688772}, "tanjun.BucketResource": {"tf": 1}, "tanjun.cached_inject": {"tf": 1}, "tanjun.inject_lc": {"tf": 1.7320508075688772}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.with_cooldown": {"tf": 1.7320508075688772}, "tanjun.CommandError": {"tf": 1}, "tanjun.CommandError.__init__": {"tf": 1.4142135623730951}, "tanjun.HaltExecution": {"tf": 1}, "tanjun.ParserError.message": {"tf": 1}, "tanjun.Hooks": {"tf": 1}, "tanjun.Hooks.__init__": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 3.3166247903554}, "tanjun.inject": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.with_argument": {"tf": 2.8284271247461903}, "tanjun.with_greedy_argument": {"tf": 2.8284271247461903}, "tanjun.with_multi_argument": {"tf": 2.8284271247461903}, "tanjun.with_option": {"tf": 2.6457513110645907}, "tanjun.with_multi_option": {"tf": 2.449489742783178}, "tanjun.with_parser": {"tf": 2.6457513110645907}, "tanjun.abc.CommandCallbackSig": {"tf": 1.7320508075688772}, "tanjun.abc.Context": {"tf": 1}, "tanjun.abc.Context.author": {"tf": 1}, "tanjun.abc.Context.channel_id": {"tf": 1}, "tanjun.abc.Context.cache": {"tf": 1}, "tanjun.abc.Context.component": {"tf": 1.4142135623730951}, "tanjun.abc.Context.command": {"tf": 1.7320508075688772}, "tanjun.abc.Context.guild_id": {"tf": 1.4142135623730951}, "tanjun.abc.Context.is_human": {"tf": 1}, "tanjun.abc.Context.member": {"tf": 1}, "tanjun.abc.Context.triggering_name": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 2}, "tanjun.abc.Context.edit_last_response": {"tf": 2}, "tanjun.abc.Context.respond": {"tf": 2.23606797749979}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.Hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.checks": {"tf": 1}, "tanjun.abc.ExecutableCommand.component": {"tf": 1}, "tanjun.abc.ExecutableCommand.hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.metadata": {"tf": 1.4142135623730951}, "tanjun.abc.ExecutableCommand.copy": {"tf": 1.4142135623730951}, "tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1.7320508075688772}, "tanjun.abc.ExecutableCommand.add_check": {"tf": 1.4142135623730951}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1.4142135623730951}, "tanjun.abc.HookSig": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1.4142135623730951}, "tanjun.abc.MessageCommand": {"tf": 1}, "tanjun.abc.MessageCommand.callback": {"tf": 1}, "tanjun.abc.MessageCommand.parent": {"tf": 1}, "tanjun.abc.MessageCommand.set_parent": {"tf": 1.7320508075688772}, "tanjun.abc.MessageCommand.copy": {"tf": 1}, "tanjun.abc.MessageCommandGroup": {"tf": 1}, "tanjun.abc.MessageCommandGroup.commands": {"tf": 1}, "tanjun.abc.MessageCommandGroup.add_command": {"tf": 1.7320508075688772}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 2}, "tanjun.abc.MessageCommandGroup.with_command": {"tf": 2}, "tanjun.abc.MessageContext": {"tf": 1}, "tanjun.abc.MessageContext.command": {"tf": 1.7320508075688772}, "tanjun.abc.MessageContext.triggering_name": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.BaseSlashCommand": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.abc.BaseSlashCommand.is_global": {"tf": 1.7320508075688772}, "tanjun.abc.BaseSlashCommand.name": {"tf": 1}, "tanjun.abc.BaseSlashCommand.parent": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.abc.BaseSlashCommand.build": {"tf": 1.7320508075688772}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 2.23606797749979}, "tanjun.abc.SlashCommand": {"tf": 1}, "tanjun.abc.SlashCommandGroup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashCommandGroup.add_command": {"tf": 2}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 2.23606797749979}, "tanjun.abc.SlashCommandGroup.with_command": {"tf": 2}, "tanjun.abc.SlashContext": {"tf": 1}, "tanjun.abc.SlashContext.command": {"tf": 2}, "tanjun.abc.SlashContext.expires_at": {"tf": 1}, "tanjun.abc.SlashContext.member": {"tf": 1}, "tanjun.abc.SlashContext.set_command": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.SlashOption": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.abc.Component": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.add_slash_command": {"tf": 1.7320508075688772}, "tanjun.abc.Component.remove_slash_command": {"tf": 2}, "tanjun.abc.Component.with_slash_command": {"tf": 2.23606797749979}, "tanjun.abc.Component.add_message_command": {"tf": 1.7320508075688772}, "tanjun.abc.Component.remove_message_command": {"tf": 2}, "tanjun.abc.Component.with_message_command": {"tf": 2.23606797749979}, "tanjun.abc.Component.check_message_name": {"tf": 2.449489742783178}, "tanjun.abc.Component.check_slash_name": {"tf": 1.4142135623730951}, "tanjun.abc.Component.execute_interaction": {"tf": 1.7320508075688772}, "tanjun.abc.Component.execute_message": {"tf": 1.7320508075688772}, "tanjun.abc.Client": {"tf": 1}, "tanjun.abc.Client.cache": {"tf": 1}, "tanjun.abc.Client.components": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.prefixes": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_global_commands": {"tf": 2.23606797749979}, "tanjun.abc.Client.declare_application_command": {"tf": 3.605551275463989}, "tanjun.abc.Client.declare_application_commands": {"tf": 2.449489742783178}, "tanjun.abc.Client.check_message_name": {"tf": 2}, "tanjun.abc.Client.check_slash_name": {"tf": 1.7320508075688772}, "tanjun.checks.any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.CallbackReturnT": {"tf": 2}, "tanjun.checks.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_check": {"tf": 1.7320508075688772}, "tanjun.checks.with_dm_check": {"tf": 2.6457513110645907}, "tanjun.checks.with_guild_check": {"tf": 2.6457513110645907}, "tanjun.checks.with_nsfw_check": {"tf": 2.6457513110645907}, "tanjun.checks.with_sfw_check": {"tf": 2.6457513110645907}, "tanjun.checks.with_owner_check": {"tf": 2.6457513110645907}, "tanjun.checks.with_author_permission_check": {"tf": 2.449489742783178}, "tanjun.checks.with_own_permission_check": {"tf": 2.449489742783178}, "tanjun.checks.DmCheck.__init__": {"tf": 1.7320508075688772}, "tanjun.checks.GuildCheck.__init__": {"tf": 1.7320508075688772}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1.7320508075688772}, "tanjun.checks.SfwCheck.__init__": {"tf": 1.7320508075688772}, "tanjun.checks.OwnerCheck": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1.7320508075688772}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 2}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 2}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 3}, "tanjun.clients.Client.from_gateway_bot": {"tf": 2}, "tanjun.clients.Client.from_rest_bot": {"tf": 2}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.message_accepts": {"tf": 1}, "tanjun.clients.Client.cache": {"tf": 1}, "tanjun.clients.Client.components": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.clients.Client.slash_hooks": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 2.23606797749979}, "tanjun.clients.Client.declare_application_command": {"tf": 3.605551275463989}, "tanjun.clients.Client.declare_application_commands": {"tf": 2.449489742783178}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1.4142135623730951}, "tanjun.clients.Client.check_message_name": {"tf": 2}, "tanjun.clients.Client.check_slash_name": {"tf": 1.7320508075688772}, "tanjun.clients.Client.set_hooks": {"tf": 1.7320508075688772}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1.7320508075688772}, "tanjun.clients.Client.set_message_hooks": {"tf": 1.7320508075688772}, "tanjun.clients.Client.on_message_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1.4142135623730951}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.commands": {"tf": 1}, "tanjun.commands.ConverterSig": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 2.449489742783178}, "tanjun.commands.as_message_command_group": {"tf": 3.1622776601683795}, "tanjun.commands.as_slash_command": {"tf": 4}, "tanjun.commands.slash_command_group": {"tf": 5.291502622129181}, "tanjun.commands.MessageCommand": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 2}, "tanjun.commands.MessageCommand.callback": {"tf": 1}, "tanjun.commands.MessageCommand.parent": {"tf": 1}, "tanjun.commands.MessageCommand.copy": {"tf": 1}, "tanjun.commands.MessageCommand.set_parent": {"tf": 1.7320508075688772}, "tanjun.commands.MessageCommandGroup": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 2.6457513110645907}, "tanjun.commands.MessageCommandGroup.commands": {"tf": 1}, "tanjun.commands.MessageCommandGroup.copy": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 2}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 2}, "tanjun.commands.MessageCommandGroup.with_command": {"tf": 2}, "tanjun.commands.PartialCommand.checks": {"tf": 1}, "tanjun.commands.PartialCommand.component": {"tf": 1}, "tanjun.commands.PartialCommand.hooks": {"tf": 1}, "tanjun.commands.PartialCommand.metadata": {"tf": 1.4142135623730951}, "tanjun.commands.PartialCommand.copy": {"tf": 1.4142135623730951}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1.7320508075688772}, "tanjun.commands.PartialCommand.add_check": {"tf": 1.4142135623730951}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1.7320508075688772}, "tanjun.commands.BaseSlashCommand.name": {"tf": 1}, "tanjun.commands.BaseSlashCommand.parent": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 2.23606797749979}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand.copy": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 3.605551275463989}, "tanjun.commands.SlashCommand.build": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 2}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 2}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 2}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 2}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 2.23606797749979}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 2}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 2}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 2}, "tanjun.commands.SlashCommand.copy": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 3.1622776601683795}, "tanjun.commands.SlashCommandGroup.build": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommandGroup.copy": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 2}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommandGroup.with_command": {"tf": 2}, "tanjun.commands.with_str_slash_option": {"tf": 2.449489742783178}, "tanjun.commands.with_int_slash_option": {"tf": 2.449489742783178}, "tanjun.commands.with_float_slash_option": {"tf": 2.449489742783178}, "tanjun.commands.with_bool_slash_option": {"tf": 2.449489742783178}, "tanjun.commands.with_role_slash_option": {"tf": 2.449489742783178}, "tanjun.commands.with_user_slash_option": {"tf": 2.6457513110645907}, "tanjun.commands.with_member_slash_option": {"tf": 2.449489742783178}, "tanjun.commands.with_channel_slash_option": {"tf": 2.449489742783178}, "tanjun.commands.with_mentionable_slash_option": {"tf": 2.449489742783178}, "tanjun.components.Component": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1.7320508075688772}, "tanjun.components.Component.checks": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.add_command": {"tf": 1.7320508075688772}, "tanjun.components.Component.remove_command": {"tf": 1.7320508075688772}, "tanjun.components.Component.with_command": {"tf": 4}, "tanjun.components.Component.add_slash_command": {"tf": 1.7320508075688772}, "tanjun.components.Component.remove_slash_command": {"tf": 2}, "tanjun.components.Component.with_slash_command": {"tf": 2.23606797749979}, "tanjun.components.Component.add_message_command": {"tf": 1.7320508075688772}, "tanjun.components.Component.remove_message_command": {"tf": 2}, "tanjun.components.Component.with_message_command": {"tf": 2.23606797749979}, "tanjun.components.Component.check_message_name": {"tf": 2.449489742783178}, "tanjun.components.Component.check_slash_name": {"tf": 1.4142135623730951}, "tanjun.components.Component.execute_interaction": {"tf": 1.7320508075688772}, "tanjun.components.Component.execute_message": {"tf": 1.7320508075688772}, "tanjun.context": {"tf": 1}, "tanjun.context.MessageContext": {"tf": 1}, "tanjun.context.MessageContext.author": {"tf": 1}, "tanjun.context.MessageContext.channel_id": {"tf": 1}, "tanjun.context.MessageContext.command": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.guild_id": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.is_human": {"tf": 1}, "tanjun.context.MessageContext.member": {"tf": 1}, "tanjun.context.MessageContext.triggering_name": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 2}, "tanjun.context.MessageContext.edit_last_response": {"tf": 2}, "tanjun.context.MessageContext.respond": {"tf": 2.23606797749979}, "tanjun.context.ResponseTypeT": {"tf": 1}, "tanjun.context.SlashContext.author": {"tf": 1}, "tanjun.context.SlashContext.channel_id": {"tf": 1}, "tanjun.context.SlashContext.command": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.expires_at": {"tf": 1}, "tanjun.context.SlashContext.guild_id": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.is_human": {"tf": 1}, "tanjun.context.SlashContext.member": {"tf": 1}, "tanjun.context.SlashContext.triggering_name": {"tf": 1}, "tanjun.context.SlashContext.set_command": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 2}, "tanjun.context.SlashContext.edit_last_response": {"tf": 2}, "tanjun.context.SlashContext.respond": {"tf": 2.23606797749979}, "tanjun.context.SlashOption": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1.7320508075688772}, "tanjun.dependencies.AbstractConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.BucketResource": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1.7320508075688772}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.dependencies.with_cooldown": {"tf": 1.7320508075688772}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1.7320508075688772}, "tanjun.errors.CommandError": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1.4142135623730951}, "tanjun.errors.HaltExecution": {"tf": 1}, "tanjun.errors.ParserError.message": {"tf": 1}, "tanjun.hooks": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}, "tanjun.hooks.Hooks.__init__": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 3.3166247903554}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1.4142135623730951}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1.4142135623730951}, "tanjun.parsing": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.ParseableProto": {"tf": 1}, "tanjun.parsing.ParseableProto.callback": {"tf": 1}, "tanjun.parsing.ParseableProto.parser": {"tf": 1}, "tanjun.parsing.ParseableProto.set_parser": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 2.8284271247461903}, "tanjun.parsing.with_greedy_argument": {"tf": 2.8284271247461903}, "tanjun.parsing.with_multi_argument": {"tf": 2.8284271247461903}, "tanjun.parsing.with_option": {"tf": 2.6457513110645907}, "tanjun.parsing.with_multi_option": {"tf": 2.449489742783178}, "tanjun.parsing.with_parser": {"tf": 2.6457513110645907}}, "df": 437, "s": {"docs": {"tanjun": {"tf": 2}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.__init__": {"tf": 3.605551275463989}, "tanjun.Client.from_gateway_bot": {"tf": 3.3166247903554}, "tanjun.Client.from_rest_bot": {"tf": 3.1622776601683795}, "tanjun.Client.events": {"tf": 1}, "tanjun.Client.server": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 2}, "tanjun.Client.set_global_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_global_commands": {"tf": 3.3166247903554}, "tanjun.Client.declare_application_commands": {"tf": 3.605551275463989}, "tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.Client.set_message_accepts": {"tf": 1.4142135623730951}, "tanjun.Client.set_human_only": {"tf": 2}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.remove_component_by_name": {"tf": 1}, "tanjun.Client.iter_commands": {"tf": 1.4142135623730951}, "tanjun.Client.iter_message_commands": {"tf": 1.4142135623730951}, "tanjun.Client.iter_slash_commands": {"tf": 1.7320508075688772}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Client.on_interaction_create_event": {"tf": 1}, "tanjun.MessageAcceptsEnum": {"tf": 1}, "tanjun.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1.7320508075688772}, "tanjun.slash_command_group": {"tf": 1.7320508075688772}, "tanjun.MessageCommand.callback": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.MessageCommandGroup.commands": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1.7320508075688772}, "tanjun.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.commands": {"tf": 1}, "tanjun.Component": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1.7320508075688772}, "tanjun.Component.slash_commands": {"tf": 1}, "tanjun.Component.message_commands": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.Component.check_message_name": {"tf": 1.4142135623730951}, "tanjun.Component.check_slash_name": {"tf": 1.7320508075688772}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.HaltExecution": {"tf": 1}, "tanjun.abc.ClientLoader.load": {"tf": 1}, "tanjun.abc.ClientLoader.unload": {"tf": 1}, "tanjun.abc.Context.is_human": {"tf": 1}, "tanjun.abc.MessageHooks": {"tf": 1}, "tanjun.abc.SlashHooks": {"tf": 1}, "tanjun.abc.ExecutableCommand": {"tf": 1}, "tanjun.abc.MessageCommand.callback": {"tf": 1}, "tanjun.abc.MessageCommandGroup.commands": {"tf": 1}, "tanjun.abc.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.abc.SlashCommandGroup.commands": {"tf": 1}, "tanjun.abc.Component": {"tf": 1}, "tanjun.abc.Component.slash_commands": {"tf": 1}, "tanjun.abc.Component.message_commands": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1.4142135623730951}, "tanjun.abc.Component.check_slash_name": {"tf": 1.7320508075688772}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Client.events": {"tf": 1}, "tanjun.abc.Client.prefixes": {"tf": 1}, "tanjun.abc.Client.server": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 2}, "tanjun.abc.Client.declare_global_commands": {"tf": 3.3166247903554}, "tanjun.abc.Client.declare_application_commands": {"tf": 3.605551275463989}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.abc.Client.iter_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.iter_message_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1.7320508075688772}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.checks": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 3.605551275463989}, "tanjun.clients.Client.from_gateway_bot": {"tf": 3.3166247903554}, "tanjun.clients.Client.from_rest_bot": {"tf": 3.1622776601683795}, "tanjun.clients.Client.events": {"tf": 1}, "tanjun.clients.Client.server": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 2}, "tanjun.clients.Client.set_global_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 3.3166247903554}, "tanjun.clients.Client.declare_application_commands": {"tf": 3.605551275463989}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_message_accepts": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_human_only": {"tf": 2}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client.iter_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.iter_message_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1.7320508075688772}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.7320508075688772}, "tanjun.commands.slash_command_group": {"tf": 1.7320508075688772}, "tanjun.commands.MessageCommand.callback": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.MessageCommandGroup.commands": {"tf": 1}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.commands": {"tf": 1}, "tanjun.components.Component": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1.7320508075688772}, "tanjun.components.Component.slash_commands": {"tf": 1}, "tanjun.components.Component.message_commands": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.components.Component.check_message_name": {"tf": 1.4142135623730951}, "tanjun.components.Component.check_slash_name": {"tf": 1.7320508075688772}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.context.MessageContext.is_human": {"tf": 1}, "tanjun.context.SlashContext.is_human": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.errors.HaltExecution": {"tf": 1}}, "df": 126, "=": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"tanjun": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}}, "df": 9}}}}}, "t": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.with_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 17}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.as_slash_command": {"tf": 2}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommand.names": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 2}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1.4142135623730951}, "tanjun.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.with_multi_argument": {"tf": 1.7320508075688772}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.abc.Context.member": {"tf": 1}, "tanjun.abc.MessageCommand.names": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 2}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommand.names": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.__init__": {"tf": 2}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.context.MessageContext.member": {"tf": 1}, "tanjun.context.SlashContext.member": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.Parameter.key": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1.4142135623730951}}, "df": 53}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.on_interaction_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}}, "df": 4}}}}}}}}}}}, "(": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}}, "df": 11}, "\"": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}}, "df": 3}}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.SlashCommand.build": {"tf": 1}, "tanjun.SlashCommandGroup.build": {"tf": 1}, "tanjun.abc.BaseSlashCommand.build": {"tf": 1}, "tanjun.commands.SlashCommand.build": {"tf": 1}, "tanjun.commands.SlashCommandGroup.build": {"tf": 1}}, "df": 5}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.CommandCallbackSigT": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.checks": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun": {"tf": 2.449489742783178}, "tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1.4142135623730951}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1.4142135623730951}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.voice": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.Client.add_component": {"tf": 2}, "tanjun.Client.get_component_by_name": {"tf": 1.7320508075688772}, "tanjun.Client.remove_component": {"tf": 2.449489742783178}, "tanjun.Client.remove_component_by_name": {"tf": 2}, "tanjun.Client.load_modules": {"tf": 2}, "tanjun.Client.unload_modules": {"tf": 2.449489742783178}, "tanjun.as_message_command": {"tf": 1.4142135623730951}, "tanjun.as_message_command_group": {"tf": 1.4142135623730951}, "tanjun.as_slash_command": {"tf": 1.7320508075688772}, "tanjun.slash_command_group": {"tf": 1.7320508075688772}, "tanjun.MessageCommand.load_into_component": {"tf": 2}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.load_into_component": {"tf": 2}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.Component": {"tf": 1}, "tanjun.Component.__init__": {"tf": 2.6457513110645907}, "tanjun.Component.checks": {"tf": 1}, "tanjun.Component.client": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.name": {"tf": 1}, "tanjun.Component.schedules": {"tf": 1}, "tanjun.Component.slash_commands": {"tf": 1}, "tanjun.Component.message_commands": {"tf": 1}, "tanjun.Component.needs_injector": {"tf": 1}, "tanjun.Component.listeners": {"tf": 1}, "tanjun.Component.metadata": {"tf": 1.4142135623730951}, "tanjun.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.Component.set_ephemeral_default": {"tf": 1.7320508075688772}, "tanjun.Component.add_command": {"tf": 1.4142135623730951}, "tanjun.Component.remove_command": {"tf": 1.4142135623730951}, "tanjun.Component.with_command": {"tf": 2.23606797749979}, "tanjun.Component.add_slash_command": {"tf": 1.4142135623730951}, "tanjun.Component.remove_slash_command": {"tf": 1.4142135623730951}, "tanjun.Component.with_slash_command": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1.7320508075688772}, "tanjun.Component.remove_message_command": {"tf": 1.4142135623730951}, "tanjun.Component.with_message_command": {"tf": 1}, "tanjun.Component.add_listener": {"tf": 1.4142135623730951}, "tanjun.Component.remove_listener": {"tf": 1.4142135623730951}, "tanjun.Component.with_listener": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 2}, "tanjun.Component.with_on_close": {"tf": 1.7320508075688772}, "tanjun.Component.add_on_open": {"tf": 2}, "tanjun.Component.with_on_open": {"tf": 1.7320508075688772}, "tanjun.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.Component.add_schedule": {"tf": 1.4142135623730951}, "tanjun.Component.remove_schedule": {"tf": 1.4142135623730951}, "tanjun.Component.with_schedule": {"tf": 1.4142135623730951}, "tanjun.Component.close": {"tf": 1.4142135623730951}, "tanjun.Component.open": {"tf": 1.7320508075688772}, "tanjun.Component.make_loader": {"tf": 2}, "tanjun.inject_lc": {"tf": 1}, "tanjun.inject": {"tf": 1.7320508075688772}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.Context.component": {"tf": 1}, "tanjun.abc.Context.voice": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 2}, "tanjun.abc.Context.edit_last_response": {"tf": 2}, "tanjun.abc.Context.respond": {"tf": 1.7320508075688772}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1.4142135623730951}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1.4142135623730951}, "tanjun.abc.ExecutableCommand.component": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Component": {"tf": 1}, "tanjun.abc.Component.client": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.name": {"tf": 1}, "tanjun.abc.Component.slash_commands": {"tf": 1}, "tanjun.abc.Component.message_commands": {"tf": 1}, "tanjun.abc.Component.listeners": {"tf": 1}, "tanjun.abc.Component.metadata": {"tf": 1.4142135623730951}, "tanjun.abc.Component.add_slash_command": {"tf": 1.4142135623730951}, "tanjun.abc.Component.remove_slash_command": {"tf": 1.4142135623730951}, "tanjun.abc.Component.with_slash_command": {"tf": 1}, "tanjun.abc.Component.add_message_command": {"tf": 1.4142135623730951}, "tanjun.abc.Component.remove_message_command": {"tf": 1.4142135623730951}, "tanjun.abc.Component.with_message_command": {"tf": 1}, "tanjun.abc.Component.add_listener": {"tf": 1.4142135623730951}, "tanjun.abc.Component.remove_listener": {"tf": 1.4142135623730951}, "tanjun.abc.Component.with_listener": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.abc.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.abc.Component.close": {"tf": 1.4142135623730951}, "tanjun.abc.Component.open": {"tf": 1.7320508075688772}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.voice": {"tf": 1}, "tanjun.abc.Client.add_component": {"tf": 2}, "tanjun.abc.Client.get_component_by_name": {"tf": 1.7320508075688772}, "tanjun.abc.Client.remove_component": {"tf": 2.449489742783178}, "tanjun.abc.Client.remove_component_by_name": {"tf": 2}, "tanjun.abc.Client.load_modules": {"tf": 2}, "tanjun.abc.Client.unload_modules": {"tf": 2.449489742783178}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.voice": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.clients.Client.add_component": {"tf": 2}, "tanjun.clients.Client.get_component_by_name": {"tf": 1.7320508075688772}, "tanjun.clients.Client.remove_component": {"tf": 2.449489742783178}, "tanjun.clients.Client.remove_component_by_name": {"tf": 2}, "tanjun.clients.Client.load_modules": {"tf": 2}, "tanjun.clients.Client.unload_modules": {"tf": 2.449489742783178}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1.4142135623730951}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1.4142135623730951}, "tanjun.commands.as_message_command": {"tf": 1.4142135623730951}, "tanjun.commands.as_message_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 1.7320508075688772}, "tanjun.commands.slash_command_group": {"tf": 1.7320508075688772}, "tanjun.commands.MessageCommand.load_into_component": {"tf": 2}, "tanjun.commands.PartialCommand.component": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.BaseSlashCommand.load_into_component": {"tf": 2}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.load_into_component": {"tf": 2}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.components.Component": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 2.6457513110645907}, "tanjun.components.Component.checks": {"tf": 1}, "tanjun.components.Component.client": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.name": {"tf": 1}, "tanjun.components.Component.schedules": {"tf": 1}, "tanjun.components.Component.slash_commands": {"tf": 1}, "tanjun.components.Component.message_commands": {"tf": 1}, "tanjun.components.Component.needs_injector": {"tf": 1}, "tanjun.components.Component.listeners": {"tf": 1}, "tanjun.components.Component.metadata": {"tf": 1.4142135623730951}, "tanjun.components.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1.7320508075688772}, "tanjun.components.Component.add_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.remove_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_command": {"tf": 2.23606797749979}, "tanjun.components.Component.add_slash_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.remove_slash_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_slash_command": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1.7320508075688772}, "tanjun.components.Component.remove_message_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_message_command": {"tf": 1}, "tanjun.components.Component.add_listener": {"tf": 1.4142135623730951}, "tanjun.components.Component.remove_listener": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_listener": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 2}, "tanjun.components.Component.with_on_close": {"tf": 1.7320508075688772}, "tanjun.components.Component.add_on_open": {"tf": 2}, "tanjun.components.Component.with_on_open": {"tf": 1.7320508075688772}, "tanjun.components.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.components.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_schedule": {"tf": 1.4142135623730951}, "tanjun.components.Component.remove_schedule": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_schedule": {"tf": 1.4142135623730951}, "tanjun.components.Component.close": {"tf": 1.4142135623730951}, "tanjun.components.Component.open": {"tf": 1.7320508075688772}, "tanjun.components.Component.make_loader": {"tf": 2}, "tanjun.components.AbstractComponentLoader": {"tf": 1}, "tanjun.components.AbstractComponentLoader.load_into_component": {"tf": 2}, "tanjun.components.OnCallbackSig": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 2}, "tanjun.context.MessageContext.edit_last_response": {"tf": 2}, "tanjun.context.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 2}, "tanjun.context.SlashContext.edit_last_response": {"tf": 2}, "tanjun.context.SlashContext.respond": {"tf": 1.7320508075688772}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1.7320508075688772}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.schedules.IntervalSchedule.load_into_component": {"tf": 2}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}}, "df": 205, "s": {"docs": {"tanjun": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.as_loader": {"tf": 1.7320508075688772}, "tanjun.as_unloader": {"tf": 1.4142135623730951}, "tanjun.Client.components": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.ClientLoader": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 2.6457513110645907}, "tanjun.abc.Context.edit_last_response": {"tf": 2.6457513110645907}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Client.components": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1.7320508075688772}, "tanjun.clients.as_unloader": {"tf": 1.4142135623730951}, "tanjun.clients.Client.components": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.components": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 2.6457513110645907}, "tanjun.context.MessageContext.edit_last_response": {"tf": 2.6457513110645907}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 2.6457513110645907}, "tanjun.context.SlashContext.edit_last_response": {"tf": 2.6457513110645907}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.conversion.ToChannel.async_caches": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.async_caches": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.async_caches": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.async_caches": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}}, "df": 74}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.add_component": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.name": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Component.name": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.name": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}}, "df": 21}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}}, "df": 14}}}}}}}, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.SlashContext.command": {"tf": 1}}, "df": 1}}}}}}}, "(": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}}, "df": 10}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}}, "df": 6}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.with_all_checks": {"tf": 1.4142135623730951}, "tanjun.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.all_checks": {"tf": 1.7320508075688772}, "tanjun.checks.any_checks": {"tf": 1.7320508075688772}, "tanjun.checks.with_all_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_any_checks": {"tf": 1.4142135623730951}}, "df": 6}}}}, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "#": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.to_datetime": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1.4142135623730951}, "tanjun.conversion.to_datetime": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.with_all_checks": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.checks": {"tf": 1}, "tanjun.Client.hooks": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 2.8284271247461903}, "tanjun.Client.set_slash_ctx_maker": {"tf": 2.8284271247461903}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.Component.execute_message": {"tf": 2}, "tanjun.cached_inject": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 2}, "tanjun.InMemoryCooldownManager.increment_cooldown": {"tf": 1.4142135623730951}, "tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.Hooks": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.inject": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.parse": {"tf": 1.4142135623730951}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.CommandCallbackSig": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 2}, "tanjun.abc.Context": {"tf": 1}, "tanjun.abc.Context.client": {"tf": 1}, "tanjun.abc.Context.component": {"tf": 1}, "tanjun.abc.Context.command": {"tf": 1}, "tanjun.abc.Context.created_at": {"tf": 1}, "tanjun.abc.Context.has_responded": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1.7320508075688772}, "tanjun.abc.Context.fetch_guild": {"tf": 2}, "tanjun.abc.Context.get_channel": {"tf": 1.4142135623730951}, "tanjun.abc.Context.get_guild": {"tf": 1.4142135623730951}, "tanjun.abc.Context.delete_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.delete_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.fetch_initial_response": {"tf": 1}, "tanjun.abc.Context.fetch_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.AnyHooks": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.abc.MessageContext": {"tf": 1}, "tanjun.abc.MessageContext.message": {"tf": 1}, "tanjun.abc.MessageContext.shard": {"tf": 1}, "tanjun.abc.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.abc.MessageContext.triggering_name": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashCommand": {"tf": 1}, "tanjun.abc.SlashContext": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.expires_at": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.abc.SlashContext.interaction": {"tf": 1}, "tanjun.abc.SlashContext.set_command": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.abc.SlashContext.mark_not_found": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.abc.Component.execute_message": {"tf": 2}, "tanjun.checks.all_checks": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1.4142135623730951}, "tanjun.checks.with_all_checks": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.clients.Client.checks": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 2.8284271247461903}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 2.8284271247461903}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.components.Component.execute_message": {"tf": 2}, "tanjun.context": {"tf": 1}, "tanjun.context.MessageContext": {"tf": 1}, "tanjun.context.MessageContext.__init__": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.command": {"tf": 1}, "tanjun.context.MessageContext.created_at": {"tf": 1}, "tanjun.context.MessageContext.has_responded": {"tf": 1}, "tanjun.context.MessageContext.message": {"tf": 1}, "tanjun.context.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.context.MessageContext.shard": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_prefix": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.delete_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.delete_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_initial_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext": {"tf": 1}, "tanjun.context.SlashContext.__init__": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.client": {"tf": 1}, "tanjun.context.SlashContext.command": {"tf": 1}, "tanjun.context.SlashContext.created_at": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.expires_at": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.context.SlashContext.has_responded": {"tf": 1}, "tanjun.context.SlashContext.interaction": {"tf": 1}, "tanjun.context.SlashContext.get_response_future": {"tf": 1}, "tanjun.context.SlashContext.mark_not_found": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.context.SlashContext.set_command": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.defer": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.delete_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.delete_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_initial_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.conversion.ToMember": {"tf": 1}, "tanjun.conversion.ToPresence": {"tf": 1}, "tanjun.conversion.ToVoiceState": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1.4142135623730951}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 2}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 2}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.callbacks": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 2}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 2}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1.4142135623730951}, "tanjun.hooks.AnyHooks": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.hooks.MessageHooks": {"tf": 1}, "tanjun.hooks.SlashHooks": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 2}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1.4142135623730951}, "tanjun.injecting.AbstractInjectionContext": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.injection_client": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.__init__": {"tf": 1.4142135623730951}, "tanjun.injecting.BasicInjectionContext.injection_client": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 2.23606797749979}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1.7320508075688772}, "tanjun.injecting.CallbackSig": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1.4142135623730951}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 2}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1.4142135623730951}, "tanjun.parsing.AbstractParser.parse": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.parse": {"tf": 1.4142135623730951}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.utilities.gather_checks": {"tf": 1.4142135623730951}}, "df": 202, "s": {"docs": {"tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1.4142135623730951}}, "df": 18}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}}, "df": 3}}}, "t": {"docs": {"tanjun.Hooks": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}}, "df": 42}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.Context.cache": {"tf": 1}, "tanjun.abc.Context.events": {"tf": 1}, "tanjun.abc.Context.server": {"tf": 1}, "tanjun.abc.Context.rest": {"tf": 1}, "tanjun.abc.Context.shards": {"tf": 1}, "tanjun.abc.Context.voice": {"tf": 1}, "tanjun.abc.MessageContext.content": {"tf": 1}, "tanjun.context.MessageContext.content": {"tf": 1}}, "df": 8}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.remove_prefix": {"tf": 1}, "tanjun.ParserError.parameter": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.with_option": {"tf": 1.4142135623730951}, "tanjun.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 2}, "tanjun.abc.Context.edit_last_response": {"tf": 2}, "tanjun.abc.Context.respond": {"tf": 2}, "tanjun.abc.MessageContext.content": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 2.23606797749979}, "tanjun.abc.SlashContext.create_followup": {"tf": 2.23606797749979}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.context.MessageContext.content": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 2}, "tanjun.context.MessageContext.edit_last_response": {"tf": 2}, "tanjun.context.MessageContext.respond": {"tf": 2}, "tanjun.context.SlashContext.create_followup": {"tf": 2.23606797749979}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 2}, "tanjun.context.SlashContext.edit_last_response": {"tf": 2}, "tanjun.context.SlashContext.respond": {"tf": 2}, "tanjun.errors.ParserError.parameter": {"tf": 1}, "tanjun.parsing.AbstractParser": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 35, "s": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}}, "df": 21}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Component.__init__": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {"tanjun.Hooks": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}}, "df": 42}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}}, "df": 15, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.with_all_checks": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}}, "df": 6}}}, "c": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.BucketResource": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter.close": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter.open": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1.7320508075688772}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 2}, "tanjun.with_concurrency_limit": {"tf": 2.449489742783178}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1.4142135623730951}, "tanjun.dependencies.AbstractConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.BucketResource": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1.4142135623730951}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1.7320508075688772}, "tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1.4142135623730951}, "tanjun.dependencies.ConcurrencyPostExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter.close": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter.open": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1.7320508075688772}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 2}, "tanjun.dependencies.with_concurrency_limit": {"tf": 2.449489742783178}, "tanjun.dependencies.limiters": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.close": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 2}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 2.449489742783178}}, "df": 43, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}}, "df": 4}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Hooks": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}}, "df": 4, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.MessageAcceptsEnum": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.SlashContext.mark_not_found": {"tf": 1}, "tanjun.context.SlashContext.mark_not_found": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.to_bool": {"tf": 1.4142135623730951}, "tanjun.to_color": {"tf": 1}, "tanjun.to_colour": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.conversion.to_bool": {"tf": 1.4142135623730951}, "tanjun.conversion.to_channel": {"tf": 1}, "tanjun.conversion.to_color": {"tf": 1}, "tanjun.conversion.to_colour": {"tf": 1}, "tanjun.conversion.to_emoji": {"tf": 1.4142135623730951}, "tanjun.conversion.to_guild": {"tf": 1}, "tanjun.conversion.to_invite": {"tf": 1}, "tanjun.conversion.to_invite_with_metadata": {"tf": 1}, "tanjun.conversion.to_member": {"tf": 1}, "tanjun.conversion.to_presence": {"tf": 1}, "tanjun.conversion.to_role": {"tf": 1}, "tanjun.conversion.to_snowflake": {"tf": 1}, "tanjun.conversion.to_user": {"tf": 1}, "tanjun.conversion.to_voice_state": {"tf": 1}, "tanjun.conversion.ToEmoji": {"tf": 1}, "tanjun.parsing.Parameter.convert": {"tf": 1}}, "df": 25, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.ConversionError": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.MessageContext.command": {"tf": 1}, "tanjun.commands.ConverterSig": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.conversion.ToChannel": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.conversion.ToChannel.async_caches": {"tf": 1.4142135623730951}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1.7320508075688772}, "tanjun.conversion.ToChannel.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToEmoji": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1.4142135623730951}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1.7320508075688772}, "tanjun.conversion.ToEmoji.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToGuild": {"tf": 1}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1.4142135623730951}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1.7320508075688772}, "tanjun.conversion.ToGuild.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInvite": {"tf": 1}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1.7320508075688772}, "tanjun.conversion.ToInvite.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInviteWithMetadata": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1.7320508075688772}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToMember": {"tf": 1.4142135623730951}, "tanjun.conversion.ToMember.async_caches": {"tf": 1.4142135623730951}, "tanjun.conversion.ToMember.cache_components": {"tf": 1.7320508075688772}, "tanjun.conversion.ToMember.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToPresence": {"tf": 1.4142135623730951}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1.4142135623730951}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1.7320508075688772}, "tanjun.conversion.ToPresence.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToRole": {"tf": 1}, "tanjun.conversion.ToRole.async_caches": {"tf": 1.4142135623730951}, "tanjun.conversion.ToRole.cache_components": {"tf": 1.7320508075688772}, "tanjun.conversion.ToRole.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToUser": {"tf": 1}, "tanjun.conversion.ToUser.async_caches": {"tf": 1.4142135623730951}, "tanjun.conversion.ToUser.cache_components": {"tf": 1.7320508075688772}, "tanjun.conversion.ToUser.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToVoiceState": {"tf": 1.4142135623730951}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1.4142135623730951}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1.7320508075688772}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1.4142135623730951}, "tanjun.errors.ConversionError": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.ConverterSig": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 78, "s": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_int_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_float_option": {"tf": 2}, "tanjun.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.with_argument": {"tf": 1.7320508075688772}, "tanjun.with_greedy_argument": {"tf": 2}, "tanjun.with_multi_argument": {"tf": 2}, "tanjun.with_option": {"tf": 1.7320508075688772}, "tanjun.with_multi_option": {"tf": 2}, "tanjun.with_parser": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 2}, "tanjun.conversion": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.Option.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.Parameter.converters": {"tf": 1}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.with_greedy_argument": {"tf": 2}, "tanjun.parsing.with_multi_argument": {"tf": 2}, "tanjun.parsing.with_option": {"tf": 1.7320508075688772}, "tanjun.parsing.with_multi_option": {"tf": 2}, "tanjun.parsing.with_parser": {"tf": 1}}, "df": 27, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.4142135623730951}}, "df": 6}}}, "(": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 16}}}, "d": {"docs": {"tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.to_bool": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.conversion.to_bool": {"tf": 1.4142135623730951}, "tanjun.parsing.Parameter.is_multi": {"tf": 1}}, "df": 5}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.ConversionError.__init__": {"tf": 1.4142135623730951}, "tanjun.ConversionError.errors": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1.4142135623730951}, "tanjun.errors.ConversionError.errors": {"tf": 1}}, "df": 4}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.inject_lc": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1.4142135623730951}, "tanjun.LazyConstant.get_value": {"tf": 1}, "tanjun.LazyConstant.set_value": {"tf": 1.4142135623730951}, "tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.LazyConstant.set_value": {"tf": 1.4142135623730951}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.set_value": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}}, "df": 17, "s": {"docs": {"tanjun.LazyConstant": {"tf": 1}, "tanjun.dependencies.LazyConstant": {"tf": 1}, "tanjun.dependencies.data.LazyConstant": {"tf": 1}}, "df": 3}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.callback": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 7}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Component.with_schedule": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.checks": {"tf": 1}, "tanjun.Client.components": {"tf": 1}, "tanjun.Client.prefixes": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.get_client_callbacks": {"tf": 1.4142135623730951}, "tanjun.MessageCommand.names": {"tf": 1}, "tanjun.MessageCommandGroup.commands": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommandGroup.commands": {"tf": 1}, "tanjun.Component.checks": {"tf": 1}, "tanjun.Component.schedules": {"tf": 1}, "tanjun.Component.slash_commands": {"tf": 1}, "tanjun.Component.message_commands": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.checks": {"tf": 1}, "tanjun.abc.MessageCommand.names": {"tf": 1}, "tanjun.abc.MessageCommandGroup.commands": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashCommandGroup.commands": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Component": {"tf": 1}, "tanjun.abc.Component.slash_commands": {"tf": 1}, "tanjun.abc.Component.message_commands": {"tf": 1}, "tanjun.abc.Client.components": {"tf": 1}, "tanjun.abc.Client.prefixes": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1.4142135623730951}, "tanjun.checks": {"tf": 1}, "tanjun.clients.Client.checks": {"tf": 1}, "tanjun.clients.Client.components": {"tf": 1}, "tanjun.clients.Client.prefixes": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommand.names": {"tf": 1}, "tanjun.commands.MessageCommandGroup.commands": {"tf": 1}, "tanjun.commands.PartialCommand.checks": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.commands": {"tf": 1}, "tanjun.components.Component.checks": {"tf": 1}, "tanjun.components.Component.schedules": {"tf": 1}, "tanjun.components.Component.slash_commands": {"tf": 1}, "tanjun.components.Component.message_commands": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.conversion.ToChannel.async_caches": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1}, "tanjun.conversion.ToMember.async_caches": {"tf": 1}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1}, "tanjun.conversion.ToRole.async_caches": {"tf": 1}, "tanjun.conversion.ToUser.async_caches": {"tf": 1}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1}, "tanjun.utilities": {"tf": 1}, "tanjun.utilities.gather_checks": {"tf": 1}}, "df": 66, "s": {"docs": {"tanjun.with_all_checks": {"tf": 1.4142135623730951}, "tanjun.with_any_checks": {"tf": 1}, "tanjun.with_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.as_loader": {"tf": 1.4142135623730951}, "tanjun.as_unloader": {"tf": 1.4142135623730951}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.Client.get_client_callbacks": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.Client.iter_commands": {"tf": 1}, "tanjun.Client.iter_message_commands": {"tf": 1}, "tanjun.Client.iter_slash_commands": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.MessageCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.Component.with_listener": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.ConversionError.__init__": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.with_argument": {"tf": 1.4142135623730951}, "tanjun.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.with_multi_argument": {"tf": 1.7320508075688772}, "tanjun.with_option": {"tf": 1.4142135623730951}, "tanjun.with_multi_option": {"tf": 1.7320508075688772}, "tanjun.as_interval": {"tf": 1.7320508075688772}, "tanjun.abc.Component.with_listener": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.abc.Client.iter_commands": {"tf": 1}, "tanjun.abc.Client.iter_message_commands": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 1.4142135623730951}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1.4142135623730951}, "tanjun.clients.as_unloader": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.Client.iter_commands": {"tf": 1}, "tanjun.clients.Client.iter_message_commands": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.components.Component.with_listener": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.conversion.search_snowflakes": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1.4142135623730951}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.with_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_option": {"tf": 1.7320508075688772}, "tanjun.schedules.as_interval": {"tf": 1.7320508075688772}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 2}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 2}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 2}, "tanjun.utilities.gather_checks": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}, "tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 135}, "[": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.get_client_callbacks": {"tf": 1}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Component": {"tf": 1}, "tanjun.components.Component": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.to_color": {"tf": 1}, "tanjun.to_colour": {"tf": 1}, "tanjun.conversion.to_color": {"tf": 1}, "tanjun.conversion.to_colour": {"tf": 1}}, "df": 4, "s": {"docs": {"tanjun.to_color": {"tf": 1}, "tanjun.to_colour": {"tf": 1}, "tanjun.conversion.to_color": {"tf": 1}, "tanjun.conversion.to_colour": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}}, "df": 6, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.with_all_checks": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.ListenerCallbackSig": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.MessageCommand.copy": {"tf": 1.7320508075688772}, "tanjun.MessageCommandGroup.copy": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.copy": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.copy": {"tf": 1.4142135623730951}, "tanjun.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.Component.with_slash_command": {"tf": 1.4142135623730951}, "tanjun.Component.with_message_command": {"tf": 1.4142135623730951}, "tanjun.Component.make_loader": {"tf": 1.4142135623730951}, "tanjun.Hooks.copy": {"tf": 1}, "tanjun.ShlexParser.copy": {"tf": 1.4142135623730951}, "tanjun.abc.ExecutableCommand.copy": {"tf": 1.4142135623730951}, "tanjun.abc.MessageCommand.copy": {"tf": 1.7320508075688772}, "tanjun.abc.Component.with_slash_command": {"tf": 1.4142135623730951}, "tanjun.abc.Component.with_message_command": {"tf": 1.4142135623730951}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.commands.MessageCommand.copy": {"tf": 1.7320508075688772}, "tanjun.commands.MessageCommandGroup.copy": {"tf": 1.7320508075688772}, "tanjun.commands.PartialCommand.copy": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand.copy": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.copy": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.copy": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_slash_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_message_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.make_loader": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.copy": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.copy": {"tf": 1.4142135623730951}, "tanjun.parsing.AbstractParser.copy": {"tf": 1.4142135623730951}, "tanjun.parsing.Parameter.copy": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.copy": {"tf": 1.4142135623730951}, "tanjun.schedules.AbstractSchedule.copy": {"tf": 1}, "tanjun.schedules.IntervalSchedule.copy": {"tf": 1}}, "df": 34}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Component.name": {"tf": 1}, "tanjun.abc.Component.name": {"tf": 1}, "tanjun.components.Component.name": {"tf": 1}}, "df": 3}, "d": {"docs": {"tanjun.schedules.AbstractSchedule.copy": {"tf": 1}, "tanjun.schedules.IntervalSchedule.copy": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.dependencies.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1.7320508075688772}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1.7320508075688772}}, "df": 11}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.MissingDependencyError": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.errors.MissingDependencyError": {"tf": 1}}, "df": 4}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}}, "df": 6}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.InMemoryCooldownManager": {"tf": 2}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1.7320508075688772}, "tanjun.InMemoryCooldownManager.increment_cooldown": {"tf": 1.7320508075688772}, "tanjun.InMemoryCooldownManager.close": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.open": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1.7320508075688772}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 2.449489742783178}, "tanjun.with_cooldown": {"tf": 2}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1.7320508075688772}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"tf": 1.7320508075688772}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1.7320508075688772}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 2}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1.7320508075688772}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"tf": 1.7320508075688772}, "tanjun.dependencies.InMemoryCooldownManager.close": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.open": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1.7320508075688772}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 2.449489742783178}, "tanjun.dependencies.with_cooldown": {"tf": 2}, "tanjun.dependencies.limiters": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 2}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.InMemoryCooldownManager.close": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.open": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 2.449489742783178}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 2}}, "df": 34, "s": {"docs": {"tanjun.with_cooldown": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 5}, ":": {"0": {"docs": {"tanjun.with_cooldown": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 5}, "docs": {}, "df": 0}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.with_cooldown": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.parsing.Option.names": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun": {"tf": 3.7416573867739413}, "tanjun.ClientCallbackNames": {"tf": 1.4142135623730951}, "tanjun.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1.4142135623730951}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1.4142135623730951}, "tanjun.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.as_loader": {"tf": 2.8284271247461903}, "tanjun.as_unloader": {"tf": 3.1622776601683795}, "tanjun.Client": {"tf": 1.7320508075688772}, "tanjun.Client.__init__": {"tf": 3.7416573867739413}, "tanjun.Client.from_gateway_bot": {"tf": 2.6457513110645907}, "tanjun.Client.from_rest_bot": {"tf": 1.7320508075688772}, "tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.message_accepts": {"tf": 1}, "tanjun.Client.is_human_only": {"tf": 1}, "tanjun.Client.cache": {"tf": 1}, "tanjun.Client.checks": {"tf": 1}, "tanjun.Client.components": {"tf": 1}, "tanjun.Client.events": {"tf": 1}, "tanjun.Client.listeners": {"tf": 1}, "tanjun.Client.hooks": {"tf": 1.4142135623730951}, "tanjun.Client.slash_hooks": {"tf": 1}, "tanjun.Client.is_alive": {"tf": 1}, "tanjun.Client.loop": {"tf": 1}, "tanjun.Client.message_hooks": {"tf": 1}, "tanjun.Client.metadata": {"tf": 1.4142135623730951}, "tanjun.Client.prefix_getter": {"tf": 1}, "tanjun.Client.prefixes": {"tf": 1}, "tanjun.Client.rest": {"tf": 1.4142135623730951}, "tanjun.Client.server": {"tf": 1}, "tanjun.Client.shards": {"tf": 1}, "tanjun.Client.voice": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.set_global_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Client.set_hikari_trait_injectors": {"tf": 1.4142135623730951}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1.4142135623730951}, "tanjun.Client.remove_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.add_component": {"tf": 1.7320508075688772}, "tanjun.Client.get_component_by_name": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 2}, "tanjun.Client.remove_component_by_name": {"tf": 1.7320508075688772}, "tanjun.Client.add_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.dispatch_client_callback": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.with_client_callback": {"tf": 2.449489742783178}, "tanjun.Client.add_listener": {"tf": 1.7320508075688772}, "tanjun.Client.remove_listener": {"tf": 1.4142135623730951}, "tanjun.Client.with_listener": {"tf": 2.23606797749979}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.remove_prefix": {"tf": 1.7320508075688772}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 2}, "tanjun.Client.iter_commands": {"tf": 1.4142135623730951}, "tanjun.Client.iter_message_commands": {"tf": 1.4142135623730951}, "tanjun.Client.iter_slash_commands": {"tf": 1.4142135623730951}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Client.close": {"tf": 1.4142135623730951}, "tanjun.Client.open": {"tf": 2}, "tanjun.Client.fetch_rest_application_id": {"tf": 1.4142135623730951}, "tanjun.Client.set_hooks": {"tf": 2}, "tanjun.Client.set_slash_hooks": {"tf": 2}, "tanjun.Client.set_message_hooks": {"tf": 2}, "tanjun.Client.load_modules": {"tf": 2.23606797749979}, "tanjun.Client.unload_modules": {"tf": 2.23606797749979}, "tanjun.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.MessageAcceptsEnum": {"tf": 1}, "tanjun.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.Component": {"tf": 1.4142135623730951}, "tanjun.Component.client": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.loop": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1.4142135623730951}, "tanjun.Component.with_on_close": {"tf": 1.4142135623730951}, "tanjun.Component.add_on_open": {"tf": 1.4142135623730951}, "tanjun.Component.with_on_open": {"tf": 1.4142135623730951}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.Component.open": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 2.23606797749979}, "tanjun.cached_inject": {"tf": 1.7320508075688772}, "tanjun.inject_lc": {"tf": 2}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1.7320508075688772}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 2}, "tanjun.InMemoryCooldownManager": {"tf": 1.7320508075688772}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 2}, "tanjun.as_self_injecting": {"tf": 2.8284271247461903}, "tanjun.inject": {"tf": 1}, "tanjun.abc.ClientLoader": {"tf": 1}, "tanjun.abc.ClientLoader.load": {"tf": 2}, "tanjun.abc.ClientLoader.unload": {"tf": 2}, "tanjun.abc.Context.cache": {"tf": 1}, "tanjun.abc.Context.client": {"tf": 1}, "tanjun.abc.Context.events": {"tf": 1}, "tanjun.abc.Context.server": {"tf": 1}, "tanjun.abc.Context.rest": {"tf": 1.4142135623730951}, "tanjun.abc.Context.shards": {"tf": 1}, "tanjun.abc.Context.voice": {"tf": 1}, "tanjun.abc.ClientCallbackNames": {"tf": 1.4142135623730951}, "tanjun.abc.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1.4142135623730951}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1.4142135623730951}, "tanjun.abc.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.abc.MessageContext.command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.command": {"tf": 1}, "tanjun.abc.SlashContext.mark_not_found": {"tf": 1}, "tanjun.abc.Component": {"tf": 1}, "tanjun.abc.Component.client": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.loop": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.abc.Component.open": {"tf": 1}, "tanjun.abc.Client": {"tf": 1}, "tanjun.abc.Client.cache": {"tf": 1}, "tanjun.abc.Client.components": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.events": {"tf": 1}, "tanjun.abc.Client.is_alive": {"tf": 1}, "tanjun.abc.Client.listeners": {"tf": 1}, "tanjun.abc.Client.loop": {"tf": 1}, "tanjun.abc.Client.metadata": {"tf": 1.4142135623730951}, "tanjun.abc.Client.prefixes": {"tf": 1.4142135623730951}, "tanjun.abc.Client.rest": {"tf": 1.4142135623730951}, "tanjun.abc.Client.server": {"tf": 1}, "tanjun.abc.Client.shards": {"tf": 1}, "tanjun.abc.Client.voice": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.add_component": {"tf": 1.7320508075688772}, "tanjun.abc.Client.get_component_by_name": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 2}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1.7320508075688772}, "tanjun.abc.Client.add_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.with_client_callback": {"tf": 2.449489742783178}, "tanjun.abc.Client.add_listener": {"tf": 1.7320508075688772}, "tanjun.abc.Client.remove_listener": {"tf": 1.4142135623730951}, "tanjun.abc.Client.with_listener": {"tf": 2.23606797749979}, "tanjun.abc.Client.iter_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.iter_message_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 2.23606797749979}, "tanjun.abc.Client.unload_modules": {"tf": 2.23606797749979}, "tanjun.abc.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.clients": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 2.8284271247461903}, "tanjun.clients.as_unloader": {"tf": 3.1622776601683795}, "tanjun.clients.Client": {"tf": 1.7320508075688772}, "tanjun.clients.Client.__init__": {"tf": 3.7416573867739413}, "tanjun.clients.Client.from_gateway_bot": {"tf": 2.6457513110645907}, "tanjun.clients.Client.from_rest_bot": {"tf": 1.7320508075688772}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.message_accepts": {"tf": 1}, "tanjun.clients.Client.is_human_only": {"tf": 1}, "tanjun.clients.Client.cache": {"tf": 1}, "tanjun.clients.Client.checks": {"tf": 1}, "tanjun.clients.Client.components": {"tf": 1}, "tanjun.clients.Client.events": {"tf": 1}, "tanjun.clients.Client.listeners": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1.4142135623730951}, "tanjun.clients.Client.slash_hooks": {"tf": 1}, "tanjun.clients.Client.is_alive": {"tf": 1}, "tanjun.clients.Client.loop": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.clients.Client.metadata": {"tf": 1.4142135623730951}, "tanjun.clients.Client.prefix_getter": {"tf": 1}, "tanjun.clients.Client.prefixes": {"tf": 1}, "tanjun.clients.Client.rest": {"tf": 1.4142135623730951}, "tanjun.clients.Client.server": {"tf": 1}, "tanjun.clients.Client.shards": {"tf": 1}, "tanjun.clients.Client.voice": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.set_global_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1.4142135623730951}, "tanjun.clients.Client.remove_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1.7320508075688772}, "tanjun.clients.Client.get_component_by_name": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 2}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1.7320508075688772}, "tanjun.clients.Client.add_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_client_callback": {"tf": 2.449489742783178}, "tanjun.clients.Client.add_listener": {"tf": 1.7320508075688772}, "tanjun.clients.Client.remove_listener": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_listener": {"tf": 2.23606797749979}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 1.7320508075688772}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 2}, "tanjun.clients.Client.iter_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.iter_message_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.close": {"tf": 1.4142135623730951}, "tanjun.clients.Client.open": {"tf": 2}, "tanjun.clients.Client.fetch_rest_application_id": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_hooks": {"tf": 2}, "tanjun.clients.Client.set_slash_hooks": {"tf": 2}, "tanjun.clients.Client.set_message_hooks": {"tf": 2}, "tanjun.clients.Client.load_modules": {"tf": 2.23606797749979}, "tanjun.clients.Client.unload_modules": {"tf": 2.23606797749979}, "tanjun.clients.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.clients.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1.4142135623730951}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1.4142135623730951}, "tanjun.clients.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.components": {"tf": 1}, "tanjun.components.Component": {"tf": 1.4142135623730951}, "tanjun.components.Component.client": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.loop": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_on_close": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_on_open": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_on_open": {"tf": 1.4142135623730951}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.components.Component.open": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 2.23606797749979}, "tanjun.context.MessageContext.__init__": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.__init__": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.client": {"tf": 1}, "tanjun.context.SlashContext.mark_not_found": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.dependencies.set_standard_dependencies": {"tf": 1.4142135623730951}, "tanjun.dependencies.fetch_my_user": {"tf": 2.23606797749979}, "tanjun.dependencies.cached_inject": {"tf": 1.7320508075688772}, "tanjun.dependencies.inject_lc": {"tf": 2}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1.7320508075688772}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 2}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1.7320508075688772}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 2}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1.7320508075688772}, "tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1.7320508075688772}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.callbacks": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 2.23606797749979}, "tanjun.dependencies.data.cached_inject": {"tf": 1.7320508075688772}, "tanjun.dependencies.data.inject_lc": {"tf": 2}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 2}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 2}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1.7320508075688772}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1.7320508075688772}, "tanjun.injecting.AbstractDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1.4142135623730951}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1.7320508075688772}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.injection_client": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 2.8284271247461903}, "tanjun.injecting.BasicInjectionContext.__init__": {"tf": 1.4142135623730951}, "tanjun.injecting.BasicInjectionContext.injection_client": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient": {"tf": 1}, "tanjun.injecting.InjectorClient.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback": {"tf": 2}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1.4142135623730951}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1.7320508075688772}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1.7320508075688772}, "tanjun.utilities.fetch_permissions": {"tf": 1.7320508075688772}}, "df": 335, "s": {"docs": {"tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.abc": {"tf": 1}, "tanjun.abc.Client": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}}, "df": 4}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.dispatch_client_callback": {"tf": 1}, "tanjun.Client.get_client_callbacks": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.ClientCallbackNames": {"tf": 1}}, "df": 16}}}}}}}}}}}}}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}}, "df": 11}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}}, "df": 8}}}}}}, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.MessageContext.command": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}}, "df": 13}}}, "e": {"docs": {"tanjun.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.close": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1.4142135623730951}, "tanjun.Component.with_on_close": {"tf": 1.7320508075688772}, "tanjun.Component.close": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.abc.Component.close": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.close": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_on_close": {"tf": 1.7320508075688772}, "tanjun.components.Component.close": {"tf": 1}, "tanjun.components.OnCallbackSig": {"tf": 1}}, "df": 16, "d": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}}, "df": 11}, "s": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.clear_application_commands": {"tf": 1.7320508075688772}, "tanjun.LazyConstant.reset": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1.7320508075688772}, "tanjun.clients.Client.clear_application_commands": {"tf": 1.7320508075688772}, "tanjun.dependencies.LazyConstant.reset": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.reset": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.TanjunError": {"tf": 1}, "tanjun.abc.ExecutableCommand": {"tf": 1}, "tanjun.abc.BaseSlashCommand": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.commands.PartialCommand": {"tf": 1}, "tanjun.commands.BaseSlashCommand": {"tf": 1}, "tanjun.context.SlashContext": {"tf": 1}, "tanjun.errors.TanjunError": {"tf": 1}, "tanjun.injecting.AbstractDescriptor": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1}, "tanjun.injecting.TypeDescriptor": {"tf": 1}, "tanjun.parsing.Parameter": {"tf": 1}, "tanjun.schedules.AbstractSchedule": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 2}}, "df": 15, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.BaseSlashCommand": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.conversion": {"tf": 1}, "tanjun.injecting": {"tf": 1}}, "df": 6}}, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.injecting.Undefined": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "x": {"docs": {"tanjun": {"tf": 2.23606797749979}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1.7320508075688772}, "tanjun.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.Component.with_command": {"tf": 2}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.cached_inject": {"tf": 1}, "tanjun.inject_lc": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_error": {"tf": 1.7320508075688772}, "tanjun.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.inject": {"tf": 1}, "tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.with_parser": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1.7320508075688772}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.shard": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.7320508075688772}, "tanjun.commands.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 2}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.context.MessageContext.shard": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.parsing.with_parser": {"tf": 1}, "tanjun.utilities.gather_checks": {"tf": 1}}, "df": 98}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.with_all_checks": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1}, "tanjun.Client": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1}, "tanjun.Component.with_slash_command": {"tf": 1}, "tanjun.Component.with_message_command": {"tf": 1}, "tanjun.Component.with_listener": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.Component.with_schedule": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1}, "tanjun.ShlexParser.add_parameter": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.with_argument": {"tf": 1.4142135623730951}, "tanjun.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.with_option": {"tf": 1.4142135623730951}, "tanjun.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.abc.Component.with_slash_command": {"tf": 1}, "tanjun.abc.Component.with_message_command": {"tf": 1}, "tanjun.abc.Component.with_listener": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.commands.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1}, "tanjun.components.Component.with_slash_command": {"tf": 1}, "tanjun.components.Component.with_message_command": {"tf": 1}, "tanjun.components.Component.with_listener": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1.4142135623730951}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.ParseableProto.set_parser": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.schedules.AbstractSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.IntervalSchedule.iteration_count": {"tf": 1}}, "df": 107, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.ClientCallbackNames": {"tf": 1}, "tanjun.with_all_checks": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1}, "tanjun.with_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.as_loader": {"tf": 2}, "tanjun.as_unloader": {"tf": 2}, "tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 2.23606797749979}, "tanjun.Client.dispatch_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.remove_client_callback": {"tf": 2.23606797749979}, "tanjun.Client.with_client_callback": {"tf": 2.449489742783178}, "tanjun.Client.add_listener": {"tf": 1.7320508075688772}, "tanjun.Client.remove_listener": {"tf": 1.7320508075688772}, "tanjun.Client.with_listener": {"tf": 1.7320508075688772}, "tanjun.Client.set_prefix_getter": {"tf": 2}, "tanjun.Client.with_prefix_getter": {"tf": 2}, "tanjun.as_message_command": {"tf": 1.7320508075688772}, "tanjun.as_message_command_group": {"tf": 1.7320508075688772}, "tanjun.as_slash_command": {"tf": 1.7320508075688772}, "tanjun.MessageCommand.__init__": {"tf": 1.7320508075688772}, "tanjun.MessageCommand.callback": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 2}, "tanjun.SlashCommand.callback": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.Component.with_listener": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1.7320508075688772}, "tanjun.Component.with_on_close": {"tf": 2}, "tanjun.Component.add_on_open": {"tf": 1.7320508075688772}, "tanjun.Component.with_on_open": {"tf": 2}, "tanjun.cached_inject": {"tf": 2}, "tanjun.LazyConstant.__init__": {"tf": 1.4142135623730951}, "tanjun.LazyConstant.callback": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 2}, "tanjun.Hooks.set_on_error": {"tf": 2}, "tanjun.Hooks.with_on_error": {"tf": 2.23606797749979}, "tanjun.Hooks.add_on_parser_error": {"tf": 2}, "tanjun.Hooks.set_on_parser_error": {"tf": 2}, "tanjun.Hooks.with_on_parser_error": {"tf": 2.23606797749979}, "tanjun.Hooks.add_post_execution": {"tf": 2}, "tanjun.Hooks.set_post_execution": {"tf": 2}, "tanjun.Hooks.with_post_execution": {"tf": 2.23606797749979}, "tanjun.Hooks.add_pre_execution": {"tf": 2}, "tanjun.Hooks.set_pre_execution": {"tf": 2}, "tanjun.Hooks.with_pre_execution": {"tf": 2.23606797749979}, "tanjun.Hooks.add_on_success": {"tf": 2}, "tanjun.Hooks.set_on_success": {"tf": 2}, "tanjun.Hooks.with_on_success": {"tf": 2.23606797749979}, "tanjun.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.inject": {"tf": 3.1622776601683795}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.as_interval": {"tf": 2.6457513110645907}, "tanjun.abc.CommandCallbackSig": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.ClientCallbackNames": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 2}, "tanjun.abc.Hooks.with_on_error": {"tf": 2.23606797749979}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 2}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 2.23606797749979}, "tanjun.abc.Hooks.add_post_execution": {"tf": 2}, "tanjun.abc.Hooks.with_post_execution": {"tf": 2.23606797749979}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 2}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 2.23606797749979}, "tanjun.abc.Hooks.add_on_success": {"tf": 2}, "tanjun.abc.Hooks.with_on_success": {"tf": 2.23606797749979}, "tanjun.abc.HookSig": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1.4142135623730951}, "tanjun.abc.ListenerCallbackSig": {"tf": 1}, "tanjun.abc.MessageCommand.callback": {"tf": 1}, "tanjun.abc.MessageContext.command": {"tf": 1}, "tanjun.abc.SlashCommand.callback": {"tf": 1}, "tanjun.abc.SlashCommandGroup": {"tf": 1}, "tanjun.abc.Component.with_listener": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 2.23606797749979}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.remove_client_callback": {"tf": 2.23606797749979}, "tanjun.abc.Client.with_client_callback": {"tf": 2.449489742783178}, "tanjun.abc.Client.add_listener": {"tf": 1.7320508075688772}, "tanjun.abc.Client.remove_listener": {"tf": 1.7320508075688772}, "tanjun.abc.Client.with_listener": {"tf": 1.7320508075688772}, "tanjun.checks.all_checks": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck": {"tf": 1}, "tanjun.checks.GuildCheck": {"tf": 1}, "tanjun.checks.NsfwCheck": {"tf": 1}, "tanjun.checks.SfwCheck": {"tf": 1}, "tanjun.checks.OwnerCheck": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck": {"tf": 1}, "tanjun.checks.OwnPermissionCheck": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 2}, "tanjun.clients.as_unloader": {"tf": 2}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 2.23606797749979}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.remove_client_callback": {"tf": 2.23606797749979}, "tanjun.clients.Client.with_client_callback": {"tf": 2.449489742783178}, "tanjun.clients.Client.add_listener": {"tf": 1.7320508075688772}, "tanjun.clients.Client.remove_listener": {"tf": 1.7320508075688772}, "tanjun.clients.Client.with_listener": {"tf": 1.7320508075688772}, "tanjun.clients.Client.set_prefix_getter": {"tf": 2}, "tanjun.clients.Client.with_prefix_getter": {"tf": 2}, "tanjun.commands.as_message_command": {"tf": 1.7320508075688772}, "tanjun.commands.as_message_command_group": {"tf": 1.7320508075688772}, "tanjun.commands.as_slash_command": {"tf": 1.7320508075688772}, "tanjun.commands.MessageCommand.__init__": {"tf": 1.7320508075688772}, "tanjun.commands.MessageCommand.callback": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 2}, "tanjun.commands.SlashCommand.callback": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.components.Component.with_listener": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1.7320508075688772}, "tanjun.components.Component.with_on_close": {"tf": 2}, "tanjun.components.Component.add_on_open": {"tf": 1.7320508075688772}, "tanjun.components.Component.with_on_open": {"tf": 2}, "tanjun.components.OnCallbackSig": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 2.23606797749979}, "tanjun.dependencies.cached_inject": {"tf": 2}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1.4142135623730951}, "tanjun.dependencies.callbacks": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 2.23606797749979}, "tanjun.dependencies.data.cached_inject": {"tf": 2}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_on_error": {"tf": 2}, "tanjun.hooks.Hooks.set_on_error": {"tf": 2}, "tanjun.hooks.Hooks.with_on_error": {"tf": 2.23606797749979}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 2}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 2}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 2.23606797749979}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 2}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 2}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 2.23606797749979}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 2}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 2}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 2.23606797749979}, "tanjun.hooks.Hooks.add_on_success": {"tf": 2}, "tanjun.hooks.Hooks.set_on_success": {"tf": 2}, "tanjun.hooks.Hooks.with_on_success": {"tf": 2.23606797749979}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.cache_result": {"tf": 1.7320508075688772}, "tanjun.injecting.AbstractInjectionContext.get_cached_result": {"tf": 2.23606797749979}, "tanjun.injecting.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.injecting.BasicInjectionContext.cache_result": {"tf": 1.7320508075688772}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"tf": 2.23606797749979}, "tanjun.injecting.CallbackDescriptor": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 2}, "tanjun.injecting.CallbackDescriptor.callback": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 2}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 2.449489742783178}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 2}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 2.23606797749979}, "tanjun.injecting.CallbackSig": {"tf": 1.4142135623730951}, "tanjun.injecting.inject": {"tf": 3.1622776601683795}, "tanjun.injecting.Injected.__init__": {"tf": 2.23606797749979}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 2.23606797749979}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 2}, "tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1.7320508075688772}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 2}, "tanjun.injecting.SelfInjectingCallback": {"tf": 2.23606797749979}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 2}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.Parameter.key": {"tf": 1}, "tanjun.parsing.ParseableProto.callback": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.schedules": {"tf": 1}, "tanjun.schedules.AbstractSchedule": {"tf": 1}, "tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.AbstractSchedule.stop": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 2.6457513110645907}, "tanjun.schedules.IntervalSchedule": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 2.8284271247461903}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1.7320508075688772}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1.7320508075688772}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.stop": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 2.449489742783178}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 2.449489742783178}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 239, "s": {"docs": {"tanjun.with_all_checks": {"tf": 1.7320508075688772}, "tanjun.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.Client": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.remove_component_by_name": {"tf": 1}, "tanjun.Client.dispatch_client_callback": {"tf": 1}, "tanjun.Client.get_client_callbacks": {"tf": 1.7320508075688772}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.Component": {"tf": 1.4142135623730951}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.abc.Hooks": {"tf": 1}, "tanjun.abc.SlashContext.command": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1.7320508075688772}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 2.23606797749979}, "tanjun.checks.any_checks": {"tf": 1.7320508075688772}, "tanjun.checks.with_all_checks": {"tf": 1.7320508075688772}, "tanjun.checks.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1.7320508075688772}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.components.Component": {"tf": 1.4142135623730951}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}}, "df": 66, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1.4142135623730951}, "tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}}, "df": 17, "t": {"docs": {"tanjun.as_interval": {"tf": 1.4142135623730951}, "tanjun.schedules.as_interval": {"tf": 1.4142135623730951}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}}, "df": 10, "[": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}}}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.prefix_getter": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.abc.HookSig": {"tf": 1}, "tanjun.clients.Client.prefix_getter": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}}, "df": 11}}, "(": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.dispatch_client_callback": {"tf": 1}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.injecting.CallbackDescriptor.copy": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.Client.hooks": {"tf": 1}, "tanjun.Client.slash_hooks": {"tf": 1}, "tanjun.Client.message_hooks": {"tf": 1}, "tanjun.MessageCommand.callback": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.callback": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1.4142135623730951}, "tanjun.Component.with_on_close": {"tf": 1.4142135623730951}, "tanjun.Component.add_on_open": {"tf": 1.4142135623730951}, "tanjun.Component.with_on_open": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.CommandCallbackSig": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.abc.Hooks": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.abc.MessageCommand.callback": {"tf": 1.4142135623730951}, "tanjun.abc.SlashCommand.callback": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1.4142135623730951}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.clients.Client.slash_hooks": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.commands.MessageCommand.callback": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.callback": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_on_close": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_on_open": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_on_open": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}}, "df": 83}, "r": {"docs": {"tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.as_message_command": {"tf": 1.4142135623730951}, "tanjun.as_message_command_group": {"tf": 1.4142135623730951}, "tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommandGroup": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1}, "tanjun.as_interval": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1.4142135623730951}, "tanjun.commands.as_message_command": {"tf": 1.4142135623730951}, "tanjun.commands.as_message_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommandGroup": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.parsing.ConverterSig": {"tf": 1.4142135623730951}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1.4142135623730951}}, "df": 45, "[": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.with_all_checks": {"tf": 1}, "tanjun.as_loader": {"tf": 1.4142135623730951}, "tanjun.as_unloader": {"tf": 1.4142135623730951}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1.4142135623730951}, "tanjun.clients.as_unloader": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}}, "df": 11}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.with_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 15}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.as_self_injecting": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}}, "df": 2}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.with_listener": {"tf": 1}, "tanjun.Component.with_listener": {"tf": 1}, "tanjun.abc.Component.with_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.components.Component.with_listener": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {"tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.add_component": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.remove_listener": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1.4142135623730951}, "tanjun.Client.remove_prefix": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.MessageCommand.set_parent": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.Component.add_slash_command": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.add_listener": {"tf": 1}, "tanjun.Component.remove_listener": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.add_check": {"tf": 1}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1}, "tanjun.abc.MessageCommand.set_parent": {"tf": 1}, "tanjun.abc.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.add_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.add_message_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.add_listener": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.add_component": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.remove_listener": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1.4142135623730951}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.commands.MessageCommand.set_parent": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1}, "tanjun.commands.PartialCommand.add_check": {"tf": 1}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.add_slash_command": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.add_listener": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.conversion.to_emoji": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}}, "df": 123}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}}, "df": 8}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.BucketResource": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager": {"tf": 1}, "tanjun.dependencies.BucketResource": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource": {"tf": 1}}, "df": 5}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.utilities.calculate_everyone_permissions": {"tf": 1.7320508075688772}, "tanjun.utilities.calculate_permissions": {"tf": 2.23606797749979}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 2}, "tanjun.utilities.fetch_permissions": {"tf": 1.4142135623730951}}, "df": 4, "d": {"docs": {"tanjun.utilities.calculate_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.context.SlashContext.cancel_defer": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.Client.cache": {"tf": 1}, "tanjun.Client.open": {"tf": 1}, "tanjun.cached_inject": {"tf": 1.4142135623730951}, "tanjun.abc.Context.cache": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1.4142135623730951}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.abc.Client.cache": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.clients.Client.cache": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.conversion.to_emoji": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.conversion.ToChannel.async_caches": {"tf": 1.4142135623730951}, "tanjun.conversion.ToChannel.cache_components": {"tf": 2}, "tanjun.conversion.ToChannel.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToEmoji": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1.4142135623730951}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 2}, "tanjun.conversion.ToEmoji.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1.4142135623730951}, "tanjun.conversion.ToGuild.cache_components": {"tf": 2}, "tanjun.conversion.ToGuild.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInvite.cache_components": {"tf": 2}, "tanjun.conversion.ToInvite.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInviteWithMetadata": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 2}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToMember.async_caches": {"tf": 1.4142135623730951}, "tanjun.conversion.ToMember.cache_components": {"tf": 2}, "tanjun.conversion.ToMember.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToPresence": {"tf": 1}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1.4142135623730951}, "tanjun.conversion.ToPresence.cache_components": {"tf": 2}, "tanjun.conversion.ToPresence.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToRole.async_caches": {"tf": 1.4142135623730951}, "tanjun.conversion.ToRole.cache_components": {"tf": 2}, "tanjun.conversion.ToRole.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToUser.async_caches": {"tf": 1.4142135623730951}, "tanjun.conversion.ToUser.cache_components": {"tf": 2}, "tanjun.conversion.ToUser.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToVoiceState": {"tf": 1}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1.4142135623730951}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 2}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1.4142135623730951}, "tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.CacheIterator": {"tf": 1}, "tanjun.dependencies.CacheMissError": {"tf": 1.4142135623730951}, "tanjun.dependencies.EntryNotFound": {"tf": 1}, "tanjun.dependencies.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.SingleStoreCache": {"tf": 1.4142135623730951}, "tanjun.dependencies.fetch_my_user": {"tf": 1.4142135623730951}, "tanjun.dependencies.cache_callback": {"tf": 2.23606797749979}, "tanjun.dependencies.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1.7320508075688772}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator": {"tf": 1}, "tanjun.dependencies.async_cache.CacheMissError": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.EntryNotFound": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache": {"tf": 1.4142135623730951}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.cache_callback": {"tf": 2.23606797749979}, "tanjun.dependencies.data.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.cache_result": {"tf": 1.7320508075688772}, "tanjun.injecting.BasicInjectionContext.cache_result": {"tf": 1.7320508075688772}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 92, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}}, "df": 14}}}}}}}}}}, "d": {"docs": {"tanjun.cached_inject": {"tf": 1.4142135623730951}, "tanjun.conversion.to_emoji": {"tf": 1}, "tanjun.conversion.to_invite": {"tf": 1}, "tanjun.conversion.to_presence": {"tf": 1}, "tanjun.conversion.to_voice_state": {"tf": 1}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1.7320508075688772}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1.7320508075688772}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1.7320508075688772}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1.7320508075688772}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1.4142135623730951}, "tanjun.injecting.AbstractInjectionContext.get_cached_result": {"tf": 2}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"tf": 2}}, "df": 21}, "s": {"docs": {"tanjun.conversion.ToChannel.async_caches": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1}, "tanjun.conversion.ToMember.async_caches": {"tf": 1}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1}, "tanjun.conversion.ToRole.async_caches": {"tf": 1}, "tanjun.conversion.ToUser.async_caches": {"tf": 1}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1}}, "df": 10}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.dependencies.AsyncCache.get": {"tf": 2}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 2}, "tanjun.dependencies.EntryNotFound": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 2}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 2}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 2}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 2}, "tanjun.dependencies.async_cache.EntryNotFound": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 2}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 2}}, "df": 10}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}}, "df": 12}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.get_client_callbacks": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}}, "df": 12, "s": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.inject": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}}, "df": 2}}}, "t": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}}, "df": 2}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}}, "df": 6}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.ConversionError.errors": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}, "tanjun.errors.ConversionError.errors": {"tf": 1}}, "df": 10}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.as_interval": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}}, "df": 3, "d": {"docs": {"tanjun.ParserError.__init__": {"tf": 1}, "tanjun.errors.ParserError.__init__": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}}, "df": 8}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.with_all_checks": {"tf": 2.449489742783178}, "tanjun.with_any_checks": {"tf": 2.8284271247461903}, "tanjun.with_check": {"tf": 2}, "tanjun.with_dm_check": {"tf": 2}, "tanjun.with_guild_check": {"tf": 2}, "tanjun.with_nsfw_check": {"tf": 2}, "tanjun.with_sfw_check": {"tf": 2}, "tanjun.with_owner_check": {"tf": 2}, "tanjun.with_author_permission_check": {"tf": 1.7320508075688772}, "tanjun.with_own_permission_check": {"tf": 1.7320508075688772}, "tanjun.Client.add_check": {"tf": 1.7320508075688772}, "tanjun.Client.remove_check": {"tf": 2}, "tanjun.Client.with_check": {"tf": 2}, "tanjun.Client.check_message_name": {"tf": 1.4142135623730951}, "tanjun.Client.check_slash_name": {"tf": 1.7320508075688772}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1.7320508075688772}, "tanjun.Component.check_slash_name": {"tf": 1.7320508075688772}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.FailedCheck": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.ExecutableCommand.add_check": {"tf": 1.7320508075688772}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 2}, "tanjun.abc.MessageContext.command": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.command": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1.7320508075688772}, "tanjun.abc.Component.check_slash_name": {"tf": 1.7320508075688772}, "tanjun.abc.Client.check_message_name": {"tf": 1.4142135623730951}, "tanjun.abc.Client.check_slash_name": {"tf": 1.7320508075688772}, "tanjun.checks.all_checks": {"tf": 2.6457513110645907}, "tanjun.checks.any_checks": {"tf": 2.8284271247461903}, "tanjun.checks.CallbackReturnT": {"tf": 1.4142135623730951}, "tanjun.checks.with_all_checks": {"tf": 2.449489742783178}, "tanjun.checks.with_any_checks": {"tf": 2.8284271247461903}, "tanjun.checks.with_check": {"tf": 2}, "tanjun.checks.with_dm_check": {"tf": 2}, "tanjun.checks.with_guild_check": {"tf": 2}, "tanjun.checks.with_nsfw_check": {"tf": 2}, "tanjun.checks.with_sfw_check": {"tf": 2}, "tanjun.checks.with_owner_check": {"tf": 2}, "tanjun.checks.with_author_permission_check": {"tf": 1.7320508075688772}, "tanjun.checks.with_own_permission_check": {"tf": 1.7320508075688772}, "tanjun.checks.DmCheck": {"tf": 1.7320508075688772}, "tanjun.checks.DmCheck.__init__": {"tf": 1.7320508075688772}, "tanjun.checks.GuildCheck": {"tf": 1.7320508075688772}, "tanjun.checks.GuildCheck.__init__": {"tf": 1.7320508075688772}, "tanjun.checks.NsfwCheck": {"tf": 1.7320508075688772}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1.7320508075688772}, "tanjun.checks.SfwCheck": {"tf": 1.7320508075688772}, "tanjun.checks.SfwCheck.__init__": {"tf": 1.7320508075688772}, "tanjun.checks.OwnerCheck": {"tf": 1.7320508075688772}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1.7320508075688772}, "tanjun.checks.AuthorPermissionCheck": {"tf": 1.7320508075688772}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1.7320508075688772}, "tanjun.checks.OwnPermissionCheck": {"tf": 1.7320508075688772}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1.7320508075688772}, "tanjun.clients.Client.add_check": {"tf": 1.7320508075688772}, "tanjun.clients.Client.remove_check": {"tf": 2}, "tanjun.clients.Client.with_check": {"tf": 2}, "tanjun.clients.Client.check_message_name": {"tf": 1.4142135623730951}, "tanjun.clients.Client.check_slash_name": {"tf": 1.7320508075688772}, "tanjun.commands.PartialCommand.add_check": {"tf": 1.7320508075688772}, "tanjun.commands.PartialCommand.remove_check": {"tf": 2}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1.7320508075688772}, "tanjun.components.Component.check_slash_name": {"tf": 1.7320508075688772}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractOwners": {"tf": 1}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1.7320508075688772}, "tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1.7320508075688772}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1.7320508075688772}, "tanjun.errors.FailedCheck": {"tf": 1}, "tanjun.utilities.gather_checks": {"tf": 1}}, "df": 87, "s": {"docs": {"tanjun.with_all_checks": {"tf": 1.4142135623730951}, "tanjun.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.Client": {"tf": 1}, "tanjun.Client.checks": {"tf": 1}, "tanjun.Component": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.checks": {"tf": 1}, "tanjun.Component.needs_injector": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.HaltExecution": {"tf": 1}, "tanjun.abc.Context.component": {"tf": 1}, "tanjun.abc.ExecutableCommand.checks": {"tf": 1}, "tanjun.abc.SlashContext.command": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.checks": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_all_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.checks": {"tf": 1}, "tanjun.commands.PartialCommand.checks": {"tf": 1}, "tanjun.components.Component": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.checks": {"tf": 1}, "tanjun.components.Component.needs_injector": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.dependencies.owners": {"tf": 1}, "tanjun.errors.HaltExecution": {"tf": 1}, "tanjun.utilities.gather_checks": {"tf": 2}}, "df": 30, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.with_all_checks": {"tf": 1.4142135623730951}, "tanjun.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.with_check": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.remove_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1.4142135623730951}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.abc.CheckSigT": {"tf": 1}, "tanjun.abc.ExecutableCommand.add_check": {"tf": 1}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 1.4142135623730951}, "tanjun.checks.any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_all_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_check": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.remove_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1.4142135623730951}, "tanjun.commands.PartialCommand.add_check": {"tf": 1}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}}, "df": 21}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.7320508075688772}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 2.449489742783178}, "tanjun.BucketResource.CHANNEL": {"tf": 1}, "tanjun.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.abc.Context.channel_id": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 2.23606797749979}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 2}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 2}, "tanjun.abc.SlashOption.value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_channel": {"tf": 1.7320508075688772}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck": {"tf": 1.4142135623730951}, "tanjun.checks.GuildCheck": {"tf": 1}, "tanjun.checks.NsfwCheck": {"tf": 1}, "tanjun.checks.SfwCheck": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.7320508075688772}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 2.449489742783178}, "tanjun.context.MessageContext.channel_id": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.channel_id": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_channel": {"tf": 1.7320508075688772}, "tanjun.conversion.parse_channel_id": {"tf": 1.4142135623730951}, "tanjun.conversion.search_channel_ids": {"tf": 1.4142135623730951}, "tanjun.conversion.ToChannel": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1.7320508075688772}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 2}, "tanjun.dependencies.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1.7320508075688772}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 2}, "tanjun.dependencies.limiters.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1.7320508075688772}, "tanjun.utilities.calculate_permissions": {"tf": 1.7320508075688772}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1.7320508075688772}, "tanjun.utilities.fetch_permissions": {"tf": 1.4142135623730951}}, "df": 64, "s": {"docs": {"tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.BucketResource.PARENT_CHANNEL": {"tf": 1.4142135623730951}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.conversion.to_channel": {"tf": 1}, "tanjun.conversion.ToChannel": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"tf": 1.4142135623730951}, "tanjun.utilities.DM_PERMISSIONS": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 22}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.async_cache.SfChannelBound": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}}, "df": 3}}}, "e": {"docs": {"tanjun.context.SlashContext.get_response_future": {"tf": 1}}, "df": 1, "s": {"docs": {"tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.Component.add_command": {"tf": 1}, "tanjun.Component.remove_command": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.add_schedule": {"tf": 1}, "tanjun.Component.remove_schedule": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.add_command": {"tf": 1}, "tanjun.components.Component.remove_command": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.add_schedule": {"tf": 1}, "tanjun.components.Component.remove_schedule": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_prefix": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.ParseableProto.set_parser": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}}, "df": 93}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.add_component": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.remove_listener": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.remove_prefix": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.MessageCommand.set_parent": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.Component.add_slash_command": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.add_listener": {"tf": 1}, "tanjun.Component.remove_listener": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.add_check": {"tf": 1}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1}, "tanjun.abc.MessageCommand.set_parent": {"tf": 1}, "tanjun.abc.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.Component.add_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.add_message_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.add_listener": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Client.add_component": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.remove_listener": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.commands.MessageCommand.set_parent": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1}, "tanjun.commands.PartialCommand.add_check": {"tf": 1}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.components.Component.add_slash_command": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.add_listener": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}}, "df": 86}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "(": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}}, "df": 2}}, "s": {"docs": {"tanjun.as_slash_command": {"tf": 1.7320508075688772}, "tanjun.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_str_option": {"tf": 2}, "tanjun.SlashCommand.add_int_option": {"tf": 2}, "tanjun.SlashCommand.add_float_option": {"tf": 2}, "tanjun.SlashCommand.add_bool_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_user_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_member_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_role_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.CommandError.__init__": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.7320508075688772}, "tanjun.commands.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 2}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 2}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 2}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}}, "df": 42}}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 2}, "tanjun.SlashCommand.add_int_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 2}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}}, "df": 8}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 7}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Client.open": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1.4142135623730951}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.add_command": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.CommandError.__init__": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1.4142135623730951}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck": {"tf": 1}, "tanjun.checks.GuildCheck": {"tf": 1}, "tanjun.checks.NsfwCheck": {"tf": 1}, "tanjun.checks.SfwCheck": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck": {"tf": 1}, "tanjun.checks.OwnPermissionCheck": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1.4142135623730951}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.add_command": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1.7320508075688772}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1.7320508075688772}, "tanjun.errors.CommandError.__init__": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1.4142135623730951}}, "df": 60, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}}, "df": 11}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"tanjun.conversion.ToEmoji": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.conversion.to_emoji": {"tf": 1.4142135623730951}, "tanjun.conversion.ToEmoji": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.Client.message_accepts": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommand.copy": {"tf": 1}, "tanjun.MessageCommandGroup.copy": {"tf": 1}, "tanjun.SlashCommand.copy": {"tf": 1}, "tanjun.SlashCommandGroup.copy": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.as_interval": {"tf": 1.4142135623730951}, "tanjun.abc.ExecutableCommand.copy": {"tf": 1}, "tanjun.abc.MessageCommand.copy": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.has_been_deferred": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.clients.Client.message_accepts": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommand.copy": {"tf": 1}, "tanjun.commands.MessageCommandGroup.copy": {"tf": 1}, "tanjun.commands.PartialCommand.copy": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand.copy": {"tf": 1}, "tanjun.commands.SlashCommand.copy": {"tf": 1}, "tanjun.commands.SlashCommandGroup.copy": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.has_been_deferred": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.copy": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1.4142135623730951}}, "df": 48, "s": {"docs": {"tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 6}, "d": {"docs": {"tanjun.slash_command_group": {"tf": 1}, "tanjun.abc.Context.created_at": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.context.MessageContext.created_at": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.created_at": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 13}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1}}, "df": 6}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.abc.Context.created_at": {"tf": 1}, "tanjun.context.MessageContext.created_at": {"tf": 1}, "tanjun.context.SlashContext.created_at": {"tf": 1}}, "df": 3}}}}}}}, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}}, "df": 6}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun": {"tf": 1}, "tanjun.checks": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.as_slash_command": {"tf": 1.7320508075688772}, "tanjun.slash_command_group": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.__init__": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_int_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_bool_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_user_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_member_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_role_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommandGroup.__init__": {"tf": 1.7320508075688772}, "tanjun.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.inject": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.7320508075688772}, "tanjun.commands.slash_command_group": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1.7320508075688772}, "tanjun.components.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.injecting.inject": {"tf": 1}}, "df": 31}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.callback": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1.7320508075688772}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1.4142135623730951}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.copy": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor": {"tf": 1}, "tanjun.injecting.TypeDescriptor.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1.7320508075688772}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1.4142135623730951}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1.4142135623730951}}, "df": 19, "s": {"docs": {"tanjun.injecting.AbstractDescriptor": {"tf": 1}}, "df": 1}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.injecting.CallbackDescriptor.callback": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun": {"tf": 2.23606797749979}, "tanjun.Client.__init__": {"tf": 2.6457513110645907}, "tanjun.Client.from_gateway_bot": {"tf": 2.23606797749979}, "tanjun.Client.from_rest_bot": {"tf": 2.23606797749979}, "tanjun.Client.set_global_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.build": {"tf": 1}, "tanjun.SlashCommandGroup.build": {"tf": 1}, "tanjun.abc.BaseSlashCommand.build": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.__init__": {"tf": 2.6457513110645907}, "tanjun.clients.Client.from_gateway_bot": {"tf": 2.23606797749979}, "tanjun.clients.Client.from_rest_bot": {"tf": 2.23606797749979}, "tanjun.clients.Client.set_global_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.build": {"tf": 1}, "tanjun.commands.SlashCommandGroup.build": {"tf": 1}}, "df": 23, "d": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1}}, "df": 13}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.with_all_checks": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.with_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.with_listener": {"tf": 1.4142135623730951}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1}, "tanjun.Component.with_slash_command": {"tf": 1}, "tanjun.Component.with_message_command": {"tf": 1}, "tanjun.Component.with_listener": {"tf": 1.4142135623730951}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.Component.with_schedule": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1}, "tanjun.with_argument": {"tf": 2.23606797749979}, "tanjun.with_greedy_argument": {"tf": 2.23606797749979}, "tanjun.with_multi_argument": {"tf": 2.23606797749979}, "tanjun.with_option": {"tf": 1.7320508075688772}, "tanjun.with_multi_option": {"tf": 1.7320508075688772}, "tanjun.as_interval": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.abc.Component.with_slash_command": {"tf": 1}, "tanjun.abc.Component.with_message_command": {"tf": 1}, "tanjun.abc.Component.with_listener": {"tf": 1.4142135623730951}, "tanjun.abc.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.with_listener": {"tf": 1.4142135623730951}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1.4142135623730951}, "tanjun.checks.with_all_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_listener": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1}, "tanjun.components.Component.with_slash_command": {"tf": 1}, "tanjun.components.Component.with_message_command": {"tf": 1}, "tanjun.components.Component.with_listener": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.dependencies.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 2.23606797749979}, "tanjun.parsing.with_greedy_argument": {"tf": 2.23606797749979}, "tanjun.parsing.with_multi_argument": {"tf": 2.23606797749979}, "tanjun.parsing.with_option": {"tf": 1.7320508075688772}, "tanjun.parsing.with_multi_option": {"tf": 1.7320508075688772}, "tanjun.schedules.as_interval": {"tf": 1.4142135623730951}}, "df": 108, "s": {"docs": {"tanjun.checks.CallbackReturnT": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}}, "df": 8}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 13}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}}, "df": 25, "d": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.context.SlashContext.defer": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}}, "df": 9}, "s": {"docs": {"tanjun.abc.CheckSig": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}}, "df": 8, "s": {"docs": {"tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}}, "df": 8}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.inject": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected": {"tf": 1}}, "df": 3}}}}, "f": {"docs": {"tanjun": {"tf": 1.7320508075688772}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.Component.with_schedule": {"tf": 1}, "tanjun.cached_inject": {"tf": 1.4142135623730951}, "tanjun.inject_lc": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.inject": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.with_parser": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_schedule": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.inject_lc": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.inject_lc": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.parsing.with_parser": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1.4142135623730951}, "tanjun.utilities.CastedView": {"tf": 1.4142135623730951}}, "df": 85, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.Client": {"tf": 1}, "tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.as_slash_command": {"tf": 2.449489742783178}, "tanjun.slash_command_group": {"tf": 2.23606797749979}, "tanjun.SlashCommand.__init__": {"tf": 2.449489742783178}, "tanjun.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_int_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_bool_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_user_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_role_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommandGroup.__init__": {"tf": 2.23606797749979}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 2}, "tanjun.cached_inject": {"tf": 1}, "tanjun.inject_lc": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 2}, "tanjun.ShlexParser.add_option": {"tf": 1.7320508075688772}, "tanjun.with_argument": {"tf": 2.23606797749979}, "tanjun.with_greedy_argument": {"tf": 2.23606797749979}, "tanjun.with_multi_argument": {"tf": 2.23606797749979}, "tanjun.with_option": {"tf": 2}, "tanjun.with_multi_option": {"tf": 2.23606797749979}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1.7320508075688772}, "tanjun.abc.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 2.23606797749979}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 2.449489742783178}, "tanjun.commands.slash_command_group": {"tf": 2.23606797749979}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1.7320508075688772}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 2}, "tanjun.commands.SlashCommand.__init__": {"tf": 2.449489742783178}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 2.23606797749979}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 2}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 2.23606797749979}, "tanjun.dependencies": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 2}, "tanjun.parsing.Option.__init__": {"tf": 1.7320508075688772}, "tanjun.parsing.Parameter.default": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 2}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1.7320508075688772}, "tanjun.parsing.UndefinedDefaultT": {"tf": 1}, "tanjun.parsing.UNDEFINED_DEFAULT": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 2.23606797749979}, "tanjun.parsing.with_greedy_argument": {"tf": 2.23606797749979}, "tanjun.parsing.with_multi_argument": {"tf": 2.23606797749979}, "tanjun.parsing.with_option": {"tf": 2}, "tanjun.parsing.with_multi_option": {"tf": 2.23606797749979}, "tanjun.utilities.CastedView": {"tf": 1.4142135623730951}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1.7320508075688772}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1.7320508075688772}}, "df": 119, "s": {"docs": {"tanjun.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.with_dm_check": {"tf": 1.4142135623730951}, "tanjun.with_guild_check": {"tf": 1.4142135623730951}, "tanjun.with_nsfw_check": {"tf": 1.4142135623730951}, "tanjun.with_sfw_check": {"tf": 1.4142135623730951}, "tanjun.with_owner_check": {"tf": 1.4142135623730951}, "tanjun.with_author_permission_check": {"tf": 1.4142135623730951}, "tanjun.with_own_permission_check": {"tf": 1.4142135623730951}, "tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.Client.from_gateway_bot": {"tf": 2}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.defaults_to_ephemeral": {"tf": 1.7320508075688772}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1.7320508075688772}, "tanjun.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_float_option": {"tf": 2}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.as_interval": {"tf": 1.7320508075688772}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1.7320508075688772}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_dm_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_guild_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_nsfw_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_sfw_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_owner_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_author_permission_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_own_permission_check": {"tf": 1.4142135623730951}, "tanjun.checks.DmCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.GuildCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.SfwCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_gateway_bot": {"tf": 2}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1.7320508075688772}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.7320508075688772}, "tanjun.commands.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 2}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1.7320508075688772}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1.7320508075688772}}, "df": 103}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}}, "df": 17}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.set_auto_defer_after": {"tf": 1.4142135623730951}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.defer": {"tf": 1}}, "df": 20, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.context.SlashContext.cancel_defer": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.context.SlashContext.defer": {"tf": 1}}, "df": 8, "s": {"docs": {"tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.abc.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.context.SlashContext.has_been_deferred": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.context.SlashContext.start_defer_timer": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}}, "df": 8}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.Client": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.checks": {"tf": 1}, "tanjun.Client.set_hikari_trait_injectors": {"tf": 1.7320508075688772}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.Component": {"tf": 1.4142135623730951}, "tanjun.Component.needs_injector": {"tf": 1}, "tanjun.inject_lc": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.MissingDependencyError": {"tf": 1}, "tanjun.MissingDependencyError.__init__": {"tf": 1}, "tanjun.inject": {"tf": 1.7320508075688772}, "tanjun.as_interval": {"tf": 1}, "tanjun.abc.HookSig": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.checks": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1.7320508075688772}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.components.Component": {"tf": 1.4142135623730951}, "tanjun.components.Component.needs_injector": {"tf": 1}, "tanjun.components.OnCallbackSig": {"tf": 1}, "tanjun.dependencies": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1.4142135623730951}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.dependencies.data": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.dependencies.owners": {"tf": 1}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.errors.MissingDependencyError": {"tf": 1}, "tanjun.errors.MissingDependencyError.__init__": {"tf": 1}, "tanjun.injecting": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1.4142135623730951}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1.7320508075688772}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1.4142135623730951}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.CallbackDescriptor": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 2}, "tanjun.injecting.UNDEFINED": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1.7320508075688772}, "tanjun.injecting.Injected": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1.4142135623730951}, "tanjun.injecting.InjectorClient": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1.4142135623730951}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.injecting.TypeDescriptor": {"tf": 1}, "tanjun.injecting.TypeDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1.4142135623730951}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1.7320508075688772}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1.4142135623730951}, "tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}}, "df": 104, "(": {"docs": {}, "df": 0, "b": {"docs": {"tanjun.inject": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.dependencies.set_standard_dependencies": {"tf": 1.4142135623730951}, "tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.callbacks": {"tf": 1}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}}, "df": 23}}}}, "t": {"docs": {"tanjun.Client.check_message_name": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.abc.HookSig": {"tf": 1}, "tanjun.abc.SlashContext.mark_not_found": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.context.SlashContext.mark_not_found": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata": {"tf": 1}, "tanjun.conversion.ToPresence": {"tf": 1}, "tanjun.conversion.ToVoiceState": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}}, "df": 15}}}, "s": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.set_global_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.set_global_commands": {"tf": 1}}, "df": 8}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1}}, "df": 2, "d": {"docs": {"tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}}, "df": 5}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}}, "df": 19}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.add_prefix": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}}, "df": 10}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.components.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}}, "df": 12, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}}, "df": 14}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.delete_initial_response": {"tf": 1}, "tanjun.abc.Context.delete_last_response": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.delete_initial_response": {"tf": 1}, "tanjun.context.MessageContext.delete_last_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.delete_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}}, "df": 20, "d": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.respond": {"tf": 1.7320508075688772}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.respond": {"tf": 1.7320508075688772}}, "df": 14}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.dependencies.AbstractOwners": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 21}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.hooks": {"tf": 1}, "tanjun.Client.slash_hooks": {"tf": 1}, "tanjun.Client.message_hooks": {"tf": 1}, "tanjun.MessageCommand.callback": {"tf": 1}, "tanjun.SlashCommand.callback": {"tf": 1}, "tanjun.ConversionError.__init__": {"tf": 1}, "tanjun.ConversionError.errors": {"tf": 1}, "tanjun.HaltExecution": {"tf": 1}, "tanjun.ParserError": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.with_argument": {"tf": 1.4142135623730951}, "tanjun.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.with_option": {"tf": 1.4142135623730951}, "tanjun.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.abc.Context.component": {"tf": 1}, "tanjun.abc.Context.command": {"tf": 1}, "tanjun.abc.Hooks": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.abc.MessageCommand.callback": {"tf": 1}, "tanjun.abc.MessageContext.command": {"tf": 1.4142135623730951}, "tanjun.abc.SlashCommand.callback": {"tf": 1}, "tanjun.abc.SlashContext.command": {"tf": 1}, "tanjun.abc.Client.prefixes": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.clients.Client.slash_hooks": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.commands.MessageCommand.callback": {"tf": 1}, "tanjun.commands.SlashCommand.callback": {"tf": 1}, "tanjun.context.MessageContext.command": {"tf": 1}, "tanjun.context.SlashContext.command": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1}, "tanjun.errors.ConversionError.errors": {"tf": 1}, "tanjun.errors.HaltExecution": {"tf": 1}, "tanjun.errors.ParserError": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.Option.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_option": {"tf": 1.4142135623730951}}, "df": 45}}}}, "n": {"docs": {"tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.Client.dispatch_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1.4142135623730951}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.ClientCallbackNames": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.Hooks": {"tf": 1}, "tanjun.abc.ClientCallbackNames": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}}, "df": 10}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1.4142135623730951}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1.4142135623730951}}, "df": 27, "d": {"docs": {"tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}}, "df": 22}, "s": {"docs": {"tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.open": {"tf": 1}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1.4142135623730951}, "tanjun.abc.Context.fetch_guild": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.value": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.value": {"tf": 1}, "tanjun.conversion": {"tf": 1}}, "df": 27, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.to_datetime": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1}, "tanjun.conversion.to_datetime": {"tf": 1}}, "df": 5}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 12}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.Client.load_modules": {"tf": 1.4142135623730951}, "tanjun.abc.Client.load_modules": {"tf": 1.4142135623730951}, "tanjun.clients.Client.load_modules": {"tf": 1.4142135623730951}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}}, "df": 4}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}}, "df": 2, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}}, "df": 3}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 9}}}}}}}}, "m": {"docs": {"tanjun.with_dm_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.BucketResource.MEMBER": {"tf": 1.4142135623730951}, "tanjun.BucketResource.PARENT_CHANNEL": {"tf": 1.4142135623730951}, "tanjun.BucketResource.TOP_ROLE": {"tf": 1.4142135623730951}, "tanjun.BucketResource.GUILD": {"tf": 1.4142135623730951}, "tanjun.abc.Context.guild_id": {"tf": 1}, "tanjun.abc.Context.member": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1.4142135623730951}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck": {"tf": 1.7320508075688772}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.context.MessageContext.guild_id": {"tf": 1}, "tanjun.context.MessageContext.member": {"tf": 1}, "tanjun.context.SlashContext.guild_id": {"tf": 1}, "tanjun.context.SlashContext.member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.dependencies.BucketResource.MEMBER": {"tf": 1.4142135623730951}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"tf": 1.4142135623730951}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1.4142135623730951}, "tanjun.dependencies.BucketResource.GUILD": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.BucketResource.MEMBER": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.BucketResource.GUILD": {"tf": 1.4142135623730951}, "tanjun.utilities.DM_PERMISSIONS": {"tf": 1}}, "df": 42, "s": {"docs": {"tanjun.with_dm_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1.4142135623730951}}, "df": 8}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 10}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}}, "df": 3}}, "e": {"docs": {"tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.CacheMissError": {"tf": 1}, "tanjun.dependencies.EntryNotFound": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.CacheMissError": {"tf": 1}, "tanjun.dependencies.async_cache.EntryNotFound": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}}, "df": 60}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}}, "df": 2}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.context.SlashContext.start_defer_timer": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.CacheIterator": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}}, "df": 10}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 6}, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.created_at": {"tf": 1}, "tanjun.context.MessageContext.created_at": {"tf": 1}, "tanjun.context.SlashContext.created_at": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}}, "df": 13, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.to_datetime": {"tf": 2.23606797749979}, "tanjun.cached_inject": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.as_interval": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 2.6457513110645907}, "tanjun.conversion.to_datetime": {"tf": 2.23606797749979}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}}, "df": 16}}}}}, "a": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.callbacks": {"tf": 1}, "tanjun.dependencies.data": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.injecting": {"tf": 1}}, "df": 13, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.cached_inject": {"tf": 2}, "tanjun.dependencies.cached_inject": {"tf": 2}, "tanjun.dependencies.data.cached_inject": {"tf": 2}, "tanjun.injecting.SelfInjectingCallback": {"tf": 2}}, "df": 4}}}}}}}, "b": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}}, "df": 3}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.injecting.CallbackSig": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {"tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.abc.SlashOption.value": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.context.SlashOption.value": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}}, "df": 23, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.dependencies.async_cache": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.respond": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 3}, "a": {"docs": {"tanjun.abc.SlashOption": {"tf": 1}, "tanjun.context.SlashOption": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Component.with_schedule": {"tf": 1}, "tanjun.cached_inject": {"tf": 1}, "tanjun.inject_lc": {"tf": 1}, "tanjun.with_parser": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.parsing.with_parser": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1}}, "df": 12, "s": {"docs": {"tanjun": {"tf": 1.7320508075688772}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}}, "df": 83}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.with_any_checks": {"tf": 1.7320508075688772}, "tanjun.with_dm_check": {"tf": 1.7320508075688772}, "tanjun.with_guild_check": {"tf": 1.7320508075688772}, "tanjun.with_nsfw_check": {"tf": 1.7320508075688772}, "tanjun.with_sfw_check": {"tf": 1.7320508075688772}, "tanjun.with_owner_check": {"tf": 1.7320508075688772}, "tanjun.with_author_permission_check": {"tf": 1.7320508075688772}, "tanjun.with_own_permission_check": {"tf": 1.7320508075688772}, "tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.message_accepts": {"tf": 1}, "tanjun.Client.hooks": {"tf": 1}, "tanjun.Client.slash_hooks": {"tf": 1}, "tanjun.Client.message_hooks": {"tf": 1}, "tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.Client.set_human_only": {"tf": 1.4142135623730951}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1.7320508075688772}, "tanjun.Client.set_slash_hooks": {"tf": 1.7320508075688772}, "tanjun.Client.set_message_hooks": {"tf": 1.7320508075688772}, "tanjun.MessageCommand.callback": {"tf": 1}, "tanjun.SlashCommand.callback": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1.7320508075688772}, "tanjun.Component.checks": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.CommandError": {"tf": 1}, "tanjun.HaltExecution": {"tf": 1}, "tanjun.Hooks": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 2.23606797749979}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 2.23606797749979}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1.4142135623730951}, "tanjun.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.Context": {"tf": 1}, "tanjun.abc.Context.component": {"tf": 1}, "tanjun.abc.Context.command": {"tf": 1}, "tanjun.abc.Context.is_human": {"tf": 1}, "tanjun.abc.Context.triggering_name": {"tf": 1}, "tanjun.abc.Hooks": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 2.23606797749979}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 2.23606797749979}, "tanjun.abc.AnyHooks": {"tf": 1}, "tanjun.abc.MessageHooks": {"tf": 1}, "tanjun.abc.SlashHooks": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.abc.MessageCommand.callback": {"tf": 1}, "tanjun.abc.MessageContext": {"tf": 1}, "tanjun.abc.MessageContext.command": {"tf": 1.4142135623730951}, "tanjun.abc.SlashCommand.callback": {"tf": 1}, "tanjun.abc.SlashContext.command": {"tf": 1.4142135623730951}, "tanjun.abc.Component": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.abc.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.abc.Client": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.prefixes": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1.7320508075688772}, "tanjun.checks.CallbackReturnT": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1.7320508075688772}, "tanjun.checks.with_dm_check": {"tf": 1.7320508075688772}, "tanjun.checks.with_guild_check": {"tf": 1.7320508075688772}, "tanjun.checks.with_nsfw_check": {"tf": 1.7320508075688772}, "tanjun.checks.with_sfw_check": {"tf": 1.7320508075688772}, "tanjun.checks.with_owner_check": {"tf": 1.7320508075688772}, "tanjun.checks.with_author_permission_check": {"tf": 1.7320508075688772}, "tanjun.checks.with_own_permission_check": {"tf": 1.7320508075688772}, "tanjun.checks.DmCheck.__init__": {"tf": 1.7320508075688772}, "tanjun.checks.GuildCheck.__init__": {"tf": 1.7320508075688772}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1.7320508075688772}, "tanjun.checks.SfwCheck.__init__": {"tf": 1.7320508075688772}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1.7320508075688772}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1.7320508075688772}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1.7320508075688772}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.message_accepts": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.clients.Client.slash_hooks": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1.4142135623730951}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1.7320508075688772}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1.7320508075688772}, "tanjun.clients.Client.set_message_hooks": {"tf": 1.7320508075688772}, "tanjun.commands.MessageCommand.callback": {"tf": 1}, "tanjun.commands.SlashCommand.callback": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1.7320508075688772}, "tanjun.components.Component.checks": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.components.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.context": {"tf": 1}, "tanjun.context.MessageContext.command": {"tf": 1}, "tanjun.context.MessageContext.is_human": {"tf": 1}, "tanjun.context.MessageContext.triggering_name": {"tf": 1}, "tanjun.context.SlashContext.command": {"tf": 1}, "tanjun.context.SlashContext.is_human": {"tf": 1}, "tanjun.context.SlashContext.triggering_name": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.errors.CommandError": {"tf": 1}, "tanjun.errors.HaltExecution": {"tf": 1}, "tanjun.hooks": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 2.23606797749979}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 2.23606797749979}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 148, "s": {"docs": {"tanjun.abc.Context.guild_id": {"tf": 1}, "tanjun.abc.Context.member": {"tf": 1}, "tanjun.context.MessageContext.guild_id": {"tf": 1}, "tanjun.context.MessageContext.member": {"tf": 1}, "tanjun.context.SlashContext.guild_id": {"tf": 1}, "tanjun.context.SlashContext.member": {"tf": 1}}, "df": 6}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.is_human_only": {"tf": 1}, "tanjun.Client.events": {"tf": 1}, "tanjun.Client.server": {"tf": 1}, "tanjun.abc.CommandCallbackSig": {"tf": 1}, "tanjun.abc.Client.events": {"tf": 1}, "tanjun.abc.Client.server": {"tf": 1}, "tanjun.clients.Client.is_human_only": {"tf": 1}, "tanjun.clients.Client.events": {"tf": 1}, "tanjun.clients.Client.server": {"tf": 1}}, "df": 9}}}, "e": {"docs": {"tanjun.Client.on_message_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_event": {"tf": 1.4142135623730951}, "tanjun.Client.on_interaction_create_request": {"tf": 1.4142135623730951}, "tanjun.MessageAcceptsEnum": {"tf": 1}, "tanjun.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1.7320508075688772}, "tanjun.Component.execute_message": {"tf": 1.7320508075688772}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1.7320508075688772}, "tanjun.abc.Component.execute_message": {"tf": 1.7320508075688772}, "tanjun.clients.Client.on_message_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1.4142135623730951}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1.4142135623730951}, "tanjun.clients.MessageAcceptsEnum": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1.7320508075688772}, "tanjun.components.Component.execute_message": {"tf": 1.7320508075688772}}, "df": 27, "d": {"docs": {"tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Client.set_message_accepts": {"tf": 1.4142135623730951}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.BucketResource.MEMBER": {"tf": 1}, "tanjun.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.BucketResource.GUILD": {"tf": 1}, "tanjun.abc.Context.guild_id": {"tf": 1}, "tanjun.abc.ExecutableCommand": {"tf": 1}, "tanjun.abc.ExecutableCommand.checks": {"tf": 1}, "tanjun.abc.ExecutableCommand.hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1.4142135623730951}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashCommand": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.set_message_accepts": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.PartialCommand.checks": {"tf": 1}, "tanjun.commands.PartialCommand.hooks": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.context.MessageContext.guild_id": {"tf": 1}, "tanjun.context.SlashContext.guild_id": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.dependencies.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.BucketResource.GUILD": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GUILD": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}}, "df": 52}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.CheckSig": {"tf": 1.4142135623730951}, "tanjun.commands.PartialCommand": {"tf": 1}}, "df": 2, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Component.add_command": {"tf": 1}, "tanjun.Component.remove_command": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_command": {"tf": 1}, "tanjun.components.Component.remove_command": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1.4142135623730951}}, "df": 5}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.utilities.CastedView": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.abc.ErrorHookSig": {"tf": 2}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1.4142135623730951}}, "df": 23, "s": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.as_interval": {"tf": 2.449489742783178}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 2.449489742783178}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 2.449489742783178}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 2}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 2}}, "df": 8}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 12, "s": {"docs": {"tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.components.OnCallbackSig": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.ParserError": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.errors.ParserError": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}}, "df": 18}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 13}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.cached_inject": {"tf": 1.7320508075688772}, "tanjun.dependencies.cache_callback": {"tf": 1.7320508075688772}, "tanjun.dependencies.cached_inject": {"tf": 1.7320508075688772}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1.7320508075688772}, "tanjun.dependencies.data.cached_inject": {"tf": 1.7320508075688772}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}}, "df": 7, "d": {"docs": {"tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}}, "df": 5}, "s": {"docs": {"tanjun.abc.SlashContext.expires_at": {"tf": 1}, "tanjun.context.SlashContext.expires_at": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.dependencies.async_cache": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.CacheMissError": {"tf": 1}, "tanjun.dependencies.EntryNotFound": {"tf": 1.4142135623730951}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.CacheMissError": {"tf": 1}, "tanjun.dependencies.async_cache.EntryNotFound": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}}, "df": 12, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 6}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.remove_listener": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.remove_prefix": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.MessageCommand.set_parent": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.Component.remove_command": {"tf": 1}, "tanjun.Component.add_slash_command": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.add_listener": {"tf": 1}, "tanjun.Component.remove_listener": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.add_check": {"tf": 1}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1}, "tanjun.abc.MessageCommand.set_parent": {"tf": 1}, "tanjun.abc.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.Component.add_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.add_message_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.add_listener": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.remove_listener": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.commands.MessageCommand.set_parent": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1}, "tanjun.commands.PartialCommand.add_check": {"tf": 1}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.remove_command": {"tf": 1}, "tanjun.components.Component.add_slash_command": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.add_listener": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.conversion": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.injecting": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.ParseableProto.set_parser": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}}, "df": 129, "s": {"docs": {"tanjun": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}}, "df": 3}, "d": {"docs": {"tanjun.Client.unload_modules": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.conversion.ToChannel.async_caches": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1}, "tanjun.conversion.ToMember.async_caches": {"tf": 1}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1}, "tanjun.conversion.ToRole.async_caches": {"tf": 1}, "tanjun.conversion.ToUser.async_caches": {"tf": 1}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1}}, "df": 18}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun": {"tf": 1}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}}, "df": 11, "s": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}}, "df": 2}}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"tanjun.ClientCallbackNames": {"tf": 1}, "tanjun.abc.ClientCallbackNames": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1.7320508075688772}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.respond": {"tf": 1.7320508075688772}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}}, "df": 7, "s": {"docs": {"tanjun.with_all_checks": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}}, "df": 6}}}}}, "d": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.CommandError": {"tf": 1}, "tanjun.HaltExecution": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.errors.CommandError": {"tf": 1}, "tanjun.errors.HaltExecution": {"tf": 1}}, "df": 31, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 15}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}}, "df": 9}}}, "y": {"docs": {"tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.abc.SlashOption.value": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.context.SlashOption.value": {"tf": 1}}, "df": 4, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.to_snowflake": {"tf": 1}, "tanjun.abc.SlashOption.value": {"tf": 1}, "tanjun.context.SlashOption.value": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1.7320508075688772}, "tanjun.components.Component.load_from_scope": {"tf": 1.7320508075688772}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 2}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 2}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 2}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 2}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1.4142135623730951}}, "df": 12}}}, "y": {"docs": {"tanjun.dependencies.AsyncCache.get": {"tf": 2.449489742783178}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 2.6457513110645907}, "tanjun.dependencies.CacheMissError": {"tf": 1.4142135623730951}, "tanjun.dependencies.EntryNotFound": {"tf": 1.4142135623730951}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 2.6457513110645907}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 2.23606797749979}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 2.449489742783178}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 2.6457513110645907}, "tanjun.dependencies.async_cache.CacheMissError": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.EntryNotFound": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 2.6457513110645907}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 2.23606797749979}, "tanjun.parsing.Parameter.is_multi": {"tf": 1}}, "df": 13, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.CacheMissError": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.CacheMissError": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}}, "df": 10}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}}, "df": 14, "s": {"docs": {"tanjun.as_message_command_group": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}}, "df": 4}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.NotEnoughArgumentsError": {"tf": 1}, "tanjun.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.__init__": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}}, "df": 2}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun": {"tf": 1}, "tanjun.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.Client": {"tf": 1}, "tanjun.Client.__init__": {"tf": 3.3166247903554}, "tanjun.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.Client.events": {"tf": 1}, "tanjun.Client.listeners": {"tf": 1}, "tanjun.Client.add_listener": {"tf": 2}, "tanjun.Client.remove_listener": {"tf": 2}, "tanjun.Client.with_listener": {"tf": 2.6457513110645907}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.Client.on_message_create_event": {"tf": 1.4142135623730951}, "tanjun.Client.on_interaction_create_event": {"tf": 2}, "tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.Component.listeners": {"tf": 1}, "tanjun.Component.add_listener": {"tf": 1.7320508075688772}, "tanjun.Component.remove_listener": {"tf": 2}, "tanjun.Component.with_listener": {"tf": 1.7320508075688772}, "tanjun.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.abc.Context.events": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1.4142135623730951}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.abc.ListenerCallbackSig": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Component.listeners": {"tf": 1}, "tanjun.abc.Component.add_listener": {"tf": 1.7320508075688772}, "tanjun.abc.Component.remove_listener": {"tf": 2}, "tanjun.abc.Component.with_listener": {"tf": 1.7320508075688772}, "tanjun.abc.Client.events": {"tf": 1}, "tanjun.abc.Client.listeners": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 2}, "tanjun.abc.Client.remove_listener": {"tf": 2}, "tanjun.abc.Client.with_listener": {"tf": 2.6457513110645907}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 3.3166247903554}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.clients.Client.events": {"tf": 1}, "tanjun.clients.Client.listeners": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 2}, "tanjun.clients.Client.remove_listener": {"tf": 2}, "tanjun.clients.Client.with_listener": {"tf": 2.6457513110645907}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.Client.on_message_create_event": {"tf": 1.4142135623730951}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 2}, "tanjun.clients.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.components.Component.listeners": {"tf": 1}, "tanjun.components.Component.add_listener": {"tf": 1.7320508075688772}, "tanjun.components.Component.remove_listener": {"tf": 2}, "tanjun.components.Component.with_listener": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1.7320508075688772}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1.7320508075688772}}, "df": 84, "s": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.message_accepts": {"tf": 1}, "tanjun.Client.on_message_create_event": {"tf": 1.4142135623730951}, "tanjun.Client.on_interaction_create_event": {"tf": 1.7320508075688772}, "tanjun.MessageAcceptsEnum": {"tf": 1}, "tanjun.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1.4142135623730951}, "tanjun.clients.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.message_accepts": {"tf": 1}, "tanjun.clients.Client.on_message_create_event": {"tf": 1.4142135623730951}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1.7320508075688772}, "tanjun.clients.MessageAcceptsEnum": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1.4142135623730951}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}}, "df": 33}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1.4142135623730951}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}}, "df": 19, "/": {"docs": {}, "df": 0, "@": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.with_any_checks": {"tf": 1.7320508075688772}, "tanjun.with_dm_check": {"tf": 2.23606797749979}, "tanjun.with_guild_check": {"tf": 2.23606797749979}, "tanjun.with_nsfw_check": {"tf": 2.23606797749979}, "tanjun.with_sfw_check": {"tf": 2.23606797749979}, "tanjun.with_owner_check": {"tf": 2.23606797749979}, "tanjun.with_author_permission_check": {"tf": 2.23606797749979}, "tanjun.with_own_permission_check": {"tf": 2.23606797749979}, "tanjun.Client": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.to_snowflake": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1.7320508075688772}, "tanjun.with_cooldown": {"tf": 1.7320508075688772}, "tanjun.CommandError": {"tf": 1}, "tanjun.CommandError.__init__": {"tf": 1}, "tanjun.CommandError.message": {"tf": 1}, "tanjun.ConversionError": {"tf": 1}, "tanjun.ConversionError.__init__": {"tf": 1}, "tanjun.ConversionError.parameter": {"tf": 1}, "tanjun.HaltExecution": {"tf": 1}, "tanjun.FailedCheck": {"tf": 1}, "tanjun.MissingDependencyError": {"tf": 1}, "tanjun.MissingDependencyError.__init__": {"tf": 1.4142135623730951}, "tanjun.NotEnoughArgumentsError": {"tf": 1}, "tanjun.NotEnoughArgumentsError.__init__": {"tf": 1.7320508075688772}, "tanjun.NotEnoughArgumentsError.parameter": {"tf": 1}, "tanjun.TooManyArgumentsError": {"tf": 1}, "tanjun.TooManyArgumentsError.__init__": {"tf": 1.7320508075688772}, "tanjun.TooManyArgumentsError.parameter": {"tf": 1}, "tanjun.ParserError": {"tf": 1.4142135623730951}, "tanjun.ParserError.__init__": {"tf": 1.7320508075688772}, "tanjun.ParserError.message": {"tf": 1}, "tanjun.Hooks": {"tf": 1.7320508075688772}, "tanjun.Hooks.add_on_error": {"tf": 1.7320508075688772}, "tanjun.Hooks.set_on_error": {"tf": 2}, "tanjun.Hooks.with_on_error": {"tf": 3}, "tanjun.Hooks.add_on_parser_error": {"tf": 1.7320508075688772}, "tanjun.Hooks.set_on_parser_error": {"tf": 1.7320508075688772}, "tanjun.Hooks.with_on_parser_error": {"tf": 2.449489742783178}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1.7320508075688772}, "tanjun.abc.Hooks.with_on_error": {"tf": 3}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1.7320508075688772}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 2.449489742783178}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1.7320508075688772}, "tanjun.checks.with_any_checks": {"tf": 1.7320508075688772}, "tanjun.checks.with_dm_check": {"tf": 2.23606797749979}, "tanjun.checks.with_guild_check": {"tf": 2.23606797749979}, "tanjun.checks.with_nsfw_check": {"tf": 2.23606797749979}, "tanjun.checks.with_sfw_check": {"tf": 2.23606797749979}, "tanjun.checks.with_owner_check": {"tf": 2.23606797749979}, "tanjun.checks.with_author_permission_check": {"tf": 2.23606797749979}, "tanjun.checks.with_own_permission_check": {"tf": 2.23606797749979}, "tanjun.checks.DmCheck.__init__": {"tf": 2.23606797749979}, "tanjun.checks.GuildCheck.__init__": {"tf": 2.23606797749979}, "tanjun.checks.NsfwCheck.__init__": {"tf": 2.23606797749979}, "tanjun.checks.SfwCheck.__init__": {"tf": 2.23606797749979}, "tanjun.checks.OwnerCheck.__init__": {"tf": 2.23606797749979}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 2.23606797749979}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 2.23606797749979}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.conversion.parse_snowflake": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}, "tanjun.dependencies.CacheMissError": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1.7320508075688772}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1.7320508075688772}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1.7320508075688772}, "tanjun.dependencies.with_cooldown": {"tf": 1.7320508075688772}, "tanjun.dependencies.async_cache.CacheMissError": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1.7320508075688772}, "tanjun.errors.CommandError": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}, "tanjun.errors.CommandError.message": {"tf": 1}, "tanjun.errors.ConversionError": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1}, "tanjun.errors.ConversionError.parameter": {"tf": 1}, "tanjun.errors.HaltExecution": {"tf": 1}, "tanjun.errors.FailedCheck": {"tf": 1}, "tanjun.errors.MissingDependencyError": {"tf": 1}, "tanjun.errors.MissingDependencyError.__init__": {"tf": 1.4142135623730951}, "tanjun.errors.NotEnoughArgumentsError": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.__init__": {"tf": 1.7320508075688772}, "tanjun.errors.NotEnoughArgumentsError.parameter": {"tf": 1}, "tanjun.errors.TooManyArgumentsError": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.__init__": {"tf": 1.7320508075688772}, "tanjun.errors.TooManyArgumentsError.parameter": {"tf": 1}, "tanjun.errors.ParserError": {"tf": 1.4142135623730951}, "tanjun.errors.ParserError.__init__": {"tf": 1.7320508075688772}, "tanjun.errors.ParserError.message": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.set_on_error": {"tf": 2}, "tanjun.hooks.Hooks.with_on_error": {"tf": 3}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 2.449489742783178}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 154, "s": {"docs": {"tanjun.with_any_checks": {"tf": 1.7320508075688772}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.ConversionError.__init__": {"tf": 1.4142135623730951}, "tanjun.ConversionError.errors": {"tf": 1}, "tanjun.ParserError": {"tf": 1}, "tanjun.TanjunError": {"tf": 1}, "tanjun.Hooks": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.abc.SlashContext.expires_at": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.abc.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.checks.any_checks": {"tf": 1.7320508075688772}, "tanjun.checks.with_any_checks": {"tf": 1.7320508075688772}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.components.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.expires_at": {"tf": 1}, "tanjun.errors": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1.4142135623730951}, "tanjun.errors.ConversionError.errors": {"tf": 1}, "tanjun.errors.ParserError": {"tf": 1}, "tanjun.errors.TanjunError": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}}, "df": 73}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.MissingDependencyError.message": {"tf": 1}, "tanjun.errors.MissingDependencyError.message": {"tf": 1}}, "df": 2}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.ErrorHookSigT": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}}, "df": 6, "t": {"docs": {"tanjun.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.Client.defaults_to_ephemeral": {"tf": 1.7320508075688772}, "tanjun.Client.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.as_slash_command": {"tf": 2}, "tanjun.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 2}, "tanjun.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.Component.set_ephemeral_default": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.defer": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1.7320508075688772}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1.7320508075688772}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 2}, "tanjun.commands.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.__init__": {"tf": 2}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.defer": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}}, "df": 40}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}}, "df": 9, "s": {"docs": {"tanjun.Client.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}}, "df": 10}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.parsing.Parameter.is_multi": {"tf": 1}}, "df": 7}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.LazyConstant": {"tf": 1}, "tanjun.dependencies.LazyConstant": {"tf": 1}, "tanjun.dependencies.data.LazyConstant": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.HaltExecution": {"tf": 1}, "tanjun.errors.HaltExecution": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.CommandError.__init__": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.Option.empty_value": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.UndefinedDefaultT": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 27}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 3}, "tanjun.abc.Context.edit_last_response": {"tf": 3}, "tanjun.abc.Context.respond": {"tf": 3}, "tanjun.abc.MessageContext.respond": {"tf": 3}, "tanjun.abc.SlashContext.create_followup": {"tf": 3}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 3.1622776601683795}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 3}, "tanjun.context.MessageContext.edit_last_response": {"tf": 3}, "tanjun.context.MessageContext.respond": {"tf": 3}, "tanjun.context.SlashContext.create_followup": {"tf": 3}, "tanjun.context.SlashContext.create_initial_response": {"tf": 3.1622776601683795}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 3}, "tanjun.context.SlashContext.edit_last_response": {"tf": 3}, "tanjun.context.SlashContext.respond": {"tf": 3}}, "df": 14, "s": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 2.449489742783178}, "tanjun.abc.Context.edit_last_response": {"tf": 2.449489742783178}, "tanjun.abc.Context.respond": {"tf": 2.449489742783178}, "tanjun.abc.MessageContext.respond": {"tf": 2.449489742783178}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 2.6457513110645907}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 2.449489742783178}, "tanjun.context.MessageContext.edit_last_response": {"tf": 2.449489742783178}, "tanjun.context.MessageContext.respond": {"tf": 2.449489742783178}, "tanjun.context.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_initial_response": {"tf": 2.6457513110645907}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 2.449489742783178}, "tanjun.context.SlashContext.edit_last_response": {"tf": 2.449489742783178}, "tanjun.context.SlashContext.respond": {"tf": 2.449489742783178}}, "df": 14}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1.4142135623730951}, "tanjun.conversion.search_emoji_ids": {"tf": 1.4142135623730951}, "tanjun.conversion.to_emoji": {"tf": 1.4142135623730951}, "tanjun.conversion.ToEmoji": {"tf": 1.7320508075688772}}, "df": 11, "s": {"docs": {"tanjun.conversion.to_emoji": {"tf": 1}, "tanjun.conversion.ToEmoji": {"tf": 1}}, "df": 2}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.CommandCallbackSigT": {"tf": 1}, "tanjun.abc.CheckSigT": {"tf": 1}, "tanjun.abc.HookSigT": {"tf": 1}, "tanjun.abc.ErrorHookSigT": {"tf": 1}, "tanjun.abc.ListenerCallbackSigT": {"tf": 1}}, "df": 5}}}}}}}}}, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 2}, "tanjun.abc.Context.edit_last_response": {"tf": 2}, "tanjun.abc.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 2}, "tanjun.context.MessageContext.edit_last_response": {"tf": 2}, "tanjun.context.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 2}, "tanjun.context.SlashContext.edit_last_response": {"tf": 2}}, "df": 8, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 6}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1}}, "df": 8}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.with_parser": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.parsing.with_parser": {"tf": 1.4142135623730951}}, "df": 4, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"tanjun": {"tf": 2.6457513110645907}, "tanjun.Client.__init__": {"tf": 3.7416573867739413}, "tanjun.Client.from_gateway_bot": {"tf": 2.6457513110645907}, "tanjun.Client.from_rest_bot": {"tf": 2.449489742783178}, "tanjun.Client.cache": {"tf": 1}, "tanjun.Client.rest": {"tf": 1}, "tanjun.Client.server": {"tf": 1}, "tanjun.Client.shards": {"tf": 1}, "tanjun.Client.voice": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_hikari_trait_injectors": {"tf": 2}, "tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1.7320508075688772}, "tanjun.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.Client.on_message_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_event": {"tf": 1.4142135623730951}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.SlashCommand.build": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.build": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_member_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_channel_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_mentionable_slash_option": {"tf": 1.4142135623730951}, "tanjun.to_color": {"tf": 1}, "tanjun.to_colour": {"tf": 1}, "tanjun.to_snowflake": {"tf": 1}, "tanjun.inject_lc": {"tf": 2}, "tanjun.abc.Context.cache": {"tf": 1}, "tanjun.abc.Context.server": {"tf": 1}, "tanjun.abc.Context.rest": {"tf": 1}, "tanjun.abc.Context.shards": {"tf": 1}, "tanjun.abc.Context.voice": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 3.3166247903554}, "tanjun.abc.Context.fetch_guild": {"tf": 3}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.abc.Context.delete_initial_response": {"tf": 1}, "tanjun.abc.Context.delete_last_response": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 5.744562646538029}, "tanjun.abc.Context.edit_last_response": {"tf": 5.744562646538029}, "tanjun.abc.Context.fetch_initial_response": {"tf": 1}, "tanjun.abc.Context.fetch_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 5}, "tanjun.abc.ListenerCallbackSig": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 6.164414002968976}, "tanjun.abc.BaseSlashCommand.build": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.abc.SlashContext.expires_at": {"tf": 1}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 4.795831523312719}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 5.196152422706632}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1.7320508075688772}, "tanjun.abc.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 2.23606797749979}, "tanjun.abc.Client": {"tf": 1}, "tanjun.abc.Client.cache": {"tf": 1}, "tanjun.abc.Client.rest": {"tf": 1}, "tanjun.abc.Client.server": {"tf": 1}, "tanjun.abc.Client.shards": {"tf": 1}, "tanjun.abc.Client.voice": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1.7320508075688772}, "tanjun.clients.Client.__init__": {"tf": 3.7416573867739413}, "tanjun.clients.Client.from_gateway_bot": {"tf": 2.6457513110645907}, "tanjun.clients.Client.from_rest_bot": {"tf": 2.449489742783178}, "tanjun.clients.Client.cache": {"tf": 1}, "tanjun.clients.Client.rest": {"tf": 1}, "tanjun.clients.Client.server": {"tf": 1}, "tanjun.clients.Client.shards": {"tf": 1}, "tanjun.clients.Client.voice": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 2}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1.7320508075688772}, "tanjun.clients.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.clients.Client.on_message_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1.4142135623730951}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.commands.SlashCommand.build": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.build": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_member_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_channel_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.delete_initial_response": {"tf": 1}, "tanjun.context.MessageContext.delete_last_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 5.744562646538029}, "tanjun.context.MessageContext.edit_last_response": {"tf": 5.744562646538029}, "tanjun.context.MessageContext.fetch_initial_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 5}, "tanjun.context.SlashContext.expires_at": {"tf": 1}, "tanjun.context.SlashContext.defer": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 4.795831523312719}, "tanjun.context.SlashContext.create_initial_response": {"tf": 5.196152422706632}, "tanjun.context.SlashContext.delete_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 5.744562646538029}, "tanjun.context.SlashContext.edit_last_response": {"tf": 5.744562646538029}, "tanjun.context.SlashContext.fetch_initial_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 5}, "tanjun.context.SlashOption.resolve_value": {"tf": 1.7320508075688772}, "tanjun.context.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 2.23606797749979}, "tanjun.conversion.parse_snowflake": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}, "tanjun.conversion.to_channel": {"tf": 1}, "tanjun.conversion.to_color": {"tf": 1}, "tanjun.conversion.to_colour": {"tf": 1}, "tanjun.conversion.to_emoji": {"tf": 2.6457513110645907}, "tanjun.conversion.to_guild": {"tf": 1}, "tanjun.conversion.to_invite": {"tf": 1}, "tanjun.conversion.to_invite_with_metadata": {"tf": 1}, "tanjun.conversion.to_member": {"tf": 1}, "tanjun.conversion.to_presence": {"tf": 1}, "tanjun.conversion.to_role": {"tf": 1}, "tanjun.conversion.to_snowflake": {"tf": 1}, "tanjun.conversion.to_user": {"tf": 1}, "tanjun.conversion.to_voice_state": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji": {"tf": 2.449489742783178}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.dependencies.AsyncCache": {"tf": 1.4142135623730951}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1.4142135623730951}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.CacheIterator": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1.4142135623730951}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 2}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 2}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1}, "tanjun.utilities.ALL_PERMISSIONS": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1.4142135623730951}, "tanjun.utilities.calculate_permissions": {"tf": 2}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1.4142135623730951}, "tanjun.utilities.fetch_permissions": {"tf": 1.4142135623730951}}, "df": 193, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}}, "df": 5}}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {"tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}}, "df": 20}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.CommandCallbackSig": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.HookSig": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.abc.ListenerCallbackSig": {"tf": 1}, "tanjun.abc.MaybeAwaitableT": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.commands.ConverterSig": {"tf": 1}, "tanjun.components.OnCallbackSig": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}, "tanjun.injecting.UndefinedOr": {"tf": 1}, "tanjun.parsing.ConverterSig": {"tf": 1}, "tanjun.parsing.ParseableProtoT": {"tf": 1}}, "df": 14}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.inject": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1.4142135623730951}}, "df": 43}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"tanjun": {"tf": 2}}, "df": 1}}, "p": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.slash_command_group": {"tf": 3.1622776601683795}, "tanjun.abc.SlashOption": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 3.1622776601683795}, "tanjun.context.SlashOption": {"tf": 1}}, "df": 10, "s": {"docs": {"tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 9}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.with_dm_check": {"tf": 1.4142135623730951}, "tanjun.with_guild_check": {"tf": 1.4142135623730951}, "tanjun.with_nsfw_check": {"tf": 1.4142135623730951}, "tanjun.with_sfw_check": {"tf": 1.4142135623730951}, "tanjun.with_owner_check": {"tf": 1.4142135623730951}, "tanjun.with_author_permission_check": {"tf": 1.4142135623730951}, "tanjun.with_own_permission_check": {"tf": 1.4142135623730951}, "tanjun.checks.any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.CallbackReturnT": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_dm_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_guild_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_nsfw_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_sfw_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_owner_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_author_permission_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_own_permission_check": {"tf": 1.4142135623730951}, "tanjun.checks.DmCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.GuildCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.SfwCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1.4142135623730951}}, "df": 25, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}}, "df": 30}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 16}}}, "e": {"docs": {"tanjun.Client.on_message_create_event": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.clients.Client.on_message_create_event": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 34, "s": {"docs": {"tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}}, "df": 8}, "r": {"docs": {"tanjun.Hooks": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}}, "df": 2, "s": {"docs": {"tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}}, "df": 5}}, "d": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}}, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}}, "df": 8}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}}, "df": 4}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.Client": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.Hooks.__init__": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.copy": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1.7320508075688772}, "tanjun.Hooks.set_on_error": {"tf": 1.7320508075688772}, "tanjun.Hooks.with_on_error": {"tf": 1.7320508075688772}, "tanjun.Hooks.add_on_parser_error": {"tf": 1.7320508075688772}, "tanjun.Hooks.set_on_parser_error": {"tf": 1.7320508075688772}, "tanjun.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_post_execution": {"tf": 1.7320508075688772}, "tanjun.Hooks.set_post_execution": {"tf": 1.7320508075688772}, "tanjun.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_pre_execution": {"tf": 1.7320508075688772}, "tanjun.Hooks.set_pre_execution": {"tf": 1.7320508075688772}, "tanjun.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_on_success": {"tf": 1.7320508075688772}, "tanjun.Hooks.set_on_success": {"tf": 1.7320508075688772}, "tanjun.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_on_error": {"tf": 1.7320508075688772}, "tanjun.abc.Hooks.with_on_error": {"tf": 1.7320508075688772}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1.7320508075688772}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1.7320508075688772}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1.7320508075688772}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_on_success": {"tf": 1.7320508075688772}, "tanjun.abc.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.abc.HookSig": {"tf": 1.4142135623730951}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.abc.SlashContext.command": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.hooks": {"tf": 1}, "tanjun.hooks.Hooks.__init__": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.copy": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1.4142135623730951}}, "df": 73, "s": {"docs": {"tanjun.Client": {"tf": 1}, "tanjun.Client.hooks": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 2}, "tanjun.Client.set_slash_hooks": {"tf": 2}, "tanjun.Client.set_message_hooks": {"tf": 2}, "tanjun.Component": {"tf": 1}, "tanjun.Component.__init__": {"tf": 2.449489742783178}, "tanjun.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.Hooks": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_to_command": {"tf": 2}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_error": {"tf": 1.7320508075688772}, "tanjun.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1.7320508075688772}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.abc.AnyHooks": {"tf": 1}, "tanjun.abc.MessageHooks": {"tf": 1}, "tanjun.abc.SlashHooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1.7320508075688772}, "tanjun.abc.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.abc.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 2}, "tanjun.clients.Client.set_slash_hooks": {"tf": 2}, "tanjun.clients.Client.set_message_hooks": {"tf": 2}, "tanjun.commands.PartialCommand.hooks": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1.7320508075688772}, "tanjun.components.Component": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 2.449489742783178}, "tanjun.components.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.components.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.hooks.AnyHooks": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_to_command": {"tf": 2}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.hooks.MessageHooks": {"tf": 1}, "tanjun.hooks.SlashHooks": {"tf": 1}}, "df": 61, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.HookSigT": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}}, "df": 21, "t": {"docs": {"tanjun.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1.4142135623730951}}, "df": 12}}}, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.hooks.AnyHooks": {"tf": 1}, "tanjun.hooks.MessageHooks": {"tf": 1}, "tanjun.hooks.SlashHooks": {"tf": 1}}, "df": 3}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}}, "df": 9}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.LazyConstant": {"tf": 1}, "tanjun.dependencies.LazyConstant": {"tf": 1}, "tanjun.dependencies.data.LazyConstant": {"tf": 1}}, "df": 3, "s": {"docs": {"tanjun.injecting.CallbackDescriptor": {"tf": 1}, "tanjun.injecting.TypeDescriptor": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.set_human_only": {"tf": 1.7320508075688772}, "tanjun.abc.Context.is_human": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.is_human": {"tf": 1}, "tanjun.context.SlashContext.is_human": {"tf": 1}}, "df": 7}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.to_datetime": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1.4142135623730951}, "tanjun.conversion.to_datetime": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "t": {"docs": {"tanjun.cached_inject": {"tf": 1.4142135623730951}, "tanjun.inject_lc": {"tf": 1.4142135623730951}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.LazyConstant.set_value": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.inject": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1.4142135623730951}, "tanjun.dependencies.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1.4142135623730951}, "tanjun.dependencies.make_lc_resolver": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.cache_callback": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1.4142135623730951}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.cache_result": {"tf": 1.4142135623730951}, "tanjun.injecting.AbstractInjectionContext.get_cached_result": {"tf": 1.4142135623730951}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1.4142135623730951}, "tanjun.injecting.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.injecting.BasicInjectionContext.cache_result": {"tf": 1.4142135623730951}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"tf": 1.4142135623730951}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.copy": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.UndefinedOr": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1.4142135623730951}, "tanjun.injecting.Injected.__init__": {"tf": 1.4142135623730951}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1.4142135623730951}, "tanjun.injecting.InjectorClient.get_type_dependency": {"tf": 1.4142135623730951}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1.4142135623730951}, "tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1.4142135623730951}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}}, "df": 50, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"tanjun": {"tf": 3.4641016151377544}, "tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1.7320508075688772}, "tanjun.with_check": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.as_loader": {"tf": 2.23606797749979}, "tanjun.as_unloader": {"tf": 2.23606797749979}, "tanjun.Client": {"tf": 1.4142135623730951}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.checks": {"tf": 1}, "tanjun.Client.hooks": {"tf": 1.4142135623730951}, "tanjun.Client.slash_hooks": {"tf": 1}, "tanjun.Client.message_hooks": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 2.23606797749979}, "tanjun.Client.set_slash_ctx_maker": {"tf": 2.23606797749979}, "tanjun.Client.add_check": {"tf": 1.4142135623730951}, "tanjun.Client.remove_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1.7320508075688772}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1.7320508075688772}, "tanjun.Client.load_modules": {"tf": 1.7320508075688772}, "tanjun.Client.unload_modules": {"tf": 2}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1.7320508075688772}, "tanjun.slash_command_group": {"tf": 2.8284271247461903}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.MessageCommand.load_into_component": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.load_into_component": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.SlashCommandGroup.with_command": {"tf": 1.4142135623730951}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.Component": {"tf": 1}, "tanjun.Component.client": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.add_command": {"tf": 1}, "tanjun.Component.remove_command": {"tf": 1}, "tanjun.Component.with_command": {"tf": 2.8284271247461903}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.Component.add_schedule": {"tf": 1}, "tanjun.Component.remove_schedule": {"tf": 1}, "tanjun.Component.with_schedule": {"tf": 1.4142135623730951}, "tanjun.Component.make_loader": {"tf": 2}, "tanjun.cached_inject": {"tf": 2.6457513110645907}, "tanjun.inject_lc": {"tf": 3.3166247903554}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.CommandError.message": {"tf": 1}, "tanjun.ConversionError.__init__": {"tf": 1}, "tanjun.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.TanjunError": {"tf": 1}, "tanjun.Hooks": {"tf": 2.23606797749979}, "tanjun.Hooks.add_to_command": {"tf": 1.7320508075688772}, "tanjun.Hooks.add_on_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.set_on_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_error": {"tf": 1.7320508075688772}, "tanjun.Hooks.add_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.set_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_parser_error": {"tf": 2}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.as_self_injecting": {"tf": 1.7320508075688772}, "tanjun.inject": {"tf": 2.449489742783178}, "tanjun.ShlexParser.parse": {"tf": 1.7320508075688772}, "tanjun.with_argument": {"tf": 2.23606797749979}, "tanjun.with_greedy_argument": {"tf": 2.23606797749979}, "tanjun.with_multi_argument": {"tf": 2.23606797749979}, "tanjun.with_option": {"tf": 2.23606797749979}, "tanjun.with_multi_option": {"tf": 2.23606797749979}, "tanjun.with_parser": {"tf": 2}, "tanjun.as_interval": {"tf": 1}, "tanjun.abc": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1.4142135623730951}, "tanjun.abc.Context.client": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_on_error": {"tf": 1.7320508075688772}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 2}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.abc.ErrorHookSig": {"tf": 1.4142135623730951}, "tanjun.abc.Component": {"tf": 1.4142135623730951}, "tanjun.abc.Component.client": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.abc.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.abc.Client": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1.7320508075688772}, "tanjun.abc.Client.unload_modules": {"tf": 2}, "tanjun.checks": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1.7320508075688772}, "tanjun.checks.with_any_checks": {"tf": 1.7320508075688772}, "tanjun.checks.with_check": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 2.23606797749979}, "tanjun.clients.as_unloader": {"tf": 2.23606797749979}, "tanjun.clients.Client": {"tf": 1.4142135623730951}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.checks": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1.4142135623730951}, "tanjun.clients.Client.slash_hooks": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 2.23606797749979}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 2.23606797749979}, "tanjun.clients.Client.add_check": {"tf": 1.4142135623730951}, "tanjun.clients.Client.remove_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1.7320508075688772}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1.7320508075688772}, "tanjun.clients.Client.load_modules": {"tf": 1.7320508075688772}, "tanjun.clients.Client.unload_modules": {"tf": 2}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.clients.ClientCallbackNames": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.7320508075688772}, "tanjun.commands.slash_command_group": {"tf": 2.8284271247461903}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.MessageCommand.load_into_component": {"tf": 1}, "tanjun.commands.BaseSlashCommand.load_into_component": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.load_into_component": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.with_command": {"tf": 1.4142135623730951}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.components.Component": {"tf": 1}, "tanjun.components.Component.client": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.add_command": {"tf": 1}, "tanjun.components.Component.remove_command": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 2.8284271247461903}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.components.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_schedule": {"tf": 1}, "tanjun.components.Component.remove_schedule": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1.4142135623730951}, "tanjun.components.Component.make_loader": {"tf": 2}, "tanjun.components.AbstractComponentLoader.load_into_component": {"tf": 1}, "tanjun.context.MessageContext": {"tf": 1}, "tanjun.context.SlashContext.client": {"tf": 1}, "tanjun.dependencies": {"tf": 1}, "tanjun.dependencies.set_standard_dependencies": {"tf": 1.4142135623730951}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 2.6457513110645907}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 3.3166247903554}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1.4142135623730951}, "tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache": {"tf": 1.7320508075688772}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 2.6457513110645907}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 3.3166247903554}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1.4142135623730951}, "tanjun.errors": {"tf": 1}, "tanjun.errors.CommandError.message": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.errors.TanjunError": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 2.23606797749979}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 2}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.injecting": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1.4142135623730951}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1.4142135623730951}, "tanjun.injecting.as_self_injecting": {"tf": 1.7320508075688772}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.inject": {"tf": 2.449489742783178}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1.7320508075688772}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1.4142135623730951}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1.4142135623730951}, "tanjun.parsing.AbstractParser.parse": {"tf": 1.7320508075688772}, "tanjun.parsing.ShlexParser.parse": {"tf": 1.7320508075688772}, "tanjun.parsing.with_argument": {"tf": 2.23606797749979}, "tanjun.parsing.with_greedy_argument": {"tf": 2.23606797749979}, "tanjun.parsing.with_multi_argument": {"tf": 2.23606797749979}, "tanjun.parsing.with_option": {"tf": 2.23606797749979}, "tanjun.parsing.with_multi_option": {"tf": 2.23606797749979}, "tanjun.parsing.with_parser": {"tf": 2}, "tanjun.schedules": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.load_into_component": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}, "tanjun.utilities": {"tf": 1}, "tanjun.utilities.gather_checks": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1.4142135623730951}, "tanjun.utilities.fetch_permissions": {"tf": 1.4142135623730951}}, "df": 319, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.commands": {"tf": 1}, "tanjun.components": {"tf": 1}, "tanjun.hooks": {"tf": 1}, "tanjun.injecting.InjectorClient": {"tf": 1}}, "df": 6}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}}, "df": 7}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1.4142135623730951}, "tanjun.Component.with_on_close": {"tf": 1.4142135623730951}, "tanjun.Component.add_on_open": {"tf": 1.4142135623730951}, "tanjun.Component.with_on_open": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.abc.CommandCallbackSig": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_on_close": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_on_open": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_on_open": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}}, "df": 71, "s": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.Component.with_listener": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.as_interval": {"tf": 1}, "tanjun.abc.Component.with_listener": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.components.Component.with_listener": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.ConverterSig": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}}, "df": 68}, "n": {"docs": {"tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.checks": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.clients.Client.checks": {"tf": 1}, "tanjun.injecting.CallbackDescriptor": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.load_modules": {"tf": 1.7320508075688772}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1.4142135623730951}, "tanjun.BucketResource": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1.7320508075688772}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1.7320508075688772}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.dependencies.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.BucketResource": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}}, "df": 35, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1}}, "df": 20}}}, "s": {"docs": {"tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}}, "df": 5}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.dependencies.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1}}, "df": 4}}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1.4142135623730951}}, "df": 4}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"tanjun": {"tf": 1}, "tanjun.with_all_checks": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1}, "tanjun.Component.with_slash_command": {"tf": 1}, "tanjun.Component.with_message_command": {"tf": 1}, "tanjun.Component.with_listener": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.Component.with_schedule": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.with_multi_argument": {"tf": 1.7320508075688772}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.abc.Component.with_slash_command": {"tf": 1}, "tanjun.abc.Component.with_message_command": {"tf": 1}, "tanjun.abc.Component.with_listener": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1}, "tanjun.components.Component.with_slash_command": {"tf": 1}, "tanjun.components.Component.with_message_command": {"tf": 1}, "tanjun.components.Component.with_listener": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1.4142135623730951}}, "df": 73}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.open": {"tf": 1}}, "df": 13}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}}, "df": 4}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommandGroup": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommandGroup": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}}, "df": 5}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}}, "df": 2}}}}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 6}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}}, "df": 15}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}}, "df": 21}}}, "p": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.hooks": {"tf": 1.4142135623730951}, "tanjun.Client.slash_hooks": {"tf": 1}, "tanjun.Client.message_hooks": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1.4142135623730951}, "tanjun.clients.Client.slash_hooks": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}}, "df": 31}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}}, "df": 4}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.parsing.Parameter.is_greedy": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"tanjun": {"tf": 1.7320508075688772}, "tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.as_slash_command": {"tf": 2}, "tanjun.slash_command_group": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.__init__": {"tf": 2}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1.7320508075688772}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 2}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.checks.CallbackReturnT": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 2}, "tanjun.commands.slash_command_group": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.__init__": {"tf": 2}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1.7320508075688772}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.components.Component.make_loader": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 2}, "tanjun.context.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 2}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1.4142135623730951}}, "df": 105}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.with_owner_check": {"tf": 1}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.CommandError.__init__": {"tf": 1}, "tanjun.abc.Context.author": {"tf": 1}, "tanjun.abc.Context.channel_id": {"tf": 1}, "tanjun.abc.Context.is_human": {"tf": 1.4142135623730951}, "tanjun.abc.Context.triggering_name": {"tf": 1}, "tanjun.abc.ExecutableCommand.hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.message": {"tf": 1}, "tanjun.abc.MessageContext.shard": {"tf": 1}, "tanjun.abc.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.abc.MessageContext.triggering_name": {"tf": 1}, "tanjun.abc.SlashContext.member": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.commands.PartialCommand.hooks": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.author": {"tf": 1}, "tanjun.context.MessageContext.channel_id": {"tf": 1}, "tanjun.context.MessageContext.is_human": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.message": {"tf": 1}, "tanjun.context.MessageContext.triggering_name": {"tf": 1}, "tanjun.context.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.context.MessageContext.shard": {"tf": 1}, "tanjun.context.SlashContext.author": {"tf": 1}, "tanjun.context.SlashContext.channel_id": {"tf": 1}, "tanjun.context.SlashContext.is_human": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.triggering_name": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}}, "df": 30}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.MessageContext.content": {"tf": 1}, "tanjun.context.MessageContext.content": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_prefix": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.HaltExecution": {"tf": 1}, "tanjun.inject": {"tf": 1.4142135623730951}, "tanjun.errors.HaltExecution": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1.4142135623730951}, "tanjun.injecting.Injected.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}}, "df": 2, "s": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 2}, "tanjun.Client.from_rest_bot": {"tf": 2}, "tanjun.Client.set_hikari_trait_injectors": {"tf": 1.4142135623730951}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 2}, "tanjun.clients.Client.from_rest_bot": {"tf": 2}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1.4142135623730951}}, "df": 8}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}}, "df": 6}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command_id": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}}, "df": 17}}}}}, "y": {"docs": {"tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.CommandError.message": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.errors.CommandError.message": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1}}, "df": 27, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 10}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"tanjun": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}}, "df": 9}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}}, "df": 18}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.abc.Context.get_channel": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun": {"tf": 1}, "tanjun.with_all_checks": {"tf": 1.7320508075688772}, "tanjun.with_any_checks": {"tf": 1.7320508075688772}, "tanjun.with_dm_check": {"tf": 1.4142135623730951}, "tanjun.with_guild_check": {"tf": 1.4142135623730951}, "tanjun.with_nsfw_check": {"tf": 1.4142135623730951}, "tanjun.with_sfw_check": {"tf": 1.4142135623730951}, "tanjun.with_owner_check": {"tf": 1.4142135623730951}, "tanjun.with_author_permission_check": {"tf": 1.4142135623730951}, "tanjun.with_own_permission_check": {"tf": 1.4142135623730951}, "tanjun.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.Client.from_rest_bot": {"tf": 1.7320508075688772}, "tanjun.Client.hooks": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_command": {"tf": 1.7320508075688772}, "tanjun.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.Client.get_component_by_name": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.dispatch_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.get_client_callbacks": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommand.copy": {"tf": 1}, "tanjun.MessageCommand.set_parent": {"tf": 1}, "tanjun.MessageCommandGroup.copy": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_int_option": {"tf": 2.23606797749979}, "tanjun.SlashCommand.add_float_option": {"tf": 2.23606797749979}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.Component.__init__": {"tf": 2}, "tanjun.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.to_snowflake": {"tf": 1}, "tanjun.cached_inject": {"tf": 1}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.ParserError.__init__": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.inject": {"tf": 2}, "tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_option": {"tf": 1.7320508075688772}, "tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.with_argument": {"tf": 1.4142135623730951}, "tanjun.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.with_option": {"tf": 1.7320508075688772}, "tanjun.with_multi_option": {"tf": 1.7320508075688772}, "tanjun.as_interval": {"tf": 1.4142135623730951}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1}, "tanjun.abc.MessageCommand.set_parent": {"tf": 1}, "tanjun.abc.MessageCommand.copy": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.set_command": {"tf": 1}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_command": {"tf": 1.7320508075688772}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.abc.Client.get_component_by_name": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 1.7320508075688772}, "tanjun.checks.any_checks": {"tf": 1.7320508075688772}, "tanjun.checks.with_all_checks": {"tf": 1.7320508075688772}, "tanjun.checks.with_any_checks": {"tf": 1.7320508075688772}, "tanjun.checks.with_dm_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_guild_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_nsfw_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_sfw_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_owner_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_author_permission_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_own_permission_check": {"tf": 1.4142135623730951}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_rest_bot": {"tf": 1.7320508075688772}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_command": {"tf": 1.7320508075688772}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.get_component_by_name": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommand.copy": {"tf": 1}, "tanjun.commands.MessageCommand.set_parent": {"tf": 1}, "tanjun.commands.MessageCommandGroup.copy": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 2.23606797749979}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 2.23606797749979}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 2}, "tanjun.components.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.context.SlashContext.set_command": {"tf": 1}, "tanjun.context.SlashContext.defer": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.conversion.parse_snowflake": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}, "tanjun.conversion.search_snowflakes": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1.4142135623730951}, "tanjun.errors.ParserError.__init__": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1.4142135623730951}, "tanjun.injecting.inject": {"tf": 2}, "tanjun.injecting.Injected.__init__": {"tf": 2}, "tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.Option.__init__": {"tf": 1.7320508075688772}, "tanjun.parsing.ParseableProto.set_parser": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1.7320508075688772}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_option": {"tf": 1.7320508075688772}, "tanjun.parsing.with_multi_option": {"tf": 1.7320508075688772}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}, "tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 248}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.utilities.CastedView": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.message_accepts": {"tf": 1}, "tanjun.Client.set_hikari_trait_injectors": {"tf": 1.4142135623730951}, "tanjun.Client.set_message_accepts": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.add_listener": {"tf": 1.7320508075688772}, "tanjun.Client.remove_listener": {"tf": 1.7320508075688772}, "tanjun.Client.with_listener": {"tf": 1.7320508075688772}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1.4142135623730951}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.Component.with_listener": {"tf": 1}, "tanjun.inject_lc": {"tf": 2.6457513110645907}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.LazyConstant": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1}, "tanjun.inject": {"tf": 3.4641016151377544}, "tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.abc.CommandCallbackSig": {"tf": 1.4142135623730951}, "tanjun.abc.CheckSig": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.HookSig": {"tf": 1.4142135623730951}, "tanjun.abc.ErrorHookSig": {"tf": 1.4142135623730951}, "tanjun.abc.ListenerCallbackSig": {"tf": 1.4142135623730951}, "tanjun.abc.MaybeAwaitableT": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashOption.type": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1.7320508075688772}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.abc.Component.with_listener": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1.7320508075688772}, "tanjun.abc.Client.remove_listener": {"tf": 1.7320508075688772}, "tanjun.abc.Client.with_listener": {"tf": 1.7320508075688772}, "tanjun.checks.CallbackReturnT": {"tf": 1.4142135623730951}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.message_accepts": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_message_accepts": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1.7320508075688772}, "tanjun.clients.Client.remove_listener": {"tf": 1.7320508075688772}, "tanjun.clients.Client.with_listener": {"tf": 1.7320508075688772}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1.4142135623730951}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.commands.ConverterSig": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.components.Component.with_listener": {"tf": 1}, "tanjun.components.OnCallbackSig": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashOption.type": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1.7320508075688772}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.dependencies.LazyConstant": {"tf": 1.4142135623730951}, "tanjun.dependencies.inject_lc": {"tf": 2.6457513110645907}, "tanjun.dependencies.make_lc_resolver": {"tf": 2.23606797749979}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.data.LazyConstant": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.inject_lc": {"tf": 2.6457513110645907}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 2.23606797749979}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1.4142135623730951}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 2.8284271247461903}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 2.8284271247461903}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}, "tanjun.injecting.UndefinedOr": {"tf": 1}, "tanjun.injecting.inject": {"tf": 3.4641016151377544}, "tanjun.injecting.Injected": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 2.8284271247461903}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 2.23606797749979}, "tanjun.injecting.InjectorClient.get_type_dependency": {"tf": 2.23606797749979}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 2.23606797749979}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1}, "tanjun.injecting.TypeDescriptor": {"tf": 1.4142135623730951}, "tanjun.injecting.TypeDescriptor.__init__": {"tf": 2}, "tanjun.injecting.TypeDescriptor.type": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1.4142135623730951}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.ConverterSig": {"tf": 1}, "tanjun.parsing.Parameter.convert": {"tf": 1}, "tanjun.parsing.ParseableProtoT": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.parsing.UndefinedDefaultT": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1.7320508075688772}}, "df": 171, "s": {"docs": {"tanjun.Client.listeners": {"tf": 1}, "tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.7320508075688772}, "tanjun.Component.listeners": {"tf": 1}, "tanjun.BucketResource": {"tf": 1}, "tanjun.inject": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.value": {"tf": 1}, "tanjun.abc.Component.listeners": {"tf": 1}, "tanjun.abc.Client.listeners": {"tf": 1}, "tanjun.clients.Client.listeners": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.7320508075688772}, "tanjun.components.Component.listeners": {"tf": 1}, "tanjun.context.ResponseTypeT": {"tf": 1}, "tanjun.context.SlashOption.value": {"tf": 1}, "tanjun.dependencies.BucketResource": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1.4142135623730951}, "tanjun.injecting.Injected.__init__": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1}}, "df": 23}, "[": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.remove_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Component.add_listener": {"tf": 1}, "tanjun.Component.remove_listener": {"tf": 1}, "tanjun.Component.with_listener": {"tf": 1}, "tanjun.abc.Component.add_listener": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Component.with_listener": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.remove_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.components.Component.add_listener": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}, "tanjun.components.Component.with_listener": {"tf": 1}}, "df": 18}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}}, "df": 2}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.context.SlashOption.resolve_value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}}, "df": 26}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}}, "df": 3, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "s": {"docs": {"tanjun.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.set_auto_defer_after": {"tf": 1.7320508075688772}, "tanjun.as_slash_command": {"tf": 2.449489742783178}, "tanjun.cached_inject": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.expires_at": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1.7320508075688772}, "tanjun.commands.as_slash_command": {"tf": 2.449489742783178}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.expires_at": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}}, "df": 20, "s": {"docs": {"tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.as_interval": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.schedules.AbstractSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.iteration_count": {"tf": 1}}, "df": 15, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.to_datetime": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1}, "tanjun.conversion.to_datetime": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.as_interval": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1.4142135623730951}}, "df": 30}}}}}, "r": {"docs": {"tanjun.context.SlashContext.start_defer_timer": {"tf": 1}}, "df": 1}, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.conversion.from_datetime": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}}, "df": 17}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}}, "df": 5, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.MessageContext.respond": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"tanjun": {"tf": 5.0990195135927845}, "tanjun.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.load_modules": {"tf": 1.4142135623730951}, "tanjun.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.as_slash_command": {"tf": 2.449489742783178}, "tanjun.slash_command_group": {"tf": 4}, "tanjun.with_str_slash_option": {"tf": 2.8284271247461903}, "tanjun.with_int_slash_option": {"tf": 2.8284271247461903}, "tanjun.with_float_slash_option": {"tf": 2.8284271247461903}, "tanjun.with_bool_slash_option": {"tf": 2.8284271247461903}, "tanjun.with_role_slash_option": {"tf": 2.8284271247461903}, "tanjun.with_user_slash_option": {"tf": 2.8284271247461903}, "tanjun.with_member_slash_option": {"tf": 2.8284271247461903}, "tanjun.with_channel_slash_option": {"tf": 2.8284271247461903}, "tanjun.with_mentionable_slash_option": {"tf": 2.8284271247461903}, "tanjun.Component.with_command": {"tf": 4}, "tanjun.Component.with_schedule": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 2.449489742783178}, "tanjun.InMemoryCooldownManager": {"tf": 2.449489742783178}, "tanjun.Hooks.add_to_command": {"tf": 2}, "tanjun.Hooks.with_on_error": {"tf": 2}, "tanjun.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.inject": {"tf": 2}, "tanjun.with_argument": {"tf": 2}, "tanjun.with_greedy_argument": {"tf": 2}, "tanjun.with_multi_argument": {"tf": 2}, "tanjun.with_option": {"tf": 2}, "tanjun.with_multi_option": {"tf": 2}, "tanjun.with_parser": {"tf": 2}, "tanjun.abc.Hooks.with_on_error": {"tf": 2}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.abc.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.load_modules": {"tf": 1.4142135623730951}, "tanjun.abc.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.checks.CallbackReturnT": {"tf": 2}, "tanjun.clients.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.load_modules": {"tf": 1.4142135623730951}, "tanjun.clients.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 2.449489742783178}, "tanjun.commands.slash_command_group": {"tf": 4}, "tanjun.commands.with_str_slash_option": {"tf": 2.8284271247461903}, "tanjun.commands.with_int_slash_option": {"tf": 2.8284271247461903}, "tanjun.commands.with_float_slash_option": {"tf": 2.8284271247461903}, "tanjun.commands.with_bool_slash_option": {"tf": 2.8284271247461903}, "tanjun.commands.with_role_slash_option": {"tf": 2.8284271247461903}, "tanjun.commands.with_user_slash_option": {"tf": 2.8284271247461903}, "tanjun.commands.with_member_slash_option": {"tf": 2.8284271247461903}, "tanjun.commands.with_channel_slash_option": {"tf": 2.8284271247461903}, "tanjun.commands.with_mentionable_slash_option": {"tf": 2.8284271247461903}, "tanjun.components.Component.with_command": {"tf": 4}, "tanjun.components.Component.with_schedule": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 2.449489742783178}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 2.449489742783178}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 2.449489742783178}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 2.449489742783178}, "tanjun.hooks.Hooks.add_to_command": {"tf": 2}, "tanjun.hooks.Hooks.with_on_error": {"tf": 2}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.injecting.inject": {"tf": 2}, "tanjun.parsing.with_argument": {"tf": 2}, "tanjun.parsing.with_greedy_argument": {"tf": 2}, "tanjun.parsing.with_multi_argument": {"tf": 2}, "tanjun.parsing.with_option": {"tf": 2}, "tanjun.parsing.with_multi_option": {"tf": 2}, "tanjun.parsing.with_parser": {"tf": 2}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 2}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 2}}, "df": 76}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.Client.open": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.LazyConstant.callback": {"tf": 1}, "tanjun.abc.Context.has_responded": {"tf": 1}, "tanjun.abc.Context.delete_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 2.449489742783178}, "tanjun.abc.Context.fetch_initial_response": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.has_been_deferred": {"tf": 2}, "tanjun.abc.SlashContext.defer": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.MessageContext.has_responded": {"tf": 1}, "tanjun.context.MessageContext.delete_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 2.449489742783178}, "tanjun.context.MessageContext.fetch_initial_response": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.has_been_deferred": {"tf": 2}, "tanjun.context.SlashContext.has_responded": {"tf": 1}, "tanjun.context.SlashContext.get_response_future": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.defer": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.delete_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 2.449489742783178}, "tanjun.context.SlashContext.fetch_initial_response": {"tf": 1}, "tanjun.dependencies.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.callback": {"tf": 1}}, "df": 36, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.CommandError.__init__": {"tf": 1}, "tanjun.ConversionError.__init__": {"tf": 1}, "tanjun.MissingDependencyError.__init__": {"tf": 1}, "tanjun.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.ParserError.__init__": {"tf": 1}, "tanjun.Hooks.__init__": {"tf": 1}, "tanjun.ShlexParser.__init__": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.context.MessageContext.__init__": {"tf": 1}, "tanjun.context.SlashContext.__init__": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1}, "tanjun.errors.MissingDependencyError.__init__": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.errors.ParserError.__init__": {"tf": 1}, "tanjun.hooks.Hooks.__init__": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.__init__": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor.__init__": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.Parameter.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}}, "df": 54, "d": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client.cache": {"tf": 1}, "tanjun.Client.events": {"tf": 1}, "tanjun.Client.rest": {"tf": 1}, "tanjun.Client.shards": {"tf": 1}, "tanjun.Client.voice": {"tf": 1}, "tanjun.abc.Context.cache": {"tf": 1}, "tanjun.abc.Context.events": {"tf": 1}, "tanjun.abc.Context.rest": {"tf": 1}, "tanjun.abc.Context.shards": {"tf": 1}, "tanjun.abc.Context.voice": {"tf": 1}, "tanjun.abc.Client.cache": {"tf": 1}, "tanjun.abc.Client.events": {"tf": 1}, "tanjun.abc.Client.rest": {"tf": 1}, "tanjun.abc.Client.shards": {"tf": 1}, "tanjun.abc.Client.voice": {"tf": 1}, "tanjun.clients.Client.cache": {"tf": 1}, "tanjun.clients.Client.events": {"tf": 1}, "tanjun.clients.Client.rest": {"tf": 1}, "tanjun.clients.Client.shards": {"tf": 1}, "tanjun.clients.Client.voice": {"tf": 1}}, "df": 21}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTING": {"tf": 1}}, "df": 6}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.as_loader": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}}, "df": 9, "d": {"docs": {"tanjun.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {"tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 2.449489742783178}, "tanjun.to_snowflake": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.as_self_injecting": {"tf": 2.23606797749979}, "tanjun.with_argument": {"tf": 1.4142135623730951}, "tanjun.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.with_option": {"tf": 1.4142135623730951}, "tanjun.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.with_parser": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 2.449489742783178}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.defer": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.conversion.parse_snowflake": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_channel_id": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_emoji_id": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_role_id": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_user_id": {"tf": 1.4142135623730951}, "tanjun.conversion.search_snowflakes": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}, "tanjun.dependencies.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 2.23606797749979}, "tanjun.parsing.with_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_parser": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}}, "df": 62, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.Client.__init__": {"tf": 2.23606797749979}, "tanjun.Client.hooks": {"tf": 1}, "tanjun.Client.slash_hooks": {"tf": 1}, "tanjun.Client.server": {"tf": 1}, "tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1.4142135623730951}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.Client.on_interaction_create_event": {"tf": 1.4142135623730951}, "tanjun.Client.on_interaction_create_request": {"tf": 1.4142135623730951}, "tanjun.abc.Context.server": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.interaction": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Client.server": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 2.23606797749979}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.clients.Client.slash_hooks": {"tf": 1}, "tanjun.clients.Client.server": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1.4142135623730951}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.interaction": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.7320508075688772}}, "df": 29, "s": {"docs": {"tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.context.ResponseTypeT": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.on_interaction_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1}}, "df": 2}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_channel": {"tf": 1}}, "df": 8}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_member_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_mentionable_slash_option": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_member_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}}, "df": 16}}}}}}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}}, "df": 2}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.Component.with_schedule": {"tf": 1.4142135623730951}, "tanjun.as_interval": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1.4142135623730951}, "tanjun.schedules": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1.7320508075688772}, "tanjun.schedules.IntervalSchedule.interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1.7320508075688772}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1.7320508075688772}}, "df": 10, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.as_interval": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}}, "df": 4}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.LazyConstant.reset": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.LazyConstant.reset": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.reset": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}}, "df": 14}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.ClientLoader": {"tf": 1}, "tanjun.abc.Context": {"tf": 1}, "tanjun.abc.Hooks": {"tf": 1}, "tanjun.abc.MessageCommand": {"tf": 1}, "tanjun.abc.MessageCommandGroup": {"tf": 1}, "tanjun.abc.MessageContext": {"tf": 1}, "tanjun.abc.SlashCommandGroup": {"tf": 1}, "tanjun.abc.SlashContext": {"tf": 1}, "tanjun.abc.SlashOption": {"tf": 1}, "tanjun.abc.Component": {"tf": 1}, "tanjun.abc.Client": {"tf": 1}, "tanjun.components.AbstractComponentLoader": {"tf": 1}, "tanjun.context.SlashOption": {"tf": 1}, "tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.CacheIterator": {"tf": 1}, "tanjun.dependencies.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager": {"tf": 1}, "tanjun.dependencies.AbstractOwners": {"tf": 1}, "tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners": {"tf": 1}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext": {"tf": 1}, "tanjun.parsing.AbstractParser": {"tf": 1}, "tanjun.parsing.ParseableProto": {"tf": 1}, "tanjun.schedules": {"tf": 1}}, "df": 36, "s": {"docs": {"tanjun.abc": {"tf": 1}, "tanjun.dependencies": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.Context.created_at": {"tf": 1}, "tanjun.context.MessageContext.created_at": {"tf": 1}, "tanjun.context.SlashContext.created_at": {"tf": 1}}, "df": 3}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.conversion.ToChannel.async_caches": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.async_caches": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.async_caches": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.async_caches": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}}, "df": 30}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}}, "df": 2}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"tanjun": {"tf": 1.4142135623730951}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTING": {"tf": 1}}, "df": 6}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.set_global_commands": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients.Client.set_global_commands": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}}, "df": 43}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.cache": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 1.4142135623730951}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1.4142135623730951}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.add_component": {"tf": 1}, "tanjun.Client.get_component_by_name": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.remove_listener": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.remove_prefix": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.MessageCommand.set_parent": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.abc.ClientLoader.load": {"tf": 1}, "tanjun.abc.ClientLoader.unload": {"tf": 1}, "tanjun.abc.CommandCallbackSig": {"tf": 1.4142135623730951}, "tanjun.abc.Context.cache": {"tf": 1}, "tanjun.abc.MessageCommand.set_parent": {"tf": 1}, "tanjun.abc.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.Client.cache": {"tf": 1}, "tanjun.abc.Client.add_component": {"tf": 1}, "tanjun.abc.Client.get_component_by_name": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.remove_listener": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.cache": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1.4142135623730951}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.get_component_by_name": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.MessageCommand.set_parent": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.conversion.ToChannel": {"tf": 1}, "tanjun.conversion.ToEmoji": {"tf": 1}, "tanjun.conversion.ToGuild": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata": {"tf": 1}, "tanjun.conversion.ToMember": {"tf": 1}, "tanjun.conversion.ToPresence": {"tf": 1}, "tanjun.conversion.ToRole": {"tf": 1}, "tanjun.conversion.ToUser": {"tf": 1}, "tanjun.conversion.ToVoiceState": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.ConverterSig": {"tf": 1}, "tanjun.parsing.ParseableProto.set_parser": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}}, "df": 104, "s": {"docs": {"tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}}, "df": 5}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.get_client_callbacks": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}}, "df": 12}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}}, "df": 2}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.Client": {"tf": 1}, "tanjun.Client.prefix_getter": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.to_datetime": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.prefix_getter": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1}, "tanjun.conversion.to_datetime": {"tf": 1}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.CacheIterator": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}}, "df": 46}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 12}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}}, "df": 6}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.as_unloader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1.4142135623730951}, "tanjun.abc.Context.fetch_guild": {"tf": 1.7320508075688772}, "tanjun.abc.Context.get_channel": {"tf": 1.4142135623730951}, "tanjun.abc.Context.get_guild": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.command": {"tf": 1}, "tanjun.abc.SlashContext.command": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}}, "df": 10}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.Context.delete_initial_response": {"tf": 1}, "tanjun.abc.Context.delete_last_response": {"tf": 1}, "tanjun.context.MessageContext.delete_initial_response": {"tf": 1}, "tanjun.context.MessageContext.delete_last_response": {"tf": 1}, "tanjun.context.SlashContext.delete_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_last_response": {"tf": 1}}, "df": 6}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}}, "df": 26, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.conversion.to_invite_with_metadata": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata": {"tf": 1}}, "df": 2, "s": {"docs": {"tanjun.conversion.to_invite": {"tf": 1}, "tanjun.conversion.to_invite_with_metadata": {"tf": 1}, "tanjun.conversion.ToInvite": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata": {"tf": 1}}, "df": 4}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"tanjun.conversion.to_invite": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.conversion.ToInviteWithMetadata": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.cached_inject": {"tf": 1.7320508075688772}, "tanjun.inject_lc": {"tf": 1.7320508075688772}, "tanjun.LazyConstant": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1}, "tanjun.inject": {"tf": 2}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1.7320508075688772}, "tanjun.dependencies.LazyConstant": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1.7320508075688772}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1.7320508075688772}, "tanjun.dependencies.data.LazyConstant": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1.7320508075688772}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.injecting.inject": {"tf": 2}, "tanjun.injecting.injected": {"tf": 1}, "tanjun.injecting.Injected": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1}}, "df": 20, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client": {"tf": 1}, "tanjun.Client.checks": {"tf": 1}, "tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.Component": {"tf": 1.4142135623730951}, "tanjun.Component.needs_injector": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1}, "tanjun.inject": {"tf": 1.4142135623730951}, "tanjun.as_interval": {"tf": 1}, "tanjun.abc.HookSig": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.checks": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.components.Component": {"tf": 1.4142135623730951}, "tanjun.components.Component.needs_injector": {"tf": 1}, "tanjun.components.OnCallbackSig": {"tf": 1}, "tanjun.context.MessageContext.__init__": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.injecting": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1.4142135623730951}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.injection_client": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.__init__": {"tf": 1.4142135623730951}, "tanjun.injecting.BasicInjectionContext.injection_client": {"tf": 1}, "tanjun.injecting.CallbackDescriptor": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1.4142135623730951}, "tanjun.injecting.UNDEFINED": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1.4142135623730951}, "tanjun.injecting.Injected.__init__": {"tf": 1.4142135623730951}, "tanjun.injecting.InjectorClient": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor": {"tf": 1}, "tanjun.injecting.TypeDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1.4142135623730951}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}, "tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}}, "df": 68, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.inject": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}}, "df": 6}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client": {"tf": 1}, "tanjun.cached_inject": {"tf": 1.4142135623730951}, "tanjun.inject_lc": {"tf": 1.4142135623730951}, "tanjun.clients.Client": {"tf": 1}, "tanjun.dependencies.set_standard_dependencies": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.inject_lc": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.inject_lc": {"tf": 1.4142135623730951}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1.7320508075688772}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1.4142135623730951}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}, "tanjun.utilities.gather_checks": {"tf": 1}}, "df": 14}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.inject_lc": {"tf": 1.4142135623730951}, "tanjun.as_self_injecting": {"tf": 1}, "tanjun.ShlexParser.needs_injector": {"tf": 1}, "tanjun.dependencies.set_standard_dependencies": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1.4142135623730951}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}, "tanjun.injecting.InjectorClient.__init__": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}, "tanjun.parsing.Parameter.needs_injector": {"tf": 1}, "tanjun.parsing.ShlexParser.needs_injector": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}}, "df": 17, "s": {"docs": {"tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}}, "df": 7}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.as_self_injecting": {"tf": 1}, "tanjun.context.MessageContext.__init__": {"tf": 1}, "tanjun.context.SlashContext.__init__": {"tf": 1}, "tanjun.dependencies.set_standard_dependencies": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.__init__": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}}, "df": 9}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.cached_inject": {"tf": 1}, "tanjun.inject_lc": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.LazyConstant": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1}, "tanjun.inject": {"tf": 1.7320508075688772}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.LazyConstant": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.data.LazyConstant": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.injecting.AbstractDescriptor": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1.7320508075688772}, "tanjun.injecting.Injected": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1.4142135623730951}, "tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1.4142135623730951}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor": {"tf": 1}, "tanjun.injecting.TypeDescriptor.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor.type": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}}, "df": 58}}, "(": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "=": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}}, "df": 3}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.utilities.gather_checks": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.utilities.gather_checks": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.MessageCommandGroup.commands": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1.7320508075688772}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageCommandGroup.commands": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.commands.MessageCommandGroup.commands": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1.7320508075688772}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.conversion.ToChannel.__init__": {"tf": 1.4142135623730951}}, "df": 20, "s": {"docs": {"tanjun.Client": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}}, "df": 22}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}}, "df": 8}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.4142135623730951}}, "df": 4, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}}, "df": 22}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Component.with_command": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1}}, "df": 2}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"tanjun.schedules.AbstractSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.IntervalSchedule.iteration_count": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.MessageCommand.callback": {"tf": 1}, "tanjun.abc.MessageCommand.callback": {"tf": 1}, "tanjun.commands.MessageCommand.callback": {"tf": 1}}, "df": 3}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Component.execute_message": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1.4142135623730951}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.injecting.UNDEFINED": {"tf": 1}, "tanjun.injecting.UndefinedOr": {"tf": 1}}, "df": 7, "s": {"docs": {"tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.dependencies.EntryNotFound": {"tf": 1}, "tanjun.dependencies.async_cache.EntryNotFound": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}}, "df": 11}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.parsing.UndefinedDefaultT": {"tf": 1}}, "df": 4}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.to_bool": {"tf": 1}, "tanjun.to_color": {"tf": 1}, "tanjun.to_colour": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.conversion.to_bool": {"tf": 1}, "tanjun.conversion.to_channel": {"tf": 1}, "tanjun.conversion.to_color": {"tf": 1}, "tanjun.conversion.to_colour": {"tf": 1}, "tanjun.conversion.to_emoji": {"tf": 1}, "tanjun.conversion.to_guild": {"tf": 1}, "tanjun.conversion.to_invite": {"tf": 1}, "tanjun.conversion.to_invite_with_metadata": {"tf": 1}, "tanjun.conversion.to_member": {"tf": 1}, "tanjun.conversion.to_presence": {"tf": 1}, "tanjun.conversion.to_role": {"tf": 1}, "tanjun.conversion.to_snowflake": {"tf": 1.4142135623730951}, "tanjun.conversion.to_user": {"tf": 1}, "tanjun.conversion.to_voice_state": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}}, "df": 20, "e": {"docs": {"tanjun.conversion.to_emoji": {"tf": 1}, "tanjun.conversion.ToEmoji": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.as_self_injecting": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}}, "df": 2}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1}}, "df": 2}}, "s": {"docs": {"tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.dependencies.CacheMissError": {"tf": 1}, "tanjun.dependencies.async_cache.CacheMissError": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.utilities.CastedView": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"tanjun": {"tf": 1}, "tanjun.Component.add_schedule": {"tf": 1}, "tanjun.Component.remove_schedule": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.components.Component.add_schedule": {"tf": 1}, "tanjun.components.Component.remove_schedule": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}}, "df": 7}}}}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.with_owner_check": {"tf": 1}, "tanjun.Client.loop": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.abc.Client.loop": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.clients.Client.loop": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 34}, "l": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}}, "df": 10}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.ConversionError.__init__": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.utilities.gather_checks": {"tf": 1}}, "df": 18, "[": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"tanjun.Component.__init__": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}}, "df": 2}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.ConversionError.__init__": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 16}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.utilities.gather_checks": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.iter_commands": {"tf": 1}, "tanjun.Client.iter_message_commands": {"tf": 1}, "tanjun.Client.iter_slash_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.iter_commands": {"tf": 1}, "tanjun.abc.Client.iter_message_commands": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.iter_commands": {"tf": 1}, "tanjun.clients.Client.iter_message_commands": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1.4142135623730951}, "tanjun.conversion.search_snowflakes": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1.4142135623730951}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1.4142135623730951}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}}, "df": 24}, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.iter_commands": {"tf": 1}, "tanjun.Client.iter_message_commands": {"tf": 1}, "tanjun.Client.iter_slash_commands": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Client.iter_commands": {"tf": 1}, "tanjun.abc.Client.iter_message_commands": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.iter_commands": {"tf": 1}, "tanjun.clients.Client.iter_message_commands": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.conversion.search_snowflakes": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.CacheIterator": {"tf": 1}, "tanjun.dependencies.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}}, "df": 40, "[": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.iter_commands": {"tf": 1}, "tanjun.abc.Client.iter_commands": {"tf": 1}, "tanjun.clients.Client.iter_commands": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.iter_message_commands": {"tf": 1}, "tanjun.abc.Client.iter_message_commands": {"tf": 1}, "tanjun.clients.Client.iter_message_commands": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.iter_slash_commands": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}}, "df": 6}}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.conversion.search_snowflakes": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.as_loader": {"tf": 1.4142135623730951}, "tanjun.as_unloader": {"tf": 1.4142135623730951}, "tanjun.clients.as_loader": {"tf": 1.4142135623730951}, "tanjun.clients.as_unloader": {"tf": 1.4142135623730951}}, "df": 4, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.components.Component.load_from_scope": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client": {"tf": 1.4142135623730951}, "tanjun.Client.set_message_ctx_maker": {"tf": 1.4142135623730951}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1.4142135623730951}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommand": {"tf": 1}, "tanjun.MessageCommandGroup": {"tf": 1}, "tanjun.SlashCommand": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.Component": {"tf": 1.4142135623730951}, "tanjun.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.Hooks": {"tf": 1.4142135623730951}, "tanjun.ShlexParser": {"tf": 1}, "tanjun.abc.Context.client": {"tf": 1}, "tanjun.abc.ListenerCallbackSig": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1.4142135623730951}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.commands": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommand": {"tf": 1}, "tanjun.commands.MessageCommandGroup": {"tf": 1}, "tanjun.commands.SlashCommand": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.components": {"tf": 1}, "tanjun.components.Component": {"tf": 1.4142135623730951}, "tanjun.components.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.context.MessageContext": {"tf": 1}, "tanjun.context.SlashContext.client": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.hooks": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1.4142135623730951}, "tanjun.injecting": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.BasicInjectionContext": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient": {"tf": 1}, "tanjun.injecting.InjectorClient.get_type_dependency": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}, "tanjun.parsing": {"tf": 1}, "tanjun.parsing.ShlexParser": {"tf": 1}, "tanjun.schedules": {"tf": 1}}, "df": 78, "s": {"docs": {"tanjun.ClientCallbackNames": {"tf": 1}, "tanjun.abc.ClientCallbackNames": {"tf": 1}, "tanjun.commands.PartialCommand": {"tf": 1}, "tanjun.commands.BaseSlashCommand": {"tf": 1}, "tanjun.context": {"tf": 1}, "tanjun.context.SlashContext": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}}, "df": 9}}}}}}, "s": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 13, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.load_modules": {"tf": 1.4142135623730951}, "tanjun.abc.Client.load_modules": {"tf": 1.4142135623730951}, "tanjun.clients.Client.load_modules": {"tf": 1.4142135623730951}}, "df": 3}}, "s": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}}, "df": 3}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}}, "df": 9}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 4}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 12}}}}, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.remove_component_by_name": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.remove_listener": {"tf": 1.4142135623730951}, "tanjun.Client.close": {"tf": 1}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.remove_schedule": {"tf": 1}, "tanjun.Component.close": {"tf": 1}, "tanjun.Component.open": {"tf": 1}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.MessageContext.command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.SlashContext.command": {"tf": 1}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.close": {"tf": 1}, "tanjun.abc.Component.open": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.remove_listener": {"tf": 1.4142135623730951}, "tanjun.clients.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.remove_listener": {"tf": 1.4142135623730951}, "tanjun.clients.Client.close": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.remove_schedule": {"tf": 1}, "tanjun.components.Component.close": {"tf": 1}, "tanjun.components.Component.open": {"tf": 1}, "tanjun.context.SlashOption.resolve_value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}, "tanjun.dependencies.CacheMissError": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.async_cache.CacheMissError": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.AbstractSchedule.stop": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.stop": {"tf": 1}}, "df": 92}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}}, "df": 3}}}}}}}}}, "d": {"docs": {"tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_command": {"tf": 2}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.fetch_rest_application_id": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.InMemoryCooldownManager.increment_cooldown": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.abc.Context.channel_id": {"tf": 1}, "tanjun.abc.Context.guild_id": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.abc.SlashOption.value": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_command": {"tf": 2}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_command": {"tf": 2}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.fetch_rest_application_id": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.context.MessageContext.channel_id": {"tf": 1}, "tanjun.context.MessageContext.guild_id": {"tf": 1}, "tanjun.context.SlashContext.channel_id": {"tf": 1}, "tanjun.context.SlashContext.guild_id": {"tf": 1}, "tanjun.context.SlashOption.value": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_emoji_id": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_role_id": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_user_id": {"tf": 1.4142135623730951}, "tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 2}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1.4142135623730951}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1.7320508075688772}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1.4142135623730951}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.ConcurrencyPostExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.dependencies.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 2}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1.7320508075688772}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1.4142135623730951}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 79, "s": {"docs": {"tanjun.Client.__init__": {"tf": 2.449489742783178}, "tanjun.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.Client.from_rest_bot": {"tf": 1.7320508075688772}, "tanjun.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.clients.Client.__init__": {"tf": 2.449489742783178}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_rest_bot": {"tf": 1.7320508075688772}, "tanjun.clients.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1.4142135623730951}, "tanjun.conversion.search_emoji_ids": {"tf": 1.4142135623730951}, "tanjun.conversion.search_role_ids": {"tf": 1.4142135623730951}, "tanjun.conversion.search_user_ids": {"tf": 1.4142135623730951}, "tanjun.conversion.ToMember": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}}, "df": 34}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.name": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.Component.name": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.name": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 21}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}}, "df": 2}}}}}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.with_option": {"tf": 1.4142135623730951}, "tanjun.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.parsing.Option.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_option": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1.4142135623730951}}, "df": 3, "d": {"docs": {"tanjun.Client.on_interaction_create_event": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.as_interval": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1.4142135623730951}}, "df": 28}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.abc.MessageContext.respond": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.abc.SlashOption.value": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.context.SlashOption.value": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}}, "df": 23, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"tanjun": {"tf": 2.23606797749979}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.open": {"tf": 1}, "tanjun.Client.on_message_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_event": {"tf": 1}, "tanjun.inject_lc": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.clients.Client.on_message_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToEmoji.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToGuild.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInvite.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToMember.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToPresence.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToRole.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToUser.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1.4142135623730951}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1}}, "df": 27, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"tanjun": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.utilities.gather_checks": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun": {"tf": 2}, "tanjun.Client.__init__": {"tf": 3.1622776601683795}, "tanjun.Client.from_gateway_bot": {"tf": 2.8284271247461903}, "tanjun.Client.from_rest_bot": {"tf": 2.8284271247461903}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.set_global_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_global_commands": {"tf": 2.23606797749979}, "tanjun.Client.iter_slash_commands": {"tf": 1.4142135623730951}, "tanjun.as_slash_command": {"tf": 2.449489742783178}, "tanjun.slash_command_group": {"tf": 2.23606797749979}, "tanjun.SlashCommand.__init__": {"tf": 2.449489742783178}, "tanjun.SlashCommandGroup.__init__": {"tf": 2.23606797749979}, "tanjun.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.BucketResource.GLOBAL": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 2.23606797749979}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.__init__": {"tf": 3.1622776601683795}, "tanjun.clients.Client.from_gateway_bot": {"tf": 2.8284271247461903}, "tanjun.clients.Client.from_rest_bot": {"tf": 2.8284271247461903}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.set_global_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 2.23606797749979}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 2.449489742783178}, "tanjun.commands.slash_command_group": {"tf": 2.23606797749979}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.__init__": {"tf": 2.449489742783178}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 2.23606797749979}, "tanjun.components.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.BucketResource.GLOBAL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GLOBAL": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}}, "df": 49, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.Client.from_rest_bot": {"tf": 1.7320508075688772}, "tanjun.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_global_commands": {"tf": 2}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 2}, "tanjun.SlashCommand.build": {"tf": 1}, "tanjun.SlashCommandGroup.build": {"tf": 1}, "tanjun.abc.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.abc.BaseSlashCommand.build": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_global_commands": {"tf": 2}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 2}, "tanjun.clients.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_rest_bot": {"tf": 1.7320508075688772}, "tanjun.clients.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 2}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 2}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.commands.SlashCommand.build": {"tf": 1}, "tanjun.commands.SlashCommandGroup.build": {"tf": 1}, "tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1.4142135623730951}}, "df": 33}}, "s": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.components.Component.load_from_scope": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"tanjun": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.with_argument": {"tf": 1.4142135623730951}, "tanjun.with_greedy_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.Argument.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1.7320508075688772}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_greedy_argument": {"tf": 1.7320508075688772}}, "df": 9}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}}, "df": 6}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.as_message_command_group": {"tf": 1.7320508075688772}, "tanjun.slash_command_group": {"tf": 3}, "tanjun.MessageCommand.parent": {"tf": 1}, "tanjun.MessageCommandGroup": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1.7320508075688772}, "tanjun.MessageCommandGroup.commands": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1.7320508075688772}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1.4142135623730951}, "tanjun.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.SlashCommandGroup": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1.7320508075688772}, "tanjun.SlashCommandGroup.commands": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1.7320508075688772}, "tanjun.SlashCommandGroup.remove_command": {"tf": 1.7320508075688772}, "tanjun.SlashCommandGroup.with_command": {"tf": 1.7320508075688772}, "tanjun.abc.MessageCommand.parent": {"tf": 1}, "tanjun.abc.MessageCommandGroup": {"tf": 1}, "tanjun.abc.MessageCommandGroup.commands": {"tf": 1}, "tanjun.abc.MessageCommandGroup.add_command": {"tf": 1.4142135623730951}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1.4142135623730951}, "tanjun.abc.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.parent": {"tf": 1}, "tanjun.abc.SlashCommandGroup": {"tf": 1}, "tanjun.abc.SlashCommandGroup.commands": {"tf": 1}, "tanjun.abc.SlashCommandGroup.add_command": {"tf": 1.4142135623730951}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1.4142135623730951}, "tanjun.abc.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1.7320508075688772}, "tanjun.commands.slash_command_group": {"tf": 3}, "tanjun.commands.MessageCommand.parent": {"tf": 1}, "tanjun.commands.MessageCommandGroup": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1.7320508075688772}, "tanjun.commands.MessageCommandGroup.commands": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1.7320508075688772}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.parent": {"tf": 1}, "tanjun.commands.SlashCommandGroup": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommandGroup.commands": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommandGroup.with_command": {"tf": 1.7320508075688772}}, "df": 43, "s": {"docs": {"tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommand.callback": {"tf": 1}, "tanjun.MessageCommandGroup.commands": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1.4142135623730951}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.abc.MessageCommand.callback": {"tf": 1}, "tanjun.abc.MessageCommandGroup.commands": {"tf": 1}, "tanjun.abc.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.abc.SlashCommandGroup": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommand.callback": {"tf": 1}, "tanjun.commands.MessageCommandGroup.commands": {"tf": 1}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.load_from_scope": {"tf": 1}}, "df": 24}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommandGroup": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommandGroup": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {"tanjun": {"tf": 1.7320508075688772}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.inject_lc": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.inject": {"tf": 1}, "tanjun.with_parser": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.dependencies.inject_lc": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.inject_lc": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1}, "tanjun.parsing.with_parser": {"tf": 1}}, "df": 67}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.LazyConstant": {"tf": 1}, "tanjun.dependencies.LazyConstant": {"tf": 1}, "tanjun.dependencies.data.LazyConstant": {"tf": 1}}, "df": 3, "d": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}}, "df": 6}}}, "l": {"docs": {"tanjun.Client.set_hooks": {"tf": 1.4142135623730951}, "tanjun.Hooks": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.HookSig": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}}, "df": 11, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"tanjun.with_check": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Component": {"tf": 1}, "tanjun.abc.ClientLoader": {"tf": 1}, "tanjun.abc.CommandCallbackSigT": {"tf": 1}, "tanjun.abc.CheckSigT": {"tf": 1}, "tanjun.abc.HookSigT": {"tf": 1}, "tanjun.abc.ErrorHookSigT": {"tf": 1}, "tanjun.abc.ListenerCallbackSigT": {"tf": 1}, "tanjun.checks.with_check": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.components.Component": {"tf": 1}, "tanjun.components.OnCallbackSigT": {"tf": 1}, "tanjun.injecting.UndefinedOr": {"tf": 1}, "tanjun.parsing.ParseableProtoT": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1.7320508075688772}}, "df": 16}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.prefix_getter": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 2}, "tanjun.clients.Client.prefix_getter": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 2}}, "df": 6, "s": {"docs": {"tanjun.Client": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.dependencies.callbacks": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"tanjun.utilities.CastedView": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.with_guild_check": {"tf": 1.4142135623730951}, "tanjun.Client.__init__": {"tf": 2.449489742783178}, "tanjun.Client.from_gateway_bot": {"tf": 2.23606797749979}, "tanjun.Client.from_rest_bot": {"tf": 2.23606797749979}, "tanjun.Client.clear_application_commands": {"tf": 2.23606797749979}, "tanjun.Client.declare_global_commands": {"tf": 2.8284271247461903}, "tanjun.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_commands": {"tf": 2.449489742783178}, "tanjun.Client.set_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.SlashCommand.build": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.build": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.BucketResource.MEMBER": {"tf": 1}, "tanjun.BucketResource.PARENT_CHANNEL": {"tf": 1.4142135623730951}, "tanjun.BucketResource.GUILD": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.abc.Context.guild_id": {"tf": 1}, "tanjun.abc.Context.member": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1.4142135623730951}, "tanjun.abc.Context.fetch_guild": {"tf": 2.6457513110645907}, "tanjun.abc.Context.get_channel": {"tf": 1.4142135623730951}, "tanjun.abc.Context.get_guild": {"tf": 2}, "tanjun.abc.BaseSlashCommand.build": {"tf": 1}, "tanjun.abc.SlashContext.member": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 2.23606797749979}, "tanjun.abc.Client.declare_global_commands": {"tf": 2.8284271247461903}, "tanjun.abc.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_commands": {"tf": 2.449489742783178}, "tanjun.checks.with_guild_check": {"tf": 1.4142135623730951}, "tanjun.checks.GuildCheck": {"tf": 1.7320508075688772}, "tanjun.checks.GuildCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.Client.__init__": {"tf": 2.449489742783178}, "tanjun.clients.Client.from_gateway_bot": {"tf": 2.23606797749979}, "tanjun.clients.Client.from_rest_bot": {"tf": 2.23606797749979}, "tanjun.clients.Client.clear_application_commands": {"tf": 2.23606797749979}, "tanjun.clients.Client.declare_global_commands": {"tf": 2.8284271247461903}, "tanjun.clients.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_commands": {"tf": 2.449489742783178}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.commands.SlashCommand.build": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.build": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.context.MessageContext.guild_id": {"tf": 1}, "tanjun.context.MessageContext.member": {"tf": 1}, "tanjun.context.SlashContext.guild_id": {"tf": 1}, "tanjun.context.SlashContext.member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.conversion.to_guild": {"tf": 1}, "tanjun.conversion.ToGuild": {"tf": 1}, "tanjun.conversion.ToMember": {"tf": 1.4142135623730951}, "tanjun.conversion.ToPresence": {"tf": 1}, "tanjun.conversion.ToRole": {"tf": 1}, "tanjun.conversion.ToVoiceState": {"tf": 1}, "tanjun.dependencies.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1.7320508075688772}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 2}, "tanjun.dependencies.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"tf": 1.4142135623730951}, "tanjun.dependencies.BucketResource.GUILD": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1.7320508075688772}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 2}, "tanjun.dependencies.limiters.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.BucketResource.GUILD": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1.4142135623730951}, "tanjun.utilities.calculate_permissions": {"tf": 2.8284271247461903}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 2}, "tanjun.utilities.fetch_permissions": {"tf": 1.4142135623730951}}, "df": 91, "(": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}}, "df": 6}}, "s": {"docs": {"tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.conversion.to_guild": {"tf": 1}, "tanjun.conversion.to_member": {"tf": 1}, "tanjun.conversion.to_role": {"tf": 1}, "tanjun.conversion.ToGuild": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1.7320508075688772}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 9}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1.4142135623730951}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 4}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.async_cache.SfGuildBound": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.abc.ListenerCallbackSig": {"tf": 1}, "tanjun.abc.MessageContext.command": {"tf": 1}, "tanjun.abc.SlashContext.command": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}}, "df": 11}}}}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.dispatch_client_callback": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}, "tanjun.parsing.Parameter.convert": {"tf": 1}}, "df": 32}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}}, "df": 6}}}}, "b": {"docs": {"tanjun.inject": {"tf": 1.7320508075688772}, "tanjun.injecting.inject": {"tf": 1.7320508075688772}, "tanjun.injecting.Injected.__init__": {"tf": 1.7320508075688772}}, "df": 3, "o": {"docs": {}, "df": 0, "t": {"docs": {"tanjun": {"tf": 4}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.Client.from_rest_bot": {"tf": 1.7320508075688772}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_hikari_trait_injectors": {"tf": 2}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.with_listener": {"tf": 1.4142135623730951}, "tanjun.Client.with_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.Client.open": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.inject_lc": {"tf": 1}, "tanjun.abc.Context.is_human": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.with_listener": {"tf": 1.4142135623730951}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.OwnerCheck": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_rest_bot": {"tf": 1.7320508075688772}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 2}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_listener": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.context.MessageContext.is_human": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.is_human": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1.4142135623730951}}, "df": 70, "h": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client.hooks": {"tf": 1}, "tanjun.Client.message_hooks": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.iter_commands": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.Component": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Client": {"tf": 1}, "tanjun.abc.Client.iter_commands": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.iter_commands": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.components.Component": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.conversion.ToMember": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}}, "df": 47}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.with_owner_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.dependencies.AbstractOwners": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.AbstractOwners": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1.4142135623730951}}, "df": 6}}, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.Client.is_human_only": {"tf": 1}, "tanjun.clients.Client.is_human_only": {"tf": 1}}, "df": 2}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client.loop": {"tf": 1}, "tanjun.Component.client": {"tf": 1}, "tanjun.Component.loop": {"tf": 1}, "tanjun.Component.open": {"tf": 1}, "tanjun.abc.Context.component": {"tf": 1.4142135623730951}, "tanjun.abc.Context.command": {"tf": 1.4142135623730951}, "tanjun.abc.Component.client": {"tf": 1}, "tanjun.abc.Component.loop": {"tf": 1}, "tanjun.abc.Component.open": {"tf": 1}, "tanjun.abc.Client.loop": {"tf": 1}, "tanjun.clients.Client.loop": {"tf": 1}, "tanjun.components.Component.client": {"tf": 1}, "tanjun.components.Component.loop": {"tf": 1}, "tanjun.components.Component.open": {"tf": 1}, "tanjun.context.MessageContext.__init__": {"tf": 1}, "tanjun.context.MessageContext.command": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.__init__": {"tf": 1}, "tanjun.context.SlashContext.command": {"tf": 1.4142135623730951}, "tanjun.dependencies.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.injection_client": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.__init__": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.injection_client": {"tf": 1}}, "df": 32}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.with_all_checks": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client.__init__": {"tf": 2}, "tanjun.Client.from_gateway_bot": {"tf": 2}, "tanjun.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.Client.iter_slash_commands": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 2}, "tanjun.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 2}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.with_bool_slash_option": {"tf": 1.7320508075688772}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1}, "tanjun.Component.with_slash_command": {"tf": 1}, "tanjun.Component.with_message_command": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.to_bool": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1.4142135623730951}, "tanjun.with_option": {"tf": 1}, "tanjun.abc.ClientLoader.load": {"tf": 1}, "tanjun.abc.ClientLoader.unload": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.respond": {"tf": 1.7320508075688772}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Component.with_slash_command": {"tf": 1}, "tanjun.abc.Component.with_message_command": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 2}, "tanjun.clients.Client.from_gateway_bot": {"tf": 2}, "tanjun.clients.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 2}, "tanjun.commands.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 2}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.with_bool_slash_option": {"tf": 1.7320508075688772}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1}, "tanjun.components.Component.with_slash_command": {"tf": 1}, "tanjun.components.Component.with_message_command": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.respond": {"tf": 1.7320508075688772}, "tanjun.conversion.to_bool": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.utilities.gather_checks": {"tf": 1}}, "df": 157, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.to_bool": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.conversion.to_bool": {"tf": 1}}, "df": 6}}}}}, "d": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.ParserError": {"tf": 1}, "tanjun.TanjunError": {"tf": 1}, "tanjun.abc.ExecutableCommand": {"tf": 1}, "tanjun.abc.BaseSlashCommand": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.commands.PartialCommand": {"tf": 1}, "tanjun.commands.BaseSlashCommand": {"tf": 1}, "tanjun.context.SlashContext": {"tf": 1}, "tanjun.errors.ParserError": {"tf": 1}, "tanjun.errors.TanjunError": {"tf": 1}, "tanjun.parsing.Parameter": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 14, "d": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.hooks": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.set_hikari_trait_injectors": {"tf": 1.4142135623730951}, "tanjun.Client.set_message_accepts": {"tf": 1.4142135623730951}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.Client.on_message_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_event": {"tf": 1.4142135623730951}, "tanjun.Client.on_interaction_create_request": {"tf": 1.4142135623730951}, "tanjun.MessageAcceptsEnum": {"tf": 1}, "tanjun.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.ShlexParser": {"tf": 1}, "tanjun.abc.CommandCallbackSig": {"tf": 1}, "tanjun.abc.Client": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_message_accepts": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.on_message_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1.4142135623730951}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1.4142135623730951}, "tanjun.clients.MessageAcceptsEnum": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.callbacks": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.parsing.ShlexParser": {"tf": 1}, "tanjun.schedules": {"tf": 1}, "tanjun.utilities.ALL_PERMISSIONS": {"tf": 1}}, "df": 65}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.SlashCommandGroup.with_command": {"tf": 1.4142135623730951}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.add_slash_command": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.with_command": {"tf": 1.4142135623730951}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.add_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.with_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.add_slash_command": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}}, "df": 24, "t": {"docs": {"tanjun.Component.with_slash_command": {"tf": 1.4142135623730951}, "tanjun.abc.Component.with_slash_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_slash_command": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1.4142135623730951}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1.4142135623730951}}, "df": 30}}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"tanjun": {"tf": 1}, "tanjun.context.MessageContext.__init__": {"tf": 1}, "tanjun.context.SlashContext.__init__": {"tf": 1}, "tanjun.injecting.BasicInjectionContext": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.__init__": {"tf": 1}}, "df": 5}}}, "r": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}}, "df": 3}, "z": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}}, "df": 3}, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}}, "df": 22, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}}, "df": 3}}}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"tanjun": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.ParserError.parameter": {"tf": 1}, "tanjun.errors.ParserError.parameter": {"tf": 1}}, "df": 2}}}, "d": {"docs": {"tanjun.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.SlashCommand.build": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.build": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.BaseSlashCommand.build": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.build": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.build": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}}, "df": 19}}}}}, "l": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}}, "df": 8}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.BucketResource.USER": {"tf": 1}, "tanjun.BucketResource.MEMBER": {"tf": 1}, "tanjun.BucketResource.CHANNEL": {"tf": 1}, "tanjun.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.BucketResource.GUILD": {"tf": 1}, "tanjun.BucketResource.GLOBAL": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 2.6457513110645907}, "tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1.7320508075688772}, "tanjun.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 2.6457513110645907}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 2.23606797749979}, "tanjun.InMemoryCooldownManager": {"tf": 2.6457513110645907}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1.7320508075688772}, "tanjun.InMemoryCooldownManager.increment_cooldown": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 2.6457513110645907}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 2.23606797749979}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1.7320508075688772}, "tanjun.dependencies.AbstractConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1.7320508075688772}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.BucketResource.USER": {"tf": 1}, "tanjun.dependencies.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.BucketResource.GUILD": {"tf": 1}, "tanjun.dependencies.BucketResource.GLOBAL": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 2.6457513110645907}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1.7320508075688772}, "tanjun.dependencies.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 2.6457513110645907}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 2.23606797749979}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 2.6457513110645907}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1.7320508075688772}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 2.6457513110645907}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 2.23606797749979}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.BucketResource.USER": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GUILD": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GLOBAL": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 2.6457513110645907}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 2.6457513110645907}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 2.23606797749979}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 2.6457513110645907}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 2.6457513110645907}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 2.23606797749979}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 91, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}}, "df": 12}}}}}}}}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 24}}}}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.Component.checks": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.HaltExecution": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.respond": {"tf": 1.7320508075688772}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.HookSig": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.abc.SlashContext.mark_not_found": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.abc.Client.add_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.checks.CallbackReturnT": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.components.Component.checks": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.mark_not_found": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.respond": {"tf": 1.7320508075688772}, "tanjun.conversion.ToChannel.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToEmoji.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToGuild.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInvite.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToMember.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToPresence.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToRole.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToUser.intents": {"tf": 1.4142135623730951}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1.4142135623730951}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1}, "tanjun.errors.HaltExecution": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}, "tanjun.injecting.TypeDescriptor.type": {"tf": 1}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1}, "tanjun.parsing.Parameter.is_multi": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 125}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.get_response_future": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 22}}}}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.Component.name": {"tf": 1}, "tanjun.abc.Component.name": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.components.Component.name": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.schedules.IntervalSchedule": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.interval": {"tf": 1}}, "df": 29}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1}, "tanjun.Component.with_slash_command": {"tf": 1}, "tanjun.Component.with_message_command": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.Context.component": {"tf": 1}, "tanjun.abc.Context.command": {"tf": 1}, "tanjun.abc.ExecutableCommand.checks": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Component.with_slash_command": {"tf": 1}, "tanjun.abc.Component.with_message_command": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.PartialCommand.checks": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1}, "tanjun.components.Component.with_slash_command": {"tf": 1}, "tanjun.components.Component.with_message_command": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}, "tanjun.context.MessageContext.command": {"tf": 1}, "tanjun.context.SlashContext.command": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}}, "df": 53}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}}, "df": 9, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.utilities.DM_PERMISSIONS": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7}}}}}}}}, "s": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}}, "df": 8, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"tanjun": {"tf": 2.23606797749979}, "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.Client.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.Client.server": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1.7320508075688772}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.iter_commands": {"tf": 1}, "tanjun.Client.iter_slash_commands": {"tf": 1.7320508075688772}, "tanjun.Client.check_slash_name": {"tf": 1.4142135623730951}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1.7320508075688772}, "tanjun.Client.on_interaction_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.slash_command_group": {"tf": 2.8284271247461903}, "tanjun.SlashCommand": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1.7320508075688772}, "tanjun.with_int_slash_option": {"tf": 1.7320508075688772}, "tanjun.with_float_slash_option": {"tf": 1.7320508075688772}, "tanjun.with_bool_slash_option": {"tf": 1.7320508075688772}, "tanjun.with_role_slash_option": {"tf": 1.7320508075688772}, "tanjun.with_user_slash_option": {"tf": 1.7320508075688772}, "tanjun.with_member_slash_option": {"tf": 1.7320508075688772}, "tanjun.with_channel_slash_option": {"tf": 1.7320508075688772}, "tanjun.with_mentionable_slash_option": {"tf": 1.7320508075688772}, "tanjun.Component": {"tf": 1}, "tanjun.Component.__init__": {"tf": 2}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.Component.slash_commands": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.Component.with_command": {"tf": 2}, "tanjun.Component.add_slash_command": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.with_slash_command": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1.4142135623730951}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.respond": {"tf": 2}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.SlashHooks": {"tf": 1}, "tanjun.abc.BaseSlashCommand": {"tf": 1}, "tanjun.abc.SlashCommand": {"tf": 1}, "tanjun.abc.SlashCommandGroup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption": {"tf": 1}, "tanjun.abc.Component": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.abc.Component.slash_commands": {"tf": 1}, "tanjun.abc.Component.add_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.with_slash_command": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1.4142135623730951}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Client": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.abc.Client.server": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.iter_commands": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1.7320508075688772}, "tanjun.abc.Client.check_slash_name": {"tf": 1.4142135623730951}, "tanjun.clients.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.clients.Client.server": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1.7320508075688772}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.iter_commands": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1.7320508075688772}, "tanjun.clients.Client.check_slash_name": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1.7320508075688772}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.commands.ConverterSig": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.slash_command_group": {"tf": 2.8284271247461903}, "tanjun.commands.BaseSlashCommand": {"tf": 1}, "tanjun.commands.SlashCommand": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1.7320508075688772}, "tanjun.commands.with_int_slash_option": {"tf": 1.7320508075688772}, "tanjun.commands.with_float_slash_option": {"tf": 1.7320508075688772}, "tanjun.commands.with_bool_slash_option": {"tf": 1.7320508075688772}, "tanjun.commands.with_role_slash_option": {"tf": 1.7320508075688772}, "tanjun.commands.with_user_slash_option": {"tf": 1.7320508075688772}, "tanjun.commands.with_member_slash_option": {"tf": 1.7320508075688772}, "tanjun.commands.with_channel_slash_option": {"tf": 1.7320508075688772}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1.7320508075688772}, "tanjun.components.Component": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 2}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.components.Component.slash_commands": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_command": {"tf": 2}, "tanjun.components.Component.add_slash_command": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.with_slash_command": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1.4142135623730951}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.respond": {"tf": 2}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.respond": {"tf": 2}, "tanjun.context.SlashOption": {"tf": 1}, "tanjun.hooks.SlashHooks": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}}, "df": 156, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.defaults_to_ephemeral": {"tf": 2}, "tanjun.Client.set_slash_ctx_maker": {"tf": 2.449489742783178}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 2}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.Hooks": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 2}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 2}, "tanjun.abc.SlashContext.has_been_deferred": {"tf": 1.7320508075688772}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 2}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 2}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 2}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 2.449489742783178}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 2}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 2}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 2}, "tanjun.context.SlashContext.has_been_deferred": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks": {"tf": 1}, "tanjun.hooks.SlashHooks": {"tf": 1}}, "df": 44, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1.7320508075688772}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.7320508075688772}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}}, "df": 20, "[": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.slash_command_group": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {"tanjun.with_str_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_int_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_float_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_bool_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_role_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_user_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_member_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_channel_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_mentionable_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_str_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_int_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_float_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_bool_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_role_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_user_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_member_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_channel_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1.4142135623730951}}, "df": 18}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.slash_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.clients.Client.slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}}, "df": 6}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.Client.open": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.Component.open": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.as_interval": {"tf": 1.4142135623730951}, "tanjun.abc.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.abc.Component.open": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.open": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}}, "df": 24, "u": {"docs": {}, "df": 0, "p": {"docs": {"tanjun": {"tf": 1.7320508075688772}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}}, "df": 7}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}}, "df": 17}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}}, "df": 7}}}, "s": {"docs": {"tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}}, "df": 7, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "(": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.ClientCallbackNames": {"tf": 1}, "tanjun.as_loader": {"tf": 1.4142135623730951}, "tanjun.as_unloader": {"tf": 1.4142135623730951}, "tanjun.Client": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.checks": {"tf": 1}, "tanjun.Client.prefixes": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommand": {"tf": 1}, "tanjun.MessageCommandGroup": {"tf": 1}, "tanjun.SlashCommand": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.Component": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.Hooks": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.abc.ClientCallbackNames": {"tf": 1}, "tanjun.abc.MessageCommand": {"tf": 1}, "tanjun.abc.MessageCommandGroup": {"tf": 1}, "tanjun.abc.SlashCommandGroup": {"tf": 1}, "tanjun.abc.Component": {"tf": 1}, "tanjun.checks": {"tf": 1}, "tanjun.checks.DmCheck": {"tf": 1}, "tanjun.checks.GuildCheck": {"tf": 1}, "tanjun.checks.NsfwCheck": {"tf": 1}, "tanjun.checks.SfwCheck": {"tf": 1}, "tanjun.checks.OwnerCheck": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck": {"tf": 1}, "tanjun.checks.OwnPermissionCheck": {"tf": 1}, "tanjun.clients": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1.4142135623730951}, "tanjun.clients.as_unloader": {"tf": 1.4142135623730951}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.checks": {"tf": 1}, "tanjun.clients.Client.prefixes": {"tf": 1}, "tanjun.commands": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommand": {"tf": 1}, "tanjun.commands.MessageCommandGroup": {"tf": 1}, "tanjun.commands.PartialCommand": {"tf": 1}, "tanjun.commands.BaseSlashCommand": {"tf": 1}, "tanjun.commands.SlashCommand": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.components": {"tf": 1}, "tanjun.components.Component": {"tf": 1}, "tanjun.components.AbstractComponentLoader": {"tf": 1}, "tanjun.context": {"tf": 1}, "tanjun.context.MessageContext": {"tf": 1}, "tanjun.context.SlashContext": {"tf": 1}, "tanjun.conversion.ToChannel": {"tf": 1.4142135623730951}, "tanjun.conversion.ToEmoji": {"tf": 1.4142135623730951}, "tanjun.conversion.ToGuild": {"tf": 1}, "tanjun.conversion.ToInvite": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata": {"tf": 1.4142135623730951}, "tanjun.conversion.ToMember": {"tf": 1.4142135623730951}, "tanjun.conversion.ToPresence": {"tf": 1.4142135623730951}, "tanjun.conversion.ToRole": {"tf": 1.4142135623730951}, "tanjun.conversion.ToUser": {"tf": 1.4142135623730951}, "tanjun.conversion.ToVoiceState": {"tf": 1.4142135623730951}, "tanjun.dependencies.set_standard_dependencies": {"tf": 1.4142135623730951}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1.4142135623730951}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.hooks": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.injecting": {"tf": 1}, "tanjun.injecting.InjectorClient": {"tf": 1}, "tanjun.parsing": {"tf": 1}, "tanjun.parsing.Argument": {"tf": 1}, "tanjun.parsing.Option": {"tf": 1}, "tanjun.parsing.Parameter": {"tf": 1}}, "df": 90}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.conversion.ToGuild": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.abc.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.defer": {"tf": 1}, "tanjun.conversion.ToVoiceState": {"tf": 1}}, "df": 20, "s": {"docs": {"tanjun.conversion.ToVoiceState": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}}, "df": 8}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.add_prefix": {"tf": 1}, "tanjun.abc.Hooks": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1.7320508075688772}, "tanjun.components.Component.load_from_scope": {"tf": 1.7320508075688772}}, "df": 2, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.Component.execute_message": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.as_interval": {"tf": 1.7320508075688772}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.schedules.AbstractSchedule.stop": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1.7320508075688772}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1.7320508075688772}, "tanjun.schedules.IntervalSchedule.stop": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1.7320508075688772}}, "df": 32, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache": {"tf": 1}}, "df": 2, "d": {"docs": {"tanjun.LazyConstant.reset": {"tf": 1}, "tanjun.dependencies.LazyConstant.reset": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.reset": {"tf": 1}}, "df": 3}, "s": {"docs": {"tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}, "tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache": {"tf": 1}}, "df": 18}}}}, "r": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client.get_component_by_name": {"tf": 1}, "tanjun.Client.remove_component_by_name": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.remove_prefix": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.as_message_command": {"tf": 1.4142135623730951}, "tanjun.as_message_command_group": {"tf": 1.4142135623730951}, "tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.slash_command_group": {"tf": 2}, "tanjun.MessageCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.MessageCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.with_str_slash_option": {"tf": 1.7320508075688772}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1.7320508075688772}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.to_bool": {"tf": 1}, "tanjun.to_datetime": {"tf": 1}, "tanjun.to_snowflake": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.CommandError.__init__": {"tf": 1}, "tanjun.MissingDependencyError.__init__": {"tf": 1}, "tanjun.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.ParserError.__init__": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1.7320508075688772}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1.7320508075688772}, "tanjun.with_multi_option": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_initial_response": {"tf": 2}, "tanjun.abc.Context.edit_last_response": {"tf": 2}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 2}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Client.get_component_by_name": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.get_component_by_name": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1.4142135623730951}, "tanjun.commands.as_message_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.slash_command_group": {"tf": 2}, "tanjun.commands.MessageCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.with_str_slash_option": {"tf": 1.7320508075688772}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1.7320508075688772}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_prefix": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 2}, "tanjun.context.MessageContext.edit_last_response": {"tf": 2}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 2}, "tanjun.context.SlashContext.edit_last_response": {"tf": 2}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_snowflake": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}, "tanjun.conversion.to_bool": {"tf": 1}, "tanjun.conversion.to_datetime": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.dependencies.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.errors.CommandError.__init__": {"tf": 1}, "tanjun.errors.MissingDependencyError.__init__": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.errors.ParserError.__init__": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.ConverterSig": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1.7320508075688772}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1.7320508075688772}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1.7320508075688772}, "tanjun.parsing.with_multi_option": {"tf": 1.7320508075688772}, "tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 161, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}}, "df": 25, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Component.__init__": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.to_bool": {"tf": 1}, "tanjun.to_snowflake": {"tf": 1}, "tanjun.CommandError.__init__": {"tf": 1}, "tanjun.CommandError.message": {"tf": 1}, "tanjun.ParserError.__init__": {"tf": 1}, "tanjun.ParserError.message": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.with_argument": {"tf": 1.4142135623730951}, "tanjun.with_greedy_argument": {"tf": 1.7320508075688772}, "tanjun.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.with_option": {"tf": 1.4142135623730951}, "tanjun.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.conversion.parse_snowflake": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}, "tanjun.conversion.search_snowflakes": {"tf": 1.4142135623730951}, "tanjun.conversion.search_channel_ids": {"tf": 1.4142135623730951}, "tanjun.conversion.search_emoji_ids": {"tf": 1.4142135623730951}, "tanjun.conversion.search_role_ids": {"tf": 1.4142135623730951}, "tanjun.conversion.search_user_ids": {"tf": 1.4142135623730951}, "tanjun.conversion.to_bool": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}, "tanjun.errors.CommandError.message": {"tf": 1}, "tanjun.errors.ParserError.__init__": {"tf": 1}, "tanjun.errors.ParserError.message": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.Option.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_greedy_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.utilities.match_prefix_names": {"tf": 1.4142135623730951}}, "df": 57, "s": {"docs": {"tanjun.Client.add_prefix": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 9}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"tanjun.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_greedy_argument": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}}, "df": 7}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}}, "df": 18}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.conversion.from_datetime": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"tanjun.to_datetime": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1.4142135623730951}, "tanjun.conversion.to_datetime": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.Client": {"tf": 1}, "tanjun.Client.__init__": {"tf": 2.449489742783178}, "tanjun.Client.from_gateway_bot": {"tf": 2.449489742783178}, "tanjun.Client.from_rest_bot": {"tf": 2.23606797749979}, "tanjun.Client.events": {"tf": 1}, "tanjun.Client.hooks": {"tf": 1.4142135623730951}, "tanjun.Client.slash_hooks": {"tf": 1}, "tanjun.Client.message_hooks": {"tf": 1}, "tanjun.Client.metadata": {"tf": 1}, "tanjun.Client.prefix_getter": {"tf": 1}, "tanjun.Client.prefixes": {"tf": 1}, "tanjun.Client.server": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 2.6457513110645907}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_auto_defer_after": {"tf": 1.4142135623730951}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Client.set_hikari_trait_injectors": {"tf": 1.4142135623730951}, "tanjun.Client.set_interaction_not_found": {"tf": 1.4142135623730951}, "tanjun.Client.set_message_accepts": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1.4142135623730951}, "tanjun.Client.set_slash_hooks": {"tf": 1.4142135623730951}, "tanjun.Client.set_message_hooks": {"tf": 1.4142135623730951}, "tanjun.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.as_slash_command": {"tf": 2.6457513110645907}, "tanjun.slash_command_group": {"tf": 2.449489742783178}, "tanjun.MessageCommand.set_parent": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 2.6457513110645907}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 2.449489742783178}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.metadata": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.inject_lc": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 2.6457513110645907}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager": {"tf": 2.6457513110645907}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.LazyConstant.get_value": {"tf": 1}, "tanjun.LazyConstant.set_value": {"tf": 1.7320508075688772}, "tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 2}, "tanjun.Hooks.set_on_parser_error": {"tf": 1.7320508075688772}, "tanjun.Hooks.set_post_execution": {"tf": 1.7320508075688772}, "tanjun.Hooks.set_pre_execution": {"tf": 1.7320508075688772}, "tanjun.Hooks.set_on_success": {"tf": 1.7320508075688772}, "tanjun.inject": {"tf": 1.7320508075688772}, "tanjun.ShlexParser.set_parameters": {"tf": 1.7320508075688772}, "tanjun.with_argument": {"tf": 1.4142135623730951}, "tanjun.with_greedy_argument": {"tf": 1.7320508075688772}, "tanjun.with_multi_argument": {"tf": 1.7320508075688772}, "tanjun.with_option": {"tf": 1.4142135623730951}, "tanjun.with_multi_option": {"tf": 1.7320508075688772}, "tanjun.with_parser": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_initial_response": {"tf": 2}, "tanjun.abc.Context.edit_last_response": {"tf": 2}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.Hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.metadata": {"tf": 1}, "tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1}, "tanjun.abc.MessageCommand.set_parent": {"tf": 1}, "tanjun.abc.MessageContext.command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.abc.SlashContext.command": {"tf": 1}, "tanjun.abc.SlashContext.set_command": {"tf": 1}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Component.metadata": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Client.events": {"tf": 1}, "tanjun.abc.Client.metadata": {"tf": 1}, "tanjun.abc.Client.prefixes": {"tf": 1}, "tanjun.abc.Client.server": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 2.6457513110645907}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 2.449489742783178}, "tanjun.clients.Client.from_gateway_bot": {"tf": 2.449489742783178}, "tanjun.clients.Client.from_rest_bot": {"tf": 2.23606797749979}, "tanjun.clients.Client.events": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1.4142135623730951}, "tanjun.clients.Client.slash_hooks": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.clients.Client.metadata": {"tf": 1}, "tanjun.clients.Client.prefix_getter": {"tf": 1}, "tanjun.clients.Client.prefixes": {"tf": 1}, "tanjun.clients.Client.server": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 2.6457513110645907}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_message_accepts": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_message_hooks": {"tf": 1.4142135623730951}, "tanjun.clients.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 2.6457513110645907}, "tanjun.commands.slash_command_group": {"tf": 2.449489742783178}, "tanjun.commands.MessageCommand.set_parent": {"tf": 1}, "tanjun.commands.PartialCommand.metadata": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.__init__": {"tf": 2.6457513110645907}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 2.449489742783178}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.metadata": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_prefix": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 2}, "tanjun.context.MessageContext.edit_last_response": {"tf": 2}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.get_response_future": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.set_command": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 2}, "tanjun.context.SlashContext.edit_last_response": {"tf": 2}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.set_standard_dependencies": {"tf": 1.4142135623730951}, "tanjun.dependencies.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.LazyConstant.set_value": {"tf": 1.7320508075688772}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1.4142135623730951}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 2.6457513110645907}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 2.6457513110645907}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.set_value": {"tf": 1.7320508075688772}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 2.6457513110645907}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 2.6457513110645907}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.set_on_error": {"tf": 2}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1.7320508075688772}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1.7320508075688772}, "tanjun.injecting.Injected.__init__": {"tf": 1.7320508075688772}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1.4142135623730951}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1.7320508075688772}, "tanjun.parsing.ParseableProto.parser": {"tf": 1}, "tanjun.parsing.ParseableProto.set_parser": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1.7320508075688772}, "tanjun.parsing.with_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_greedy_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.with_multi_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.with_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_option": {"tf": 1.7320508075688772}, "tanjun.parsing.with_parser": {"tf": 1.7320508075688772}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}}, "df": 203, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}}, "df": 35}}}}, "s": {"docs": {"tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}}, "df": 4}, "u": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 12}}}, "e": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.Client": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.prefix_getter": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.prefix_getter": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.conversion.ToChannel": {"tf": 1}, "tanjun.conversion.ToEmoji": {"tf": 1}, "tanjun.conversion.ToGuild": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata": {"tf": 1}, "tanjun.conversion.ToMember": {"tf": 1}, "tanjun.conversion.ToPresence": {"tf": 1}, "tanjun.conversion.ToRole": {"tf": 1}, "tanjun.conversion.ToUser": {"tf": 1}, "tanjun.conversion.ToVoiceState": {"tf": 1}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.CacheIterator": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}}, "df": 56}, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.CommandError.message": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.errors.CommandError.message": {"tf": 1}}, "df": 48, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}, "t": {"docs": {"tanjun.CommandError.__init__": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.mark_not_found": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.mark_not_found": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}}, "df": 18}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1.4142135623730951}, "tanjun.with_guild_check": {"tf": 1.4142135623730951}, "tanjun.with_nsfw_check": {"tf": 1.4142135623730951}, "tanjun.with_sfw_check": {"tf": 1.4142135623730951}, "tanjun.with_owner_check": {"tf": 1.4142135623730951}, "tanjun.with_author_permission_check": {"tf": 1.4142135623730951}, "tanjun.with_own_permission_check": {"tf": 1.4142135623730951}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.abc.Component": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_guild_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_nsfw_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_sfw_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_owner_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_author_permission_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_own_permission_check": {"tf": 1.4142135623730951}, "tanjun.checks.DmCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.GuildCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.SfwCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.utilities.match_prefix_names": {"tf": 1.4142135623730951}}, "df": 40, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Component.execute_message": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.__init__": {"tf": 2.23606797749979}, "tanjun.Client.server": {"tf": 1}, "tanjun.abc.Context.server": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Client.server": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 2.23606797749979}, "tanjun.clients.Client.server": {"tf": 1}, "tanjun.context.SlashContext.get_response_future": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}}, "df": 4}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.ConversionError.errors": {"tf": 1}, "tanjun.ShlexParser.parameters": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.as_interval": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 2}, "tanjun.abc.Context.edit_last_response": {"tf": 2}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 2}, "tanjun.context.MessageContext.edit_last_response": {"tf": 2}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 2}, "tanjun.context.SlashContext.edit_last_response": {"tf": 2}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.errors.ConversionError.errors": {"tf": 1}, "tanjun.parsing.AbstractParser.parameters": {"tf": 1}, "tanjun.parsing.Option.names": {"tf": 1}, "tanjun.parsing.Parameter.converters": {"tf": 1}, "tanjun.parsing.ShlexParser.parameters": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1.4142135623730951}}, "df": 32, "[": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}}, "df": 20}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}}, "df": 6}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.as_interval": {"tf": 1.4142135623730951}, "tanjun.schedules.as_interval": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.cached_inject": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1.4142135623730951}, "tanjun.dependencies.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}}, "df": 33}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.add_component": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.remove_listener": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.remove_prefix": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.MessageCommand.copy": {"tf": 1}, "tanjun.MessageCommand.set_parent": {"tf": 1}, "tanjun.MessageCommandGroup.copy": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommand.copy": {"tf": 1}, "tanjun.SlashCommandGroup.copy": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.add_command": {"tf": 1}, "tanjun.Component.remove_command": {"tf": 1}, "tanjun.Component.add_slash_command": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.add_listener": {"tf": 1}, "tanjun.Component.remove_listener": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.add_schedule": {"tf": 1}, "tanjun.Component.remove_schedule": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.copy": {"tf": 1}, "tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.ExecutableCommand.copy": {"tf": 1}, "tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.add_check": {"tf": 1}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1}, "tanjun.abc.MessageCommand.set_parent": {"tf": 1}, "tanjun.abc.MessageCommand.copy": {"tf": 1}, "tanjun.abc.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.Component.add_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.add_message_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.add_listener": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Client.add_component": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.remove_listener": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1.4142135623730951}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.MessageCommand.copy": {"tf": 1}, "tanjun.commands.MessageCommand.set_parent": {"tf": 1}, "tanjun.commands.MessageCommandGroup.copy": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.PartialCommand.copy": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1}, "tanjun.commands.PartialCommand.add_check": {"tf": 1}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1}, "tanjun.commands.BaseSlashCommand.copy": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommand.copy": {"tf": 1}, "tanjun.commands.SlashCommandGroup.copy": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.add_command": {"tf": 1}, "tanjun.components.Component.remove_command": {"tf": 1}, "tanjun.components.Component.add_slash_command": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.add_listener": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.add_schedule": {"tf": 1}, "tanjun.components.Component.remove_schedule": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_prefix": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.copy": {"tf": 1}, "tanjun.parsing.Parameter.copy": {"tf": 1}, "tanjun.parsing.ParseableProto.set_parser": {"tf": 1}, "tanjun.parsing.ShlexParser.copy": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.schedules.AbstractSchedule.copy": {"tf": 1}, "tanjun.schedules.IntervalSchedule.copy": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1}}, "df": 224, "t": {"docs": {"tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}}, "df": 10}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.as_self_injecting": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Hooks": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.components": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.inject": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.parsing.Parameter.is_multi": {"tf": 1}}, "df": 4}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 12}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.with_all_checks": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}}, "df": 10}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.Hooks": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Hooks": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1.4142135623730951}}, "df": 9}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.components.OnCallbackSig": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}}, "df": 13, "s": {"docs": {"tanjun.Client": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.Component": {"tf": 1.4142135623730951}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.components.Component": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.parsing.ParseableProto": {"tf": 1}}, "df": 17}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.with_parser": {"tf": 1}, "tanjun.abc.HookSig": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}, "tanjun.parsing.with_parser": {"tf": 1}}, "df": 21}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}}, "df": 25}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 2.23606797749979}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 2.23606797749979}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 2.23606797749979}}, "df": 8}}}}}, "b": {"docs": {"tanjun.slash_command_group": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}}, "df": 8, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}}, "df": 6}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.ParserError": {"tf": 1}, "tanjun.errors.ParserError": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7}}}}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.conversion.ToChannel.async_caches": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1}, "tanjun.conversion.ToMember.async_caches": {"tf": 1}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1}, "tanjun.conversion.ToRole.async_caches": {"tf": 1}, "tanjun.conversion.ToUser.async_caches": {"tf": 1}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1}}, "df": 10}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.EntryNotFound": {"tf": 1}, "tanjun.dependencies.async_cache.EntryNotFound": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "w": {"docs": {"tanjun.with_sfw_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_sfw_check": {"tf": 1.4142135623730951}, "tanjun.checks.SfwCheck": {"tf": 1.7320508075688772}, "tanjun.checks.SfwCheck.__init__": {"tf": 1.4142135623730951}}, "df": 4}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.dependencies.async_cache": {"tf": 2.23606797749979}}, "df": 1}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.dependencies.async_cache": {"tf": 2}}, "df": 1}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"tanjun.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_global_commands": {"tf": 1.7320508075688772}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.get_client_callbacks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.SlashCommand.build": {"tf": 1}, "tanjun.SlashCommandGroup.build": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.abc.Context.component": {"tf": 1}, "tanjun.abc.Context.command": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.respond": {"tf": 1.7320508075688772}, "tanjun.abc.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.abc.BaseSlashCommand.build": {"tf": 1}, "tanjun.abc.SlashContext": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_global_commands": {"tf": 1.7320508075688772}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 1.7320508075688772}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.commands.SlashCommand.build": {"tf": 1}, "tanjun.commands.SlashCommandGroup.build": {"tf": 1}, "tanjun.context.MessageContext.command": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.command": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.respond": {"tf": 1.7320508075688772}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}}, "df": 71}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.inject": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck": {"tf": 1}, "tanjun.checks.OwnPermissionCheck": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1.4142135623730951}, "tanjun.injecting.Injected.__init__": {"tf": 1.4142135623730951}, "tanjun.utilities.calculate_permissions": {"tf": 1}}, "df": 30}}}, "y": {"docs": {"tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}}, "df": 14, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.EntryNotFound": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.EntryNotFound": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}}, "df": 10}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.abc.Context.client": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.context.SlashContext.client": {"tf": 1}}, "df": 7}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.as_message_command_group": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}}, "df": 6}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.shards": {"tf": 1}, "tanjun.abc.Context.shards": {"tf": 1}, "tanjun.abc.MessageContext.shard": {"tf": 1}, "tanjun.abc.Client.shards": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.shards": {"tf": 1}, "tanjun.context.MessageContext.shard": {"tf": 1}}, "df": 8, "s": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.abc.MessageContext.shard": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.context.MessageContext.shard": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {"tanjun.Hooks": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.hooks.AnyHooks": {"tf": 1}, "tanjun.hooks.MessageHooks": {"tf": 1}, "tanjun.hooks.SlashHooks": {"tf": 1}}, "df": 5}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}}, "df": 4}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"tanjun.ShlexParser": {"tf": 1}, "tanjun.ShlexParser.__init__": {"tf": 1}, "tanjun.with_parser": {"tf": 1}, "tanjun.parsing.ShlexParser": {"tf": 1}, "tanjun.parsing.ShlexParser.__init__": {"tf": 1}, "tanjun.parsing.with_parser": {"tf": 1}}, "df": 6, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 10}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.to_snowflake": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 2}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.clients.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 2}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_snowflake": {"tf": 1.7320508075688772}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}, "tanjun.conversion.search_snowflakes": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}, "tanjun.conversion.to_snowflake": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.SfCache": {"tf": 1}, "tanjun.dependencies.async_cache.SfChannelBound": {"tf": 1}, "tanjun.dependencies.async_cache.SfGuildBound": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1.4142135623730951}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}}, "df": 39, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1.4142135623730951}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}}, "df": 11, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}}, "df": 6}}}}}}}}}, "[": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}}, "df": 16}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.Client.from_rest_bot": {"tf": 1.7320508075688772}, "tanjun.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_global_commands": {"tf": 1.7320508075688772}, "tanjun.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_global_commands": {"tf": 1.7320508075688772}, "tanjun.abc.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.clients.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_rest_bot": {"tf": 1.7320508075688772}, "tanjun.clients.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 1.7320508075688772}, "tanjun.clients.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 21}}}}}}}}}}}}, "s": {"docs": {"tanjun.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_command": {"tf": 1.7320508075688772}, "tanjun.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_command": {"tf": 1.7320508075688772}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_command": {"tf": 1.7320508075688772}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.conversion.search_snowflakes": {"tf": 1.4142135623730951}, "tanjun.conversion.to_snowflake": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1.4142135623730951}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 17}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 18}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.prefix_getter": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.clients.Client.prefix_getter": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}}, "df": 12}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}}, "df": 9, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1.7320508075688772}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.injecting.UNDEFINED": {"tf": 1}, "tanjun.parsing.UndefinedDefaultT": {"tf": 1}, "tanjun.parsing.UNDEFINED_DEFAULT": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}}, "df": 13}, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}}, "df": 10}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}}, "df": 10}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.async_cache": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}}, "df": 9, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.HookSig": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}}, "df": 48}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 9}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 3.605551275463989}, "tanjun.inject": {"tf": 1.4142135623730951}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 3.605551275463989}, "tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1.4142135623730951}}, "df": 22}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Component.add_schedule": {"tf": 1.7320508075688772}, "tanjun.Component.remove_schedule": {"tf": 2}, "tanjun.Component.with_schedule": {"tf": 2.449489742783178}, "tanjun.as_interval": {"tf": 2.23606797749979}, "tanjun.components.Component.add_schedule": {"tf": 1.7320508075688772}, "tanjun.components.Component.remove_schedule": {"tf": 2}, "tanjun.components.Component.with_schedule": {"tf": 2.449489742783178}, "tanjun.schedules.AbstractSchedule": {"tf": 1}, "tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.AbstractSchedule.is_alive": {"tf": 1}, "tanjun.schedules.AbstractSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.AbstractSchedule.copy": {"tf": 1.7320508075688772}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.AbstractSchedule.stop": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 2.23606797749979}, "tanjun.schedules.IntervalSchedule": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 2}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.is_alive": {"tf": 1}, "tanjun.schedules.IntervalSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.IntervalSchedule.copy": {"tf": 1.7320508075688772}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.stop": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1.4142135623730951}}, "df": 29, "s": {"docs": {"tanjun.Component.schedules": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.Component.add_schedule": {"tf": 1}, "tanjun.Component.remove_schedule": {"tf": 1}, "tanjun.Component.with_schedule": {"tf": 1.4142135623730951}, "tanjun.components.Component.schedules": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_schedule": {"tf": 1}, "tanjun.components.Component.remove_schedule": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1.4142135623730951}}, "df": 10}, "r": {"docs": {"tanjun.schedules": {"tf": 1}}, "df": 1}, "d": {"docs": {"tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.AbstractSchedule.stop": {"tf": 1}, "tanjun.schedules.IntervalSchedule.interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.stop": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.as_interval": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.Context.respond": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 3}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}}, "df": 4, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.ConversionError.__init__": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1}}, "df": 11}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7}}}}}, "m": {"docs": {"tanjun.Component.with_schedule": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tanjun": {"tf": 1.7320508075688772}, "tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.with_dm_check": {"tf": 2}, "tanjun.with_guild_check": {"tf": 2}, "tanjun.with_nsfw_check": {"tf": 2}, "tanjun.with_sfw_check": {"tf": 2}, "tanjun.with_owner_check": {"tf": 2}, "tanjun.with_author_permission_check": {"tf": 2}, "tanjun.with_own_permission_check": {"tf": 2}, "tanjun.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.message_accepts": {"tf": 1}, "tanjun.Client.events": {"tf": 1}, "tanjun.Client.hooks": {"tf": 1}, "tanjun.Client.message_hooks": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1.7320508075688772}, "tanjun.Client.set_message_ctx_maker": {"tf": 1.7320508075688772}, "tanjun.Client.set_human_only": {"tf": 1.7320508075688772}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1.4142135623730951}, "tanjun.Client.remove_prefix": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.Client.iter_commands": {"tf": 1}, "tanjun.Client.iter_message_commands": {"tf": 1.4142135623730951}, "tanjun.Client.check_message_name": {"tf": 1.7320508075688772}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1.7320508075688772}, "tanjun.Client.on_message_create_event": {"tf": 1.4142135623730951}, "tanjun.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1.4142135623730951}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommand": {"tf": 1}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.MessageCommand.callback": {"tf": 1}, "tanjun.MessageCommandGroup": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.SlashCommandGroup": {"tf": 1}, "tanjun.Component": {"tf": 1}, "tanjun.Component.__init__": {"tf": 2.449489742783178}, "tanjun.Component.message_commands": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1.7320508075688772}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.with_message_command": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1.4142135623730951}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1.7320508075688772}, "tanjun.to_snowflake": {"tf": 1.4142135623730951}, "tanjun.cached_inject": {"tf": 1}, "tanjun.inject_lc": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.CommandError.__init__": {"tf": 2}, "tanjun.CommandError.message": {"tf": 1.4142135623730951}, "tanjun.MissingDependencyError.__init__": {"tf": 1.4142135623730951}, "tanjun.MissingDependencyError.message": {"tf": 1}, "tanjun.NotEnoughArgumentsError.__init__": {"tf": 1.4142135623730951}, "tanjun.TooManyArgumentsError.__init__": {"tf": 1.4142135623730951}, "tanjun.ParserError.__init__": {"tf": 1.4142135623730951}, "tanjun.ParserError.message": {"tf": 1.4142135623730951}, "tanjun.ParserError.parameter": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.ShlexParser.parse": {"tf": 1.7320508075688772}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.with_parser": {"tf": 1}, "tanjun.abc.Context.created_at": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 3}, "tanjun.abc.Context.edit_last_response": {"tf": 3}, "tanjun.abc.Context.respond": {"tf": 3}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.MessageCommand": {"tf": 1}, "tanjun.abc.MessageCommand.callback": {"tf": 1}, "tanjun.abc.MessageCommandGroup": {"tf": 1}, "tanjun.abc.MessageContext.content": {"tf": 1}, "tanjun.abc.MessageContext.message": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 3.605551275463989}, "tanjun.abc.SlashContext.mark_not_found": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 3.7416573867739413}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 3.4641016151377544}, "tanjun.abc.Component": {"tf": 1}, "tanjun.abc.Component.message_commands": {"tf": 1}, "tanjun.abc.Component.add_message_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.with_message_command": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1.4142135623730951}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1.7320508075688772}, "tanjun.abc.Client": {"tf": 1}, "tanjun.abc.Client.events": {"tf": 1}, "tanjun.abc.Client.prefixes": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.abc.Client.iter_commands": {"tf": 1}, "tanjun.abc.Client.iter_message_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.check_message_name": {"tf": 1.7320508075688772}, "tanjun.checks.any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_dm_check": {"tf": 2}, "tanjun.checks.with_guild_check": {"tf": 2}, "tanjun.checks.with_nsfw_check": {"tf": 2}, "tanjun.checks.with_sfw_check": {"tf": 2}, "tanjun.checks.with_owner_check": {"tf": 2}, "tanjun.checks.with_author_permission_check": {"tf": 2}, "tanjun.checks.with_own_permission_check": {"tf": 2}, "tanjun.checks.DmCheck.__init__": {"tf": 2}, "tanjun.checks.GuildCheck.__init__": {"tf": 2}, "tanjun.checks.NsfwCheck.__init__": {"tf": 2}, "tanjun.checks.SfwCheck.__init__": {"tf": 2}, "tanjun.checks.OwnerCheck.__init__": {"tf": 2}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 2}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 2}, "tanjun.clients.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.message_accepts": {"tf": 1}, "tanjun.clients.Client.events": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1.7320508075688772}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1.7320508075688772}, "tanjun.clients.Client.set_human_only": {"tf": 1.7320508075688772}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1.4142135623730951}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.Client.iter_commands": {"tf": 1}, "tanjun.clients.Client.iter_message_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.check_message_name": {"tf": 1.7320508075688772}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1.7320508075688772}, "tanjun.clients.Client.on_message_create_event": {"tf": 1.4142135623730951}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.ALL": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.DM_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.GUILD_ONLY": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.NONE": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1.4142135623730951}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommand": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.MessageCommand.callback": {"tf": 1}, "tanjun.commands.MessageCommandGroup": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup": {"tf": 1}, "tanjun.components.Component": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 2.449489742783178}, "tanjun.components.Component.message_commands": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1.7320508075688772}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.with_message_command": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1.4142135623730951}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.content": {"tf": 1}, "tanjun.context.MessageContext.created_at": {"tf": 1}, "tanjun.context.MessageContext.message": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 3}, "tanjun.context.MessageContext.edit_last_response": {"tf": 3}, "tanjun.context.MessageContext.respond": {"tf": 3}, "tanjun.context.SlashContext.created_at": {"tf": 1}, "tanjun.context.SlashContext.mark_not_found": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 3.7416573867739413}, "tanjun.context.SlashContext.create_initial_response": {"tf": 3.4641016151377544}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 3}, "tanjun.context.SlashContext.edit_last_response": {"tf": 3}, "tanjun.context.SlashContext.respond": {"tf": 3}, "tanjun.conversion.parse_snowflake": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_channel_id": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_emoji_id": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_role_id": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_user_id": {"tf": 1.4142135623730951}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.dependencies.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.errors.CommandError.__init__": {"tf": 2}, "tanjun.errors.CommandError.message": {"tf": 1.4142135623730951}, "tanjun.errors.MissingDependencyError.__init__": {"tf": 1.4142135623730951}, "tanjun.errors.MissingDependencyError.message": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.__init__": {"tf": 1.4142135623730951}, "tanjun.errors.TooManyArgumentsError.__init__": {"tf": 1.4142135623730951}, "tanjun.errors.ParserError.__init__": {"tf": 1.4142135623730951}, "tanjun.errors.ParserError.message": {"tf": 1.4142135623730951}, "tanjun.errors.ParserError.parameter": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.MessageHooks": {"tf": 1}, "tanjun.parsing": {"tf": 1}, "tanjun.parsing.AbstractParser": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1.7320508075688772}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1}, "tanjun.parsing.ParseableProto.callback": {"tf": 1}, "tanjun.parsing.ParseableProto.parser": {"tf": 1}, "tanjun.parsing.ParseableProto.set_parser": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.parse": {"tf": 1.7320508075688772}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.parsing.with_parser": {"tf": 1}}, "df": 223, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 2.449489742783178}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.MessageCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.Hooks": {"tf": 1}, "tanjun.ShlexParser.parse": {"tf": 1.4142135623730951}, "tanjun.with_parser": {"tf": 1}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 2.449489742783178}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}, "tanjun.hooks.MessageHooks": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.parse": {"tf": 1.4142135623730951}, "tanjun.parsing.with_parser": {"tf": 1}}, "df": 27, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.check_message_name": {"tf": 1}, "tanjun.as_message_command": {"tf": 1.4142135623730951}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.MessageCommandGroup.with_command": {"tf": 1.4142135623730951}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.inject_lc": {"tf": 1}, "tanjun.abc.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.with_command": {"tf": 1.4142135623730951}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1.4142135623730951}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.with_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}}, "df": 23, "[": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.add_message_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}}, "df": 7}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1.4142135623730951}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 1}}, "df": 7}}}}}, "t": {"docs": {"tanjun.Component.with_message_command": {"tf": 1.4142135623730951}, "tanjun.abc.Component.with_message_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_message_command": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.with_listener": {"tf": 1.4142135623730951}, "tanjun.Client.on_message_create_event": {"tf": 1}, "tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1.4142135623730951}, "tanjun.abc.Client.with_listener": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_listener": {"tf": 1.4142135623730951}, "tanjun.clients.Client.on_message_create_event": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}}}}}, "s": {"docs": {"tanjun.Client.is_human_only": {"tf": 1}, "tanjun.Client.set_message_accepts": {"tf": 1.4142135623730951}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.respond": {"tf": 1.7320508075688772}, "tanjun.abc.MessageHooks": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.clients.Client.is_human_only": {"tf": 1}, "tanjun.clients.Client.set_message_accepts": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.respond": {"tf": 1.7320508075688772}}, "df": 20}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.message_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}}, "df": 6}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"tanjun.Client.set_message_accepts": {"tf": 1}, "tanjun.clients.Client.set_message_accepts": {"tf": 1}}, "df": 2}}}}}}}}}}}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}}, "df": 2}}, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.SlashContext.expires_at": {"tf": 1}, "tanjun.context.SlashContext.expires_at": {"tf": 1}}, "df": 2}}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.defer": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun": {"tf": 1.7320508075688772}, "tanjun.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.Client.open": {"tf": 1}, "tanjun.to_snowflake": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.open": {"tf": 1}}, "df": 8, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 2.449489742783178}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1.7320508075688772}, "tanjun.abc.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 2.449489742783178}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1.7320508075688772}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}}, "df": 12}}}}, "s": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 3.1622776601683795}, "tanjun.abc.Context.edit_last_response": {"tf": 3.1622776601683795}, "tanjun.abc.Context.respond": {"tf": 3.1622776601683795}, "tanjun.abc.MessageContext.respond": {"tf": 3.1622776601683795}, "tanjun.abc.SlashContext.create_followup": {"tf": 3.1622776601683795}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 3.1622776601683795}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 3.1622776601683795}, "tanjun.context.MessageContext.edit_last_response": {"tf": 3.1622776601683795}, "tanjun.context.MessageContext.respond": {"tf": 3.1622776601683795}, "tanjun.context.SlashContext.create_followup": {"tf": 3.1622776601683795}, "tanjun.context.SlashContext.create_initial_response": {"tf": 3.1622776601683795}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 3.1622776601683795}, "tanjun.context.SlashContext.edit_last_response": {"tf": 3.1622776601683795}, "tanjun.context.SlashContext.respond": {"tf": 3.1622776601683795}, "tanjun.conversion.ToMember": {"tf": 1}}, "df": 15, "/": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.conversion.ToChannel": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}}, "df": 14}}}}}}}}, "t": {"docs": {"tanjun.abc.ExecutableCommand.checks": {"tf": 1}, "tanjun.commands.PartialCommand.checks": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.prefix_getter": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.Component.remove_command": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.clients.Client.prefix_getter": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.remove_command": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.dependencies.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}}, "df": 46, "s": {"docs": {"tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.expires_at": {"tf": 1}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.expires_at": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.conversion.to_emoji": {"tf": 1}, "tanjun.conversion.ToEmoji": {"tf": 1}}, "df": 16}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"tanjun.Client.metadata": {"tf": 1}, "tanjun.Component.metadata": {"tf": 1}, "tanjun.abc.ExecutableCommand.metadata": {"tf": 1}, "tanjun.abc.Component.metadata": {"tf": 1}, "tanjun.abc.Client.metadata": {"tf": 1}, "tanjun.clients.Client.metadata": {"tf": 1}, "tanjun.commands.PartialCommand.metadata": {"tf": 1}, "tanjun.components.Component.metadata": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor": {"tf": 1}}, "df": 10}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}}, "df": 9}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}}, "df": 16}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}}, "df": 4}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 2.449489742783178}, "tanjun.BucketResource.MEMBER": {"tf": 1}, "tanjun.abc.Context.member": {"tf": 1}, "tanjun.abc.SlashContext.member": {"tf": 1}, "tanjun.abc.SlashOption.value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 2.23606797749979}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 2.449489742783178}, "tanjun.context.MessageContext.member": {"tf": 1}, "tanjun.context.SlashContext.member": {"tf": 1}, "tanjun.context.SlashOption.value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 2.23606797749979}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1.7320508075688772}, "tanjun.conversion.to_member": {"tf": 1}, "tanjun.conversion.ToMember": {"tf": 1}, "tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.MEMBER": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 2}, "tanjun.utilities.fetch_permissions": {"tf": 2}}, "df": 26, "s": {"docs": {"tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.conversion.ToMember": {"tf": 1}}, "df": 7}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.conversion.to_presence": {"tf": 1}, "tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}}, "df": 4}}}}}}}}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.utilities.calculate_permissions": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 19}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.abc.Client": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.components": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 22, "d": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client.__init__": {"tf": 2}, "tanjun.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.clients.Client.__init__": {"tf": 2}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.7320508075688772}}, "df": 5, "=": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {"tanjun.Client.__init__": {"tf": 2.8284271247461903}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.events": {"tf": 1}, "tanjun.Client.shards": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 2}, "tanjun.InMemoryConcurrencyLimiter.close": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter.open": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 2}, "tanjun.InMemoryCooldownManager.close": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.open": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.abc.Context.events": {"tf": 1}, "tanjun.abc.Context.shards": {"tf": 1}, "tanjun.abc.ListenerCallbackSig": {"tf": 1}, "tanjun.abc.Client.events": {"tf": 1}, "tanjun.abc.Client.shards": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 2.8284271247461903}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.events": {"tf": 1}, "tanjun.clients.Client.shards": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 2}, "tanjun.dependencies.InMemoryConcurrencyLimiter.close": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter.open": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 2}, "tanjun.dependencies.InMemoryCooldownManager.close": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.open": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 2}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.close": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 2}, "tanjun.dependencies.limiters.InMemoryCooldownManager.close": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.open": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 58}, "s": {"docs": {"tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.dependencies.AbstractCooldownManager": {"tf": 1}, "tanjun.dependencies.data": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager": {"tf": 1}, "tanjun.dependencies.owners": {"tf": 1}}, "df": 4}}}}}, "y": {"docs": {"tanjun.TooManyArgumentsError": {"tf": 1}, "tanjun.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 2}, "tanjun.abc.Context.edit_last_response": {"tf": 2}, "tanjun.abc.Context.respond": {"tf": 1.7320508075688772}, "tanjun.abc.MessageContext.respond": {"tf": 2}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 2}, "tanjun.context.MessageContext.edit_last_response": {"tf": 2}, "tanjun.context.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 2}, "tanjun.context.SlashContext.edit_last_response": {"tf": 2}, "tanjun.context.SlashContext.respond": {"tf": 1.7320508075688772}, "tanjun.errors.TooManyArgumentsError": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.__init__": {"tf": 1}}, "df": 16}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"tanjun": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.abc.SlashContext.mark_not_found": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.context.SlashContext.mark_not_found": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}}, "df": 9}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.listeners": {"tf": 1}, "tanjun.Client.metadata": {"tf": 1.4142135623730951}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.Component.listeners": {"tf": 1}, "tanjun.Component.metadata": {"tf": 1.4142135623730951}, "tanjun.abc.ExecutableCommand.metadata": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.options": {"tf": 1}, "tanjun.abc.Component.listeners": {"tf": 1}, "tanjun.abc.Component.metadata": {"tf": 1.4142135623730951}, "tanjun.abc.Client.listeners": {"tf": 1}, "tanjun.abc.Client.metadata": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.listeners": {"tf": 1}, "tanjun.clients.Client.metadata": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.commands.PartialCommand.metadata": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.components.Component.listeners": {"tf": 1}, "tanjun.components.Component.metadata": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.options": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}}, "df": 36, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}}, "df": 20}}}, "k": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.utilities.CastedView": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.utilities.CastedView": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.utilities.calculate_permissions": {"tf": 1}}, "df": 1}}}}}}}, "(": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.utilities.CastedView": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.metadata": {"tf": 1}, "tanjun.Component.metadata": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Context.has_responded": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.ExecutableCommand.metadata": {"tf": 1}, "tanjun.abc.Component.metadata": {"tf": 1}, "tanjun.abc.Client.metadata": {"tf": 1}, "tanjun.clients.Client.metadata": {"tf": 1}, "tanjun.commands.PartialCommand.metadata": {"tf": 1}, "tanjun.components.Component.metadata": {"tf": 1}, "tanjun.context.MessageContext.has_responded": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.has_responded": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}}, "df": 22}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.abc.Client.prefixes": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.get_response_future": {"tf": 1}, "tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 42, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1.4142135623730951}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1.4142135623730951}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1.4142135623730951}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.utilities.match_prefix_names": {"tf": 1.4142135623730951}}, "df": 12}, "s": {"docs": {"tanjun.MessageCommand.callback": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 2}, "tanjun.Component.check_slash_name": {"tf": 1.4142135623730951}, "tanjun.abc.MessageCommand.callback": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 2}, "tanjun.abc.Component.check_slash_name": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommand.callback": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 2}, "tanjun.components.Component.check_slash_name": {"tf": 1.4142135623730951}}, "df": 9}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 10}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}}, "df": 14}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.open": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.inject_lc": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}}, "df": 54, "r": {"docs": {"tanjun.Client.set_message_ctx_maker": {"tf": 1.7320508075688772}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1.7320508075688772}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1.7320508075688772}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1.7320508075688772}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1.4142135623730951}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.conversion.to_emoji": {"tf": 1}, "tanjun.conversion.ToEmoji": {"tf": 1}}, "df": 16}}}}, "x": {"docs": {"tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.as_interval": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1.4142135623730951}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}}, "df": 23, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.as_interval": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1.4142135623730951}}, "df": 10}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}}, "df": 2}}}, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}}, "df": 8}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun": {"tf": 1}, "tanjun.as_loader": {"tf": 1.4142135623730951}, "tanjun.as_unloader": {"tf": 1.7320508075688772}, "tanjun.Client.load_modules": {"tf": 3.4641016151377544}, "tanjun.Client.unload_modules": {"tf": 2.23606797749979}, "tanjun.Client.reload_modules": {"tf": 2.6457513110645907}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 3.4641016151377544}, "tanjun.abc.Client.unload_modules": {"tf": 2.23606797749979}, "tanjun.abc.Client.reload_modules": {"tf": 2.6457513110645907}, "tanjun.clients.as_loader": {"tf": 1.4142135623730951}, "tanjun.clients.as_unloader": {"tf": 1.7320508075688772}, "tanjun.clients.Client.load_modules": {"tf": 3.4641016151377544}, "tanjun.clients.Client.unload_modules": {"tf": 2.23606797749979}, "tanjun.clients.Client.reload_modules": {"tf": 2.6457513110645907}, "tanjun.components.Component.make_loader": {"tf": 1}}, "df": 16, "s": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.as_loader": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1.7320508075688772}, "tanjun.Client.unload_modules": {"tf": 1.7320508075688772}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1.7320508075688772}, "tanjun.abc.Client.load_modules": {"tf": 1.7320508075688772}, "tanjun.abc.Client.unload_modules": {"tf": 1.7320508075688772}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1.7320508075688772}, "tanjun.clients.Client.unload_modules": {"tf": 1.7320508075688772}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1.7320508075688772}}, "df": 14}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.as_unloader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "(": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.reload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {"tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1.7320508075688772}, "tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1.7320508075688772}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}}, "df": 35, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1.4142135623730951}}, "df": 10}}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.hooks": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.metadata": {"tf": 1}, "tanjun.Component.metadata": {"tf": 1}, "tanjun.abc.ExecutableCommand.metadata": {"tf": 1}, "tanjun.abc.Component.metadata": {"tf": 1}, "tanjun.abc.Client.metadata": {"tf": 1}, "tanjun.clients.Client.metadata": {"tf": 1}, "tanjun.commands.PartialCommand.metadata": {"tf": 1}, "tanjun.components.Component.metadata": {"tf": 1}}, "df": 8}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.Client": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.prefix_getter": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.to_datetime": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.respond": {"tf": 1.7320508075688772}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.prefix_getter": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.respond": {"tf": 1.7320508075688772}, "tanjun.conversion": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1}, "tanjun.conversion.to_datetime": {"tf": 1}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.CacheIterator": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1}}, "df": 79}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.add_component": {"tf": 1}, "tanjun.abc.Client.add_component": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.dependencies.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.4142135623730951}}, "df": 4, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.Component.with_schedule": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_schedule": {"tf": 1}}, "df": 17, "s": {"docs": {"tanjun.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}}, "df": 18}}}, "s": {"docs": {"tanjun.abc.MessageContext.content": {"tf": 1}, "tanjun.context.MessageContext.content": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"tanjun.SlashCommand.add_int_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.7320508075688772}}, "df": 4}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.MissingDependencyError.__init__": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.errors.MissingDependencyError.__init__": {"tf": 1}}, "df": 13, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1.7320508075688772}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1.7320508075688772}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1}, "tanjun.parsing.Parameter.is_multi": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1.7320508075688772}}, "df": 16, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}}, "df": 37}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.metadata": {"tf": 1.4142135623730951}, "tanjun.Component.metadata": {"tf": 1.4142135623730951}, "tanjun.abc.ExecutableCommand.metadata": {"tf": 1.4142135623730951}, "tanjun.abc.Component.metadata": {"tf": 1.4142135623730951}, "tanjun.abc.Client.metadata": {"tf": 1.4142135623730951}, "tanjun.clients.Client.metadata": {"tf": 1.4142135623730951}, "tanjun.commands.PartialCommand.metadata": {"tf": 1.4142135623730951}, "tanjun.components.Component.metadata": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}}, "df": 3}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Component.execute_message": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.inject_lc": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}}, "df": 5}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}}, "df": 2}}}, "n": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client": {"tf": 1}, "tanjun.Client.checks": {"tf": 1}, "tanjun.Client.metadata": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.Client.on_interaction_create_event": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.MessageCommand.callback": {"tf": 1}, "tanjun.MessageCommandGroup.commands": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.Component": {"tf": 1}, "tanjun.Component.name": {"tf": 1}, "tanjun.Component.metadata": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.to_snowflake": {"tf": 1}, "tanjun.BucketResource.MEMBER": {"tf": 1}, "tanjun.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.BucketResource.GUILD": {"tf": 1}, "tanjun.inject_lc": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.LazyConstant": {"tf": 1}, "tanjun.ParserError": {"tf": 1}, "tanjun.ParserError.message": {"tf": 1}, "tanjun.ParserError.parameter": {"tf": 1}, "tanjun.Hooks": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1.4142135623730951}, "tanjun.with_option": {"tf": 1}, "tanjun.abc.CommandCallbackSig": {"tf": 1}, "tanjun.abc.Context.component": {"tf": 1}, "tanjun.abc.Context.command": {"tf": 1}, "tanjun.abc.Context.created_at": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.ExecutableCommand.metadata": {"tf": 1}, "tanjun.abc.HookSig": {"tf": 1}, "tanjun.abc.MessageCommand.callback": {"tf": 1}, "tanjun.abc.MessageCommandGroup.commands": {"tf": 1}, "tanjun.abc.MessageContext.command": {"tf": 1}, "tanjun.abc.MessageContext.shard": {"tf": 1}, "tanjun.abc.SlashCommandGroup": {"tf": 1}, "tanjun.abc.SlashContext.command": {"tf": 1}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.abc.Component.name": {"tf": 1}, "tanjun.abc.Component.metadata": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Client.metadata": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.checks": {"tf": 1}, "tanjun.clients.Client.metadata": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommand.callback": {"tf": 1}, "tanjun.commands.MessageCommandGroup.commands": {"tf": 1}, "tanjun.commands.PartialCommand.metadata": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.components.Component": {"tf": 1}, "tanjun.components.Component.name": {"tf": 1}, "tanjun.components.Component.metadata": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.context.MessageContext.command": {"tf": 1}, "tanjun.context.MessageContext.created_at": {"tf": 1}, "tanjun.context.MessageContext.shard": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.command": {"tf": 1}, "tanjun.context.SlashContext.created_at": {"tf": 1}, "tanjun.context.SlashContext.get_response_future": {"tf": 1}, "tanjun.context.SlashContext.defer": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.conversion.to_emoji": {"tf": 1}, "tanjun.conversion.to_snowflake": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}, "tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.CacheMissError": {"tf": 1}, "tanjun.dependencies.EntryNotFound": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.LazyConstant": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.BucketResource.GUILD": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.async_cache.CacheMissError": {"tf": 1}, "tanjun.dependencies.async_cache.EntryNotFound": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.LazyConstant": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GUILD": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.errors.ParserError": {"tf": 1}, "tanjun.errors.ParserError.message": {"tf": 1}, "tanjun.errors.ParserError.parameter": {"tf": 1}, "tanjun.hooks.AnyHooks": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.MessageHooks": {"tf": 1}, "tanjun.hooks.SlashHooks": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1.4142135623730951}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1.4142135623730951}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 274, "s": {"docs": {"tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 53}, "d": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}}, "df": 4}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}}, "df": 19}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.checks.CallbackReturnT": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.cached_inject": {"tf": 1.4142135623730951}, "tanjun.inject_lc": {"tf": 1.4142135623730951}, "tanjun.inject": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.inject_lc": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.inject_lc": {"tf": 1.4142135623730951}, "tanjun.injecting.inject": {"tf": 1}}, "df": 16}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}}, "df": 13}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.delete_initial_response": {"tf": 1}, "tanjun.abc.Context.delete_last_response": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.fetch_initial_response": {"tf": 1}, "tanjun.abc.Context.fetch_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.expires_at": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.delete_initial_response": {"tf": 1}, "tanjun.context.MessageContext.delete_last_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_initial_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.expires_at": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.delete_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_initial_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 30}}}}}}}}}}}, "n": {"docs": {"tanjun.Client.is_human_only": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.clients.Client.is_human_only": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}}, "df": 15, "e": {"docs": {"tanjun": {"tf": 2}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.as_loader": {"tf": 1.4142135623730951}, "tanjun.as_unloader": {"tf": 1.4142135623730951}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.hooks": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.Client.get_component_by_name": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1.4142135623730951}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.slash_command_group": {"tf": 1.7320508075688772}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.MessageCommand.callback": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.cached_inject": {"tf": 1.7320508075688772}, "tanjun.inject_lc": {"tf": 1}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.LazyConstant.get_value": {"tf": 1}, "tanjun.ParserError.__init__": {"tf": 1}, "tanjun.ParserError.parameter": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.inject": {"tf": 2}, "tanjun.with_parser": {"tf": 1}, "tanjun.as_interval": {"tf": 1}, "tanjun.abc.Context.component": {"tf": 1}, "tanjun.abc.Context.command": {"tf": 1}, "tanjun.abc.Context.guild_id": {"tf": 1}, "tanjun.abc.Context.member": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.abc.ListenerCallbackSig": {"tf": 1}, "tanjun.abc.MessageCommand.callback": {"tf": 1}, "tanjun.abc.MessageContext.shard": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.get_component_by_name": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1.4142135623730951}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1.4142135623730951}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1.4142135623730951}, "tanjun.clients.as_unloader": {"tf": 1.4142135623730951}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.get_component_by_name": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.slash_command_group": {"tf": 1.7320508075688772}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.MessageCommand.callback": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.components.OnCallbackSig": {"tf": 1}, "tanjun.context.MessageContext.command": {"tf": 1}, "tanjun.context.MessageContext.guild_id": {"tf": 1}, "tanjun.context.MessageContext.member": {"tf": 1}, "tanjun.context.MessageContext.shard": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.command": {"tf": 1}, "tanjun.context.SlashContext.guild_id": {"tf": 1}, "tanjun.context.SlashContext.member": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1.4142135623730951}, "tanjun.dependencies.cached_inject": {"tf": 1.7320508075688772}, "tanjun.dependencies.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.cached_inject": {"tf": 1.7320508075688772}, "tanjun.dependencies.data.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.errors.ParserError.__init__": {"tf": 1}, "tanjun.errors.ParserError.parameter": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.injecting.inject": {"tf": 2}, "tanjun.injecting.Injected.__init__": {"tf": 1.7320508075688772}, "tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1}, "tanjun.parsing.with_parser": {"tf": 1}, "tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}, "tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 262}, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.Client.set_human_only": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tanjun": {"tf": 1.7320508075688772}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.add_component": {"tf": 1}, "tanjun.Client.get_component_by_name": {"tf": 1.7320508075688772}, "tanjun.Client.remove_component_by_name": {"tf": 2}, "tanjun.Client.add_client_callback": {"tf": 1.7320508075688772}, "tanjun.Client.dispatch_client_callback": {"tf": 1.7320508075688772}, "tanjun.Client.get_client_callbacks": {"tf": 2}, "tanjun.Client.remove_client_callback": {"tf": 1.7320508075688772}, "tanjun.Client.with_client_callback": {"tf": 1.7320508075688772}, "tanjun.Client.check_message_name": {"tf": 2.449489742783178}, "tanjun.Client.check_slash_name": {"tf": 1.7320508075688772}, "tanjun.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.as_message_command": {"tf": 1.4142135623730951}, "tanjun.as_message_command_group": {"tf": 1.4142135623730951}, "tanjun.as_slash_command": {"tf": 2}, "tanjun.slash_command_group": {"tf": 2.6457513110645907}, "tanjun.MessageCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.MessageCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 2}, "tanjun.SlashCommand.add_str_option": {"tf": 2.8284271247461903}, "tanjun.SlashCommand.add_int_option": {"tf": 2.449489742783178}, "tanjun.SlashCommand.add_float_option": {"tf": 2.449489742783178}, "tanjun.SlashCommand.add_bool_option": {"tf": 2}, "tanjun.SlashCommand.add_user_option": {"tf": 2}, "tanjun.SlashCommand.add_member_option": {"tf": 2}, "tanjun.SlashCommand.add_channel_option": {"tf": 2}, "tanjun.SlashCommand.add_role_option": {"tf": 2}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 2}, "tanjun.SlashCommandGroup.__init__": {"tf": 2}, "tanjun.with_str_slash_option": {"tf": 1.7320508075688772}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.with_command": {"tf": 2}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 3}, "tanjun.Component.check_slash_name": {"tf": 2.23606797749979}, "tanjun.cached_inject": {"tf": 1}, "tanjun.ConversionError.parameter": {"tf": 1}, "tanjun.NotEnoughArgumentsError.parameter": {"tf": 1}, "tanjun.TooManyArgumentsError.parameter": {"tf": 1}, "tanjun.ParserError.__init__": {"tf": 1}, "tanjun.ParserError.parameter": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.with_option": {"tf": 1.4142135623730951}, "tanjun.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.abc.Context.triggering_name": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.content": {"tf": 1}, "tanjun.abc.MessageContext.triggering_name": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.BaseSlashCommand.name": {"tf": 1}, "tanjun.abc.SlashOption.name": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 3}, "tanjun.abc.Component.check_slash_name": {"tf": 2.23606797749979}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.get_component_by_name": {"tf": 1.7320508075688772}, "tanjun.abc.Client.remove_component_by_name": {"tf": 2}, "tanjun.abc.Client.add_client_callback": {"tf": 1.7320508075688772}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1.7320508075688772}, "tanjun.abc.Client.get_client_callbacks": {"tf": 2}, "tanjun.abc.Client.remove_client_callback": {"tf": 1.7320508075688772}, "tanjun.abc.Client.with_client_callback": {"tf": 1.7320508075688772}, "tanjun.abc.Client.check_message_name": {"tf": 2.449489742783178}, "tanjun.abc.Client.check_slash_name": {"tf": 1.7320508075688772}, "tanjun.abc.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.get_component_by_name": {"tf": 1.7320508075688772}, "tanjun.clients.Client.remove_component_by_name": {"tf": 2}, "tanjun.clients.Client.add_client_callback": {"tf": 1.7320508075688772}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1.7320508075688772}, "tanjun.clients.Client.get_client_callbacks": {"tf": 2}, "tanjun.clients.Client.remove_client_callback": {"tf": 1.7320508075688772}, "tanjun.clients.Client.with_client_callback": {"tf": 1.7320508075688772}, "tanjun.clients.Client.check_message_name": {"tf": 2.449489742783178}, "tanjun.clients.Client.check_slash_name": {"tf": 1.7320508075688772}, "tanjun.clients.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.commands.as_message_command": {"tf": 1.4142135623730951}, "tanjun.commands.as_message_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 2}, "tanjun.commands.slash_command_group": {"tf": 2.6457513110645907}, "tanjun.commands.MessageCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand.name": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 2}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 2.8284271247461903}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 2.449489742783178}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 2.449489742783178}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 2}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 2}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 2}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 2}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 2}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 2}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 2}, "tanjun.commands.with_str_slash_option": {"tf": 1.7320508075688772}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 2}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 3}, "tanjun.components.Component.check_slash_name": {"tf": 2.23606797749979}, "tanjun.context.MessageContext.content": {"tf": 1}, "tanjun.context.MessageContext.triggering_name": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.triggering_name": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashOption.name": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.errors.ConversionError.parameter": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.parameter": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.parameter": {"tf": 1}, "tanjun.errors.ParserError.__init__": {"tf": 1}, "tanjun.errors.ParserError.parameter": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.utilities.match_prefix_names": {"tf": 1.7320508075688772}}, "df": 127, "s": {"docs": {"tanjun.ClientCallbackNames": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.as_message_command": {"tf": 1.4142135623730951}, "tanjun.as_message_command_group": {"tf": 2}, "tanjun.MessageCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.MessageCommand.names": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 2}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.with_option": {"tf": 1.4142135623730951}, "tanjun.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.abc.ClientCallbackNames": {"tf": 1}, "tanjun.abc.MessageCommand.names": {"tf": 1}, "tanjun.abc.SlashContext.options": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1.4142135623730951}, "tanjun.commands.as_message_command_group": {"tf": 2}, "tanjun.commands.MessageCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommand.names": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 2}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.context.SlashContext.options": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.Option.names": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.utilities.match_prefix_names": {"tf": 1.7320508075688772}}, "df": 51}, "(": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}}, "df": 3}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.utilities.CastedView": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {"tanjun.parsing.Option": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.conversion.from_datetime": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "w": {"docs": {"tanjun.with_nsfw_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_nsfw_check": {"tf": 1.4142135623730951}, "tanjun.checks.NsfwCheck": {"tf": 1.7320508075688772}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.conversion.ToChannel.async_caches": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.async_caches": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.async_caches": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.async_caches": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.injecting.CallbackDescriptor": {"tf": 1}}, "df": 27}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}}, "df": 6}}}}}}}}}, "w": {"docs": {"tanjun.Client.reload_modules": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 1}}, "df": 13}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.CommandCallbackSig": {"tf": 1}, "tanjun.abc.MaybeAwaitableT": {"tf": 1}, "tanjun.abc.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.context.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}}, "df": 12, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}}, "df": 2}}, "s": {"docs": {"tanjun.ShlexParser.needs_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.TypeDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}, "tanjun.parsing.Parameter.needs_injector": {"tf": 1}, "tanjun.parsing.ShlexParser.needs_injector": {"tf": 1}}, "df": 15}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}}, "df": 6}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}}, "df": 5}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.Context.component": {"tf": 1}, "tanjun.abc.Context.command": {"tf": 1}, "tanjun.context.MessageContext.command": {"tf": 1}, "tanjun.context.SlashContext.command": {"tf": 1}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}, "tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}}, "df": 16}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.schedules.AbstractSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.iteration_count": {"tf": 1}}, "df": 10}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 47}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"tanjun": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommandGroup": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.SlashCommandGroup": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata": {"tf": 1}, "tanjun.dependencies.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 36}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.as_unloader": {"tf": 2}, "tanjun.Client.unload_modules": {"tf": 2}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.abc.ClientLoader": {"tf": 1}, "tanjun.abc.ClientLoader.unload": {"tf": 1.4142135623730951}, "tanjun.abc.Client.unload_modules": {"tf": 2}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 2}, "tanjun.clients.Client.unload_modules": {"tf": 2}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}}, "df": 12, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.as_unloader": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}}, "df": 5, "s": {"docs": {"tanjun.Client.unload_modules": {"tf": 1.7320508075688772}, "tanjun.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.abc.Client.unload_modules": {"tf": 1.7320508075688772}, "tanjun.abc.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.clients.Client.unload_modules": {"tf": 1.7320508075688772}, "tanjun.clients.Client.reload_modules": {"tf": 1.4142135623730951}}, "df": 6}}, "d": {"docs": {"tanjun.abc.ClientLoader.unload": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}}, "df": 8}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.with_user_slash_option": {"tf": 1}, "tanjun.inject": {"tf": 2}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.context.ResponseTypeT": {"tf": 1}, "tanjun.injecting.UndefinedOr": {"tf": 1}, "tanjun.injecting.inject": {"tf": 2}, "tanjun.injecting.Injected.__init__": {"tf": 2}}, "df": 7, "[": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.defer": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}}, "df": 40}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.dispatch_client_callback": {"tf": 1}, "tanjun.Client.get_client_callbacks": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.to_snowflake": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.conversion.parse_snowflake": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}, "tanjun.conversion.search_snowflakes": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}}, "df": 35}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.add_prefix": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}}, "df": 8}}}}}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 16}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.as_interval": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}}, "df": 10}}}, "a": {"docs": {"tanjun.inject": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}}, "df": 9}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}}, "df": 17}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.abc.MessageContext.respond": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.as_message_command_group": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.name": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Component.name": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.name": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}}, "df": 31}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}}, "df": 26, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.conversion.to_emoji": {"tf": 1.4142135623730951}, "tanjun.conversion.ToEmoji": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.Undefined": {"tf": 1}, "tanjun.injecting.UNDEFINED": {"tf": 1}, "tanjun.injecting.UndefinedOr": {"tf": 1}, "tanjun.injecting.InjectorClient.get_type_dependency": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 56, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.injecting.AbstractInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.get_type_dependency": {"tf": 1}}, "df": 5, "[": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}}, "df": 20}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.respond": {"tf": 1.7320508075688772}, "tanjun.abc.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.respond": {"tf": 1.7320508075688772}}, "df": 14}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}}, "df": 14}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.MessageContext.respond": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 6}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.defer": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}}, "df": 7}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.parsing.Option.empty_value": {"tf": 1}, "tanjun.parsing.Parameter.default": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "r": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 11}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1.4142135623730951}, "tanjun.abc.Context.fetch_guild": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}}, "df": 14}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}}, "df": 5}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.remove_component_by_name": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}}, "df": 6}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}}, "df": 2}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}}, "df": 12}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client.__init__": {"tf": 2.449489742783178}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.set_global_commands": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 1.4142135623730951}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1.4142135623730951}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.build": {"tf": 1}, "tanjun.SlashCommandGroup.build": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.LazyConstant": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1.4142135623730951}, "tanjun.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.as_interval": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.BaseSlashCommand.build": {"tf": 1}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.abc.Client.prefixes": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 2.449489742783178}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.set_global_commands": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.build": {"tf": 1}, "tanjun.commands.SlashCommandGroup.build": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.defer": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1}, "tanjun.conversion.to_emoji": {"tf": 1}, "tanjun.conversion.ToEmoji": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.LazyConstant": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.dependencies.data.LazyConstant": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 98, "r": {"docs": {"tanjun": {"tf": 3}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.Client.open": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 3}, "tanjun.with_mentionable_slash_option": {"tf": 1.4142135623730951}, "tanjun.to_bool": {"tf": 1}, "tanjun.to_color": {"tf": 1}, "tanjun.to_colour": {"tf": 1}, "tanjun.BucketResource.USER": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.abc.Context.author": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 2}, "tanjun.abc.SlashOption.value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 2.449489742783178}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 2.6457513110645907}, "tanjun.checks.OwnPermissionCheck": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 3}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.author": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.author": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 2}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.value": {"tf": 1}, "tanjun.context.SlashOption.resolve_value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 2.449489742783178}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 2.6457513110645907}, "tanjun.conversion.parse_user_id": {"tf": 1.4142135623730951}, "tanjun.conversion.search_user_ids": {"tf": 1.4142135623730951}, "tanjun.conversion.to_bool": {"tf": 1}, "tanjun.conversion.to_channel": {"tf": 1}, "tanjun.conversion.to_color": {"tf": 1}, "tanjun.conversion.to_colour": {"tf": 1}, "tanjun.conversion.to_emoji": {"tf": 1}, "tanjun.conversion.to_guild": {"tf": 1}, "tanjun.conversion.to_invite": {"tf": 1}, "tanjun.conversion.to_invite_with_metadata": {"tf": 1}, "tanjun.conversion.to_member": {"tf": 1}, "tanjun.conversion.to_presence": {"tf": 1}, "tanjun.conversion.to_role": {"tf": 1}, "tanjun.conversion.to_snowflake": {"tf": 1}, "tanjun.conversion.to_user": {"tf": 1.4142135623730951}, "tanjun.conversion.to_voice_state": {"tf": 1}, "tanjun.conversion.ToUser": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 2}, "tanjun.dependencies.BucketResource.USER": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.AbstractOwners": {"tf": 1}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 2}, "tanjun.dependencies.Owners.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.Owners.check_ownership": {"tf": 2}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 2}, "tanjun.dependencies.limiters.BucketResource.USER": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.AbstractOwners": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 2}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 2}}, "df": 89, "s": {"docs": {"tanjun.Client.is_human_only": {"tf": 1}, "tanjun.Client.set_human_only": {"tf": 1.4142135623730951}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.clients.Client.is_human_only": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.conversion.to_user": {"tf": 1}, "tanjun.conversion.ToUser": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}}, "df": 38}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.conversion.ToMember": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "d": {"docs": {"tanjun.with_dm_check": {"tf": 1.4142135623730951}, "tanjun.with_guild_check": {"tf": 1.4142135623730951}, "tanjun.with_nsfw_check": {"tf": 1.4142135623730951}, "tanjun.with_sfw_check": {"tf": 1.4142135623730951}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.as_loader": {"tf": 1.4142135623730951}, "tanjun.as_unloader": {"tf": 1.4142135623730951}, "tanjun.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.events": {"tf": 1}, "tanjun.Client.server": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1.4142135623730951}, "tanjun.Client.set_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1.4142135623730951}, "tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 2.23606797749979}, "tanjun.SlashCommand.add_int_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.Component.with_schedule": {"tf": 1}, "tanjun.BucketResource": {"tf": 1}, "tanjun.cached_inject": {"tf": 1.4142135623730951}, "tanjun.inject_lc": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.LazyConstant": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.LazyConstant.callback": {"tf": 1}, "tanjun.LazyConstant.acquire": {"tf": 1.4142135623730951}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.ParserError.message": {"tf": 1}, "tanjun.Hooks": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.ShlexParser.needs_injector": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_option": {"tf": 2}, "tanjun.with_argument": {"tf": 1.4142135623730951}, "tanjun.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.with_option": {"tf": 2}, "tanjun.with_multi_option": {"tf": 2}, "tanjun.as_interval": {"tf": 1}, "tanjun.abc": {"tf": 1}, "tanjun.abc.ClientLoader": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.HookSig": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Client.events": {"tf": 1}, "tanjun.abc.Client.server": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_guild_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_nsfw_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_sfw_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1.4142135623730951}, "tanjun.clients.as_unloader": {"tf": 1.4142135623730951}, "tanjun.clients.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.events": {"tf": 1}, "tanjun.clients.Client.server": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.commands.ConverterSig": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.BaseSlashCommand": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 2.23606797749979}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.components": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1}, "tanjun.components.AbstractComponentLoader": {"tf": 1}, "tanjun.context.MessageContext": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.context.SlashContext.get_response_future": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.conversion": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}, "tanjun.dependencies": {"tf": 1}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.CacheIterator": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1.4142135623730951}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.LazyConstant": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1.4142135623730951}, "tanjun.dependencies.inject_lc": {"tf": 1.4142135623730951}, "tanjun.dependencies.make_lc_resolver": {"tf": 1.4142135623730951}, "tanjun.dependencies.AbstractConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager": {"tf": 1}, "tanjun.dependencies.BucketResource": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractOwners": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.callbacks": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1.4142135623730951}, "tanjun.dependencies.data": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.LazyConstant": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.inject_lc": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.dependencies.owners": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners": {"tf": 1}, "tanjun.errors.ParserError.message": {"tf": 1}, "tanjun.hooks.AnyHooks": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.MessageHooks": {"tf": 1}, "tanjun.hooks.SlashHooks": {"tf": 1}, "tanjun.injecting": {"tf": 1}, "tanjun.injecting.UNDEFINED": {"tf": 1}, "tanjun.injecting.UndefinedOr": {"tf": 1}, "tanjun.injecting.InjectorClient": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1}, "tanjun.parsing.Argument": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.ConverterSig": {"tf": 1}, "tanjun.parsing.Option": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 2}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1}, "tanjun.parsing.Parameter.key": {"tf": 1}, "tanjun.parsing.Parameter.needs_injector": {"tf": 1}, "tanjun.parsing.ShlexParser.needs_injector": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_option": {"tf": 2}, "tanjun.parsing.UndefinedDefaultT": {"tf": 1}, "tanjun.parsing.UNDEFINED_DEFAULT": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_option": {"tf": 2}, "tanjun.parsing.with_multi_option": {"tf": 2}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}, "tanjun.utilities": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1}}, "df": 261}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}}, "df": 9}}}, "s": {"docs": {"tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}}, "df": 21}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.components": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.inject": {"tf": 1.4142135623730951}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Client.components": {"tf": 1}, "tanjun.clients.Client.components": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1.4142135623730951}, "tanjun.injecting.Injected.__init__": {"tf": 1.4142135623730951}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}}, "df": 35}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter": {"tf": 1}}, "df": 4}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 11}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}}, "df": 18}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1.4142135623730951}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1.4142135623730951}, "tanjun.dependencies": {"tf": 1}, "tanjun.dependencies.data": {"tf": 1}}, "df": 6}}}, "y": {"docs": {"tanjun.components.AbstractComponentLoader": {"tf": 1}, "tanjun.utilities": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}}, "df": 25, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 29}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 6}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}}, "df": 26}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}}, "df": 6}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.abc.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.7320508075688772}}, "df": 7}}}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.abc.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.7320508075688772}}, "df": 9, "s": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}, "i": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.with_all_checks": {"tf": 2}, "tanjun.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.dispatch_client_callback": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_int_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.with_argument": {"tf": 1.4142135623730951}, "tanjun.with_greedy_argument": {"tf": 1.7320508075688772}, "tanjun.with_multi_argument": {"tf": 1.7320508075688772}, "tanjun.with_option": {"tf": 1.4142135623730951}, "tanjun.with_multi_option": {"tf": 1.7320508075688772}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 2}, "tanjun.checks.any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_all_checks": {"tf": 2}, "tanjun.checks.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck": {"tf": 1}, "tanjun.checks.GuildCheck": {"tf": 1}, "tanjun.checks.NsfwCheck": {"tf": 1}, "tanjun.checks.SfwCheck": {"tf": 1}, "tanjun.checks.OwnerCheck": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck": {"tf": 1}, "tanjun.checks.OwnPermissionCheck": {"tf": 1}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1.4142135623730951}, "tanjun.parsing.Argument.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.Option.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.Parameter.key": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_greedy_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.with_multi_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.with_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_option": {"tf": 1.7320508075688772}}, "df": 58, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client.__init__": {"tf": 2.23606797749979}, "tanjun.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.open": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.to_snowflake": {"tf": 1}, "tanjun.inject_lc": {"tf": 1}, "tanjun.inject": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_argument": {"tf": 1.7320508075688772}, "tanjun.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.with_argument": {"tf": 1.7320508075688772}, "tanjun.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.with_option": {"tf": 1.4142135623730951}, "tanjun.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 2.23606797749979}, "tanjun.abc.Context.edit_last_response": {"tf": 2.23606797749979}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.HookSig": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 2.23606797749979}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 2.23606797749979}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 2.23606797749979}, "tanjun.context.MessageContext.edit_last_response": {"tf": 2.23606797749979}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 2.23606797749979}, "tanjun.context.SlashContext.edit_last_response": {"tf": 2.23606797749979}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.conversion.parse_snowflake": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}, "tanjun.conversion.search_snowflakes": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1.4142135623730951}, "tanjun.injecting.Injected.__init__": {"tf": 1.4142135623730951}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1.7320508075688772}, "tanjun.parsing.Option.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1}, "tanjun.parsing.Parameter.is_multi": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.utilities.gather_checks": {"tf": 1}}, "df": 104}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.set_human_only": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_argument": {"tf": 1}}, "df": 19}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.to_datetime": {"tf": 1.4142135623730951}, "tanjun.to_snowflake": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.parse": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.conversion.parse_snowflake": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_channel_id": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_emoji_id": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_role_id": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_user_id": {"tf": 1.4142135623730951}, "tanjun.conversion.search_snowflakes": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}, "tanjun.conversion.to_datetime": {"tf": 1.4142135623730951}, "tanjun.conversion.to_emoji": {"tf": 1.7320508075688772}, "tanjun.conversion.ToEmoji": {"tf": 1.7320508075688772}, "tanjun.parsing.AbstractParser.parse": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.parse": {"tf": 1.4142135623730951}}, "df": 32, "r": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client": {"tf": 1}, "tanjun.ConversionError": {"tf": 1}, "tanjun.NotEnoughArgumentsError": {"tf": 1}, "tanjun.TooManyArgumentsError": {"tf": 1}, "tanjun.ParserError": {"tf": 1.4142135623730951}, "tanjun.ParserError.__init__": {"tf": 1}, "tanjun.Hooks": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 2}, "tanjun.ShlexParser.__init__": {"tf": 1}, "tanjun.ShlexParser.needs_injector": {"tf": 1}, "tanjun.ShlexParser.parameters": {"tf": 1}, "tanjun.ShlexParser.copy": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_parameter": {"tf": 1.7320508075688772}, "tanjun.ShlexParser.remove_parameter": {"tf": 1.7320508075688772}, "tanjun.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.set_parameters": {"tf": 1.7320508075688772}, "tanjun.with_argument": {"tf": 1.7320508075688772}, "tanjun.with_greedy_argument": {"tf": 1.7320508075688772}, "tanjun.with_multi_argument": {"tf": 1.7320508075688772}, "tanjun.with_option": {"tf": 1.7320508075688772}, "tanjun.with_multi_option": {"tf": 2}, "tanjun.with_parser": {"tf": 2.449489742783178}, "tanjun.abc.CommandCallbackSig": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 2}, "tanjun.abc.MessageContext.command": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.errors.ConversionError": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError": {"tf": 1}, "tanjun.errors.TooManyArgumentsError": {"tf": 1}, "tanjun.errors.ParserError": {"tf": 1.4142135623730951}, "tanjun.errors.ParserError.__init__": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 2}, "tanjun.parsing.AbstractParser": {"tf": 1}, "tanjun.parsing.AbstractParser.parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1.7320508075688772}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1.7320508075688772}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1.7320508075688772}, "tanjun.parsing.AbstractParser.copy": {"tf": 1.4142135623730951}, "tanjun.parsing.Argument": {"tf": 1}, "tanjun.parsing.ConverterSig": {"tf": 1}, "tanjun.parsing.Option": {"tf": 1}, "tanjun.parsing.ParseableProto": {"tf": 1}, "tanjun.parsing.ParseableProto.parser": {"tf": 1}, "tanjun.parsing.ParseableProto.set_parser": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.needs_injector": {"tf": 1}, "tanjun.parsing.ShlexParser.parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.copy": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1.7320508075688772}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1.7320508075688772}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1.7320508075688772}, "tanjun.parsing.with_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.with_greedy_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.with_multi_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.with_option": {"tf": 1.7320508075688772}, "tanjun.parsing.with_multi_option": {"tf": 2}, "tanjun.parsing.with_parser": {"tf": 2.449489742783178}}, "df": 69, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}}, "df": 13}}}}}, "(": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.parsing.Parameter": {"tf": 1}}, "df": 1}}}, "d": {"docs": {"tanjun.to_datetime": {"tf": 1.4142135623730951}, "tanjun.to_snowflake": {"tf": 1.7320508075688772}, "tanjun.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.parse": {"tf": 1.4142135623730951}, "tanjun.with_option": {"tf": 1.4142135623730951}, "tanjun.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 2}, "tanjun.abc.Context.edit_last_response": {"tf": 2}, "tanjun.abc.Context.respond": {"tf": 2}, "tanjun.abc.MessageContext.respond": {"tf": 2}, "tanjun.abc.SlashContext.create_followup": {"tf": 2}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 2}, "tanjun.context.MessageContext.edit_last_response": {"tf": 2}, "tanjun.context.MessageContext.respond": {"tf": 2}, "tanjun.context.SlashContext.create_followup": {"tf": 2}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 2}, "tanjun.context.SlashContext.edit_last_response": {"tf": 2}, "tanjun.context.SlashContext.respond": {"tf": 2}, "tanjun.conversion.parse_snowflake": {"tf": 1.7320508075688772}, "tanjun.conversion.parse_channel_id": {"tf": 1.7320508075688772}, "tanjun.conversion.parse_emoji_id": {"tf": 1.7320508075688772}, "tanjun.conversion.parse_role_id": {"tf": 1.7320508075688772}, "tanjun.conversion.parse_user_id": {"tf": 1.7320508075688772}, "tanjun.conversion.to_datetime": {"tf": 1.4142135623730951}, "tanjun.parsing.AbstractParser.parse": {"tf": 1.4142135623730951}, "tanjun.parsing.Option.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.parse": {"tf": 1.4142135623730951}, "tanjun.parsing.with_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_option": {"tf": 1.4142135623730951}}, "df": 30}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.with_parser": {"tf": 1}, "tanjun.parsing.with_parser": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"tanjun.parsing.ParseableProtoT": {"tf": 1}}, "df": 1, "t": {"docs": {"tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.with_parser": {"tf": 1.4142135623730951}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.parsing.with_parser": {"tf": 1.4142135623730951}}, "df": 12}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.ParserError": {"tf": 1}, "tanjun.ParserError.parameter": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1.7320508075688772}, "tanjun.with_greedy_argument": {"tf": 1.7320508075688772}, "tanjun.with_multi_argument": {"tf": 1.7320508075688772}, "tanjun.with_option": {"tf": 1.7320508075688772}, "tanjun.with_multi_option": {"tf": 1.7320508075688772}, "tanjun.errors.ParserError": {"tf": 1}, "tanjun.errors.ParserError.parameter": {"tf": 1}, "tanjun.parsing": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.with_greedy_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.with_multi_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.with_option": {"tf": 1.7320508075688772}, "tanjun.parsing.with_multi_option": {"tf": 1.7320508075688772}}, "df": 21}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.with_argument": {"tf": 1.4142135623730951}, "tanjun.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.with_option": {"tf": 1.4142135623730951}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 10}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.ConversionError": {"tf": 1}, "tanjun.ConversionError.__init__": {"tf": 1.7320508075688772}, "tanjun.ConversionError.errors": {"tf": 1}, "tanjun.ConversionError.parameter": {"tf": 1}, "tanjun.NotEnoughArgumentsError": {"tf": 1}, "tanjun.NotEnoughArgumentsError.__init__": {"tf": 1.7320508075688772}, "tanjun.NotEnoughArgumentsError.parameter": {"tf": 1}, "tanjun.TooManyArgumentsError": {"tf": 1}, "tanjun.TooManyArgumentsError.__init__": {"tf": 1.7320508075688772}, "tanjun.TooManyArgumentsError.parameter": {"tf": 1}, "tanjun.ParserError": {"tf": 1}, "tanjun.ParserError.__init__": {"tf": 1.4142135623730951}, "tanjun.inject": {"tf": 1}, "tanjun.ShlexParser.add_parameter": {"tf": 1.7320508075688772}, "tanjun.ShlexParser.remove_parameter": {"tf": 1.7320508075688772}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.errors.ConversionError": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1.7320508075688772}, "tanjun.errors.ConversionError.errors": {"tf": 1}, "tanjun.errors.ConversionError.parameter": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.__init__": {"tf": 1.7320508075688772}, "tanjun.errors.NotEnoughArgumentsError.parameter": {"tf": 1}, "tanjun.errors.TooManyArgumentsError": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.__init__": {"tf": 1.7320508075688772}, "tanjun.errors.TooManyArgumentsError.parameter": {"tf": 1}, "tanjun.errors.ParserError": {"tf": 1}, "tanjun.errors.ParserError.__init__": {"tf": 1.4142135623730951}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1.7320508075688772}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1.7320508075688772}, "tanjun.parsing.Option": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.Parameter.__init__": {"tf": 1}, "tanjun.parsing.Parameter.converters": {"tf": 1}, "tanjun.parsing.Parameter.default": {"tf": 1}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1}, "tanjun.parsing.Parameter.is_multi": {"tf": 1.4142135623730951}, "tanjun.parsing.Parameter.key": {"tf": 1}, "tanjun.parsing.Parameter.needs_injector": {"tf": 1}, "tanjun.parsing.Parameter.convert": {"tf": 1}, "tanjun.parsing.Parameter.copy": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1.7320508075688772}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1.7320508075688772}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.UNDEFINED_DEFAULT": {"tf": 1}}, "df": 49, "s": {"docs": {"tanjun.with_all_checks": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.with_check": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1.7320508075688772}, "tanjun.with_guild_check": {"tf": 1.7320508075688772}, "tanjun.with_nsfw_check": {"tf": 1.7320508075688772}, "tanjun.with_sfw_check": {"tf": 1.7320508075688772}, "tanjun.with_owner_check": {"tf": 1.7320508075688772}, "tanjun.with_author_permission_check": {"tf": 1.4142135623730951}, "tanjun.with_own_permission_check": {"tf": 1.4142135623730951}, "tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.Client.set_message_accepts": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.remove_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.add_component": {"tf": 1}, "tanjun.Client.get_component_by_name": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.remove_component_by_name": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.dispatch_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.get_client_callbacks": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.remove_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.remove_prefix": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.Client.iter_slash_commands": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.Client.on_message_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_event": {"tf": 1}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.as_message_command": {"tf": 1.4142135623730951}, "tanjun.as_message_command_group": {"tf": 1.4142135623730951}, "tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.MessageCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.MessageCommand.copy": {"tf": 1}, "tanjun.MessageCommand.set_parent": {"tf": 1}, "tanjun.MessageCommand.load_into_component": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.MessageCommandGroup.copy": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.load_into_component": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.Component.add_command": {"tf": 1}, "tanjun.Component.remove_command": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.Component.add_slash_command": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.with_slash_command": {"tf": 1.4142135623730951}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.with_message_command": {"tf": 1.4142135623730951}, "tanjun.Component.add_listener": {"tf": 1}, "tanjun.Component.remove_listener": {"tf": 1}, "tanjun.Component.with_listener": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.Component.add_schedule": {"tf": 1}, "tanjun.Component.remove_schedule": {"tf": 1}, "tanjun.Component.with_schedule": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.to_bool": {"tf": 1}, "tanjun.to_datetime": {"tf": 1}, "tanjun.to_snowflake": {"tf": 1.4142135623730951}, "tanjun.cached_inject": {"tf": 1.4142135623730951}, "tanjun.inject_lc": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.LazyConstant.set_value": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.CommandError.__init__": {"tf": 1}, "tanjun.ConversionError.__init__": {"tf": 1}, "tanjun.MissingDependencyError.__init__": {"tf": 1}, "tanjun.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.ParserError.__init__": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.ShlexParser.parameters": {"tf": 1}, "tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.set_parameters": {"tf": 2.23606797749979}, "tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.with_option": {"tf": 1.4142135623730951}, "tanjun.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.with_parser": {"tf": 1}, "tanjun.as_interval": {"tf": 1.4142135623730951}, "tanjun.abc.ClientLoader.load": {"tf": 1}, "tanjun.abc.ClientLoader.unload": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.add_check": {"tf": 1}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1}, "tanjun.abc.MessageCommand.set_parent": {"tf": 1}, "tanjun.abc.MessageCommand.copy": {"tf": 1}, "tanjun.abc.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.abc.SlashContext.set_command": {"tf": 1}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.Component.add_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.with_slash_command": {"tf": 1.4142135623730951}, "tanjun.abc.Component.add_message_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.with_message_command": {"tf": 1.4142135623730951}, "tanjun.abc.Component.add_listener": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Component.with_listener": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.abc.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.add_component": {"tf": 1}, "tanjun.abc.Client.get_component_by_name": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.remove_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.CallbackReturnT": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_check": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1.7320508075688772}, "tanjun.checks.with_guild_check": {"tf": 1.7320508075688772}, "tanjun.checks.with_nsfw_check": {"tf": 1.7320508075688772}, "tanjun.checks.with_sfw_check": {"tf": 1.7320508075688772}, "tanjun.checks.with_owner_check": {"tf": 1.7320508075688772}, "tanjun.checks.with_author_permission_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_own_permission_check": {"tf": 1.4142135623730951}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.set_message_accepts": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.remove_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.get_component_by_name": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.on_message_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_event": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1.4142135623730951}, "tanjun.commands.as_message_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommand.copy": {"tf": 1}, "tanjun.commands.MessageCommand.set_parent": {"tf": 1}, "tanjun.commands.MessageCommand.load_into_component": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommandGroup.copy": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1}, "tanjun.commands.PartialCommand.add_check": {"tf": 1}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.BaseSlashCommand.load_into_component": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.load_into_component": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.add_command": {"tf": 1}, "tanjun.components.Component.remove_command": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_slash_command": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.with_slash_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.with_message_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_listener": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}, "tanjun.components.Component.with_listener": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.components.Component.execute_message": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_schedule": {"tf": 1}, "tanjun.components.Component.remove_schedule": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}, "tanjun.components.AbstractComponentLoader.load_into_component": {"tf": 1}, "tanjun.context.MessageContext.__init__": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_prefix": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.__init__": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.context.SlashContext.set_command": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.context.SlashContext.defer": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_snowflake": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_channel_id": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_emoji_id": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_role_id": {"tf": 1.4142135623730951}, "tanjun.conversion.parse_user_id": {"tf": 1.4142135623730951}, "tanjun.conversion.search_snowflakes": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}, "tanjun.conversion.to_bool": {"tf": 1}, "tanjun.conversion.to_datetime": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.dependencies.set_standard_dependencies": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1.4142135623730951}, "tanjun.dependencies.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.dependencies.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1}, "tanjun.errors.MissingDependencyError.__init__": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.errors.ParserError.__init__": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.__init__": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}, "tanjun.parsing.AbstractParser.parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 2.23606797749979}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.Option.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.Parameter": {"tf": 1}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1.4142135623730951}, "tanjun.parsing.Parameter.is_multi": {"tf": 1}, "tanjun.parsing.ParseableProto.set_parser": {"tf": 1}, "tanjun.parsing.ShlexParser.parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 2.23606797749979}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_parser": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1.4142135623730951}, "tanjun.schedules.as_interval": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.load_into_component": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}, "tanjun.utilities.gather_checks": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1.4142135623730951}, "tanjun.utilities.calculate_permissions": {"tf": 1.4142135623730951}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1.4142135623730951}, "tanjun.utilities.fetch_permissions": {"tf": 1.4142135623730951}, "tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 564}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.inject_lc": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.parsing.Parameter.default": {"tf": 1}}, "df": 7}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.utilities.CastedView": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {"tanjun.HaltExecution": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.errors.HaltExecution": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.conversion.ToMember": {"tf": 1}}, "df": 7, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.Client.from_rest_bot": {"tf": 1.7320508075688772}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_rest_bot": {"tf": 1.7320508075688772}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 18}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 12}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.conversion.to_channel": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}}, "df": 4}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}}, "df": 14}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}}, "df": 14}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.MessageContext.respond": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommand.parent": {"tf": 1}, "tanjun.MessageCommand.copy": {"tf": 1.4142135623730951}, "tanjun.MessageCommand.set_parent": {"tf": 1.7320508075688772}, "tanjun.MessageCommandGroup.copy": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.abc.MessageCommand.parent": {"tf": 1}, "tanjun.abc.MessageCommand.set_parent": {"tf": 1.7320508075688772}, "tanjun.abc.MessageCommand.copy": {"tf": 1.4142135623730951}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommand.parent": {"tf": 1}, "tanjun.commands.MessageCommand.copy": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommand.set_parent": {"tf": 1.7320508075688772}, "tanjun.commands.MessageCommandGroup.copy": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"tf": 1}}, "df": 32, "s": {"docs": {"tanjun.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.Client.load_modules": {"tf": 2}, "tanjun.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 2}, "tanjun.abc.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 2}, "tanjun.clients.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 18, "s": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1}}, "df": 9}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"tanjun.Client.load_modules": {"tf": 1.4142135623730951}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.Client.load_modules": {"tf": 1.4142135623730951}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1.4142135623730951}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}}, "df": 16}}}, "(": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}}, "df": 6}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.as_message_command_group": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}}, "df": 4}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.with_cooldown": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 2.23606797749979}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 2.23606797749979}, "tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 2.23606797749979}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}}, "df": 21, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.prefix_getter": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.remove_prefix": {"tf": 2}, "tanjun.Client.with_prefix_getter": {"tf": 1.7320508075688772}, "tanjun.Client.open": {"tf": 1}, "tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.abc.MessageContext.content": {"tf": 1}, "tanjun.abc.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.prefix_getter": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 2}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1.7320508075688772}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.context.MessageContext.content": {"tf": 1}, "tanjun.context.MessageContext.triggering_prefix": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_prefix": {"tf": 1.7320508075688772}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}}, "df": 25, "=": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"tanjun": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.prefixes": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1.4142135623730951}, "tanjun.Client.set_prefix_getter": {"tf": 1.7320508075688772}, "tanjun.Client.with_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.abc.Client.prefixes": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.prefixes": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1.7320508075688772}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1.4142135623730951}}, "df": 14}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.prefix_getter": {"tf": 1}, "tanjun.clients.Client.prefix_getter": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}}, "df": 2, "t": {"docs": {"tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}}, "df": 2}}}}}}}}}}, "(": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.clients.PrefixGetterSig": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.remove_check": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.remove_check": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}}, "df": 33}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.HaltExecution": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.errors.HaltExecution": {"tf": 1}}, "df": 7, "s": {"docs": {"tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1.7320508075688772}, "tanjun.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1.7320508075688772}, "tanjun.abc.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.abc.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1.7320508075688772}, "tanjun.clients.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.clients.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}}, "df": 24}, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.conversion.ToPresence": {"tf": 1}}, "df": 1, "s": {"docs": {"tanjun.conversion.to_presence": {"tf": 1}, "tanjun.conversion.ToPresence": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.metadata": {"tf": 1}, "tanjun.Component.name": {"tf": 1}, "tanjun.Component.metadata": {"tf": 1}, "tanjun.abc.ExecutableCommand.metadata": {"tf": 1}, "tanjun.abc.Component.name": {"tf": 1}, "tanjun.abc.Component.metadata": {"tf": 1}, "tanjun.abc.Client.metadata": {"tf": 1}, "tanjun.clients.Client.metadata": {"tf": 1}, "tanjun.commands.PartialCommand.metadata": {"tf": 1}, "tanjun.components.Component.name": {"tf": 1}, "tanjun.components.Component.metadata": {"tf": 1}}, "df": 11}}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.with_all_checks": {"tf": 1.4142135623730951}, "tanjun.with_any_checks": {"tf": 1}, "tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client.__init__": {"tf": 2}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.server": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1.4142135623730951}, "tanjun.Client.remove_component_by_name": {"tf": 1.4142135623730951}, "tanjun.Client.get_client_callbacks": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.remove_listener": {"tf": 1.4142135623730951}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.Component.__init__": {"tf": 1.4142135623730951}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1.7320508075688772}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.remove_listener": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.ParserError.parameter": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 2}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 2}, "tanjun.with_multi_option": {"tf": 2.23606797749979}, "tanjun.abc.Context.server": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 3.4641016151377544}, "tanjun.abc.Context.edit_last_response": {"tf": 3.4641016151377544}, "tanjun.abc.Context.respond": {"tf": 3.3166247903554}, "tanjun.abc.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 3.4641016151377544}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.options": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 4.123105625617661}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 3.7416573867739413}, "tanjun.abc.SlashOption.value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 2}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Client": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.server": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1.4142135623730951}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1.4142135623730951}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.remove_listener": {"tf": 1.4142135623730951}, "tanjun.checks.all_checks": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 2}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.server": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1.4142135623730951}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1.4142135623730951}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.remove_listener": {"tf": 1.4142135623730951}, "tanjun.clients.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.components.Component.__init__": {"tf": 1.4142135623730951}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1.7320508075688772}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 3.4641016151377544}, "tanjun.context.MessageContext.edit_last_response": {"tf": 3.4641016151377544}, "tanjun.context.MessageContext.respond": {"tf": 3.3166247903554}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.options": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 4.123105625617661}, "tanjun.context.SlashContext.create_initial_response": {"tf": 3.7416573867739413}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 3.4641016151377544}, "tanjun.context.SlashContext.edit_last_response": {"tf": 3.4641016151377544}, "tanjun.context.SlashContext.respond": {"tf": 3.3166247903554}, "tanjun.context.SlashOption.value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 2}, "tanjun.conversion.from_datetime": {"tf": 1.4142135623730951}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1}, "tanjun.errors.ParserError.parameter": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 2}, "tanjun.parsing.Parameter.is_multi": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 2}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 2}, "tanjun.parsing.with_multi_option": {"tf": 2.23606797749979}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1.4142135623730951}}, "df": 150}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 6}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}}, "df": 12}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}}, "df": 14}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.injecting.CallbackSig": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.parsing.ParseableProto": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}}, "df": 24}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Component.with_schedule": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1.4142135623730951}}, "df": 4, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.parsing.ConverterSig": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.dispatch_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.MessageCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.with_argument": {"tf": 1.4142135623730951}, "tanjun.with_greedy_argument": {"tf": 2}, "tanjun.with_multi_argument": {"tf": 2}, "tanjun.as_interval": {"tf": 1}, "tanjun.abc.CommandCallbackSig": {"tf": 1.4142135623730951}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.HookSig": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.abc.ListenerCallbackSig": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.components.OnCallbackSig": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}, "tanjun.parsing.Argument": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_greedy_argument": {"tf": 2}, "tanjun.parsing.with_multi_argument": {"tf": 2}, "tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}}, "df": 127, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.to_snowflake": {"tf": 1}, "tanjun.conversion.parse_snowflake": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}, "tanjun.conversion.search_snowflakes": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}}, "df": 14}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.MessageAcceptsEnum": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 15}}}}}, "t": {"docs": {"tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 2.23606797749979}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 2.23606797749979}, "tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 2.23606797749979}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}}, "df": 13}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_global_commands": {"tf": 2.449489742783178}, "tanjun.Client.declare_application_commands": {"tf": 2.449489742783178}, "tanjun.BucketResource.USER": {"tf": 1}, "tanjun.BucketResource.MEMBER": {"tf": 1.4142135623730951}, "tanjun.BucketResource.CHANNEL": {"tf": 1}, "tanjun.BucketResource.PARENT_CHANNEL": {"tf": 1.7320508075688772}, "tanjun.BucketResource.TOP_ROLE": {"tf": 1.4142135623730951}, "tanjun.BucketResource.GUILD": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager": {"tf": 2}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_global_commands": {"tf": 2.449489742783178}, "tanjun.abc.Client.declare_application_commands": {"tf": 2.449489742783178}, "tanjun.clients.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 2.449489742783178}, "tanjun.clients.Client.declare_application_commands": {"tf": 2.449489742783178}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.BucketResource.USER": {"tf": 1}, "tanjun.dependencies.BucketResource.MEMBER": {"tf": 1.4142135623730951}, "tanjun.dependencies.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"tf": 1.7320508075688772}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1.4142135623730951}, "tanjun.dependencies.BucketResource.GUILD": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 2}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.USER": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.MEMBER": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.BucketResource.GUILD": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 2}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}}, "df": 58, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck": {"tf": 1.7320508075688772}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck": {"tf": 1.7320508075688772}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}}, "df": 14, "s": {"docs": {"tanjun.with_author_permission_check": {"tf": 2.6457513110645907}, "tanjun.with_own_permission_check": {"tf": 2.6457513110645907}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 2.6457513110645907}, "tanjun.checks.with_own_permission_check": {"tf": 2.6457513110645907}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 2}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 2}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.utilities.ALL_PERMISSIONS": {"tf": 1}, "tanjun.utilities.DM_PERMISSIONS": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 2.449489742783178}, "tanjun.utilities.calculate_permissions": {"tf": 2.6457513110645907}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 2.6457513110645907}, "tanjun.utilities.fetch_permissions": {"tf": 2.6457513110645907}}, "df": 32}, "(": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}}, "df": 6}}}}}}}}}, "f": {"docs": {"tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}}, "df": 2, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 10}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}}, "df": 9}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}, "y": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.components.Component.load_from_scope": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}}, "df": 5}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {"tanjun": {"tf": 1}, "tanjun.with_all_checks": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1}, "tanjun.with_check": {"tf": 1.4142135623730951}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.as_loader": {"tf": 1}, "tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1.4142135623730951}, "tanjun.Client.with_check": {"tf": 1.4142135623730951}, "tanjun.Client.add_component": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.add_listener": {"tf": 1.4142135623730951}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1.4142135623730951}, "tanjun.MessageCommandGroup.with_command": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.with_command": {"tf": 1.4142135623730951}, "tanjun.with_str_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_int_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_float_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_bool_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_role_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_user_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_member_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_channel_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_mentionable_slash_option": {"tf": 1.4142135623730951}, "tanjun.Component.__init__": {"tf": 1.7320508075688772}, "tanjun.Component.add_command": {"tf": 1.4142135623730951}, "tanjun.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.Component.add_slash_command": {"tf": 1.4142135623730951}, "tanjun.Component.with_slash_command": {"tf": 1.4142135623730951}, "tanjun.Component.add_message_command": {"tf": 1.4142135623730951}, "tanjun.Component.with_message_command": {"tf": 1.4142135623730951}, "tanjun.Component.add_listener": {"tf": 1.4142135623730951}, "tanjun.Component.with_listener": {"tf": 1.4142135623730951}, "tanjun.Component.add_on_close": {"tf": 1.4142135623730951}, "tanjun.Component.with_on_close": {"tf": 1.4142135623730951}, "tanjun.Component.add_on_open": {"tf": 1.4142135623730951}, "tanjun.Component.with_on_open": {"tf": 1.4142135623730951}, "tanjun.Component.add_schedule": {"tf": 1.4142135623730951}, "tanjun.Component.with_schedule": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1.4142135623730951}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1.7320508075688772}, "tanjun.Hooks.add_on_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_post_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_pre_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_on_success": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_parameter": {"tf": 1.7320508075688772}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.with_parser": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_on_success": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.abc.ExecutableCommand.add_check": {"tf": 1.4142135623730951}, "tanjun.abc.MessageCommandGroup.add_command": {"tf": 1.4142135623730951}, "tanjun.abc.MessageCommandGroup.with_command": {"tf": 1.4142135623730951}, "tanjun.abc.SlashCommandGroup.add_command": {"tf": 1.4142135623730951}, "tanjun.abc.SlashCommandGroup.with_command": {"tf": 1.4142135623730951}, "tanjun.abc.Component.add_slash_command": {"tf": 1.4142135623730951}, "tanjun.abc.Component.with_slash_command": {"tf": 1.4142135623730951}, "tanjun.abc.Component.add_message_command": {"tf": 1.4142135623730951}, "tanjun.abc.Component.with_message_command": {"tf": 1.4142135623730951}, "tanjun.abc.Component.add_listener": {"tf": 1.4142135623730951}, "tanjun.abc.Component.with_listener": {"tf": 1.4142135623730951}, "tanjun.abc.Client.add_component": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1.4142135623730951}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_check": {"tf": 1.4142135623730951}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommandGroup.with_command": {"tf": 1.4142135623730951}, "tanjun.commands.PartialCommand.add_check": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.with_command": {"tf": 1.4142135623730951}, "tanjun.commands.with_str_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_int_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_float_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_bool_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_role_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_user_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_member_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_channel_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1.4142135623730951}, "tanjun.components.Component.__init__": {"tf": 1.7320508075688772}, "tanjun.components.Component.add_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_slash_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_slash_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_message_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_message_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_listener": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_listener": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_on_close": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_on_close": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_on_open": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_on_open": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_schedule": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_schedule": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1.4142135623730951}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1.7320508075688772}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1.7320508075688772}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.parsing.with_parser": {"tf": 1}}, "df": 204, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1.4142135623730951}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.Client.remove_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.Component": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1}, "tanjun.Component.with_slash_command": {"tf": 1}, "tanjun.Component.with_message_command": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1.4142135623730951}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1.4142135623730951}, "tanjun.Component.with_schedule": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1.4142135623730951}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.abc.Component.with_slash_command": {"tf": 1}, "tanjun.abc.Component.with_message_command": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.clients.Client.remove_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1.4142135623730951}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.components.Component": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1}, "tanjun.components.Component.with_slash_command": {"tf": 1}, "tanjun.components.Component.with_message_command": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_schedule": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}}, "df": 80}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.with_all_checks": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}}, "df": 6}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Component.with_command": {"tf": 1}, "tanjun.Component.with_slash_command": {"tf": 1}, "tanjun.Component.with_message_command": {"tf": 1}, "tanjun.abc.Component.with_slash_command": {"tf": 1}, "tanjun.abc.Component.with_message_command": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1}, "tanjun.components.Component.with_slash_command": {"tf": 1}, "tanjun.components.Component.with_message_command": {"tf": 1}}, "df": 8}}}, "s": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.with_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.Hooks": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}}, "df": 37}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.checks": {"tf": 1}, "tanjun.inject": {"tf": 1.4142135623730951}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.clients.Client.checks": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}, "tanjun.injecting.CallbackDescriptor": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1.4142135623730951}}, "df": 26}}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Component.with_command": {"tf": 2}, "tanjun.with_parser": {"tf": 1.4142135623730951}, "tanjun.abc.ListenerCallbackSig": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 2}, "tanjun.parsing.with_parser": {"tf": 1.4142135623730951}}, "df": 11, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.to_snowflake": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.ShlexParser.add_parameter": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 2.8284271247461903}, "tanjun.ShlexParser.add_option": {"tf": 2}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.with_argument": {"tf": 3.4641016151377544}, "tanjun.with_greedy_argument": {"tf": 3.3166247903554}, "tanjun.with_multi_argument": {"tf": 3.3166247903554}, "tanjun.with_option": {"tf": 2.23606797749979}, "tanjun.with_multi_option": {"tf": 2.23606797749979}, "tanjun.with_parser": {"tf": 1}, "tanjun.abc.CommandCallbackSig": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.conversion": {"tf": 1}, "tanjun.conversion.parse_snowflake": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}, "tanjun.conversion.search_snowflakes": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.injecting.AbstractDescriptor": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected": {"tf": 1}, "tanjun.parsing": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1.4142135623730951}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.Argument": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 2.8284271247461903}, "tanjun.parsing.ConverterSig": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 2}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 2.8284271247461903}, "tanjun.parsing.ShlexParser.add_option": {"tf": 2}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 3.4641016151377544}, "tanjun.parsing.with_greedy_argument": {"tf": 3.3166247903554}, "tanjun.parsing.with_multi_argument": {"tf": 3.3166247903554}, "tanjun.parsing.with_option": {"tf": 2.23606797749979}, "tanjun.parsing.with_multi_option": {"tf": 2.23606797749979}, "tanjun.parsing.with_parser": {"tf": 1}}, "df": 125, "s": {"docs": {"tanjun.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.dispatch_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.NotEnoughArgumentsError": {"tf": 1}, "tanjun.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.TooManyArgumentsError": {"tf": 1}, "tanjun.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.as_interval": {"tf": 1}, "tanjun.abc.CommandCallbackSig": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.HookSig": {"tf": 1.4142135623730951}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1.4142135623730951}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.CLOSING": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.STARTING": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.components.OnCallbackSig": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.errors.TooManyArgumentsError": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackSig": {"tf": 1.7320508075688772}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}}, "df": 114}}}}}}, "s": {"docs": {"tanjun.Client.dispatch_client_callback": {"tf": 1}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}}, "df": 6}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}}, "df": 8}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.conversion.ToChannel.async_caches": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.async_caches": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.async_caches": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.async_caches": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}}, "df": 23}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.inject": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.with_multi_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"tanjun": {"tf": 2}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.Component.with_schedule": {"tf": 1}, "tanjun.cached_inject": {"tf": 1.4142135623730951}, "tanjun.inject_lc": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.with_parser": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_schedule": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.inject_lc": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.inject_lc": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.parsing.with_parser": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1.4142135623730951}}, "df": 83, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.as_interval": {"tf": 1}, "tanjun.abc.CommandCallbackSig": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.HookSig": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.conversion.ToChannel.async_caches": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1}, "tanjun.conversion.ToMember.async_caches": {"tf": 1}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1}, "tanjun.conversion.ToRole.async_caches": {"tf": 1}, "tanjun.conversion.ToUser.async_caches": {"tf": 1}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.CacheIterator": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}, "tanjun.parsing.ConverterSig": {"tf": 1}, "tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}}, "df": 89, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}}, "df": 10}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {"tanjun.Component.loop": {"tf": 1}, "tanjun.abc.Component.loop": {"tf": 1}, "tanjun.components.Component.loop": {"tf": 1}, "tanjun.context.SlashContext.get_response_future": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.async_cache.SfCache": {"tf": 1}}, "df": 1, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.dependencies.async_cache": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.inject_lc": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}}, "df": 8}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}}, "df": 4}}}}}}}}, "k": {"docs": {"tanjun.injecting.CallbackSig": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "c": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.with_all_checks": {"tf": 2.23606797749979}, "tanjun.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.with_check": {"tf": 1.4142135623730951}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.as_loader": {"tf": 2.449489742783178}, "tanjun.as_unloader": {"tf": 2}, "tanjun.Client": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.checks": {"tf": 1}, "tanjun.Client.hooks": {"tf": 1.7320508075688772}, "tanjun.Client.slash_hooks": {"tf": 1}, "tanjun.Client.message_hooks": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1.4142135623730951}, "tanjun.Client.remove_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1.7320508075688772}, "tanjun.Client.get_client_callbacks": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1.7320508075688772}, "tanjun.Client.iter_commands": {"tf": 1}, "tanjun.Client.iter_message_commands": {"tf": 1}, "tanjun.Client.iter_slash_commands": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.MessageCommand.__init__": {"tf": 2}, "tanjun.MessageCommand.load_into_component": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 2}, "tanjun.SlashCommand.load_into_component": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.SlashCommandGroup.with_command": {"tf": 1.4142135623730951}, "tanjun.with_str_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_int_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_float_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_bool_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_role_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_user_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_member_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_channel_slash_option": {"tf": 1.4142135623730951}, "tanjun.with_mentionable_slash_option": {"tf": 1.4142135623730951}, "tanjun.Component": {"tf": 1}, "tanjun.Component.__init__": {"tf": 2}, "tanjun.Component.add_command": {"tf": 1}, "tanjun.Component.remove_command": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.with_listener": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.cached_inject": {"tf": 1.7320508075688772}, "tanjun.inject_lc": {"tf": 1.7320508075688772}, "tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1.4142135623730951}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.ConversionError.__init__": {"tf": 1.4142135623730951}, "tanjun.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.Hooks": {"tf": 2.23606797749979}, "tanjun.Hooks.add_to_command": {"tf": 1.7320508075688772}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.inject": {"tf": 1.7320508075688772}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.ShlexParser.parse": {"tf": 1.4142135623730951}, "tanjun.with_argument": {"tf": 1.7320508075688772}, "tanjun.with_greedy_argument": {"tf": 1.7320508075688772}, "tanjun.with_multi_argument": {"tf": 2}, "tanjun.with_option": {"tf": 1.7320508075688772}, "tanjun.with_multi_option": {"tf": 2}, "tanjun.as_interval": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Component.with_listener": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.abc.Client.iter_commands": {"tf": 1}, "tanjun.abc.Client.iter_message_commands": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 2.23606797749979}, "tanjun.checks.any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_all_checks": {"tf": 2.23606797749979}, "tanjun.checks.with_any_checks": {"tf": 1.4142135623730951}, "tanjun.checks.with_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 2.449489742783178}, "tanjun.clients.as_unloader": {"tf": 2}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.checks": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1.7320508075688772}, "tanjun.clients.Client.slash_hooks": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1.4142135623730951}, "tanjun.clients.Client.remove_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1.7320508075688772}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1.7320508075688772}, "tanjun.clients.Client.iter_commands": {"tf": 1}, "tanjun.clients.Client.iter_message_commands": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.ClientCallbackNames": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.MESSAGE_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.ClientCallbackNames.SLASH_COMMAND_NOT_FOUND": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommand.__init__": {"tf": 2}, "tanjun.commands.MessageCommand.load_into_component": {"tf": 1}, "tanjun.commands.BaseSlashCommand.load_into_component": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 2}, "tanjun.commands.SlashCommand.load_into_component": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.with_command": {"tf": 1.4142135623730951}, "tanjun.commands.with_str_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_int_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_float_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_bool_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_role_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_user_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_member_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_channel_slash_option": {"tf": 1.4142135623730951}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1.4142135623730951}, "tanjun.components.Component": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 2}, "tanjun.components.Component.add_command": {"tf": 1}, "tanjun.components.Component.remove_command": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.with_listener": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}, "tanjun.components.AbstractComponentLoader.load_into_component": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.conversion.search_snowflakes": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1.7320508075688772}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.inject_lc": {"tf": 1.7320508075688772}, "tanjun.dependencies.make_lc_resolver": {"tf": 1.4142135623730951}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1.7320508075688772}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.inject_lc": {"tf": 1.7320508075688772}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.increment_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1.4142135623730951}, "tanjun.errors.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.hooks.AnyHooks": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 2.23606797749979}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1.4142135623730951}, "tanjun.hooks.MessageHooks": {"tf": 1}, "tanjun.hooks.SlashHooks": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1.7320508075688772}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1.4142135623730951}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1.4142135623730951}, "tanjun.parsing.with_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.with_greedy_argument": {"tf": 1.7320508075688772}, "tanjun.parsing.with_multi_argument": {"tf": 2}, "tanjun.parsing.with_option": {"tf": 1.7320508075688772}, "tanjun.parsing.with_multi_option": {"tf": 2}, "tanjun.schedules.as_interval": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 2}, "tanjun.schedules.IntervalSchedule.load_into_component": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 2}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 2}, "tanjun.utilities.gather_checks": {"tf": 1.4142135623730951}, "tanjun.utilities.calculate_permissions": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}, "tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 341}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.load_modules": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1.4142135623730951}, "tanjun.clients.Client.load_modules": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 10}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.Client": {"tf": 1}, "tanjun.components.AbstractComponentLoader": {"tf": 1}, "tanjun.dependencies": {"tf": 1}, "tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.CacheIterator": {"tf": 1}, "tanjun.dependencies.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache": {"tf": 1}, "tanjun.injecting.AbstractDescriptor": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext": {"tf": 1}, "tanjun.parsing.AbstractParser": {"tf": 1}, "tanjun.schedules.AbstractSchedule": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1}}, "df": 18, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1.7320508075688772}, "tanjun.components.Component.load_from_scope": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Component.add_schedule": {"tf": 1}, "tanjun.Component.remove_schedule": {"tf": 1}, "tanjun.Component.with_schedule": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_schedule": {"tf": 1}, "tanjun.components.Component.remove_schedule": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.ShlexParser": {"tf": 1}, "tanjun.parsing.ShlexParser": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.BasicInjectionContext": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"tanjun": {"tf": 2}, "tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1.4142135623730951}}, "df": 25, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}}, "df": 8, "[": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1.4142135623730951}}, "df": 11}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.abc.MaybeAwaitableT": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.Client.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.abc.Context.member": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.OwnerCheck": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck": {"tf": 1.7320508075688772}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.context.MessageContext.member": {"tf": 1}, "tanjun.context.SlashContext.member": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 12, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.dependencies.async_cache": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "o": {"docs": {"tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.context.SlashContext.cancel_defer": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}}, "df": 4, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 24}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.FailedCheck": {"tf": 1}, "tanjun.errors.FailedCheck": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}}, "df": 15}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client.add_component": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.add_command": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.abc.Client.add_component": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.add_command": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_prefix": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}}, "df": 41, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}}, "df": 24}}}, "s": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.to_snowflake": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.conversion.ToMember": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}}, "df": 38}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Component.__init__": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.set_global_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.set_global_commands": {"tf": 1}, "tanjun.clients.ClientCallbackNames": {"tf": 1}, "tanjun.dependencies.async_cache.SfCache": {"tf": 1}, "tanjun.dependencies.async_cache.SfChannelBound": {"tf": 1}, "tanjun.dependencies.async_cache.SfGuildBound": {"tf": 1}, "tanjun.injecting.injected": {"tf": 1}}, "df": 13}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.is_alive": {"tf": 1}, "tanjun.Client.loop": {"tf": 1}, "tanjun.abc.Client.is_alive": {"tf": 1}, "tanjun.abc.Client.loop": {"tf": 1}, "tanjun.clients.Client.is_alive": {"tf": 1}, "tanjun.clients.Client.loop": {"tf": 1}, "tanjun.schedules.AbstractSchedule.is_alive": {"tf": 1}, "tanjun.schedules.IntervalSchedule.is_alive": {"tf": 1}}, "df": 8}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.Client.add_component": {"tf": 1}, "tanjun.Client.open": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.open": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.LazyConstant.set_value": {"tf": 1}, "tanjun.with_parser": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Component.open": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.open": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.dependencies.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.parsing.with_parser": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}}, "df": 47}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.Hooks": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.MessageContext.command": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.command": {"tf": 1}, "tanjun.abc.SlashContext.expires_at": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.expires_at": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}}, "df": 38}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}}, "df": 10}, "e": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.Client.open": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.context.SlashContext.cancel_defer": {"tf": 1}, "tanjun.schedules.AbstractSchedule.copy": {"tf": 1}, "tanjun.schedules.IntervalSchedule.copy": {"tf": 1}}, "df": 11}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}}, "df": 20, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}}, "df": 10}}}}}, "s": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.inject_lc": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}}, "df": 6}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}}, "df": 2, "s": {"docs": {"tanjun.Client.message_accepts": {"tf": 1}, "tanjun.Client.set_message_accepts": {"tf": 1}, "tanjun.clients.Client.message_accepts": {"tf": 1}, "tanjun.clients.Client.set_message_accepts": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}}, "df": 8}}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.utilities.DM_PERMISSIONS": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.set_human_only": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}}, "df": 8}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1.7320508075688772}, "tanjun.LazyConstant.acquire": {"tf": 1.4142135623730951}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1.4142135623730951}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1.7320508075688772}, "tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1.7320508075688772}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}}, "df": 15, "d": {"docs": {"tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}}, "df": 8}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.Client.__init__": {"tf": 2.23606797749979}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.SlashCommand.build": {"tf": 1}, "tanjun.SlashCommandGroup.build": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.BaseSlashCommand.build": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 2.23606797749979}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.commands.SlashCommand.build": {"tf": 1}, "tanjun.commands.SlashCommandGroup.build": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}}, "df": 32}, "p": {"docs": {"tanjun.inject_lc": {"tf": 1.4142135623730951}, "tanjun.dependencies.inject_lc": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.inject_lc": {"tf": 1.4142135623730951}}, "df": 3, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.__init__": {"tf": 2.23606797749979}, "tanjun.Client.hooks": {"tf": 1}, "tanjun.MessageCommand.parent": {"tf": 1}, "tanjun.to_snowflake": {"tf": 1}, "tanjun.ParserError.__init__": {"tf": 1}, "tanjun.abc.CommandCallbackSig": {"tf": 1}, "tanjun.abc.MessageCommand.parent": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 2.23606797749979}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.commands.MessageCommand.parent": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.errors.ParserError.__init__": {"tf": 1}}, "df": 13}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_global_commands": {"tf": 2.23606797749979}, "tanjun.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.Client.fetch_rest_application_id": {"tf": 2}, "tanjun.cached_inject": {"tf": 1}, "tanjun.inject_lc": {"tf": 2.23606797749979}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.expires_at": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_global_commands": {"tf": 2.23606797749979}, "tanjun.abc.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.clients.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 2.23606797749979}, "tanjun.clients.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.clients.Client.fetch_rest_application_id": {"tf": 2}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.ResponseTypeT": {"tf": 1}, "tanjun.context.SlashContext.expires_at": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 2.23606797749979}, "tanjun.dependencies.Owners": {"tf": 1.4142135623730951}, "tanjun.dependencies.Owners.__init__": {"tf": 1.7320508075688772}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 2.23606797749979}, "tanjun.dependencies.owners.Owners": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1.7320508075688772}}, "df": 37, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}}, "df": 4}, "d": {"docs": {"tanjun.Client.add_check": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"tanjun.Client.set_human_only": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.slash_command_group": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}}, "df": 27}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}}, "df": 7}}}}}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.hooks": {"tf": 1.4142135623730951}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}}, "df": 21}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.ClientLoader.load": {"tf": 1}, "tanjun.abc.ClientLoader.unload": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}}, "df": 6}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 10, "s": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1.4142135623730951}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Component.checks": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1.4142135623730951}, "tanjun.abc.Component.check_message_name": {"tf": 1.4142135623730951}, "tanjun.abc.Client.check_message_name": {"tf": 1.4142135623730951}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1.4142135623730951}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.components.Component.checks": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1.4142135623730951}, "tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 14}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.as_interval": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}}, "df": 10}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 2.6457513110645907}, "tanjun.abc.Context.edit_last_response": {"tf": 2.6457513110645907}, "tanjun.abc.Context.respond": {"tf": 1.7320508075688772}, "tanjun.abc.MessageContext.respond": {"tf": 2.6457513110645907}, "tanjun.abc.SlashContext.create_followup": {"tf": 2.23606797749979}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 2.6457513110645907}, "tanjun.context.MessageContext.edit_last_response": {"tf": 2.6457513110645907}, "tanjun.context.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_followup": {"tf": 2.23606797749979}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 2.6457513110645907}, "tanjun.context.SlashContext.edit_last_response": {"tf": 2.6457513110645907}, "tanjun.context.SlashContext.respond": {"tf": 1.7320508075688772}}, "df": 12, "s": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 3.1622776601683795}, "tanjun.abc.Context.edit_last_response": {"tf": 3.1622776601683795}, "tanjun.abc.Context.respond": {"tf": 2.23606797749979}, "tanjun.abc.MessageContext.respond": {"tf": 2.8284271247461903}, "tanjun.abc.SlashContext.create_followup": {"tf": 2}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 3.1622776601683795}, "tanjun.context.MessageContext.edit_last_response": {"tf": 3.1622776601683795}, "tanjun.context.MessageContext.respond": {"tf": 2.23606797749979}, "tanjun.context.SlashContext.create_followup": {"tf": 2}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 3.1622776601683795}, "tanjun.context.SlashContext.edit_last_response": {"tf": 3.1622776601683795}, "tanjun.context.SlashContext.respond": {"tf": 2.23606797749979}}, "df": 12}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"tanjun": {"tf": 1}, "tanjun.abc.ClientLoader": {"tf": 1}, "tanjun.abc.ClientLoader.load": {"tf": 1}, "tanjun.abc.ClientLoader.unload": {"tf": 1}, "tanjun.abc.SlashOption": {"tf": 1}, "tanjun.abc.Component": {"tf": 1}, "tanjun.context.SlashOption": {"tf": 1}, "tanjun.injecting": {"tf": 1}, "tanjun.injecting.CallbackDescriptor": {"tf": 1}, "tanjun.injecting.TypeDescriptor": {"tf": 1}}, "df": 10}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.as_loader": {"tf": 2}, "tanjun.Client.load_modules": {"tf": 2}, "tanjun.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.MessageCommand.load_into_component": {"tf": 1}, "tanjun.SlashCommand.load_into_component": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.abc.ClientLoader": {"tf": 1}, "tanjun.abc.ClientLoader.load": {"tf": 1.4142135623730951}, "tanjun.abc.Client.load_modules": {"tf": 2}, "tanjun.abc.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 2}, "tanjun.clients.Client.load_modules": {"tf": 2}, "tanjun.clients.Client.unload_modules": {"tf": 1.4142135623730951}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.MessageCommand.load_into_component": {"tf": 1}, "tanjun.commands.BaseSlashCommand.load_into_component": {"tf": 1}, "tanjun.commands.SlashCommand.load_into_component": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.components.Component.make_loader": {"tf": 1}, "tanjun.components.AbstractComponentLoader.load_into_component": {"tf": 1}, "tanjun.schedules.IntervalSchedule.load_into_component": {"tf": 1}}, "df": 31, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 2}, "tanjun.Client.unload_modules": {"tf": 1.7320508075688772}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 2}, "tanjun.abc.Client.unload_modules": {"tf": 1.7320508075688772}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 2}, "tanjun.clients.Client.unload_modules": {"tf": 1.7320508075688772}, "tanjun.components.Component.make_loader": {"tf": 1}}, "df": 13, "s": {"docs": {"tanjun.Client.load_modules": {"tf": 1.7320508075688772}, "tanjun.Client.reload_modules": {"tf": 1.7320508075688772}, "tanjun.abc.Client.load_modules": {"tf": 1.7320508075688772}, "tanjun.abc.Client.reload_modules": {"tf": 1.7320508075688772}, "tanjun.clients.Client.load_modules": {"tf": 1.7320508075688772}, "tanjun.clients.Client.reload_modules": {"tf": 1.7320508075688772}}, "df": 6}, "/": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Component.make_loader": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}}, "df": 2}}}}}}}}}}, "d": {"docs": {"tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.MessageCommand.load_into_component": {"tf": 1}, "tanjun.SlashCommand.load_into_component": {"tf": 1}, "tanjun.abc.ClientLoader.load": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommand.load_into_component": {"tf": 1}, "tanjun.commands.BaseSlashCommand.load_into_component": {"tf": 1}, "tanjun.commands.SlashCommand.load_into_component": {"tf": 1}, "tanjun.components.AbstractComponentLoader.load_into_component": {"tf": 1}, "tanjun.schedules.IntervalSchedule.load_into_component": {"tf": 1}}, "df": 20}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1.4142135623730951}, "tanjun.abc.Component": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1.4142135623730951}, "tanjun.components.AbstractComponentLoader": {"tf": 1}}, "df": 16}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 9}, "e": {"docs": {"tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.Client.loop": {"tf": 1}, "tanjun.Component.loop": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.abc.Component.loop": {"tf": 1}, "tanjun.abc.Client.loop": {"tf": 1}, "tanjun.clients.Client.loop": {"tf": 1}, "tanjun.components.Component.loop": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 2}, "tanjun.schedules.IntervalSchedule.start": {"tf": 2}}, "df": 14}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.HaltExecution": {"tf": 1}, "tanjun.errors.HaltExecution": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.utilities.CastedView": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.Context.delete_initial_response": {"tf": 1}, "tanjun.abc.Context.delete_last_response": {"tf": 1}, "tanjun.abc.Context.fetch_initial_response": {"tf": 1}, "tanjun.abc.Context.fetch_last_response": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.context.MessageContext.delete_initial_response": {"tf": 1}, "tanjun.context.MessageContext.delete_last_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_initial_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_last_response": {"tf": 1}, "tanjun.context.SlashContext.delete_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_last_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_initial_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_last_response": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}}, "df": 14}}}}}, "s": {"docs": {"tanjun.utilities.fetch_everyone_permissions": {"tf": 1.4142135623730951}, "tanjun.utilities.fetch_permissions": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}}, "df": 6}}}, "l": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.components.Component.load_from_scope": {"tf": 1.4142135623730951}}, "df": 2}}, "k": {"docs": {"tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1.7320508075688772}, "tanjun.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.LazyConstant.acquire": {"tf": 1.4142135623730951}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1.4142135623730951}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1.7320508075688772}, "tanjun.dependencies.AbstractConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1.7320508075688772}, "tanjun.dependencies.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.release": {"tf": 1}}, "df": 13}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}}, "df": 26}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.CommandError.__init__": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1.4142135623730951}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}, "t": {"docs": {"tanjun.conversion.ToChannel.__init__": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"tanjun": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}}, "df": 2}}}, "r": {"docs": {"tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}}, "df": 5}}}, "z": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.LazyConstant": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.LazyConstant": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.data.LazyConstant": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}}, "df": 9, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.inject_lc": {"tf": 2.23606797749979}, "tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 2.23606797749979}, "tanjun.dependencies.make_lc_resolver": {"tf": 1.7320508075688772}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 2.23606797749979}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1.7320508075688772}}, "df": 8, "[": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.CacheIterator": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}}, "df": 10}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.Context.delete_initial_response": {"tf": 1}, "tanjun.abc.Context.delete_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 2.449489742783178}, "tanjun.abc.Context.fetch_last_response": {"tf": 1}, "tanjun.context.MessageContext.delete_initial_response": {"tf": 1}, "tanjun.context.MessageContext.delete_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 2.449489742783178}, "tanjun.context.MessageContext.fetch_last_response": {"tf": 1}, "tanjun.context.SlashContext.delete_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 2.449489742783178}, "tanjun.context.SlashContext.fetch_last_response": {"tf": 1}}, "df": 12}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 12}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}}, "df": 13}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.parsing.Parameter.is_multi": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Component.add_listener": {"tf": 1}, "tanjun.Component.remove_listener": {"tf": 1}, "tanjun.Component.with_listener": {"tf": 1}, "tanjun.abc.Component.add_listener": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Component.with_listener": {"tf": 1}, "tanjun.components.Component.add_listener": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}, "tanjun.components.Component.with_listener": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.add_listener": {"tf": 1.7320508075688772}, "tanjun.Client.remove_listener": {"tf": 1.4142135623730951}, "tanjun.Client.with_listener": {"tf": 1.7320508075688772}, "tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.Component": {"tf": 1}, "tanjun.Component.add_listener": {"tf": 1.7320508075688772}, "tanjun.Component.remove_listener": {"tf": 2}, "tanjun.Component.with_listener": {"tf": 1.4142135623730951}, "tanjun.abc.Component.add_listener": {"tf": 1.7320508075688772}, "tanjun.abc.Component.remove_listener": {"tf": 2}, "tanjun.abc.Component.with_listener": {"tf": 1.4142135623730951}, "tanjun.abc.Client.add_listener": {"tf": 1.7320508075688772}, "tanjun.abc.Client.remove_listener": {"tf": 1.4142135623730951}, "tanjun.abc.Client.with_listener": {"tf": 1.7320508075688772}, "tanjun.clients.Client.add_listener": {"tf": 1.7320508075688772}, "tanjun.clients.Client.remove_listener": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_listener": {"tf": 1.7320508075688772}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.components.Component": {"tf": 1}, "tanjun.components.Component.add_listener": {"tf": 1.7320508075688772}, "tanjun.components.Component.remove_listener": {"tf": 2}, "tanjun.components.Component.with_listener": {"tf": 1.4142135623730951}}, "df": 22, "s": {"docs": {"tanjun.Client": {"tf": 1}, "tanjun.Client.listeners": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.remove_component_by_name": {"tf": 1}, "tanjun.Component": {"tf": 1}, "tanjun.Component.listeners": {"tf": 1}, "tanjun.abc.ClientLoader.load": {"tf": 1}, "tanjun.abc.ClientLoader.unload": {"tf": 1}, "tanjun.abc.Component": {"tf": 1.4142135623730951}, "tanjun.abc.Component.listeners": {"tf": 1}, "tanjun.abc.Client.listeners": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.clients.Client.listeners": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}, "tanjun.components.Component": {"tf": 1}, "tanjun.components.Component.listeners": {"tf": 1}}, "df": 19}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.remove_listener": {"tf": 1}, "tanjun.Component.add_listener": {"tf": 1}, "tanjun.Component.remove_listener": {"tf": 1}, "tanjun.abc.ListenerCallbackSigT": {"tf": 1}, "tanjun.abc.Component.add_listener": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.remove_listener": {"tf": 1}, "tanjun.components.Component.add_listener": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}}, "df": 13, "t": {"docs": {"tanjun.Client.with_listener": {"tf": 1}, "tanjun.Component.with_listener": {"tf": 1}, "tanjun.abc.Component.with_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.components.Component.with_listener": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}, "s": {"docs": {"tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}}, "df": 5}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1.4142135623730951}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 2.23606797749979}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1.7320508075688772}, "tanjun.with_concurrency_limit": {"tf": 1.7320508075688772}, "tanjun.abc.Context.fetch_channel": {"tf": 2}, "tanjun.abc.Context.fetch_guild": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 2.23606797749979}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1.7320508075688772}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.ConcurrencyPostExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 2.23606797749979}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1.7320508075688772}}, "df": 39, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.set_human_only": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_human_only": {"tf": 1.4142135623730951}}, "df": 2}, "r": {"docs": {"tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1.4142135623730951}, "tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1.4142135623730951}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}}, "df": 7, "s": {"docs": {"tanjun.BucketResource": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.BucketResource": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}}, "df": 7}}}, "s": {"docs": {"tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 2}, "tanjun.abc.Context.fetch_guild": {"tf": 2}, "tanjun.abc.Context.edit_initial_response": {"tf": 2.23606797749979}, "tanjun.abc.Context.edit_last_response": {"tf": 2.23606797749979}, "tanjun.abc.Context.respond": {"tf": 2.23606797749979}, "tanjun.abc.MessageContext.respond": {"tf": 2.23606797749979}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 2.23606797749979}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 2.23606797749979}, "tanjun.context.MessageContext.edit_last_response": {"tf": 2.23606797749979}, "tanjun.context.MessageContext.respond": {"tf": 2.23606797749979}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 2.23606797749979}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 2.23606797749979}, "tanjun.context.SlashContext.edit_last_response": {"tf": 2.23606797749979}, "tanjun.context.SlashContext.respond": {"tf": 2.23606797749979}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}}, "df": 19}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter": {"tf": 1}}, "df": 16}}}}}}, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.fetch_rest_application_id": {"tf": 1.4142135623730951}, "tanjun.Component": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.clients.Client.fetch_rest_application_id": {"tf": 1.4142135623730951}, "tanjun.components.Component": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.utilities.ALL_PERMISSIONS": {"tf": 1}}, "df": 8}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.as_self_injecting": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.inject": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}}, "df": 3}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 12}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.checks": {"tf": 1}, "tanjun.Client.hooks": {"tf": 1.4142135623730951}, "tanjun.Client.slash_hooks": {"tf": 1}, "tanjun.Client.message_hooks": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.checks": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1.4142135623730951}, "tanjun.clients.Client.slash_hooks": {"tf": 1}, "tanjun.clients.Client.message_hooks": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}}, "df": 36}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 61}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.SlashContext.mark_not_found": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.mark_not_found": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}}, "df": 14, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}}, "df": 5}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.dependencies.CacheIterator.len": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1.4142135623730951}}, "df": 24}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.cached_inject": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}}, "df": 15}}}, "c": {"docs": {"tanjun.inject_lc": {"tf": 1}, "tanjun.LazyConstant": {"tf": 1}, "tanjun.dependencies.LazyConstant": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.data.LazyConstant": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}}, "df": 8}}, "w": {"docs": {"tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}}, "df": 27, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"tanjun": {"tf": 1}}, "df": 1}}, "k": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.inject_lc": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}}, "df": 38, "s": {"docs": {"tanjun.Client": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}, "tanjun.conversion.ToMember": {"tf": 1}, "tanjun.conversion.ToPresence": {"tf": 1}, "tanjun.conversion.ToVoiceState": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}}, "df": 13}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}}, "df": 13}}}, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.Hooks": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}}, "df": 24}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.abc.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.abc.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.context.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}}, "df": 47, "s": {"docs": {"tanjun.errors": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 9}, "i": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}}, "df": 9}}, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1.4142135623730951}, "tanjun.dependencies.AsyncCache.get": {"tf": 1.4142135623730951}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1.4142135623730951}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1.4142135623730951}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1.4142135623730951}}, "df": 12}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.conversion.to_emoji": {"tf": 1}, "tanjun.conversion.ToEmoji": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}}, "df": 7}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.is_human_only": {"tf": 1}, "tanjun.Client.is_alive": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.Client.set_human_only": {"tf": 1.4142135623730951}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.iter_slash_commands": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 2.8284271247461903}, "tanjun.slash_command_group": {"tf": 2}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 2.8284271247461903}, "tanjun.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.__init__": {"tf": 2}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.needs_injector": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.Component.with_command": {"tf": 1}, "tanjun.Component.with_slash_command": {"tf": 1}, "tanjun.Component.with_message_command": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.ShlexParser.needs_injector": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.with_argument": {"tf": 1.4142135623730951}, "tanjun.abc.ClientLoader.load": {"tf": 1}, "tanjun.abc.ClientLoader.unload": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.Context.has_responded": {"tf": 1}, "tanjun.abc.Context.is_human": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.abc.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.abc.SlashContext.defer": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.with_slash_command": {"tf": 1}, "tanjun.abc.Component.with_message_command": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.is_alive": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.is_human_only": {"tf": 1}, "tanjun.clients.Client.is_alive": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_human_only": {"tf": 1.4142135623730951}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 2.8284271247461903}, "tanjun.commands.slash_command_group": {"tf": 2}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.__init__": {"tf": 2.8284271247461903}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 2}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.needs_injector": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_command": {"tf": 1}, "tanjun.components.Component.with_slash_command": {"tf": 1}, "tanjun.components.Component.with_message_command": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}, "tanjun.context.MessageContext.has_responded": {"tf": 1}, "tanjun.context.MessageContext.is_human": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.context.SlashContext.has_responded": {"tf": 1}, "tanjun.context.SlashContext.is_human": {"tf": 1}, "tanjun.context.SlashContext.defer": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1.4142135623730951}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1.4142135623730951}, "tanjun.injecting.AbstractDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.needs_injector": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1}, "tanjun.parsing.Parameter.is_multi": {"tf": 1}, "tanjun.parsing.Parameter.needs_injector": {"tf": 1}, "tanjun.parsing.ShlexParser.needs_injector": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_argument": {"tf": 1.4142135623730951}, "tanjun.schedules.AbstractSchedule.is_alive": {"tf": 1}, "tanjun.schedules.IntervalSchedule.is_alive": {"tf": 1}, "tanjun.utilities.gather_checks": {"tf": 1}}, "df": 205}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.ErrorHookSig": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.parsing.Parameter.is_greedy": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.BucketResource": {"tf": 1}, "tanjun.abc": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.components": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.context.MessageContext": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.conversion.ToMember": {"tf": 1}, "tanjun.dependencies": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.BucketResource": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource": {"tf": 1}, "tanjun.errors": {"tf": 1}, "tanjun.injecting": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.cache_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.UNDEFINED": {"tf": 1}, "tanjun.parsing.ConverterSig": {"tf": 1}, "tanjun.utilities": {"tf": 1}, "tanjun.utilities.DM_PERMISSIONS": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 2}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 62}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.with_option": {"tf": 1.4142135623730951}, "tanjun.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.checks.CallbackReturnT": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.conversion.to_emoji": {"tf": 1}, "tanjun.conversion.ToEmoji": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_option": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_option": {"tf": 1.4142135623730951}}, "df": 45}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 28}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"tanjun.Client.set_human_only": {"tf": 1}, "tanjun.abc.Context.is_human": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.context.MessageContext.is_human": {"tf": 1}, "tanjun.context.SlashContext.is_human": {"tf": 1}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.dependencies.async_cache": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1.4142135623730951}}, "df": 13, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 2}, "tanjun.abc.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 2.6457513110645907}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 2}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 2}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}}, "df": 38, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.has_been_deferred": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.CommandError.__init__": {"tf": 1}, "tanjun.CommandError.message": {"tf": 1.4142135623730951}, "tanjun.ParserError.message": {"tf": 1}, "tanjun.abc.Context.has_responded": {"tf": 1}, "tanjun.abc.Context.delete_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.delete_last_response": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 2.8284271247461903}, "tanjun.abc.Context.edit_last_response": {"tf": 2.8284271247461903}, "tanjun.abc.Context.fetch_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.fetch_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.7320508075688772}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.has_been_deferred": {"tf": 2}, "tanjun.abc.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.abc.SlashContext.defer": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.mark_not_found": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 2.23606797749979}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 2.23606797749979}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.context.MessageContext.has_responded": {"tf": 1}, "tanjun.context.MessageContext.delete_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.delete_last_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 2.8284271247461903}, "tanjun.context.MessageContext.edit_last_response": {"tf": 2.8284271247461903}, "tanjun.context.MessageContext.fetch_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.fetch_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.context.ResponseTypeT": {"tf": 1}, "tanjun.context.SlashContext.defaults_to_ephemeral": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.has_been_deferred": {"tf": 2}, "tanjun.context.SlashContext.has_responded": {"tf": 1}, "tanjun.context.SlashContext.get_response_future": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.mark_not_found": {"tf": 1}, "tanjun.context.SlashContext.set_ephemeral_default": {"tf": 1}, "tanjun.context.SlashContext.defer": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_followup": {"tf": 2.23606797749979}, "tanjun.context.SlashContext.create_initial_response": {"tf": 2.23606797749979}, "tanjun.context.SlashContext.delete_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.delete_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 2.8284271247461903}, "tanjun.context.SlashContext.edit_last_response": {"tf": 2.8284271247461903}, "tanjun.context.SlashContext.fetch_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.fetch_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.7320508075688772}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}, "tanjun.errors.CommandError.message": {"tf": 1.4142135623730951}, "tanjun.errors.ParserError.message": {"tf": 1}}, "df": 105, "s": {"docs": {"tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.abc.Context.delete_last_response": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.respond": {"tf": 1.7320508075688772}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.context.MessageContext.delete_last_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_followup": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.delete_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.respond": {"tf": 1.7320508075688772}}, "df": 39}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.Client.__init__": {"tf": 2}, "tanjun.Client.rest": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.abc.Context.rest": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Client.rest": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 2}, "tanjun.clients.Client.rest": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.get_response_future": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.conversion.to_emoji": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1.4142135623730951}, "tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1.4142135623730951}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 72, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"tanjun": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.from_rest_bot": {"tf": 1.7320508075688772}, "tanjun.clients.Client.from_rest_bot": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.cached_inject": {"tf": 1.4142135623730951}, "tanjun.inject_lc": {"tf": 2}, "tanjun.LazyConstant": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1}, "tanjun.inject": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption": {"tf": 1}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1.7320508075688772}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.context.SlashOption": {"tf": 1}, "tanjun.context.SlashOption.resolve_value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1.7320508075688772}, "tanjun.dependencies.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.LazyConstant": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 2}, "tanjun.dependencies.make_lc_resolver": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.LazyConstant": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 2}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1.4142135623730951}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1.4142135623730951}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1.4142135623730951}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1.4142135623730951}, "tanjun.injecting.inject": {"tf": 1.4142135623730951}, "tanjun.injecting.Injected.__init__": {"tf": 1.4142135623730951}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1.7320508075688772}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1.4142135623730951}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1.4142135623730951}}, "df": 48, "d": {"docs": {"tanjun.inject": {"tf": 1}, "tanjun.abc.MaybeAwaitableT": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1.4142135623730951}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.get_type_dependency": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}}, "df": 11}, "s": {"docs": {"tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.inject": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.SlashOption.resolve_value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.context.SlashOption.resolve_value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}}, "df": 4}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.BucketResource": {"tf": 1}, "tanjun.BucketResource.USER": {"tf": 1}, "tanjun.BucketResource.MEMBER": {"tf": 1}, "tanjun.BucketResource.CHANNEL": {"tf": 1}, "tanjun.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.BucketResource.GUILD": {"tf": 1}, "tanjun.BucketResource.GLOBAL": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1.7320508075688772}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1.7320508075688772}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 2}, "tanjun.abc.Context.edit_last_response": {"tf": 2}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 2}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 2}, "tanjun.context.MessageContext.edit_last_response": {"tf": 2}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 2}, "tanjun.context.SlashContext.edit_last_response": {"tf": 2}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.AsyncCache": {"tf": 1}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.CacheIterator": {"tf": 1}, "tanjun.dependencies.CacheIterator.len": {"tf": 1.4142135623730951}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.BucketResource": {"tf": 1}, "tanjun.dependencies.BucketResource.USER": {"tf": 1}, "tanjun.dependencies.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.BucketResource.GUILD": {"tf": 1}, "tanjun.dependencies.BucketResource.GLOBAL": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1.7320508075688772}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1.7320508075688772}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.CacheIterator": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.USER": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.MEMBER": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.PARENT_CHANNEL": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GUILD": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.GLOBAL": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution.__init__": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1.7320508075688772}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}}, "df": 66, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}}, "df": 9}}}, "s": {"docs": {"tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.dependencies.AsyncCache": {"tf": 1.4142135623730951}, "tanjun.dependencies.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.GuildBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.ChannelBoundCache": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache": {"tf": 1}}, "df": 8}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.cached_inject": {"tf": 1.4142135623730951}, "tanjun.inject_lc": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.dependencies.cache_callback": {"tf": 2}, "tanjun.dependencies.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 2}, "tanjun.dependencies.data.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.cache_result": {"tf": 1.4142135623730951}, "tanjun.injecting.AbstractInjectionContext.get_cached_result": {"tf": 1.7320508075688772}, "tanjun.injecting.BasicInjectionContext.cache_result": {"tf": 1.4142135623730951}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"tf": 1.7320508075688772}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.Parameter.key": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 58, "s": {"docs": {"tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}}, "df": 7}, "t": {"docs": {"tanjun.inject": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.parsing.ConverterSig": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1.4142135623730951}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.to_snowflake": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.conversion.to_emoji": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}}, "df": 33}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.release": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.release": {"tf": 1}}, "df": 7}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.as_unloader": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Component.make_loader": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}}, "df": 2}}}}}}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1}, "tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.load_modules": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 10}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.conversion.ToChannel.async_caches": {"tf": 1}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.async_caches": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.async_caches": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.async_caches": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}}, "df": 23}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 2.449489742783178}, "tanjun.abc.Context.edit_last_response": {"tf": 2.449489742783178}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 2.449489742783178}, "tanjun.context.MessageContext.edit_last_response": {"tf": 2.449489742783178}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 2.449489742783178}, "tanjun.context.SlashContext.edit_last_response": {"tf": 2.449489742783178}}, "df": 7}}}, "y": {"docs": {"tanjun.abc.MessageContext.respond": {"tf": 2}}, "df": 1}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.parsing.UNDEFINED_DEFAULT": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.parsing.Argument": {"tf": 1}, "tanjun.parsing.Option": {"tf": 1}}, "df": 5, "s": {"docs": {"tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 6}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.declare_application_command": {"tf": 1.7320508075688772}, "tanjun.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1.7320508075688772}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1.7320508075688772}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}}, "df": 20, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.checks": {"tf": 1}, "tanjun.Client.listeners": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.Client.add_component": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.remove_component_by_name": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.dispatch_client_callback": {"tf": 1}, "tanjun.Client.get_client_callbacks": {"tf": 1.4142135623730951}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.remove_prefix": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.Client.iter_commands": {"tf": 1.4142135623730951}, "tanjun.Client.iter_message_commands": {"tf": 1.4142135623730951}, "tanjun.Client.iter_slash_commands": {"tf": 1.4142135623730951}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.Component.schedules": {"tf": 1}, "tanjun.Component.listeners": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.remove_listener": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.Component.remove_schedule": {"tf": 1}, "tanjun.Hooks": {"tf": 1}, "tanjun.ShlexParser.parameters": {"tf": 1}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.abc.ExecutableCommand.component": {"tf": 1}, "tanjun.abc.HookSig": {"tf": 1}, "tanjun.abc.Component.listeners": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Client.listeners": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1.4142135623730951}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.iter_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.iter_message_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1.4142135623730951}, "tanjun.checks.DmCheck": {"tf": 1}, "tanjun.checks.GuildCheck": {"tf": 1}, "tanjun.checks.NsfwCheck": {"tf": 1}, "tanjun.checks.SfwCheck": {"tf": 1}, "tanjun.checks.OwnerCheck": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck": {"tf": 1}, "tanjun.checks.OwnPermissionCheck": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.checks": {"tf": 1}, "tanjun.clients.Client.listeners": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1.4142135623730951}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.Client.iter_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.iter_message_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1.4142135623730951}, "tanjun.clients.ClientCallbackNames.COMPONENT_ADDED": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.PartialCommand.component": {"tf": 1}, "tanjun.components.Component.schedules": {"tf": 1}, "tanjun.components.Component.listeners": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.components.Component.remove_schedule": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.dependencies.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.ConcurrencyPostExecution": {"tf": 1}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.hooks.Hooks": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.parsing.AbstractParser.parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.Parameter.converters": {"tf": 1}, "tanjun.parsing.ShlexParser.parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}}, "df": 107}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager": {"tf": 1}}, "df": 6}}}, "s": {"docs": {"tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}}, "df": 6}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.abc.ListenerCallbackSig": {"tf": 1}, "tanjun.abc.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.commands.BaseSlashCommand.is_global": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.schedules.AbstractSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.IntervalSchedule.iteration_count": {"tf": 1}}, "df": 25}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}}, "df": 26}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.as_unloader": {"tf": 1}, "tanjun.Client.remove_check": {"tf": 1.4142135623730951}, "tanjun.Client.remove_component": {"tf": 1.4142135623730951}, "tanjun.Client.remove_component_by_name": {"tf": 1.4142135623730951}, "tanjun.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.Client.remove_listener": {"tf": 1.7320508075688772}, "tanjun.Client.remove_prefix": {"tf": 1.4142135623730951}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.remove_command": {"tf": 1.4142135623730951}, "tanjun.Component.remove_command": {"tf": 1.4142135623730951}, "tanjun.Component.remove_slash_command": {"tf": 1.4142135623730951}, "tanjun.Component.remove_message_command": {"tf": 1.4142135623730951}, "tanjun.Component.remove_listener": {"tf": 1.4142135623730951}, "tanjun.Component.remove_schedule": {"tf": 1.4142135623730951}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.ShlexParser.remove_parameter": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1.4142135623730951}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1.4142135623730951}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1.4142135623730951}, "tanjun.abc.Component.remove_slash_command": {"tf": 1.4142135623730951}, "tanjun.abc.Component.remove_message_command": {"tf": 1.4142135623730951}, "tanjun.abc.Component.remove_listener": {"tf": 1.4142135623730951}, "tanjun.abc.Client.remove_component": {"tf": 1.4142135623730951}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1.4142135623730951}, "tanjun.abc.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.abc.Client.remove_listener": {"tf": 1.7320508075688772}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.remove_check": {"tf": 1.4142135623730951}, "tanjun.clients.Client.remove_component": {"tf": 1.4142135623730951}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1.4142135623730951}, "tanjun.clients.Client.remove_client_callback": {"tf": 1.4142135623730951}, "tanjun.clients.Client.remove_listener": {"tf": 1.7320508075688772}, "tanjun.clients.Client.remove_prefix": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1.4142135623730951}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.remove_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.remove_slash_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.remove_message_command": {"tf": 1.4142135623730951}, "tanjun.components.Component.remove_listener": {"tf": 1.4142135623730951}, "tanjun.components.Component.remove_schedule": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1.4142135623730951}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1.4142135623730951}}, "df": 69, "d": {"docs": {"tanjun.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.abc.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1.4142135623730951}, "tanjun.clients.ClientCallbackNames.COMPONENT_REMOVED": {"tf": 1.4142135623730951}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_argument": {"tf": 1.4142135623730951}}, "df": 10}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client.set_message_ctx_maker": {"tf": 1.4142135623730951}, "tanjun.Client.set_slash_ctx_maker": {"tf": 1.4142135623730951}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.7320508075688772}, "tanjun.abc.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1.4142135623730951}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.set_message_ctx_maker": {"tf": 1.4142135623730951}, "tanjun.clients.Client.set_slash_ctx_maker": {"tf": 1.4142135623730951}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.components.OnCallbackSig": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.respond": {"tf": 1.7320508075688772}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.parsing.Option.empty_value": {"tf": 1}, "tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.AbstractSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.iteration_count": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1.4142135623730951}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 78, "s": {"docs": {"tanjun.with_all_checks": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1}, "tanjun.with_check": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client.hooks": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.add_component": {"tf": 1}, "tanjun.Client.get_component_by_name": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.get_client_callbacks": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.add_listener": {"tf": 1.4142135623730951}, "tanjun.Client.remove_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1.4142135623730951}, "tanjun.Client.add_prefix": {"tf": 1}, "tanjun.Client.remove_prefix": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.Client.with_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.Client.iter_commands": {"tf": 1}, "tanjun.Client.iter_message_commands": {"tf": 1}, "tanjun.Client.iter_slash_commands": {"tf": 1}, "tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.MessageCommand.copy": {"tf": 1}, "tanjun.MessageCommand.set_parent": {"tf": 1}, "tanjun.MessageCommandGroup.copy": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.build": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommand.copy": {"tf": 1}, "tanjun.SlashCommandGroup.build": {"tf": 1}, "tanjun.SlashCommandGroup.copy": {"tf": 1}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.with_str_slash_option": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1}, "tanjun.with_float_slash_option": {"tf": 1}, "tanjun.with_bool_slash_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 1}, "tanjun.with_user_slash_option": {"tf": 1}, "tanjun.with_member_slash_option": {"tf": 1}, "tanjun.with_channel_slash_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.Component.add_command": {"tf": 1}, "tanjun.Component.remove_command": {"tf": 1}, "tanjun.Component.with_command": {"tf": 1}, "tanjun.Component.add_slash_command": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.with_slash_command": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.with_message_command": {"tf": 1}, "tanjun.Component.add_listener": {"tf": 1}, "tanjun.Component.remove_listener": {"tf": 1}, "tanjun.Component.with_listener": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1.4142135623730951}, "tanjun.Component.check_slash_name": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.Component.add_schedule": {"tf": 1}, "tanjun.Component.remove_schedule": {"tf": 1}, "tanjun.Component.with_schedule": {"tf": 1}, "tanjun.Component.make_loader": {"tf": 1}, "tanjun.to_bool": {"tf": 1}, "tanjun.to_datetime": {"tf": 1}, "tanjun.to_snowflake": {"tf": 1}, "tanjun.cached_inject": {"tf": 1}, "tanjun.inject_lc": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.with_concurrency_limit": {"tf": 1}, "tanjun.with_cooldown": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1}, "tanjun.ShlexParser.copy": {"tf": 1}, "tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.with_parser": {"tf": 1}, "tanjun.as_interval": {"tf": 1.4142135623730951}, "tanjun.abc.ClientLoader.load": {"tf": 1}, "tanjun.abc.ClientLoader.unload": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.ExecutableCommand.copy": {"tf": 1}, "tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1}, "tanjun.abc.ExecutableCommand.add_check": {"tf": 1}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1}, "tanjun.abc.ListenerCallbackSig": {"tf": 1}, "tanjun.abc.MessageCommand.set_parent": {"tf": 1}, "tanjun.abc.MessageCommand.copy": {"tf": 1}, "tanjun.abc.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.BaseSlashCommand.build": {"tf": 1}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.abc.Component.add_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.with_slash_command": {"tf": 1}, "tanjun.abc.Component.add_message_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.with_message_command": {"tf": 1}, "tanjun.abc.Component.add_listener": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Component.with_listener": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1.4142135623730951}, "tanjun.abc.Component.check_slash_name": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.add_component": {"tf": 1}, "tanjun.abc.Client.get_component_by_name": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.get_client_callbacks": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1.4142135623730951}, "tanjun.abc.Client.remove_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1.4142135623730951}, "tanjun.abc.Client.iter_commands": {"tf": 1}, "tanjun.abc.Client.iter_message_commands": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_check": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.get_component_by_name": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.get_client_callbacks": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1.4142135623730951}, "tanjun.clients.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1.4142135623730951}, "tanjun.clients.Client.add_prefix": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.clients.Client.iter_commands": {"tf": 1}, "tanjun.clients.Client.iter_message_commands": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.fetch_rest_application_id": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.clients.PrefixGetterSig": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.MessageCommand.copy": {"tf": 1}, "tanjun.commands.MessageCommand.set_parent": {"tf": 1}, "tanjun.commands.MessageCommandGroup.copy": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.with_command": {"tf": 1}, "tanjun.commands.PartialCommand.copy": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1}, "tanjun.commands.PartialCommand.add_check": {"tf": 1}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1}, "tanjun.commands.BaseSlashCommand.defaults_to_ephemeral": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.BaseSlashCommand.copy": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.build": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommand.copy": {"tf": 1}, "tanjun.commands.SlashCommandGroup.build": {"tf": 1}, "tanjun.commands.SlashCommandGroup.copy": {"tf": 1}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.with_command": {"tf": 1}, "tanjun.commands.with_str_slash_option": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1}, "tanjun.commands.with_float_slash_option": {"tf": 1}, "tanjun.commands.with_bool_slash_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 1}, "tanjun.commands.with_user_slash_option": {"tf": 1}, "tanjun.commands.with_member_slash_option": {"tf": 1}, "tanjun.commands.with_channel_slash_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.add_command": {"tf": 1}, "tanjun.components.Component.remove_command": {"tf": 1}, "tanjun.components.Component.with_command": {"tf": 1}, "tanjun.components.Component.add_slash_command": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.with_slash_command": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.with_message_command": {"tf": 1}, "tanjun.components.Component.add_listener": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}, "tanjun.components.Component.with_listener": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1.4142135623730951}, "tanjun.components.Component.check_slash_name": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.components.Component.add_schedule": {"tf": 1}, "tanjun.components.Component.remove_schedule": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1}, "tanjun.components.Component.make_loader": {"tf": 1}, "tanjun.context.MessageContext.set_triggering_prefix": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.get_response_future": {"tf": 1}, "tanjun.context.SlashContext.start_defer_timer": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.context.SlashOption.resolve_value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1}, "tanjun.conversion.parse_snowflake": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}, "tanjun.conversion.search_snowflakes": {"tf": 1}, "tanjun.conversion.search_channel_ids": {"tf": 1}, "tanjun.conversion.search_emoji_ids": {"tf": 1}, "tanjun.conversion.search_role_ids": {"tf": 1}, "tanjun.conversion.search_user_ids": {"tf": 1}, "tanjun.conversion.to_bool": {"tf": 1}, "tanjun.conversion.to_datetime": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.inject_lc": {"tf": 1}, "tanjun.dependencies.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.with_cooldown": {"tf": 1}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.CacheIterator.len": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.data.inject_lc": {"tf": 1}, "tanjun.dependencies.data.make_lc_resolver": {"tf": 1}, "tanjun.dependencies.limiters.AbstractConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.try_acquire": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.disable_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.with_concurrency_limit": {"tf": 1}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_cached_result": {"tf": 1}, "tanjun.injecting.BasicInjectionContext.get_type_dependency": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.copy": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.get_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.AbstractParser.copy": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.ConverterSig": {"tf": 1}, "tanjun.parsing.Parameter.copy": {"tf": 1}, "tanjun.parsing.ParseableProto.set_parser": {"tf": 1}, "tanjun.parsing.ShlexParser.copy": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.parsing.with_parser": {"tf": 1}, "tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.AbstractSchedule.copy": {"tf": 1}, "tanjun.schedules.as_interval": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.copy": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}, "tanjun.utilities.gather_checks": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}, "tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 516}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.FailedCheck": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.errors.FailedCheck": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}}, "df": 36}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.unload_modules": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.abc.ErrorHookSig": {"tf": 1.4142135623730951}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.injecting.Injected": {"tf": 1}}, "df": 8}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.set_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1.4142135623730951}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}}, "df": 5}}}}, "y": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Component.needs_injector": {"tf": 1}, "tanjun.components.Component.needs_injector": {"tf": 1}}, "df": 2, "d": {"docs": {"tanjun.with_author_permission_check": {"tf": 1.4142135623730951}, "tanjun.with_own_permission_check": {"tf": 1.4142135623730951}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.CommandCallbackSig": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_own_permission_check": {"tf": 1.4142135623730951}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.Option.empty_value": {"tf": 1}, "tanjun.parsing.Parameter.default": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 48}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {"tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.conversion.ToChannel.async_caches": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.async_caches": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.async_caches": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.async_caches": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.async_caches": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.async_caches": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.async_caches": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.async_caches": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.async_caches": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.async_caches": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}}, "df": 32}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.inject": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 9}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.open": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 2}, "tanjun.abc.Context.fetch_guild": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.abc.Context.respond": {"tf": 2}, "tanjun.abc.MessageContext.respond": {"tf": 1.7320508075688772}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 2}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.respond": {"tf": 2}, "tanjun.context.SlashContext.create_initial_response": {"tf": 2}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.respond": {"tf": 2}}, "df": 22, "s": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.conversion.ToChannel.__init__": {"tf": 1}, "tanjun.conversion.ToChannel.cache_components": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToChannel.requires_cache": {"tf": 1}, "tanjun.conversion.ToEmoji.cache_components": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.requires_cache": {"tf": 1}, "tanjun.conversion.ToGuild.cache_components": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToGuild.requires_cache": {"tf": 1}, "tanjun.conversion.ToInvite.cache_components": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInvite.requires_cache": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.cache_components": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.requires_cache": {"tf": 1}, "tanjun.conversion.ToMember.cache_components": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToMember.requires_cache": {"tf": 1}, "tanjun.conversion.ToPresence.cache_components": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToPresence.requires_cache": {"tf": 1}, "tanjun.conversion.ToRole.cache_components": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToRole.requires_cache": {"tf": 1}, "tanjun.conversion.ToUser.cache_components": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToUser.requires_cache": {"tf": 1}, "tanjun.conversion.ToVoiceState.cache_components": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.requires_cache": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 50}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.on_interaction_create_request": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.on_interaction_create_request": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 17}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.injecting.CallbackSig": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}}, "df": 6, "s": {"docs": {"tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}}, "df": 31}}}}, "l": {"docs": {"tanjun.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1}}, "df": 3}, "d": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.expires_at": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.expires_at": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}}, "df": 7}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.as_self_injecting": {"tf": 2}, "tanjun.dependencies.async_cache": {"tf": 1.4142135623730951}, "tanjun.injecting.as_self_injecting": {"tf": 2}}, "df": 3, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.async_cache": {"tf": 1}}, "df": 1}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.Context.created_at": {"tf": 1}, "tanjun.context.MessageContext.created_at": {"tf": 1}, "tanjun.context.SlashContext.created_at": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.with_all_checks": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1.4142135623730951}, "tanjun.with_own_permission_check": {"tf": 1.7320508075688772}, "tanjun.Component.checks": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1.4142135623730951}, "tanjun.checks.with_own_permission_check": {"tf": 1.7320508075688772}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1.4142135623730951}, "tanjun.components.Component.checks": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.needs_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.needs_injector": {"tf": 1}, "tanjun.schedules.AbstractSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.IntervalSchedule.iteration_count": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}}, "df": 35, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.cached_inject": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.close": {"tf": 1}, "tanjun.Client.open": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.close": {"tf": 1}, "tanjun.Component.open": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.LazyConstant.set_value": {"tf": 1}, "tanjun.abc.Component.close": {"tf": 1}, "tanjun.abc.Component.open": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.close": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.close": {"tf": 1}, "tanjun.components.Component.open": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.schedules.AbstractSchedule.copy": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.AbstractSchedule.stop": {"tf": 1}, "tanjun.schedules.IntervalSchedule.copy": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.stop": {"tf": 1}}, "df": 50}}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.close": {"tf": 1}, "tanjun.Component.with_schedule": {"tf": 1}, "tanjun.Component.close": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.open": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.InMemoryCooldownManager.open": {"tf": 1.4142135623730951}, "tanjun.abc.Component.close": {"tf": 1}, "tanjun.clients.Client.close": {"tf": 1}, "tanjun.components.Component.with_schedule": {"tf": 1}, "tanjun.components.Component.close": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.open": {"tf": 1.4142135623730951}, "tanjun.dependencies.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.open": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.open": {"tf": 1.4142135623730951}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1.4142135623730951}, "tanjun.schedules.AbstractSchedule.stop": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.stop": {"tf": 1}}, "df": 23}}}}, "s": {"docs": {"tanjun.as_interval": {"tf": 1.4142135623730951}, "tanjun.schedules.as_interval": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.with_start_callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.with_stop_callback": {"tf": 1}}, "df": 5}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}}, "df": 9, "s": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1}, "tanjun.to_snowflake": {"tf": 1}, "tanjun.cached_inject": {"tf": 1.4142135623730951}, "tanjun.inject_lc": {"tf": 1.4142135623730951}, "tanjun.inject": {"tf": 1}, "tanjun.abc.SlashContext.expires_at": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1.4142135623730951}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1}, "tanjun.context.SlashContext.expires_at": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.conversion.parse_snowflake": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.inject_lc": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.cached_inject": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.inject_lc": {"tf": 1.4142135623730951}, "tanjun.injecting.inject": {"tf": 1}}, "df": 54, "s": {"docs": {"tanjun.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.Client.remove_check": {"tf": 1}, "tanjun.Client.add_component": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.remove_component_by_name": {"tf": 1}, "tanjun.Client.dispatch_client_callback": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.remove_listener": {"tf": 1}, "tanjun.Client.remove_prefix": {"tf": 1}, "tanjun.Client.close": {"tf": 1}, "tanjun.Client.open": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.remove_listener": {"tf": 1}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.Component.remove_schedule": {"tf": 1}, "tanjun.Component.close": {"tf": 1}, "tanjun.Component.open": {"tf": 1}, "tanjun.to_bool": {"tf": 1}, "tanjun.to_datetime": {"tf": 1}, "tanjun.to_snowflake": {"tf": 1}, "tanjun.cached_inject": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.LazyConstant.set_value": {"tf": 1}, "tanjun.CommandError.__init__": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.with_parser": {"tf": 1}, "tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.delete_initial_response": {"tf": 1}, "tanjun.abc.Context.delete_last_response": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.fetch_initial_response": {"tf": 1}, "tanjun.abc.Context.fetch_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Component.close": {"tf": 1}, "tanjun.abc.Component.open": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.remove_listener": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.remove_check": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.clients.Client.close": {"tf": 1}, "tanjun.clients.Client.open": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1.4142135623730951}, "tanjun.commands.slash_command_group": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1.4142135623730951}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}, "tanjun.components.Component.execute_message": {"tf": 1}, "tanjun.components.Component.remove_schedule": {"tf": 1}, "tanjun.components.Component.close": {"tf": 1}, "tanjun.components.Component.open": {"tf": 1}, "tanjun.context.MessageContext.delete_initial_response": {"tf": 1}, "tanjun.context.MessageContext.delete_last_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_initial_response": {"tf": 1}, "tanjun.context.MessageContext.fetch_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_initial_response": {"tf": 1}, "tanjun.context.SlashContext.delete_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_initial_response": {"tf": 1}, "tanjun.context.SlashContext.fetch_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.context.SlashOption.resolve_value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_channel": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1}, "tanjun.conversion.parse_snowflake": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}, "tanjun.conversion.to_bool": {"tf": 1}, "tanjun.conversion.to_datetime": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.set_value": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.close": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.open": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve": {"tf": 1}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}, "tanjun.parsing.with_parser": {"tf": 1}, "tanjun.schedules.AbstractSchedule.copy": {"tf": 1}, "tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.AbstractSchedule.stop": {"tf": 1}, "tanjun.schedules.IntervalSchedule.copy": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.stop": {"tf": 1}}, "df": 217}, "d": {"docs": {"tanjun.CommandError": {"tf": 1}, "tanjun.CommandError.__init__": {"tf": 1}, "tanjun.ConversionError": {"tf": 1}, "tanjun.ConversionError.__init__": {"tf": 1.4142135623730951}, "tanjun.ConversionError.parameter": {"tf": 1}, "tanjun.HaltExecution": {"tf": 1.4142135623730951}, "tanjun.FailedCheck": {"tf": 1}, "tanjun.MissingDependencyError": {"tf": 1}, "tanjun.NotEnoughArgumentsError": {"tf": 1}, "tanjun.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.NotEnoughArgumentsError.parameter": {"tf": 1}, "tanjun.TooManyArgumentsError": {"tf": 1}, "tanjun.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.TooManyArgumentsError.parameter": {"tf": 1}, "tanjun.ParserError": {"tf": 1.4142135623730951}, "tanjun.ParserError.parameter": {"tf": 1.4142135623730951}, "tanjun.TanjunError": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.as_interval": {"tf": 1.4142135623730951}, "tanjun.abc.Context.fetch_channel": {"tf": 1.4142135623730951}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.abc.ErrorHookSig": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.dependencies.CacheMissError": {"tf": 1.4142135623730951}, "tanjun.dependencies.EntryNotFound": {"tf": 1}, "tanjun.dependencies.async_cache.CacheMissError": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.EntryNotFound": {"tf": 1}, "tanjun.errors": {"tf": 1}, "tanjun.errors.CommandError": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}, "tanjun.errors.ConversionError": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1.4142135623730951}, "tanjun.errors.ConversionError.parameter": {"tf": 1}, "tanjun.errors.HaltExecution": {"tf": 1.4142135623730951}, "tanjun.errors.FailedCheck": {"tf": 1}, "tanjun.errors.MissingDependencyError": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.__init__": {"tf": 1}, "tanjun.errors.NotEnoughArgumentsError.parameter": {"tf": 1}, "tanjun.errors.TooManyArgumentsError": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.__init__": {"tf": 1}, "tanjun.errors.TooManyArgumentsError.parameter": {"tf": 1}, "tanjun.errors.ParserError": {"tf": 1.4142135623730951}, "tanjun.errors.ParserError.parameter": {"tf": 1.4142135623730951}, "tanjun.errors.TanjunError": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1.4142135623730951}, "tanjun.schedules.as_interval": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1.4142135623730951}}, "df": 67}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 2.8284271247461903}, "tanjun.abc.Context.fetch_guild": {"tf": 2.449489742783178}, "tanjun.abc.Context.edit_initial_response": {"tf": 2.449489742783178}, "tanjun.abc.Context.edit_last_response": {"tf": 2.449489742783178}, "tanjun.abc.Context.respond": {"tf": 2.449489742783178}, "tanjun.abc.MessageContext.respond": {"tf": 2.449489742783178}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 2.449489742783178}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 2.449489742783178}, "tanjun.context.MessageContext.edit_last_response": {"tf": 2.449489742783178}, "tanjun.context.MessageContext.respond": {"tf": 2.449489742783178}, "tanjun.context.SlashContext.create_initial_response": {"tf": 2.449489742783178}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 2.449489742783178}, "tanjun.context.SlashContext.edit_last_response": {"tf": 2.449489742783178}, "tanjun.context.SlashContext.respond": {"tf": 2.449489742783178}}, "df": 14, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_global_commands": {"tf": 1.7320508075688772}, "tanjun.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.abc.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_global_commands": {"tf": 1.7320508075688772}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.7320508075688772}, "tanjun.clients.Client.__init__": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.from_rest_bot": {"tf": 1.4142135623730951}, "tanjun.clients.Client.clear_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_global_commands": {"tf": 1.7320508075688772}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.7320508075688772}}, "df": 15, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1.4142135623730951}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}}}}}}}}}}}, "w": {"docs": {"tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.conversion.ToMember": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 30}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"tanjun.Component.__init__": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}}, "df": 7}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.conversion.to_snowflake": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.dependencies.CooldownPreExecution": {"tf": 1}, "tanjun.dependencies.limiters.CooldownPreExecution": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.with_role_slash_option": {"tf": 2.6457513110645907}, "tanjun.with_mentionable_slash_option": {"tf": 1.4142135623730951}, "tanjun.BucketResource.TOP_ROLE": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 2}, "tanjun.abc.SlashOption.value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_to_role": {"tf": 2}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.with_role_slash_option": {"tf": 2.6457513110645907}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 2}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.value": {"tf": 1}, "tanjun.context.SlashOption.resolve_value": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 2}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1.4142135623730951}, "tanjun.conversion.search_role_ids": {"tf": 1.4142135623730951}, "tanjun.conversion.to_role": {"tf": 1}, "tanjun.conversion.ToRole": {"tf": 1}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1.4142135623730951}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1.7320508075688772}, "tanjun.utilities.calculate_permissions": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}}, "df": 43, "s": {"docs": {"tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.with_mentionable_slash_option": {"tf": 1}, "tanjun.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.with_mentionable_slash_option": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.conversion.ToRole": {"tf": 1}, "tanjun.dependencies.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.dependencies.limiters.BucketResource.TOP_ROLE": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1.4142135623730951}}, "df": 23}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun": {"tf": 1.4142135623730951}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 3.4641016151377544}, "tanjun.SlashCommand.add_int_option": {"tf": 3.4641016151377544}, "tanjun.SlashCommand.add_float_option": {"tf": 3.4641016151377544}, "tanjun.SlashCommand.add_bool_option": {"tf": 2.6457513110645907}, "tanjun.SlashCommand.add_user_option": {"tf": 2.8284271247461903}, "tanjun.SlashCommand.add_member_option": {"tf": 2.6457513110645907}, "tanjun.SlashCommand.add_channel_option": {"tf": 3}, "tanjun.SlashCommand.add_role_option": {"tf": 2.6457513110645907}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 2.6457513110645907}, "tanjun.with_str_slash_option": {"tf": 2}, "tanjun.with_int_slash_option": {"tf": 2}, "tanjun.with_float_slash_option": {"tf": 2}, "tanjun.with_bool_slash_option": {"tf": 2}, "tanjun.with_role_slash_option": {"tf": 2}, "tanjun.with_user_slash_option": {"tf": 2}, "tanjun.with_member_slash_option": {"tf": 2}, "tanjun.with_channel_slash_option": {"tf": 2}, "tanjun.with_mentionable_slash_option": {"tf": 2}, "tanjun.Component.with_command": {"tf": 1.7320508075688772}, "tanjun.ShlexParser.add_parameter": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.remove_parameter": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_option": {"tf": 2.6457513110645907}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.with_option": {"tf": 3}, "tanjun.with_multi_option": {"tf": 3.3166247903554}, "tanjun.abc.SlashContext.options": {"tf": 1}, "tanjun.abc.SlashOption": {"tf": 1}, "tanjun.abc.SlashOption.name": {"tf": 1}, "tanjun.abc.SlashOption.type": {"tf": 1}, "tanjun.abc.SlashOption.value": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1.7320508075688772}, "tanjun.abc.SlashOption.resolve_to_channel": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 3.1622776601683795}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_to_role": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1.7320508075688772}, "tanjun.commands.ConverterSig": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 3.4641016151377544}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 3.4641016151377544}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 3.4641016151377544}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 2.6457513110645907}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 2.8284271247461903}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 2.6457513110645907}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 3}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 2.6457513110645907}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 2.6457513110645907}, "tanjun.commands.with_str_slash_option": {"tf": 2}, "tanjun.commands.with_int_slash_option": {"tf": 2}, "tanjun.commands.with_float_slash_option": {"tf": 2}, "tanjun.commands.with_bool_slash_option": {"tf": 2}, "tanjun.commands.with_role_slash_option": {"tf": 2}, "tanjun.commands.with_user_slash_option": {"tf": 2}, "tanjun.commands.with_member_slash_option": {"tf": 2}, "tanjun.commands.with_channel_slash_option": {"tf": 2}, "tanjun.commands.with_mentionable_slash_option": {"tf": 2}, "tanjun.components.Component.with_command": {"tf": 1.7320508075688772}, "tanjun.context.SlashContext.options": {"tf": 1}, "tanjun.context.SlashOption": {"tf": 1}, "tanjun.context.SlashOption.name": {"tf": 1}, "tanjun.context.SlashOption.type": {"tf": 1}, "tanjun.context.SlashOption.value": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_value": {"tf": 1.7320508075688772}, "tanjun.context.SlashOption.resolve_to_channel": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 3.1622776601683795}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1.7320508075688772}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1.4142135623730951}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1.4142135623730951}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 2.449489742783178}, "tanjun.parsing.Option.empty_value": {"tf": 1.4142135623730951}, "tanjun.parsing.Option.names": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_option": {"tf": 2.6457513110645907}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 3}, "tanjun.parsing.with_multi_option": {"tf": 3.3166247903554}}, "df": 82, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.abc.CommandCallbackSig": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.parsing.Option": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}}, "df": 15, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.ParserError.__init__": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}, "tanjun.errors.ParserError.__init__": {"tf": 1}, "tanjun.utilities.match_prefix_names": {"tf": 1}}, "df": 29}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}}, "df": 10}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.get_component_by_name": {"tf": 1}, "tanjun.abc.Client.get_component_by_name": {"tf": 1}, "tanjun.clients.Client.get_component_by_name": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.Component.execute_message": {"tf": 1}, "tanjun.abc.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.abc.Component.execute_message": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.execute_interaction": {"tf": 1.4142135623730951}, "tanjun.components.Component.execute_message": {"tf": 1}}, "df": 28}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.inject": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}}, "df": 3}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "t": {"docs": {"tanjun.inject": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.hooks": {"tf": 1}, "tanjun.Client.set_hooks": {"tf": 1}, "tanjun.Client.set_slash_hooks": {"tf": 1}, "tanjun.Client.set_message_hooks": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1.7320508075688772}, "tanjun.Hooks.set_on_error": {"tf": 1}, "tanjun.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.clients.Client.hooks": {"tf": 1}, "tanjun.clients.Client.set_hooks": {"tf": 1}, "tanjun.clients.Client.set_slash_hooks": {"tf": 1}, "tanjun.clients.Client.set_message_hooks": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1.7320508075688772}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}}, "df": 18}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.inject": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}}, "df": 3, "[": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}}, "df": 2}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_command": {"tf": 1.7320508075688772}, "tanjun.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.get_channel": {"tf": 1}, "tanjun.abc.Context.get_guild": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_command": {"tf": 1.7320508075688772}, "tanjun.abc.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_command": {"tf": 1.7320508075688772}, "tanjun.clients.Client.declare_application_commands": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.utilities.calculate_everyone_permissions": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}, "tanjun.utilities.fetch_everyone_permissions": {"tf": 1}, "tanjun.utilities.fetch_permissions": {"tf": 1}}, "df": 24}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}}, "df": 2}}}}}}}}}, "[": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.abc.ExecutableCommand.set_hooks": {"tf": 1}, "tanjun.commands.PartialCommand.set_hooks": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.set_auto_defer_after": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.clients.Client.set_auto_defer_after": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1.4142135623730951}, "tanjun.dependencies.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.AbstractCooldownManager.check_cooldown": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.check_cooldown": {"tf": 1}}, "df": 9}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}}, "df": 11}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.abc.SlashContext.set_command": {"tf": 1}, "tanjun.context.SlashContext.set_command": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.MessageCommand.copy": {"tf": 1}, "tanjun.MessageCommandGroup.copy": {"tf": 1}, "tanjun.abc.MessageCommand.copy": {"tf": 1}, "tanjun.commands.MessageCommand.copy": {"tf": 1}, "tanjun.commands.MessageCommandGroup.copy": {"tf": 1}}, "df": 5}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.MessageCommand.set_parent": {"tf": 1}, "tanjun.abc.MessageCommand.set_parent": {"tf": 1}, "tanjun.commands.MessageCommand.set_parent": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.as_interval": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1.4142135623730951}, "tanjun.schedules.as_interval": {"tf": 1}, "tanjun.schedules.IntervalSchedule.__init__": {"tf": 1}}, "df": 5}}}, "a": {"docs": {"tanjun.inject": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}}, "df": 3, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.parsing.ParseableProto.set_parser": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"tanjun.schedules.AbstractSchedule.start": {"tf": 1}, "tanjun.schedules.IntervalSchedule.start": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.checks.CallbackReturnT": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"tanjun.as_slash_command": {"tf": 2}, "tanjun.SlashCommand.__init__": {"tf": 2}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 2}, "tanjun.commands.SlashCommand.__init__": {"tf": 2}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 36}, "'": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 2.449489742783178}, "tanjun.SlashCommand.add_int_option": {"tf": 2.8284271247461903}, "tanjun.SlashCommand.add_float_option": {"tf": 2.8284271247461903}, "tanjun.SlashCommand.add_bool_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_user_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_member_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_role_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 2.449489742783178}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 2.8284271247461903}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 2.8284271247461903}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1.7320508075688772}}, "df": 18}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.as_message_command_group": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"tanjun.Component.__init__": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"tanjun": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1.4142135623730951}, "tanjun.Component.with_on_open": {"tf": 1.7320508075688772}, "tanjun.Component.open": {"tf": 1}, "tanjun.abc.Component.open": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1.4142135623730951}, "tanjun.components.Component.with_on_open": {"tf": 1.7320508075688772}, "tanjun.components.Component.open": {"tf": 1}, "tanjun.components.OnCallbackSig": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Component.loop": {"tf": 1}, "tanjun.abc.Component.loop": {"tf": 1}, "tanjun.components.Component.loop": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.add_to_client": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.add_to_client": {"tf": 1}}, "df": 6}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.CommandCallbackSig": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}}, "df": 4}}}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.with_all_checks": {"tf": 1}, "tanjun.with_any_checks": {"tf": 1}, "tanjun.HaltExecution": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.checks.all_checks": {"tf": 1}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_all_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.errors.HaltExecution": {"tf": 1.4142135623730951}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}}, "df": 22, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.ShlexParser.add_parameter": {"tf": 1}, "tanjun.parsing.AbstractParser.add_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.add_parameter": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.conversion": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.with_any_checks": {"tf": 1}, "tanjun.with_dm_check": {"tf": 1}, "tanjun.with_guild_check": {"tf": 1}, "tanjun.with_nsfw_check": {"tf": 1}, "tanjun.with_sfw_check": {"tf": 1}, "tanjun.with_owner_check": {"tf": 1}, "tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.iter_commands": {"tf": 1}, "tanjun.Client.iter_message_commands": {"tf": 1}, "tanjun.Client.iter_slash_commands": {"tf": 1.4142135623730951}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.CommandError.__init__": {"tf": 1}, "tanjun.abc.Client.iter_commands": {"tf": 1}, "tanjun.abc.Client.iter_message_commands": {"tf": 1}, "tanjun.abc.Client.iter_slash_commands": {"tf": 1.4142135623730951}, "tanjun.checks.any_checks": {"tf": 1}, "tanjun.checks.with_any_checks": {"tf": 1}, "tanjun.checks.with_dm_check": {"tf": 1}, "tanjun.checks.with_guild_check": {"tf": 1}, "tanjun.checks.with_nsfw_check": {"tf": 1}, "tanjun.checks.with_sfw_check": {"tf": 1}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.checks.DmCheck.__init__": {"tf": 1}, "tanjun.checks.GuildCheck.__init__": {"tf": 1}, "tanjun.checks.NsfwCheck.__init__": {"tf": 1}, "tanjun.checks.SfwCheck.__init__": {"tf": 1}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.checks.AuthorPermissionCheck.__init__": {"tf": 1}, "tanjun.checks.OwnPermissionCheck.__init__": {"tf": 1}, "tanjun.clients.Client.iter_commands": {"tf": 1}, "tanjun.clients.Client.iter_message_commands": {"tf": 1}, "tanjun.clients.Client.iter_slash_commands": {"tf": 1.4142135623730951}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.conversion.search_snowflakes": {"tf": 1.4142135623730951}, "tanjun.conversion.search_channel_ids": {"tf": 1.4142135623730951}, "tanjun.conversion.search_emoji_ids": {"tf": 1.4142135623730951}, "tanjun.conversion.search_role_ids": {"tf": 1.4142135623730951}, "tanjun.conversion.search_user_ids": {"tf": 1.4142135623730951}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1.4142135623730951}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1.4142135623730951}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}}, "df": 76, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client": {"tf": 1}, "tanjun.clients.Client": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.Client.set_ephemeral_default": {"tf": 1}, "tanjun.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.Component.set_ephemeral_default": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.abc.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.abc.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.defaults_to_ephemeral": {"tf": 1}, "tanjun.clients.Client.set_ephemeral_default": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_ephemeral_default": {"tf": 1}, "tanjun.components.Component.defaults_to_ephemeral": {"tf": 1}, "tanjun.components.Component.set_ephemeral_default": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}}, "df": 15}}}, "e": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.ShlexParser.set_parameters": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.InjectorClient.set_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.set_callback_override": {"tf": 1.7320508075688772}, "tanjun.injecting.InjectorClient.get_callback_override": {"tf": 1.7320508075688772}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1.7320508075688772}, "tanjun.parsing.AbstractParser.set_parameters": {"tf": 1}, "tanjun.parsing.ShlexParser.set_parameters": {"tf": 1}}, "df": 20, "s": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.with_owner_check": {"tf": 1}, "tanjun.as_loader": {"tf": 1}, "tanjun.as_unloader": {"tf": 1}, "tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.add_listener": {"tf": 1}, "tanjun.Client.with_listener": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1.7320508075688772}, "tanjun.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.Component.__init__": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1}, "tanjun.Hooks.set_post_execution": {"tf": 1}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1}, "tanjun.Hooks.set_pre_execution": {"tf": 1}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1}, "tanjun.Hooks.set_on_success": {"tf": 1}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.CommandCallbackSig": {"tf": 1}, "tanjun.abc.CheckSig": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.ListenerCallbackSig": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.abc.Client.add_listener": {"tf": 1}, "tanjun.abc.Client.with_listener": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1.7320508075688772}, "tanjun.abc.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.checks.with_owner_check": {"tf": 1}, "tanjun.clients.as_loader": {"tf": 1}, "tanjun.clients.as_unloader": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.add_listener": {"tf": 1}, "tanjun.clients.Client.with_listener": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1.7320508075688772}, "tanjun.clients.Client.reload_modules": {"tf": 1.4142135623730951}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.components.Component.__init__": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.dependencies.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.injecting.AbstractDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.TypeDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.parsing.ConverterSig": {"tf": 1}, "tanjun.parsing.Parameter.is_greedy": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1}}, "df": 109, "s": {"docs": {"tanjun.as_slash_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.with_on_close": {"tf": 1.4142135623730951}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.Component.with_on_open": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.with_on_close": {"tf": 1.4142135623730951}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.Component.with_on_open": {"tf": 1.4142135623730951}, "tanjun.components.OnCallbackSigT": {"tf": 1}}, "df": 9}}}}}}}}}}, "e": {"docs": {"tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}}, "df": 3}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.checks.OwnerCheck": {"tf": 1.7320508075688772}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.dependencies.AbstractOwners": {"tf": 1}, "tanjun.dependencies.Owners": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners": {"tf": 1}, "tanjun.dependencies.owners.Owners": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1.4142135623730951}}, "df": 9, "s": {"docs": {"tanjun.with_owner_check": {"tf": 1.4142135623730951}, "tanjun.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.checks.with_owner_check": {"tf": 1.4142135623730951}, "tanjun.checks.OwnerCheck.__init__": {"tf": 1}, "tanjun.dependencies.CooldownPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.Owners.__init__": {"tf": 2}, "tanjun.dependencies.limiters.CooldownPreExecution.__init__": {"tf": 1.4142135623730951}, "tanjun.dependencies.limiters.with_cooldown": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 2}}, "df": 10, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1}}, "df": 4}}}}}, "d": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1.4142135623730951}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1.4142135623730951}}, "df": 6}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.dependencies.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.fetch_my_user": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache": {"tf": 1}, "tanjun.dependencies.callbacks.fetch_my_user": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}}, "df": 28}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.events": {"tf": 1}, "tanjun.Client.rest": {"tf": 1}, "tanjun.Client.server": {"tf": 1}, "tanjun.Client.shards": {"tf": 1}, "tanjun.Client.voice": {"tf": 1}, "tanjun.Client.clear_application_commands": {"tf": 1}, "tanjun.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.Client.declare_application_command": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommand.load_into_component": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.build": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.load_into_component": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.build": {"tf": 1.4142135623730951}, "tanjun.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.Component.add_on_close": {"tf": 1}, "tanjun.Component.add_on_open": {"tf": 1}, "tanjun.to_color": {"tf": 1}, "tanjun.to_colour": {"tf": 1}, "tanjun.Hooks.__init__": {"tf": 1}, "tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.Hooks.copy": {"tf": 1}, "tanjun.Hooks.add_on_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.set_on_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.Hooks.add_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.set_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.Hooks.add_post_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.set_post_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_post_execution": {"tf": 1}, "tanjun.Hooks.add_pre_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.set_pre_execution": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_pre_execution": {"tf": 1}, "tanjun.Hooks.add_on_success": {"tf": 1.4142135623730951}, "tanjun.Hooks.set_on_success": {"tf": 1.4142135623730951}, "tanjun.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.Context.author": {"tf": 1}, "tanjun.abc.Context.component": {"tf": 1}, "tanjun.abc.Context.command": {"tf": 1}, "tanjun.abc.Context.events": {"tf": 1}, "tanjun.abc.Context.member": {"tf": 1}, "tanjun.abc.Context.server": {"tf": 1}, "tanjun.abc.Context.rest": {"tf": 1}, "tanjun.abc.Context.shards": {"tf": 1}, "tanjun.abc.Context.voice": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.add_on_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.add_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.abc.Hooks.add_post_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_post_execution": {"tf": 1}, "tanjun.abc.Hooks.add_pre_execution": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_pre_execution": {"tf": 1}, "tanjun.abc.Hooks.add_on_success": {"tf": 1.4142135623730951}, "tanjun.abc.Hooks.with_on_success": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.BaseSlashCommand.parent": {"tf": 1}, "tanjun.abc.BaseSlashCommand.tracked_command": {"tf": 1.4142135623730951}, "tanjun.abc.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.abc.BaseSlashCommand.build": {"tf": 1.4142135623730951}, "tanjun.abc.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.abc.SlashContext.member": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_to_channel": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_to_mentionable": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_to_role": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1.4142135623730951}, "tanjun.abc.Client.events": {"tf": 1}, "tanjun.abc.Client.rest": {"tf": 1}, "tanjun.abc.Client.server": {"tf": 1}, "tanjun.abc.Client.shards": {"tf": 1}, "tanjun.abc.Client.voice": {"tf": 1}, "tanjun.abc.Client.clear_application_commands": {"tf": 1}, "tanjun.abc.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.abc.Client.declare_application_command": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.events": {"tf": 1}, "tanjun.clients.Client.rest": {"tf": 1}, "tanjun.clients.Client.server": {"tf": 1}, "tanjun.clients.Client.shards": {"tf": 1}, "tanjun.clients.Client.voice": {"tf": 1}, "tanjun.clients.Client.clear_application_commands": {"tf": 1}, "tanjun.clients.Client.declare_global_commands": {"tf": 1.4142135623730951}, "tanjun.clients.Client.declare_application_command": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.MessageAcceptsEnum.get_event_type": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommand.load_into_component": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand.parent": {"tf": 1}, "tanjun.commands.BaseSlashCommand.tracked_command": {"tf": 1.4142135623730951}, "tanjun.commands.BaseSlashCommand.tracked_command_id": {"tf": 1}, "tanjun.commands.BaseSlashCommand.set_tracked_command": {"tf": 1}, "tanjun.commands.BaseSlashCommand.load_into_component": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.build": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.load_into_component": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.build": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommandGroup.add_command": {"tf": 1}, "tanjun.commands.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.components.Component.add_on_close": {"tf": 1}, "tanjun.components.Component.add_on_open": {"tf": 1}, "tanjun.components.AbstractComponentLoader.load_into_component": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.author": {"tf": 1}, "tanjun.context.MessageContext.command": {"tf": 1}, "tanjun.context.MessageContext.member": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.author": {"tf": 1}, "tanjun.context.SlashContext.command": {"tf": 1}, "tanjun.context.SlashContext.member": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_value": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_channel": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_mentionable": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_role": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1.4142135623730951}, "tanjun.conversion.to_channel": {"tf": 1}, "tanjun.conversion.to_color": {"tf": 1}, "tanjun.conversion.to_colour": {"tf": 1}, "tanjun.conversion.to_emoji": {"tf": 1}, "tanjun.conversion.to_guild": {"tf": 1}, "tanjun.conversion.to_invite": {"tf": 1}, "tanjun.conversion.to_invite_with_metadata": {"tf": 1}, "tanjun.conversion.to_member": {"tf": 1}, "tanjun.conversion.to_role": {"tf": 1}, "tanjun.conversion.to_user": {"tf": 1}, "tanjun.dependencies.AbstractOwners.check_ownership": {"tf": 1.4142135623730951}, "tanjun.dependencies.Owners.check_ownership": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.AbstractOwners.check_ownership": {"tf": 1.4142135623730951}, "tanjun.dependencies.owners.Owners.check_ownership": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.__init__": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.copy": {"tf": 1}, "tanjun.hooks.Hooks.add_on_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.set_on_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.add_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.set_on_parser_error": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_parser_error": {"tf": 1}, "tanjun.hooks.Hooks.add_post_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.set_post_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_post_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_pre_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.set_pre_execution": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_pre_execution": {"tf": 1}, "tanjun.hooks.Hooks.add_on_success": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.set_on_success": {"tf": 1.4142135623730951}, "tanjun.hooks.Hooks.with_on_success": {"tf": 1}, "tanjun.schedules.IntervalSchedule.load_into_component": {"tf": 1.4142135623730951}, "tanjun.schedules.IntervalSchedule.set_ignored_exceptions": {"tf": 1}, "tanjun.schedules.IntervalSchedule.set_fatal_exceptions": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1.7320508075688772}, "tanjun.utilities.fetch_permissions": {"tf": 1.4142135623730951}}, "df": 185, "s": {"docs": {"tanjun.Client.check_message_name": {"tf": 1}, "tanjun.Client.check_slash_name": {"tf": 1}, "tanjun.Component.check_message_name": {"tf": 1}, "tanjun.abc": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Component.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_message_name": {"tf": 1}, "tanjun.abc.Client.check_slash_name": {"tf": 1}, "tanjun.clients.Client.check_message_name": {"tf": 1}, "tanjun.clients.Client.check_slash_name": {"tf": 1}, "tanjun.commands": {"tf": 1}, "tanjun.components.Component.check_message_name": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.dependencies.Owners.__init__": {"tf": 1}, "tanjun.dependencies.owners.Owners.__init__": {"tf": 1}, "tanjun.utilities.calculate_permissions": {"tf": 1}}, "df": 28, "/": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1}, "tanjun.abc.Context.fetch_guild": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 14, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Hooks.with_on_error": {"tf": 1}, "tanjun.abc.Hooks.with_on_error": {"tf": 1}, "tanjun.hooks.Hooks.with_on_error": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"tanjun.abc.Context.fetch_channel": {"tf": 1.7320508075688772}, "tanjun.abc.Context.fetch_guild": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.respond": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.respond": {"tf": 1.4142135623730951}}, "df": 14}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.inject": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}}, "df": 2}}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"tanjun": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}}, "df": 2}}}}}}, "v": {"1": {"docs": {"tanjun.dependencies.async_cache": {"tf": 1}}, "df": 1}, "2": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.from_gateway_bot": {"tf": 1}, "tanjun.Client.from_rest_bot": {"tf": 1}, "tanjun.Client.set_global_commands": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.from_gateway_bot": {"tf": 1}, "tanjun.clients.Client.from_rest_bot": {"tf": 1}, "tanjun.clients.Client.set_global_commands": {"tf": 1}}, "df": 8}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.with_author_permission_check": {"tf": 1}, "tanjun.with_own_permission_check": {"tf": 1}, "tanjun.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.cached_inject": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.abc.Context.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.abc.MessageContext.respond": {"tf": 1.4142135623730951}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.checks.with_author_permission_check": {"tf": 1}, "tanjun.checks.with_own_permission_check": {"tf": 1}, "tanjun.clients.Client.set_hikari_trait_injectors": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.context.ResponseTypeT": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1.4142135623730951}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1.4142135623730951}, "tanjun.conversion.from_datetime": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}}, "df": 23, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.conversion.to_snowflake": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.set_human_only": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 3}, "tanjun.SlashCommand.add_int_option": {"tf": 3.872983346207417}, "tanjun.SlashCommand.add_float_option": {"tf": 4}, "tanjun.SlashCommand.add_bool_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_user_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.SlashCommand.add_channel_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_role_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1.7320508075688772}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.with_int_slash_option": {"tf": 1.7320508075688772}, "tanjun.with_float_slash_option": {"tf": 1.7320508075688772}, "tanjun.to_bool": {"tf": 2.23606797749979}, "tanjun.to_datetime": {"tf": 1.7320508075688772}, "tanjun.to_snowflake": {"tf": 2.23606797749979}, "tanjun.cached_inject": {"tf": 1}, "tanjun.LazyConstant.__init__": {"tf": 1}, "tanjun.LazyConstant.callback": {"tf": 1}, "tanjun.LazyConstant.get_value": {"tf": 1}, "tanjun.LazyConstant.reset": {"tf": 1}, "tanjun.LazyConstant.set_value": {"tf": 1.7320508075688772}, "tanjun.LazyConstant.acquire": {"tf": 1.4142135623730951}, "tanjun.ConversionError": {"tf": 1}, "tanjun.ConversionError.__init__": {"tf": 1}, "tanjun.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.inject": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_option": {"tf": 2.449489742783178}, "tanjun.with_argument": {"tf": 1.4142135623730951}, "tanjun.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.with_option": {"tf": 2.449489742783178}, "tanjun.with_multi_option": {"tf": 2.6457513110645907}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MaybeAwaitableT": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.SlashOption.value": {"tf": 1}, "tanjun.abc.SlashOption.resolve_value": {"tf": 1.4142135623730951}, "tanjun.abc.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.abc.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.set_human_only": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 3}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 3.872983346207417}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 4}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1.4142135623730951}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1.7320508075688772}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.commands.with_int_slash_option": {"tf": 1.7320508075688772}, "tanjun.commands.with_float_slash_option": {"tf": 1.7320508075688772}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.context.SlashOption.value": {"tf": 1}, "tanjun.context.SlashOption.resolve_value": {"tf": 1.4142135623730951}, "tanjun.context.SlashOption.resolve_to_member": {"tf": 1}, "tanjun.context.SlashOption.resolve_to_user": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1}, "tanjun.conversion.parse_snowflake": {"tf": 2.23606797749979}, "tanjun.conversion.parse_channel_id": {"tf": 2.23606797749979}, "tanjun.conversion.parse_emoji_id": {"tf": 2.23606797749979}, "tanjun.conversion.parse_role_id": {"tf": 2.23606797749979}, "tanjun.conversion.parse_user_id": {"tf": 2.23606797749979}, "tanjun.conversion.search_snowflakes": {"tf": 1.4142135623730951}, "tanjun.conversion.search_channel_ids": {"tf": 1.4142135623730951}, "tanjun.conversion.search_emoji_ids": {"tf": 1.4142135623730951}, "tanjun.conversion.search_role_ids": {"tf": 1.4142135623730951}, "tanjun.conversion.search_user_ids": {"tf": 1.4142135623730951}, "tanjun.conversion.to_bool": {"tf": 2.23606797749979}, "tanjun.conversion.to_datetime": {"tf": 1.7320508075688772}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.LazyConstant.reset": {"tf": 1}, "tanjun.dependencies.LazyConstant.set_value": {"tf": 1.7320508075688772}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1.4142135623730951}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.__init__": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.callback": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.get_value": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.reset": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.set_value": {"tf": 1.7320508075688772}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1.4142135623730951}, "tanjun.errors.ConversionError": {"tf": 1}, "tanjun.errors.ConversionError.__init__": {"tf": 1}, "tanjun.injecting.AbstractInjectionContext.cache_result": {"tf": 1.4142135623730951}, "tanjun.injecting.as_self_injecting": {"tf": 1.4142135623730951}, "tanjun.injecting.BasicInjectionContext.cache_result": {"tf": 1.4142135623730951}, "tanjun.injecting.CallbackSig": {"tf": 1}, "tanjun.injecting.UNDEFINED": {"tf": 1.4142135623730951}, "tanjun.injecting.UndefinedOr": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1.4142135623730951}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.ConverterSig": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 2.449489742783178}, "tanjun.parsing.Option.empty_value": {"tf": 1.4142135623730951}, "tanjun.parsing.Parameter.convert": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_option": {"tf": 2.449489742783178}, "tanjun.parsing.UndefinedDefaultT": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_greedy_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_multi_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_option": {"tf": 2.449489742783178}, "tanjun.parsing.with_multi_option": {"tf": 2.6457513110645907}, "tanjun.utilities.calculate_permissions": {"tf": 1}}, "df": 133, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.Client.declare_application_commands": {"tf": 1}, "tanjun.Client.remove_check": {"tf": 1}, "tanjun.Client.add_component": {"tf": 1}, "tanjun.Client.remove_component": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.remove_listener": {"tf": 1}, "tanjun.Client.remove_prefix": {"tf": 1}, "tanjun.Client.load_modules": {"tf": 1}, "tanjun.Client.unload_modules": {"tf": 1}, "tanjun.Client.reload_modules": {"tf": 1}, "tanjun.as_slash_command": {"tf": 1}, "tanjun.slash_command_group": {"tf": 1}, "tanjun.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.SlashCommand.__init__": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.Component.remove_slash_command": {"tf": 1}, "tanjun.Component.add_message_command": {"tf": 1}, "tanjun.Component.remove_message_command": {"tf": 1}, "tanjun.Component.remove_listener": {"tf": 1}, "tanjun.Component.remove_schedule": {"tf": 1}, "tanjun.to_bool": {"tf": 1}, "tanjun.to_datetime": {"tf": 1}, "tanjun.to_snowflake": {"tf": 1}, "tanjun.cached_inject": {"tf": 1}, "tanjun.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.CommandError.__init__": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.with_parser": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.ExecutableCommand.remove_check": {"tf": 1}, "tanjun.abc.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashCommandGroup.remove_command": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.abc.Component.remove_slash_command": {"tf": 1}, "tanjun.abc.Component.remove_message_command": {"tf": 1}, "tanjun.abc.Component.remove_listener": {"tf": 1}, "tanjun.abc.Client.declare_application_commands": {"tf": 1}, "tanjun.abc.Client.remove_component": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.remove_listener": {"tf": 1}, "tanjun.abc.Client.load_modules": {"tf": 1}, "tanjun.abc.Client.unload_modules": {"tf": 1}, "tanjun.abc.Client.reload_modules": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}, "tanjun.clients.Client.declare_application_commands": {"tf": 1}, "tanjun.clients.Client.remove_check": {"tf": 1}, "tanjun.clients.Client.add_component": {"tf": 1}, "tanjun.clients.Client.remove_component": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.remove_prefix": {"tf": 1}, "tanjun.clients.Client.load_modules": {"tf": 1}, "tanjun.clients.Client.unload_modules": {"tf": 1}, "tanjun.clients.Client.reload_modules": {"tf": 1}, "tanjun.commands.as_slash_command": {"tf": 1}, "tanjun.commands.slash_command_group": {"tf": 1}, "tanjun.commands.MessageCommandGroup.add_command": {"tf": 1}, "tanjun.commands.MessageCommandGroup.remove_command": {"tf": 1}, "tanjun.commands.PartialCommand.remove_check": {"tf": 1}, "tanjun.commands.SlashCommand.__init__": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.commands.SlashCommandGroup.__init__": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.remove_slash_command": {"tf": 1}, "tanjun.components.Component.add_message_command": {"tf": 1}, "tanjun.components.Component.remove_message_command": {"tf": 1}, "tanjun.components.Component.remove_listener": {"tf": 1}, "tanjun.components.Component.remove_schedule": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.conversion.from_datetime": {"tf": 1}, "tanjun.conversion.parse_snowflake": {"tf": 1}, "tanjun.conversion.parse_channel_id": {"tf": 1}, "tanjun.conversion.parse_emoji_id": {"tf": 1}, "tanjun.conversion.parse_role_id": {"tf": 1}, "tanjun.conversion.parse_user_id": {"tf": 1}, "tanjun.conversion.to_bool": {"tf": 1}, "tanjun.conversion.to_datetime": {"tf": 1}, "tanjun.dependencies.cache_callback": {"tf": 1}, "tanjun.dependencies.cached_inject": {"tf": 1}, "tanjun.dependencies.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.dependencies.data.cache_callback": {"tf": 1}, "tanjun.dependencies.data.cached_inject": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryConcurrencyLimiter.set_bucket": {"tf": 1}, "tanjun.dependencies.limiters.InMemoryCooldownManager.set_bucket": {"tf": 1}, "tanjun.errors.CommandError.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.__init__": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.overwrite_callback": {"tf": 1}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected.__init__": {"tf": 1}, "tanjun.injecting.SelfInjectingCallback.__init__": {"tf": 1}, "tanjun.parsing.AbstractParser.remove_parameter": {"tf": 1}, "tanjun.parsing.ShlexParser.remove_parameter": {"tf": 1}, "tanjun.parsing.with_parser": {"tf": 1}}, "df": 127}}}}}, "s": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.ShlexParser.parse": {"tf": 1}, "tanjun.with_argument": {"tf": 1.4142135623730951}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1.4142135623730951}, "tanjun.abc.SlashContext.options": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.context.SlashContext.options": {"tf": 1}, "tanjun.parsing.AbstractParser.parse": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1.4142135623730951}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.Parameter.is_multi": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.ShlexParser.parse": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1.4142135623730951}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1.4142135623730951}}, "df": 24}, "t": {"docs": {"tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.SingleStoreCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_for_channel": {"tf": 1}, "tanjun.dependencies.async_cache.ChannelBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_for_guild": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.iter_all": {"tf": 1}, "tanjun.dependencies.async_cache.SingleStoreCache.get": {"tf": 1}}, "df": 18}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.as_message_command": {"tf": 1}, "tanjun.as_message_command_group": {"tf": 1}, "tanjun.MessageCommand.__init__": {"tf": 1}, "tanjun.MessageCommandGroup.__init__": {"tf": 1}, "tanjun.commands.as_message_command": {"tf": 1}, "tanjun.commands.as_message_command_group": {"tf": 1}, "tanjun.commands.MessageCommand.__init__": {"tf": 1}, "tanjun.commands.MessageCommandGroup.__init__": {"tf": 1}}, "df": 8, "s": {"docs": {"tanjun.Component.load_from_scope": {"tf": 1}, "tanjun.components.Component.load_from_scope": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1}}, "df": 3}}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.Client.voice": {"tf": 1}, "tanjun.abc.Context.voice": {"tf": 1}, "tanjun.abc.Client.voice": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1.7320508075688772}, "tanjun.clients.Client.voice": {"tf": 1}, "tanjun.conversion.ToVoiceState": {"tf": 1.4142135623730951}}, "df": 7, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.Client.__init__": {"tf": 1}, "tanjun.clients.Client.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {"tanjun.conversion.to_voice_state": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.conversion.to_voice_state": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}}, "df": 2}}}}}}}}}, "e": {"docs": {"tanjun.Hooks.add_to_command": {"tf": 1}, "tanjun.hooks.Hooks.add_to_command": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"tanjun.Client.set_global_commands": {"tf": 1}, "tanjun.clients.Client.set_global_commands": {"tf": 1}, "tanjun.components.OnCallbackSigT": {"tf": 1}, "tanjun.utilities.ALL_PERMISSIONS": {"tf": 1}}, "df": 4}}}}}}, "t": {"docs": {"tanjun.utilities.CastedView": {"tf": 2.23606797749979}}, "df": 1}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}}, "df": 2, "n": {"docs": {"tanjun.utilities.ALL_PERMISSIONS": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "i": {"docs": {"tanjun.conversion.to_emoji": {"tf": 1}, "tanjun.dependencies.async_cache": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "s": {"docs": {"tanjun.dependencies.CacheMissError": {"tf": 1}, "tanjun.dependencies.async_cache.CacheMissError": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.set_message_accepts": {"tf": 1}, "tanjun.clients.Client.set_message_accepts": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {"tanjun.as_self_injecting": {"tf": 1}, "tanjun.ShlexParser.add_argument": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_argument": {"tf": 1}, "tanjun.with_greedy_argument": {"tf": 1}, "tanjun.with_multi_argument": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.dependencies.AsyncCache.get": {"tf": 1.4142135623730951}, "tanjun.dependencies.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.ChannelBoundCache.get_from_channel": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1.4142135623730951}, "tanjun.dependencies.async_cache.SfCache": {"tf": 1}, "tanjun.dependencies.async_cache.SfChannelBound": {"tf": 1}, "tanjun.dependencies.async_cache.SfGuildBound": {"tf": 1}, "tanjun.injecting.as_self_injecting": {"tf": 1}, "tanjun.parsing.Argument.__init__": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.Parameter.key": {"tf": 1}, "tanjun.parsing.ShlexParser.add_argument": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_argument": {"tf": 1}, "tanjun.parsing.with_greedy_argument": {"tf": 1}, "tanjun.parsing.with_multi_argument": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1.4142135623730951}}, "df": 29, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"tanjun.Client.add_check": {"tf": 1}, "tanjun.Client.with_check": {"tf": 1}, "tanjun.Client.add_client_callback": {"tf": 1}, "tanjun.Client.with_client_callback": {"tf": 1}, "tanjun.Client.set_prefix_getter": {"tf": 1}, "tanjun.Client.with_prefix_getter": {"tf": 1}, "tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.inject": {"tf": 1}, "tanjun.ShlexParser.add_option": {"tf": 1}, "tanjun.with_option": {"tf": 1}, "tanjun.with_multi_option": {"tf": 1}, "tanjun.abc.CommandCallbackSig": {"tf": 1}, "tanjun.abc.HookSig": {"tf": 1}, "tanjun.abc.Client.add_client_callback": {"tf": 1}, "tanjun.abc.Client.with_client_callback": {"tf": 1}, "tanjun.checks.CallbackReturnT": {"tf": 1.4142135623730951}, "tanjun.clients.Client.add_check": {"tf": 1}, "tanjun.clients.Client.with_check": {"tf": 1}, "tanjun.clients.Client.add_client_callback": {"tf": 1}, "tanjun.clients.Client.with_client_callback": {"tf": 1}, "tanjun.clients.Client.set_prefix_getter": {"tf": 1}, "tanjun.clients.Client.with_prefix_getter": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}, "tanjun.injecting.CallbackSig": {"tf": 1.4142135623730951}, "tanjun.injecting.inject": {"tf": 1}, "tanjun.injecting.Injected": {"tf": 1}, "tanjun.parsing.Option.__init__": {"tf": 1}, "tanjun.parsing.ShlexParser.add_option": {"tf": 1}, "tanjun.parsing.with_option": {"tf": 1}, "tanjun.parsing.with_multi_option": {"tf": 1}}, "df": 49}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"tanjun.Client.remove_component_by_name": {"tf": 1}, "tanjun.Client.dispatch_client_callback": {"tf": 1}, "tanjun.Client.remove_client_callback": {"tf": 1}, "tanjun.Client.remove_listener": {"tf": 1}, "tanjun.abc.Client.remove_component_by_name": {"tf": 1}, "tanjun.abc.Client.dispatch_client_callback": {"tf": 1}, "tanjun.abc.Client.remove_client_callback": {"tf": 1}, "tanjun.abc.Client.remove_listener": {"tf": 1}, "tanjun.clients.Client.remove_component_by_name": {"tf": 1}, "tanjun.clients.Client.dispatch_client_callback": {"tf": 1}, "tanjun.clients.Client.remove_client_callback": {"tf": 1}, "tanjun.clients.Client.remove_listener": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_type_dependency": {"tf": 1}, "tanjun.injecting.InjectorClient.remove_callback_override": {"tf": 1}, "tanjun.utilities.CastedView": {"tf": 1}}, "df": 15}}}}}, "t": {"docs": {"tanjun.dependencies.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.GuildBoundCache.get_from_guild": {"tf": 1}, "tanjun.dependencies.async_cache.AsyncCache.get": {"tf": 1}, "tanjun.dependencies.async_cache.GuildBoundCache.get_from_guild": {"tf": 1}}, "df": 4}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"tanjun.LazyConstant.acquire": {"tf": 1}, "tanjun.conversion.ToChannel.intents": {"tf": 1}, "tanjun.conversion.ToEmoji.intents": {"tf": 1}, "tanjun.conversion.ToGuild.intents": {"tf": 1}, "tanjun.conversion.ToInvite.intents": {"tf": 1}, "tanjun.conversion.ToInviteWithMetadata.intents": {"tf": 1}, "tanjun.conversion.ToMember.intents": {"tf": 1}, "tanjun.conversion.ToPresence.intents": {"tf": 1}, "tanjun.conversion.ToRole.intents": {"tf": 1}, "tanjun.conversion.ToUser.intents": {"tf": 1}, "tanjun.conversion.ToVoiceState.intents": {"tf": 1}, "tanjun.dependencies.LazyConstant.acquire": {"tf": 1}, "tanjun.dependencies.data.LazyConstant.acquire": {"tf": 1}}, "df": 13}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"tanjun.SlashCommand.add_str_option": {"tf": 1}, "tanjun.SlashCommand.add_int_option": {"tf": 1}, "tanjun.SlashCommand.add_float_option": {"tf": 1}, "tanjun.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.SlashCommand.add_user_option": {"tf": 1}, "tanjun.SlashCommand.add_member_option": {"tf": 1}, "tanjun.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.SlashCommand.add_role_option": {"tf": 1}, "tanjun.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.abc.SlashContext.create_initial_response": {"tf": 1}, "tanjun.commands.SlashCommand.add_str_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_int_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_float_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_bool_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_user_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_member_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_channel_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_role_option": {"tf": 1}, "tanjun.commands.SlashCommand.add_mentionable_option": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.create_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}}, "df": 32, "s": {"docs": {"tanjun.abc.Context.edit_initial_response": {"tf": 1}, "tanjun.abc.Context.edit_last_response": {"tf": 1}, "tanjun.abc.Context.respond": {"tf": 1}, "tanjun.abc.MessageContext.respond": {"tf": 1}, "tanjun.abc.SlashContext.create_followup": {"tf": 1}, "tanjun.context.MessageContext.edit_initial_response": {"tf": 1}, "tanjun.context.MessageContext.edit_last_response": {"tf": 1}, "tanjun.context.MessageContext.respond": {"tf": 1}, "tanjun.context.SlashContext.create_followup": {"tf": 1}, "tanjun.context.SlashContext.edit_initial_response": {"tf": 1}, "tanjun.context.SlashContext.edit_last_response": {"tf": 1}, "tanjun.context.SlashContext.respond": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_with_command_context": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve_without_injector": {"tf": 1}, "tanjun.injecting.CallbackDescriptor.resolve": {"tf": 1}}, "df": 15}}}}}, "t": {"docs": {"tanjun.utilities.CastedView": {"tf": 1.4142135623730951}}, "df": 1}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "'": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"tanjun.Client.set_interaction_not_found": {"tf": 1}, "tanjun.clients.Client.set_interaction_not_found": {"tf": 1}}, "df": 2}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"tanjun.schedules.AbstractSchedule.callback": {"tf": 1}, "tanjun.schedules.IntervalSchedule.callback": {"tf": 1}}, "df": 2}}}}}}}, "pipeline": ["trimmer", "stopWordFilter"], "_isPrebuiltIndex": true}